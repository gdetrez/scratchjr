/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/entry/app.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@babel/polyfill/lib/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@babel/polyfill/lib/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(/*! ./noConflict */ "./node_modules/@babel/polyfill/lib/noConflict.js");

var _global = _interopRequireDefault(__webpack_require__(/*! core-js/library/fn/global */ "./node_modules/core-js/library/fn/global.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

if (_global["default"]._babelPolyfill && typeof console !== "undefined" && console.warn) {
  console.warn("@babel/polyfill is loaded more than once on this page. This is probably not desirable/intended " + "and may have consequences if different versions of the polyfills are applied sequentially. " + "If you do need to load the polyfill more than once, use @babel/polyfill/noConflict " + "instead to bypass the warning.");
}

_global["default"]._babelPolyfill = true;

/***/ }),

/***/ "./node_modules/@babel/polyfill/lib/noConflict.js":
/*!********************************************************!*\
  !*** ./node_modules/@babel/polyfill/lib/noConflict.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(/*! core-js/es6 */ "./node_modules/core-js/es6/index.js");

__webpack_require__(/*! core-js/fn/array/includes */ "./node_modules/core-js/fn/array/includes.js");

__webpack_require__(/*! core-js/fn/array/flat-map */ "./node_modules/core-js/fn/array/flat-map.js");

__webpack_require__(/*! core-js/fn/string/pad-start */ "./node_modules/core-js/fn/string/pad-start.js");

__webpack_require__(/*! core-js/fn/string/pad-end */ "./node_modules/core-js/fn/string/pad-end.js");

__webpack_require__(/*! core-js/fn/string/trim-start */ "./node_modules/core-js/fn/string/trim-start.js");

__webpack_require__(/*! core-js/fn/string/trim-end */ "./node_modules/core-js/fn/string/trim-end.js");

__webpack_require__(/*! core-js/fn/symbol/async-iterator */ "./node_modules/core-js/fn/symbol/async-iterator.js");

__webpack_require__(/*! core-js/fn/object/get-own-property-descriptors */ "./node_modules/core-js/fn/object/get-own-property-descriptors.js");

__webpack_require__(/*! core-js/fn/object/values */ "./node_modules/core-js/fn/object/values.js");

__webpack_require__(/*! core-js/fn/object/entries */ "./node_modules/core-js/fn/object/entries.js");

__webpack_require__(/*! core-js/fn/promise/finally */ "./node_modules/core-js/fn/promise/finally.js");

__webpack_require__(/*! core-js/web */ "./node_modules/core-js/web/index.js");

__webpack_require__(/*! regenerator-runtime/runtime */ "./node_modules/@babel/polyfill/node_modules/regenerator-runtime/runtime.js");

/***/ }),

/***/ "./node_modules/@babel/polyfill/node_modules/regenerator-runtime/runtime.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@babel/polyfill/node_modules/regenerator-runtime/runtime.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }
  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunction.displayName = define(
    GeneratorFunctionPrototype,
    toStringTagSymbol,
    "GeneratorFunction"
  );

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  define(Gp, toStringTagSymbol, "Generator");

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
   true ? module.exports : undefined
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  Function("r", "regeneratorRuntime = r")(runtime);
}


/***/ }),

/***/ "./node_modules/core-js/es6/index.js":
/*!*******************************************!*\
  !*** ./node_modules/core-js/es6/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../modules/es6.symbol */ "./node_modules/core-js/modules/es6.symbol.js");
__webpack_require__(/*! ../modules/es6.object.create */ "./node_modules/core-js/modules/es6.object.create.js");
__webpack_require__(/*! ../modules/es6.object.define-property */ "./node_modules/core-js/modules/es6.object.define-property.js");
__webpack_require__(/*! ../modules/es6.object.define-properties */ "./node_modules/core-js/modules/es6.object.define-properties.js");
__webpack_require__(/*! ../modules/es6.object.get-own-property-descriptor */ "./node_modules/core-js/modules/es6.object.get-own-property-descriptor.js");
__webpack_require__(/*! ../modules/es6.object.get-prototype-of */ "./node_modules/core-js/modules/es6.object.get-prototype-of.js");
__webpack_require__(/*! ../modules/es6.object.keys */ "./node_modules/core-js/modules/es6.object.keys.js");
__webpack_require__(/*! ../modules/es6.object.get-own-property-names */ "./node_modules/core-js/modules/es6.object.get-own-property-names.js");
__webpack_require__(/*! ../modules/es6.object.freeze */ "./node_modules/core-js/modules/es6.object.freeze.js");
__webpack_require__(/*! ../modules/es6.object.seal */ "./node_modules/core-js/modules/es6.object.seal.js");
__webpack_require__(/*! ../modules/es6.object.prevent-extensions */ "./node_modules/core-js/modules/es6.object.prevent-extensions.js");
__webpack_require__(/*! ../modules/es6.object.is-frozen */ "./node_modules/core-js/modules/es6.object.is-frozen.js");
__webpack_require__(/*! ../modules/es6.object.is-sealed */ "./node_modules/core-js/modules/es6.object.is-sealed.js");
__webpack_require__(/*! ../modules/es6.object.is-extensible */ "./node_modules/core-js/modules/es6.object.is-extensible.js");
__webpack_require__(/*! ../modules/es6.object.assign */ "./node_modules/core-js/modules/es6.object.assign.js");
__webpack_require__(/*! ../modules/es6.object.is */ "./node_modules/core-js/modules/es6.object.is.js");
__webpack_require__(/*! ../modules/es6.object.set-prototype-of */ "./node_modules/core-js/modules/es6.object.set-prototype-of.js");
__webpack_require__(/*! ../modules/es6.object.to-string */ "./node_modules/core-js/modules/es6.object.to-string.js");
__webpack_require__(/*! ../modules/es6.function.bind */ "./node_modules/core-js/modules/es6.function.bind.js");
__webpack_require__(/*! ../modules/es6.function.name */ "./node_modules/core-js/modules/es6.function.name.js");
__webpack_require__(/*! ../modules/es6.function.has-instance */ "./node_modules/core-js/modules/es6.function.has-instance.js");
__webpack_require__(/*! ../modules/es6.parse-int */ "./node_modules/core-js/modules/es6.parse-int.js");
__webpack_require__(/*! ../modules/es6.parse-float */ "./node_modules/core-js/modules/es6.parse-float.js");
__webpack_require__(/*! ../modules/es6.number.constructor */ "./node_modules/core-js/modules/es6.number.constructor.js");
__webpack_require__(/*! ../modules/es6.number.to-fixed */ "./node_modules/core-js/modules/es6.number.to-fixed.js");
__webpack_require__(/*! ../modules/es6.number.to-precision */ "./node_modules/core-js/modules/es6.number.to-precision.js");
__webpack_require__(/*! ../modules/es6.number.epsilon */ "./node_modules/core-js/modules/es6.number.epsilon.js");
__webpack_require__(/*! ../modules/es6.number.is-finite */ "./node_modules/core-js/modules/es6.number.is-finite.js");
__webpack_require__(/*! ../modules/es6.number.is-integer */ "./node_modules/core-js/modules/es6.number.is-integer.js");
__webpack_require__(/*! ../modules/es6.number.is-nan */ "./node_modules/core-js/modules/es6.number.is-nan.js");
__webpack_require__(/*! ../modules/es6.number.is-safe-integer */ "./node_modules/core-js/modules/es6.number.is-safe-integer.js");
__webpack_require__(/*! ../modules/es6.number.max-safe-integer */ "./node_modules/core-js/modules/es6.number.max-safe-integer.js");
__webpack_require__(/*! ../modules/es6.number.min-safe-integer */ "./node_modules/core-js/modules/es6.number.min-safe-integer.js");
__webpack_require__(/*! ../modules/es6.number.parse-float */ "./node_modules/core-js/modules/es6.number.parse-float.js");
__webpack_require__(/*! ../modules/es6.number.parse-int */ "./node_modules/core-js/modules/es6.number.parse-int.js");
__webpack_require__(/*! ../modules/es6.math.acosh */ "./node_modules/core-js/modules/es6.math.acosh.js");
__webpack_require__(/*! ../modules/es6.math.asinh */ "./node_modules/core-js/modules/es6.math.asinh.js");
__webpack_require__(/*! ../modules/es6.math.atanh */ "./node_modules/core-js/modules/es6.math.atanh.js");
__webpack_require__(/*! ../modules/es6.math.cbrt */ "./node_modules/core-js/modules/es6.math.cbrt.js");
__webpack_require__(/*! ../modules/es6.math.clz32 */ "./node_modules/core-js/modules/es6.math.clz32.js");
__webpack_require__(/*! ../modules/es6.math.cosh */ "./node_modules/core-js/modules/es6.math.cosh.js");
__webpack_require__(/*! ../modules/es6.math.expm1 */ "./node_modules/core-js/modules/es6.math.expm1.js");
__webpack_require__(/*! ../modules/es6.math.fround */ "./node_modules/core-js/modules/es6.math.fround.js");
__webpack_require__(/*! ../modules/es6.math.hypot */ "./node_modules/core-js/modules/es6.math.hypot.js");
__webpack_require__(/*! ../modules/es6.math.imul */ "./node_modules/core-js/modules/es6.math.imul.js");
__webpack_require__(/*! ../modules/es6.math.log10 */ "./node_modules/core-js/modules/es6.math.log10.js");
__webpack_require__(/*! ../modules/es6.math.log1p */ "./node_modules/core-js/modules/es6.math.log1p.js");
__webpack_require__(/*! ../modules/es6.math.log2 */ "./node_modules/core-js/modules/es6.math.log2.js");
__webpack_require__(/*! ../modules/es6.math.sign */ "./node_modules/core-js/modules/es6.math.sign.js");
__webpack_require__(/*! ../modules/es6.math.sinh */ "./node_modules/core-js/modules/es6.math.sinh.js");
__webpack_require__(/*! ../modules/es6.math.tanh */ "./node_modules/core-js/modules/es6.math.tanh.js");
__webpack_require__(/*! ../modules/es6.math.trunc */ "./node_modules/core-js/modules/es6.math.trunc.js");
__webpack_require__(/*! ../modules/es6.string.from-code-point */ "./node_modules/core-js/modules/es6.string.from-code-point.js");
__webpack_require__(/*! ../modules/es6.string.raw */ "./node_modules/core-js/modules/es6.string.raw.js");
__webpack_require__(/*! ../modules/es6.string.trim */ "./node_modules/core-js/modules/es6.string.trim.js");
__webpack_require__(/*! ../modules/es6.string.iterator */ "./node_modules/core-js/modules/es6.string.iterator.js");
__webpack_require__(/*! ../modules/es6.string.code-point-at */ "./node_modules/core-js/modules/es6.string.code-point-at.js");
__webpack_require__(/*! ../modules/es6.string.ends-with */ "./node_modules/core-js/modules/es6.string.ends-with.js");
__webpack_require__(/*! ../modules/es6.string.includes */ "./node_modules/core-js/modules/es6.string.includes.js");
__webpack_require__(/*! ../modules/es6.string.repeat */ "./node_modules/core-js/modules/es6.string.repeat.js");
__webpack_require__(/*! ../modules/es6.string.starts-with */ "./node_modules/core-js/modules/es6.string.starts-with.js");
__webpack_require__(/*! ../modules/es6.string.anchor */ "./node_modules/core-js/modules/es6.string.anchor.js");
__webpack_require__(/*! ../modules/es6.string.big */ "./node_modules/core-js/modules/es6.string.big.js");
__webpack_require__(/*! ../modules/es6.string.blink */ "./node_modules/core-js/modules/es6.string.blink.js");
__webpack_require__(/*! ../modules/es6.string.bold */ "./node_modules/core-js/modules/es6.string.bold.js");
__webpack_require__(/*! ../modules/es6.string.fixed */ "./node_modules/core-js/modules/es6.string.fixed.js");
__webpack_require__(/*! ../modules/es6.string.fontcolor */ "./node_modules/core-js/modules/es6.string.fontcolor.js");
__webpack_require__(/*! ../modules/es6.string.fontsize */ "./node_modules/core-js/modules/es6.string.fontsize.js");
__webpack_require__(/*! ../modules/es6.string.italics */ "./node_modules/core-js/modules/es6.string.italics.js");
__webpack_require__(/*! ../modules/es6.string.link */ "./node_modules/core-js/modules/es6.string.link.js");
__webpack_require__(/*! ../modules/es6.string.small */ "./node_modules/core-js/modules/es6.string.small.js");
__webpack_require__(/*! ../modules/es6.string.strike */ "./node_modules/core-js/modules/es6.string.strike.js");
__webpack_require__(/*! ../modules/es6.string.sub */ "./node_modules/core-js/modules/es6.string.sub.js");
__webpack_require__(/*! ../modules/es6.string.sup */ "./node_modules/core-js/modules/es6.string.sup.js");
__webpack_require__(/*! ../modules/es6.date.now */ "./node_modules/core-js/modules/es6.date.now.js");
__webpack_require__(/*! ../modules/es6.date.to-json */ "./node_modules/core-js/modules/es6.date.to-json.js");
__webpack_require__(/*! ../modules/es6.date.to-iso-string */ "./node_modules/core-js/modules/es6.date.to-iso-string.js");
__webpack_require__(/*! ../modules/es6.date.to-string */ "./node_modules/core-js/modules/es6.date.to-string.js");
__webpack_require__(/*! ../modules/es6.date.to-primitive */ "./node_modules/core-js/modules/es6.date.to-primitive.js");
__webpack_require__(/*! ../modules/es6.array.is-array */ "./node_modules/core-js/modules/es6.array.is-array.js");
__webpack_require__(/*! ../modules/es6.array.from */ "./node_modules/core-js/modules/es6.array.from.js");
__webpack_require__(/*! ../modules/es6.array.of */ "./node_modules/core-js/modules/es6.array.of.js");
__webpack_require__(/*! ../modules/es6.array.join */ "./node_modules/core-js/modules/es6.array.join.js");
__webpack_require__(/*! ../modules/es6.array.slice */ "./node_modules/core-js/modules/es6.array.slice.js");
__webpack_require__(/*! ../modules/es6.array.sort */ "./node_modules/core-js/modules/es6.array.sort.js");
__webpack_require__(/*! ../modules/es6.array.for-each */ "./node_modules/core-js/modules/es6.array.for-each.js");
__webpack_require__(/*! ../modules/es6.array.map */ "./node_modules/core-js/modules/es6.array.map.js");
__webpack_require__(/*! ../modules/es6.array.filter */ "./node_modules/core-js/modules/es6.array.filter.js");
__webpack_require__(/*! ../modules/es6.array.some */ "./node_modules/core-js/modules/es6.array.some.js");
__webpack_require__(/*! ../modules/es6.array.every */ "./node_modules/core-js/modules/es6.array.every.js");
__webpack_require__(/*! ../modules/es6.array.reduce */ "./node_modules/core-js/modules/es6.array.reduce.js");
__webpack_require__(/*! ../modules/es6.array.reduce-right */ "./node_modules/core-js/modules/es6.array.reduce-right.js");
__webpack_require__(/*! ../modules/es6.array.index-of */ "./node_modules/core-js/modules/es6.array.index-of.js");
__webpack_require__(/*! ../modules/es6.array.last-index-of */ "./node_modules/core-js/modules/es6.array.last-index-of.js");
__webpack_require__(/*! ../modules/es6.array.copy-within */ "./node_modules/core-js/modules/es6.array.copy-within.js");
__webpack_require__(/*! ../modules/es6.array.fill */ "./node_modules/core-js/modules/es6.array.fill.js");
__webpack_require__(/*! ../modules/es6.array.find */ "./node_modules/core-js/modules/es6.array.find.js");
__webpack_require__(/*! ../modules/es6.array.find-index */ "./node_modules/core-js/modules/es6.array.find-index.js");
__webpack_require__(/*! ../modules/es6.array.species */ "./node_modules/core-js/modules/es6.array.species.js");
__webpack_require__(/*! ../modules/es6.array.iterator */ "./node_modules/core-js/modules/es6.array.iterator.js");
__webpack_require__(/*! ../modules/es6.regexp.constructor */ "./node_modules/core-js/modules/es6.regexp.constructor.js");
__webpack_require__(/*! ../modules/es6.regexp.exec */ "./node_modules/core-js/modules/es6.regexp.exec.js");
__webpack_require__(/*! ../modules/es6.regexp.to-string */ "./node_modules/core-js/modules/es6.regexp.to-string.js");
__webpack_require__(/*! ../modules/es6.regexp.flags */ "./node_modules/core-js/modules/es6.regexp.flags.js");
__webpack_require__(/*! ../modules/es6.regexp.match */ "./node_modules/core-js/modules/es6.regexp.match.js");
__webpack_require__(/*! ../modules/es6.regexp.replace */ "./node_modules/core-js/modules/es6.regexp.replace.js");
__webpack_require__(/*! ../modules/es6.regexp.search */ "./node_modules/core-js/modules/es6.regexp.search.js");
__webpack_require__(/*! ../modules/es6.regexp.split */ "./node_modules/core-js/modules/es6.regexp.split.js");
__webpack_require__(/*! ../modules/es6.promise */ "./node_modules/core-js/modules/es6.promise.js");
__webpack_require__(/*! ../modules/es6.map */ "./node_modules/core-js/modules/es6.map.js");
__webpack_require__(/*! ../modules/es6.set */ "./node_modules/core-js/modules/es6.set.js");
__webpack_require__(/*! ../modules/es6.weak-map */ "./node_modules/core-js/modules/es6.weak-map.js");
__webpack_require__(/*! ../modules/es6.weak-set */ "./node_modules/core-js/modules/es6.weak-set.js");
__webpack_require__(/*! ../modules/es6.typed.array-buffer */ "./node_modules/core-js/modules/es6.typed.array-buffer.js");
__webpack_require__(/*! ../modules/es6.typed.data-view */ "./node_modules/core-js/modules/es6.typed.data-view.js");
__webpack_require__(/*! ../modules/es6.typed.int8-array */ "./node_modules/core-js/modules/es6.typed.int8-array.js");
__webpack_require__(/*! ../modules/es6.typed.uint8-array */ "./node_modules/core-js/modules/es6.typed.uint8-array.js");
__webpack_require__(/*! ../modules/es6.typed.uint8-clamped-array */ "./node_modules/core-js/modules/es6.typed.uint8-clamped-array.js");
__webpack_require__(/*! ../modules/es6.typed.int16-array */ "./node_modules/core-js/modules/es6.typed.int16-array.js");
__webpack_require__(/*! ../modules/es6.typed.uint16-array */ "./node_modules/core-js/modules/es6.typed.uint16-array.js");
__webpack_require__(/*! ../modules/es6.typed.int32-array */ "./node_modules/core-js/modules/es6.typed.int32-array.js");
__webpack_require__(/*! ../modules/es6.typed.uint32-array */ "./node_modules/core-js/modules/es6.typed.uint32-array.js");
__webpack_require__(/*! ../modules/es6.typed.float32-array */ "./node_modules/core-js/modules/es6.typed.float32-array.js");
__webpack_require__(/*! ../modules/es6.typed.float64-array */ "./node_modules/core-js/modules/es6.typed.float64-array.js");
__webpack_require__(/*! ../modules/es6.reflect.apply */ "./node_modules/core-js/modules/es6.reflect.apply.js");
__webpack_require__(/*! ../modules/es6.reflect.construct */ "./node_modules/core-js/modules/es6.reflect.construct.js");
__webpack_require__(/*! ../modules/es6.reflect.define-property */ "./node_modules/core-js/modules/es6.reflect.define-property.js");
__webpack_require__(/*! ../modules/es6.reflect.delete-property */ "./node_modules/core-js/modules/es6.reflect.delete-property.js");
__webpack_require__(/*! ../modules/es6.reflect.enumerate */ "./node_modules/core-js/modules/es6.reflect.enumerate.js");
__webpack_require__(/*! ../modules/es6.reflect.get */ "./node_modules/core-js/modules/es6.reflect.get.js");
__webpack_require__(/*! ../modules/es6.reflect.get-own-property-descriptor */ "./node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js");
__webpack_require__(/*! ../modules/es6.reflect.get-prototype-of */ "./node_modules/core-js/modules/es6.reflect.get-prototype-of.js");
__webpack_require__(/*! ../modules/es6.reflect.has */ "./node_modules/core-js/modules/es6.reflect.has.js");
__webpack_require__(/*! ../modules/es6.reflect.is-extensible */ "./node_modules/core-js/modules/es6.reflect.is-extensible.js");
__webpack_require__(/*! ../modules/es6.reflect.own-keys */ "./node_modules/core-js/modules/es6.reflect.own-keys.js");
__webpack_require__(/*! ../modules/es6.reflect.prevent-extensions */ "./node_modules/core-js/modules/es6.reflect.prevent-extensions.js");
__webpack_require__(/*! ../modules/es6.reflect.set */ "./node_modules/core-js/modules/es6.reflect.set.js");
__webpack_require__(/*! ../modules/es6.reflect.set-prototype-of */ "./node_modules/core-js/modules/es6.reflect.set-prototype-of.js");
module.exports = __webpack_require__(/*! ../modules/_core */ "./node_modules/core-js/modules/_core.js");


/***/ }),

/***/ "./node_modules/core-js/fn/array/flat-map.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/fn/array/flat-map.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es7.array.flat-map */ "./node_modules/core-js/modules/es7.array.flat-map.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/modules/_core.js").Array.flatMap;


/***/ }),

/***/ "./node_modules/core-js/fn/array/includes.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/fn/array/includes.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es7.array.includes */ "./node_modules/core-js/modules/es7.array.includes.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/modules/_core.js").Array.includes;


/***/ }),

/***/ "./node_modules/core-js/fn/object/entries.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/fn/object/entries.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es7.object.entries */ "./node_modules/core-js/modules/es7.object.entries.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/modules/_core.js").Object.entries;


/***/ }),

/***/ "./node_modules/core-js/fn/object/get-own-property-descriptors.js":
/*!************************************************************************!*\
  !*** ./node_modules/core-js/fn/object/get-own-property-descriptors.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es7.object.get-own-property-descriptors */ "./node_modules/core-js/modules/es7.object.get-own-property-descriptors.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/modules/_core.js").Object.getOwnPropertyDescriptors;


/***/ }),

/***/ "./node_modules/core-js/fn/object/values.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/fn/object/values.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es7.object.values */ "./node_modules/core-js/modules/es7.object.values.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/modules/_core.js").Object.values;


/***/ }),

/***/ "./node_modules/core-js/fn/promise/finally.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/fn/promise/finally.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

__webpack_require__(/*! ../../modules/es6.promise */ "./node_modules/core-js/modules/es6.promise.js");
__webpack_require__(/*! ../../modules/es7.promise.finally */ "./node_modules/core-js/modules/es7.promise.finally.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/modules/_core.js").Promise['finally'];


/***/ }),

/***/ "./node_modules/core-js/fn/string/pad-end.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/fn/string/pad-end.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es7.string.pad-end */ "./node_modules/core-js/modules/es7.string.pad-end.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/modules/_core.js").String.padEnd;


/***/ }),

/***/ "./node_modules/core-js/fn/string/pad-start.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/fn/string/pad-start.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es7.string.pad-start */ "./node_modules/core-js/modules/es7.string.pad-start.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/modules/_core.js").String.padStart;


/***/ }),

/***/ "./node_modules/core-js/fn/string/trim-end.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/fn/string/trim-end.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es7.string.trim-right */ "./node_modules/core-js/modules/es7.string.trim-right.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/modules/_core.js").String.trimRight;


/***/ }),

/***/ "./node_modules/core-js/fn/string/trim-start.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/fn/string/trim-start.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es7.string.trim-left */ "./node_modules/core-js/modules/es7.string.trim-left.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/modules/_core.js").String.trimLeft;


/***/ }),

/***/ "./node_modules/core-js/fn/symbol/async-iterator.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/fn/symbol/async-iterator.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es7.symbol.async-iterator */ "./node_modules/core-js/modules/es7.symbol.async-iterator.js");
module.exports = __webpack_require__(/*! ../../modules/_wks-ext */ "./node_modules/core-js/modules/_wks-ext.js").f('asyncIterator');


/***/ }),

/***/ "./node_modules/core-js/library/fn/global.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/library/fn/global.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../modules/es7.global */ "./node_modules/core-js/library/modules/es7.global.js");
module.exports = __webpack_require__(/*! ../modules/_core */ "./node_modules/core-js/library/modules/_core.js").global;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_a-function.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_a-function.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_an-object.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_an-object.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_core.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_core.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.9' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "./node_modules/core-js/library/modules/_ctx.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_ctx.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/library/modules/_a-function.js");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_descriptors.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_descriptors.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/_dom-create.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_dom-create.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var document = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_export.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_export.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/library/modules/_has.js");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_fails.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_fails.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_global.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_global.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "./node_modules/core-js/library/modules/_has.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_has.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_hide.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_hide.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/library/modules/_property-desc.js");
module.exports = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_ie8-dom-define.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_ie8-dom-define.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js") && !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js")(function () {
  return Object.defineProperty(__webpack_require__(/*! ./_dom-create */ "./node_modules/core-js/library/modules/_dom-create.js")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/_is-object.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_is-object.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-dp.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-dp.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "./node_modules/core-js/library/modules/_ie8-dom-define.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/library/modules/_to-primitive.js");
var dP = Object.defineProperty;

exports.f = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_property-desc.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_property-desc.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-primitive.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-primitive.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/es7.global.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.global.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-global
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");

$export($export.G, { global: __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js") });


/***/ }),

/***/ "./node_modules/core-js/modules/_a-function.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_a-function.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_a-number-value.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/_a-number-value.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");
module.exports = function (it, msg) {
  if (typeof it != 'number' && cof(it) != 'Number') throw TypeError(msg);
  return +it;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_add-to-unscopables.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/_add-to-unscopables.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('unscopables');
var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js")(ArrayProto, UNSCOPABLES, {});
module.exports = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_advance-string-index.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/_advance-string-index.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var at = __webpack_require__(/*! ./_string-at */ "./node_modules/core-js/modules/_string-at.js")(true);

 // `AdvanceStringIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-advancestringindex
module.exports = function (S, index, unicode) {
  return index + (unicode ? at(S, index).length : 1);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_an-instance.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_an-instance.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_an-object.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_an-object.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_array-copy-within.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/_array-copy-within.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)

var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/modules/_to-absolute-index.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");

module.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
  var O = toObject(this);
  var len = toLength(O.length);
  var to = toAbsoluteIndex(target, len);
  var from = toAbsoluteIndex(start, len);
  var end = arguments.length > 2 ? arguments[2] : undefined;
  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
  var inc = 1;
  if (from < to && to < from + count) {
    inc = -1;
    from += count - 1;
    to += count - 1;
  }
  while (count-- > 0) {
    if (from in O) O[to] = O[from];
    else delete O[to];
    to += inc;
    from += inc;
  } return O;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_array-fill.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_array-fill.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)

var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/modules/_to-absolute-index.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
module.exports = function fill(value /* , start = 0, end = @length */) {
  var O = toObject(this);
  var length = toLength(O.length);
  var aLen = arguments.length;
  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);
  var end = aLen > 2 ? arguments[2] : undefined;
  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
  while (endPos > index) O[index++] = value;
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_array-includes.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/_array-includes.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/modules/_to-absolute-index.js");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "./node_modules/core-js/modules/_array-methods.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_array-methods.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/modules/_iobject.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var asc = __webpack_require__(/*! ./_array-species-create */ "./node_modules/core-js/modules/_array-species-create.js");
module.exports = function (TYPE, $create) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  var create = $create || asc;
  return function ($this, callbackfn, that) {
    var O = toObject($this);
    var self = IObject(O);
    var f = ctx(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var val, res;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      val = self[index];
      res = f(val, index, O);
      if (TYPE) {
        if (IS_MAP) result[index] = res;   // map
        else if (res) switch (TYPE) {
          case 3: return true;             // some
          case 5: return val;              // find
          case 6: return index;            // findIndex
          case 2: result.push(val);        // filter
        } else if (IS_EVERY) return false; // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
  };
};


/***/ }),

/***/ "./node_modules/core-js/modules/_array-reduce.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/_array-reduce.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/modules/_iobject.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");

module.exports = function (that, callbackfn, aLen, memo, isRight) {
  aFunction(callbackfn);
  var O = toObject(that);
  var self = IObject(O);
  var length = toLength(O.length);
  var index = isRight ? length - 1 : 0;
  var i = isRight ? -1 : 1;
  if (aLen < 2) for (;;) {
    if (index in self) {
      memo = self[index];
      index += i;
      break;
    }
    index += i;
    if (isRight ? index < 0 : length <= index) {
      throw TypeError('Reduce of empty array with no initial value');
    }
  }
  for (;isRight ? index >= 0 : length > index; index += i) if (index in self) {
    memo = callbackfn(memo, self[index], index, O);
  }
  return memo;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_array-species-constructor.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/modules/_array-species-constructor.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var isArray = __webpack_require__(/*! ./_is-array */ "./node_modules/core-js/modules/_is-array.js");
var SPECIES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('species');

module.exports = function (original) {
  var C;
  if (isArray(original)) {
    C = original.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? Array : C;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_array-species-create.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/_array-species-create.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
var speciesConstructor = __webpack_require__(/*! ./_array-species-constructor */ "./node_modules/core-js/modules/_array-species-constructor.js");

module.exports = function (original, length) {
  return new (speciesConstructor(original))(length);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_bind.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_bind.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var invoke = __webpack_require__(/*! ./_invoke */ "./node_modules/core-js/modules/_invoke.js");
var arraySlice = [].slice;
var factories = {};

var construct = function (F, len, args) {
  if (!(len in factories)) {
    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';
    // eslint-disable-next-line no-new-func
    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
  } return factories[len](F, args);
};

module.exports = Function.bind || function bind(that /* , ...args */) {
  var fn = aFunction(this);
  var partArgs = arraySlice.call(arguments, 1);
  var bound = function (/* args... */) {
    var args = partArgs.concat(arraySlice.call(arguments));
    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
  };
  if (isObject(fn.prototype)) bound.prototype = fn.prototype;
  return bound;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_classof.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_classof.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");
var TAG = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_cof.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_cof.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_collection-strong.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/_collection-strong.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
var create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/modules/_object-create.js");
var redefineAll = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/modules/_redefine-all.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/modules/_an-instance.js");
var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/modules/_for-of.js");
var $iterDefine = __webpack_require__(/*! ./_iter-define */ "./node_modules/core-js/modules/_iter-define.js");
var step = __webpack_require__(/*! ./_iter-step */ "./node_modules/core-js/modules/_iter-step.js");
var setSpecies = __webpack_require__(/*! ./_set-species */ "./node_modules/core-js/modules/_set-species.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js");
var fastKey = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/modules/_meta.js").fastKey;
var validate = __webpack_require__(/*! ./_validate-collection */ "./node_modules/core-js/modules/_validate-collection.js");
var SIZE = DESCRIPTORS ? '_s' : 'size';

var getEntry = function (that, key) {
  // fast case
  var index = fastKey(key);
  var entry;
  if (index !== 'F') return that._i[index];
  // frozen object case
  for (entry = that._f; entry; entry = entry.n) {
    if (entry.k == key) return entry;
  }
};

module.exports = {
  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;         // collection type
      that._i = create(null); // index
      that._f = undefined;    // first entry
      that._l = undefined;    // last entry
      that[SIZE] = 0;         // size
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear() {
        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
          entry.r = true;
          if (entry.p) entry.p = entry.p.n = undefined;
          delete data[entry.i];
        }
        that._f = that._l = undefined;
        that[SIZE] = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function (key) {
        var that = validate(this, NAME);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.n;
          var prev = entry.p;
          delete that._i[entry.i];
          entry.r = true;
          if (prev) prev.n = next;
          if (next) next.p = prev;
          if (that._f == entry) that._f = next;
          if (that._l == entry) that._l = prev;
          that[SIZE]--;
        } return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn /* , that = undefined */) {
        validate(this, NAME);
        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
        var entry;
        while (entry = entry ? entry.n : this._f) {
          f(entry.v, entry.k, this);
          // revert to the last existing entry
          while (entry && entry.r) entry = entry.p;
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key) {
        return !!getEntry(validate(this, NAME), key);
      }
    });
    if (DESCRIPTORS) dP(C.prototype, 'size', {
      get: function () {
        return validate(this, NAME)[SIZE];
      }
    });
    return C;
  },
  def: function (that, key, value) {
    var entry = getEntry(that, key);
    var prev, index;
    // change existing entry
    if (entry) {
      entry.v = value;
    // create new entry
    } else {
      that._l = entry = {
        i: index = fastKey(key, true), // <- index
        k: key,                        // <- key
        v: value,                      // <- value
        p: prev = that._l,             // <- previous entry
        n: undefined,                  // <- next entry
        r: false                       // <- removed
      };
      if (!that._f) that._f = entry;
      if (prev) prev.n = entry;
      that[SIZE]++;
      // add to index
      if (index !== 'F') that._i[index] = entry;
    } return that;
  },
  getEntry: getEntry,
  setStrong: function (C, NAME, IS_MAP) {
    // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
    $iterDefine(C, NAME, function (iterated, kind) {
      this._t = validate(iterated, NAME); // target
      this._k = kind;                     // kind
      this._l = undefined;                // previous
    }, function () {
      var that = this;
      var kind = that._k;
      var entry = that._l;
      // revert to the last existing entry
      while (entry && entry.r) entry = entry.p;
      // get next entry
      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
        // or finish the iteration
        that._t = undefined;
        return step(1);
      }
      // return step by kind
      if (kind == 'keys') return step(0, entry.k);
      if (kind == 'values') return step(0, entry.v);
      return step(0, [entry.k, entry.v]);
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // add [@@species], 23.1.2.2, 23.2.2.2
    setSpecies(NAME);
  }
};


/***/ }),

/***/ "./node_modules/core-js/modules/_collection-weak.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_collection-weak.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var redefineAll = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/modules/_redefine-all.js");
var getWeak = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/modules/_meta.js").getWeak;
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/modules/_an-instance.js");
var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/modules/_for-of.js");
var createArrayMethod = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/modules/_array-methods.js");
var $has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var validate = __webpack_require__(/*! ./_validate-collection */ "./node_modules/core-js/modules/_validate-collection.js");
var arrayFind = createArrayMethod(5);
var arrayFindIndex = createArrayMethod(6);
var id = 0;

// fallback for uncaught frozen keys
var uncaughtFrozenStore = function (that) {
  return that._l || (that._l = new UncaughtFrozenStore());
};
var UncaughtFrozenStore = function () {
  this.a = [];
};
var findUncaughtFrozen = function (store, key) {
  return arrayFind(store.a, function (it) {
    return it[0] === key;
  });
};
UncaughtFrozenStore.prototype = {
  get: function (key) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) return entry[1];
  },
  has: function (key) {
    return !!findUncaughtFrozen(this, key);
  },
  set: function (key, value) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) entry[1] = value;
    else this.a.push([key, value]);
  },
  'delete': function (key) {
    var index = arrayFindIndex(this.a, function (it) {
      return it[0] === key;
    });
    if (~index) this.a.splice(index, 1);
    return !!~index;
  }
};

module.exports = {
  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;      // collection type
      that._i = id++;      // collection id
      that._l = undefined; // leak store for uncaught frozen objects
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.3.3.2 WeakMap.prototype.delete(key)
      // 23.4.3.3 WeakSet.prototype.delete(value)
      'delete': function (key) {
        if (!isObject(key)) return false;
        var data = getWeak(key);
        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);
        return data && $has(data, this._i) && delete data[this._i];
      },
      // 23.3.3.4 WeakMap.prototype.has(key)
      // 23.4.3.4 WeakSet.prototype.has(value)
      has: function has(key) {
        if (!isObject(key)) return false;
        var data = getWeak(key);
        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);
        return data && $has(data, this._i);
      }
    });
    return C;
  },
  def: function (that, key, value) {
    var data = getWeak(anObject(key), true);
    if (data === true) uncaughtFrozenStore(that).set(key, value);
    else data[that._i] = value;
    return that;
  },
  ufstore: uncaughtFrozenStore
};


/***/ }),

/***/ "./node_modules/core-js/modules/_collection.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_collection.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
var redefineAll = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/modules/_redefine-all.js");
var meta = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/modules/_meta.js");
var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/modules/_for-of.js");
var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/modules/_an-instance.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
var $iterDetect = __webpack_require__(/*! ./_iter-detect */ "./node_modules/core-js/modules/_iter-detect.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/modules/_set-to-string-tag.js");
var inheritIfRequired = __webpack_require__(/*! ./_inherit-if-required */ "./node_modules/core-js/modules/_inherit-if-required.js");

module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
  var Base = global[NAME];
  var C = Base;
  var ADDER = IS_MAP ? 'set' : 'add';
  var proto = C && C.prototype;
  var O = {};
  var fixMethod = function (KEY) {
    var fn = proto[KEY];
    redefine(proto, KEY,
      KEY == 'delete' ? function (a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'has' ? function has(a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'get' ? function get(a) {
        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'add' ? function add(a) { fn.call(this, a === 0 ? 0 : a); return this; }
        : function set(a, b) { fn.call(this, a === 0 ? 0 : a, b); return this; }
    );
  };
  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
    new C().entries().next();
  }))) {
    // create collection constructor
    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
    redefineAll(C.prototype, methods);
    meta.NEED = true;
  } else {
    var instance = new C();
    // early implementations not supports chaining
    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
    // most early implementations doesn't supports iterables, most modern - not close it correctly
    var ACCEPT_ITERABLES = $iterDetect(function (iter) { new C(iter); }); // eslint-disable-line no-new
    // for early implementations -0 and +0 not the same
    var BUGGY_ZERO = !IS_WEAK && fails(function () {
      // V8 ~ Chromium 42- fails only with 5+ elements
      var $instance = new C();
      var index = 5;
      while (index--) $instance[ADDER](index, index);
      return !$instance.has(-0);
    });
    if (!ACCEPT_ITERABLES) {
      C = wrapper(function (target, iterable) {
        anInstance(target, C, NAME);
        var that = inheritIfRequired(new Base(), target, C);
        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
        return that;
      });
      C.prototype = proto;
      proto.constructor = C;
    }
    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }
    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
    // weak collections should not contains .clear method
    if (IS_WEAK && proto.clear) delete proto.clear;
  }

  setToStringTag(C, NAME);

  O[NAME] = C;
  $export($export.G + $export.W + $export.F * (C != Base), O);

  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

  return C;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_core.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_core.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.9' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "./node_modules/core-js/modules/_create-property.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_create-property.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $defineProperty = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");

module.exports = function (object, index, value) {
  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
  else object[index] = value;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_ctx.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_ctx.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "./node_modules/core-js/modules/_date-to-iso-string.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/_date-to-iso-string.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
var getTime = Date.prototype.getTime;
var $toISOString = Date.prototype.toISOString;

var lz = function (num) {
  return num > 9 ? num : '0' + num;
};

// PhantomJS / old WebKit has a broken implementations
module.exports = (fails(function () {
  return $toISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z';
}) || !fails(function () {
  $toISOString.call(new Date(NaN));
})) ? function toISOString() {
  if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');
  var d = this;
  var y = d.getUTCFullYear();
  var m = d.getUTCMilliseconds();
  var s = y < 0 ? '-' : y > 9999 ? '+' : '';
  return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
    '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +
    'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +
    ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
} : $toISOString;


/***/ }),

/***/ "./node_modules/core-js/modules/_date-to-primitive.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/_date-to-primitive.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");
var NUMBER = 'number';

module.exports = function (hint) {
  if (hint !== 'string' && hint !== NUMBER && hint !== 'default') throw TypeError('Incorrect hint');
  return toPrimitive(anObject(this), hint != NUMBER);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_defined.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_defined.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_descriptors.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_descriptors.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "./node_modules/core-js/modules/_dom-create.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_dom-create.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var document = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "./node_modules/core-js/modules/_enum-bug-keys.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_enum-bug-keys.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),

/***/ "./node_modules/core-js/modules/_enum-keys.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_enum-keys.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");
var gOPS = __webpack_require__(/*! ./_object-gops */ "./node_modules/core-js/modules/_object-gops.js");
var pIE = __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/modules/_object-pie.js");
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_export.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_export.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // extend global
    if (target) redefine(target, key, out, type & $export.U);
    // export
    if (exports[key] != out) hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
global.core = core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "./node_modules/core-js/modules/_fails-is-regexp.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_fails-is-regexp.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var MATCH = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('match');
module.exports = function (KEY) {
  var re = /./;
  try {
    '/./'[KEY](re);
  } catch (e) {
    try {
      re[MATCH] = false;
      return !'/./'[KEY](re);
    } catch (f) { /* empty */ }
  } return true;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_fails.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/modules/_fails.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "./node_modules/core-js/modules/_fix-re-wks.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_fix-re-wks.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

__webpack_require__(/*! ./es6.regexp.exec */ "./node_modules/core-js/modules/es6.regexp.exec.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");
var wks = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js");
var regexpExec = __webpack_require__(/*! ./_regexp-exec */ "./node_modules/core-js/modules/_regexp-exec.js");

var SPECIES = wks('species');

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  // #replace needs built-in support for named groups.
  // #match works fine because it just return the exec results, even if it has
  // a "grops" property.
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  return ''.replace(re, '$<a>') !== '7';
});

var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {
  // Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
  var re = /(?:)/;
  var originalExec = re.exec;
  re.exec = function () { return originalExec.apply(this, arguments); };
  var result = 'ab'.split(re);
  return result.length === 2 && result[0] === 'a' && result[1] === 'b';
})();

module.exports = function (KEY, length, exec) {
  var SYMBOL = wks(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;
    re.exec = function () { execCalled = true; return null; };
    if (KEY === 'split') {
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
    }
    re[SYMBOL]('');
    return !execCalled;
  }) : undefined;

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||
    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
  ) {
    var nativeRegExpMethod = /./[SYMBOL];
    var fns = exec(
      defined,
      SYMBOL,
      ''[KEY],
      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {
        if (regexp.exec === regexpExec) {
          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
            // The native String method already delegates to @@method (this
            // polyfilled function), leasing to infinite recursion.
            // We avoid it by directly calling the native @@method method.
            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
          }
          return { done: true, value: nativeMethod.call(str, regexp, arg2) };
        }
        return { done: false };
      }
    );
    var strfn = fns[0];
    var rxfn = fns[1];

    redefine(String.prototype, KEY, strfn);
    hide(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) { return rxfn.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) { return rxfn.call(string, this); }
    );
  }
};


/***/ }),

/***/ "./node_modules/core-js/modules/_flags.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/modules/_flags.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 21.2.5.3 get RegExp.prototype.flags
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_flatten-into-array.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/_flatten-into-array.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
var isArray = __webpack_require__(/*! ./_is-array */ "./node_modules/core-js/modules/_is-array.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
var IS_CONCAT_SPREADABLE = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('isConcatSpreadable');

function flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {
  var targetIndex = start;
  var sourceIndex = 0;
  var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;
  var element, spreadable;

  while (sourceIndex < sourceLen) {
    if (sourceIndex in source) {
      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];

      spreadable = false;
      if (isObject(element)) {
        spreadable = element[IS_CONCAT_SPREADABLE];
        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);
      }

      if (spreadable && depth > 0) {
        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;
      } else {
        if (targetIndex >= 0x1fffffffffffff) throw TypeError();
        target[targetIndex] = element;
      }

      targetIndex++;
    }
    sourceIndex++;
  }
  return targetIndex;
}

module.exports = flattenIntoArray;


/***/ }),

/***/ "./node_modules/core-js/modules/_for-of.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_for-of.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
var call = __webpack_require__(/*! ./_iter-call */ "./node_modules/core-js/modules/_iter-call.js");
var isArrayIter = __webpack_require__(/*! ./_is-array-iter */ "./node_modules/core-js/modules/_is-array-iter.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var getIterFn = __webpack_require__(/*! ./core.get-iterator-method */ "./node_modules/core-js/modules/core.get-iterator-method.js");
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;


/***/ }),

/***/ "./node_modules/core-js/modules/_function-to-string.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/_function-to-string.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/modules/_shared.js")('native-function-to-string', Function.toString);


/***/ }),

/***/ "./node_modules/core-js/modules/_global.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_global.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "./node_modules/core-js/modules/_has.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_has.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_hide.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_hide.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");
module.exports = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_html.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_html.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").document;
module.exports = document && document.documentElement;


/***/ }),

/***/ "./node_modules/core-js/modules/_ie8-dom-define.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/_ie8-dom-define.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") && !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  return Object.defineProperty(__webpack_require__(/*! ./_dom-create */ "./node_modules/core-js/modules/_dom-create.js")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "./node_modules/core-js/modules/_inherit-if-required.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/_inherit-if-required.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var setPrototypeOf = __webpack_require__(/*! ./_set-proto */ "./node_modules/core-js/modules/_set-proto.js").set;
module.exports = function (that, target, C) {
  var S = target.constructor;
  var P;
  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
    setPrototypeOf(that, P);
  } return that;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_invoke.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_invoke.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_iobject.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_iobject.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_is-array-iter.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_is-array-iter.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/modules/_iterators.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_is-array.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/modules/_is-array.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),

/***/ "./node_modules/core-js/modules/_is-integer.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_is-integer.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.3 Number.isInteger(number)
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var floor = Math.floor;
module.exports = function isInteger(it) {
  return !isObject(it) && isFinite(it) && floor(it) === it;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_is-object.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_is-object.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "./node_modules/core-js/modules/_is-regexp.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_is-regexp.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.8 IsRegExp(argument)
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");
var MATCH = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('match');
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
};


/***/ }),

/***/ "./node_modules/core-js/modules/_iter-call.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_iter-call.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};


/***/ }),

/***/ "./node_modules/core-js/modules/_iter-create.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_iter-create.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/modules/_object-create.js");
var descriptor = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/modules/_set-to-string-tag.js");
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js")(IteratorPrototype, __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),

/***/ "./node_modules/core-js/modules/_iter-define.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_iter-define.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/modules/_iterators.js");
var $iterCreate = __webpack_require__(/*! ./_iter-create */ "./node_modules/core-js/modules/_iter-create.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/modules/_set-to-string-tag.js");
var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/modules/_object-gpo.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_iter-detect.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_iter-detect.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_iter-step.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_iter-step.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),

/***/ "./node_modules/core-js/modules/_iterators.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_iterators.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "./node_modules/core-js/modules/_library.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_library.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = false;


/***/ }),

/***/ "./node_modules/core-js/modules/_math-expm1.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_math-expm1.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 20.2.2.14 Math.expm1(x)
var $expm1 = Math.expm1;
module.exports = (!$expm1
  // Old FF bug
  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
  // Tor Browser bug
  || $expm1(-2e-17) != -2e-17
) ? function expm1(x) {
  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
} : $expm1;


/***/ }),

/***/ "./node_modules/core-js/modules/_math-fround.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_math-fround.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.16 Math.fround(x)
var sign = __webpack_require__(/*! ./_math-sign */ "./node_modules/core-js/modules/_math-sign.js");
var pow = Math.pow;
var EPSILON = pow(2, -52);
var EPSILON32 = pow(2, -23);
var MAX32 = pow(2, 127) * (2 - EPSILON32);
var MIN32 = pow(2, -126);

var roundTiesToEven = function (n) {
  return n + 1 / EPSILON - 1 / EPSILON;
};

module.exports = Math.fround || function fround(x) {
  var $abs = Math.abs(x);
  var $sign = sign(x);
  var a, result;
  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
  a = (1 + EPSILON32 / EPSILON) * $abs;
  result = a - (a - $abs);
  // eslint-disable-next-line no-self-compare
  if (result > MAX32 || result != result) return $sign * Infinity;
  return $sign * result;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_math-log1p.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_math-log1p.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 20.2.2.20 Math.log1p(x)
module.exports = Math.log1p || function log1p(x) {
  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_math-sign.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_math-sign.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 20.2.2.28 Math.sign(x)
module.exports = Math.sign || function sign(x) {
  // eslint-disable-next-line no-self-compare
  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_meta.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_meta.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js")('meta');
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var setDesc = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),

/***/ "./node_modules/core-js/modules/_microtask.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_microtask.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var macrotask = __webpack_require__(/*! ./_task */ "./node_modules/core-js/modules/_task.js").set;
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js")(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};


/***/ }),

/***/ "./node_modules/core-js/modules/_new-promise-capability.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/_new-promise-capability.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 25.4.1.5 NewPromiseCapability(C)
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-assign.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_object-assign.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js");
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");
var gOPS = __webpack_require__(/*! ./_object-gops */ "./node_modules/core-js/modules/_object-gops.js");
var pIE = __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/modules/_object-pie.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/modules/_iobject.js");
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;


/***/ }),

/***/ "./node_modules/core-js/modules/_object-create.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_object-create.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var dPs = __webpack_require__(/*! ./_object-dps */ "./node_modules/core-js/modules/_object-dps.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/core-js/modules/_enum-bug-keys.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/core-js/modules/_shared-key.js")('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(/*! ./_dom-create */ "./node_modules/core-js/modules/_dom-create.js")('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(/*! ./_html */ "./node_modules/core-js/modules/_html.js").appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-dp.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_object-dp.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "./node_modules/core-js/modules/_ie8-dom-define.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");
var dP = Object.defineProperty;

exports.f = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-dps.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_object-dps.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");

module.exports = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-gopd.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_object-gopd.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/modules/_object-pie.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "./node_modules/core-js/modules/_ie8-dom-define.js");
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-gopn-ext.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_object-gopn-ext.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
var gOPN = __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/modules/_object-gopn.js").f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-gopn.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_object-gopn.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__(/*! ./_object-keys-internal */ "./node_modules/core-js/modules/_object-keys-internal.js");
var hiddenKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/core-js/modules/_enum-bug-keys.js").concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-gops.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_object-gops.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "./node_modules/core-js/modules/_object-gpo.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_object-gpo.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/core-js/modules/_shared-key.js")('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-keys-internal.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/_object-keys-internal.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
var arrayIndexOf = __webpack_require__(/*! ./_array-includes */ "./node_modules/core-js/modules/_array-includes.js")(false);
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/core-js/modules/_shared-key.js")('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-keys.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_object-keys.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(/*! ./_object-keys-internal */ "./node_modules/core-js/modules/_object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/core-js/modules/_enum-bug-keys.js");

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-pie.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_object-pie.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),

/***/ "./node_modules/core-js/modules/_object-sap.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_object-sap.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// most Object methods by ES6 should accept primitives
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-to-array.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_object-to-array.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js");
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
var isEnum = __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/modules/_object-pie.js").f;
module.exports = function (isEntries) {
  return function (it) {
    var O = toIObject(it);
    var keys = getKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) {
      key = keys[i++];
      if (!DESCRIPTORS || isEnum.call(O, key)) {
        result.push(isEntries ? [key, O[key]] : O[key]);
      }
    }
    return result;
  };
};


/***/ }),

/***/ "./node_modules/core-js/modules/_own-keys.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/modules/_own-keys.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// all object keys, includes non-enumerable and symbols
var gOPN = __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/modules/_object-gopn.js");
var gOPS = __webpack_require__(/*! ./_object-gops */ "./node_modules/core-js/modules/_object-gops.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var Reflect = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").Reflect;
module.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {
  var keys = gOPN.f(anObject(it));
  var getSymbols = gOPS.f;
  return getSymbols ? keys.concat(getSymbols(it)) : keys;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_parse-float.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_parse-float.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $parseFloat = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").parseFloat;
var $trim = __webpack_require__(/*! ./_string-trim */ "./node_modules/core-js/modules/_string-trim.js").trim;

module.exports = 1 / $parseFloat(__webpack_require__(/*! ./_string-ws */ "./node_modules/core-js/modules/_string-ws.js") + '-0') !== -Infinity ? function parseFloat(str) {
  var string = $trim(String(str), 3);
  var result = $parseFloat(string);
  return result === 0 && string.charAt(0) == '-' ? -0 : result;
} : $parseFloat;


/***/ }),

/***/ "./node_modules/core-js/modules/_parse-int.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_parse-int.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $parseInt = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").parseInt;
var $trim = __webpack_require__(/*! ./_string-trim */ "./node_modules/core-js/modules/_string-trim.js").trim;
var ws = __webpack_require__(/*! ./_string-ws */ "./node_modules/core-js/modules/_string-ws.js");
var hex = /^[-+]?0[xX]/;

module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {
  var string = $trim(String(str), 3);
  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
} : $parseInt;


/***/ }),

/***/ "./node_modules/core-js/modules/_perform.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_perform.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};


/***/ }),

/***/ "./node_modules/core-js/modules/_promise-resolve.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_promise-resolve.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var newPromiseCapability = __webpack_require__(/*! ./_new-promise-capability */ "./node_modules/core-js/modules/_new-promise-capability.js");

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_property-desc.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_property-desc.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "./node_modules/core-js/modules/_redefine-all.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/_redefine-all.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
module.exports = function (target, src, safe) {
  for (var key in src) redefine(target, key, src[key], safe);
  return target;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_redefine.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/modules/_redefine.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var SRC = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js")('src');
var $toString = __webpack_require__(/*! ./_function-to-string */ "./node_modules/core-js/modules/_function-to-string.js");
var TO_STRING = 'toString';
var TPL = ('' + $toString).split(TO_STRING);

__webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js").inspectSource = function (it) {
  return $toString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) has(val, 'name') || hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    hide(O, key, val);
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});


/***/ }),

/***/ "./node_modules/core-js/modules/_regexp-exec-abstract.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/_regexp-exec-abstract.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/modules/_classof.js");
var builtinExec = RegExp.prototype.exec;

 // `RegExpExec` abstract operation
// https://tc39.github.io/ecma262/#sec-regexpexec
module.exports = function (R, S) {
  var exec = R.exec;
  if (typeof exec === 'function') {
    var result = exec.call(R, S);
    if (typeof result !== 'object') {
      throw new TypeError('RegExp exec method returned something other than an Object or null');
    }
    return result;
  }
  if (classof(R) !== 'RegExp') {
    throw new TypeError('RegExp#exec called on incompatible receiver');
  }
  return builtinExec.call(R, S);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_regexp-exec.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_regexp-exec.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var regexpFlags = __webpack_require__(/*! ./_flags */ "./node_modules/core-js/modules/_flags.js");

var nativeExec = RegExp.prototype.exec;
// This always refers to the native implementation, because the
// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
// which loads this file before patching the method.
var nativeReplace = String.prototype.replace;

var patchedExec = nativeExec;

var LAST_INDEX = 'lastIndex';

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/,
      re2 = /b*/g;
  nativeExec.call(re1, 'a');
  nativeExec.call(re2, 'a');
  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;
})();

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;

if (PATCH) {
  patchedExec = function exec(str) {
    var re = this;
    var lastIndex, reCopy, match, i;

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + re.source + '$(?!\\s)', regexpFlags.call(re));
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];

    match = nativeExec.call(re, str);

    if (UPDATES_LAST_INDEX_WRONG && match) {
      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      // eslint-disable-next-line no-loop-func
      nativeReplace.call(match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    return match;
  };
}

module.exports = patchedExec;


/***/ }),

/***/ "./node_modules/core-js/modules/_same-value.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_same-value.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.2.9 SameValue(x, y)
module.exports = Object.is || function is(x, y) {
  // eslint-disable-next-line no-self-compare
  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_set-proto.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_set-proto.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js")(Function.call, __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js").f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};


/***/ }),

/***/ "./node_modules/core-js/modules/_set-species.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_set-species.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js");
var SPECIES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('species');

module.exports = function (KEY) {
  var C = global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};


/***/ }),

/***/ "./node_modules/core-js/modules/_set-to-string-tag.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/_set-to-string-tag.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var TAG = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),

/***/ "./node_modules/core-js/modules/_shared-key.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_shared-key.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/modules/_shared.js")('keys');
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js");
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),

/***/ "./node_modules/core-js/modules/_shared.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_shared.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js") ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "./node_modules/core-js/modules/_species-constructor.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/_species-constructor.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
var SPECIES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_strict-method.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_strict-method.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");

module.exports = function (method, arg) {
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call
    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);
  });
};


/***/ }),

/***/ "./node_modules/core-js/modules/_string-at.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_string-at.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),

/***/ "./node_modules/core-js/modules/_string-context.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/_string-context.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// helper for String#{startsWith, endsWith, includes}
var isRegExp = __webpack_require__(/*! ./_is-regexp */ "./node_modules/core-js/modules/_is-regexp.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");

module.exports = function (that, searchString, NAME) {
  if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
  return String(defined(that));
};


/***/ }),

/***/ "./node_modules/core-js/modules/_string-html.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_string-html.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");
var quot = /"/g;
// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
var createHTML = function (string, tag, attribute, value) {
  var S = String(defined(string));
  var p1 = '<' + tag;
  if (attribute !== '') p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
  return p1 + '>' + S + '</' + tag + '>';
};
module.exports = function (NAME, exec) {
  var O = {};
  O[NAME] = exec(createHTML);
  $export($export.P + $export.F * fails(function () {
    var test = ''[NAME]('"');
    return test !== test.toLowerCase() || test.split('"').length > 3;
  }), 'String', O);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_string-pad.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_string-pad.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-string-pad-start-end
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var repeat = __webpack_require__(/*! ./_string-repeat */ "./node_modules/core-js/modules/_string-repeat.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");

module.exports = function (that, maxLength, fillString, left) {
  var S = String(defined(that));
  var stringLength = S.length;
  var fillStr = fillString === undefined ? ' ' : String(fillString);
  var intMaxLength = toLength(maxLength);
  if (intMaxLength <= stringLength || fillStr == '') return S;
  var fillLen = intMaxLength - stringLength;
  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
  return left ? stringFiller + S : S + stringFiller;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_string-repeat.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_string-repeat.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");

module.exports = function repeat(count) {
  var str = String(defined(this));
  var res = '';
  var n = toInteger(count);
  if (n < 0 || n == Infinity) throw RangeError("Count can't be negative");
  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;
  return res;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_string-trim.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_string-trim.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
var spaces = __webpack_require__(/*! ./_string-ws */ "./node_modules/core-js/modules/_string-ws.js");
var space = '[' + spaces + ']';
var non = '\u200b\u0085';
var ltrim = RegExp('^' + space + space + '*');
var rtrim = RegExp(space + space + '*$');

var exporter = function (KEY, exec, ALIAS) {
  var exp = {};
  var FORCE = fails(function () {
    return !!spaces[KEY]() || non[KEY]() != non;
  });
  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
  if (ALIAS) exp[ALIAS] = fn;
  $export($export.P + $export.F * FORCE, 'String', exp);
};

// 1 -> String#trimLeft
// 2 -> String#trimRight
// 3 -> String#trim
var trim = exporter.trim = function (string, TYPE) {
  string = String(defined(string));
  if (TYPE & 1) string = string.replace(ltrim, '');
  if (TYPE & 2) string = string.replace(rtrim, '');
  return string;
};

module.exports = exporter;


/***/ }),

/***/ "./node_modules/core-js/modules/_string-ws.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_string-ws.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


/***/ }),

/***/ "./node_modules/core-js/modules/_task.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_task.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
var invoke = __webpack_require__(/*! ./_invoke */ "./node_modules/core-js/modules/_invoke.js");
var html = __webpack_require__(/*! ./_html */ "./node_modules/core-js/modules/_html.js");
var cel = __webpack_require__(/*! ./_dom-create */ "./node_modules/core-js/modules/_dom-create.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (__webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js")(process) == 'process') {
    defer = function (id) {
      process.nextTick(ctx(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};


/***/ }),

/***/ "./node_modules/core-js/modules/_to-absolute-index.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/_to-absolute-index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_to-index.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/modules/_to-index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/ecma262/#sec-toindex
var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
module.exports = function (it) {
  if (it === undefined) return 0;
  var number = toInteger(it);
  var length = toLength(number);
  if (number !== length) throw RangeError('Wrong length!');
  return length;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_to-integer.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_to-integer.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_to-iobject.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_to-iobject.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/modules/_iobject.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),

/***/ "./node_modules/core-js/modules/_to-length.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_to-length.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "./node_modules/core-js/modules/_to-object.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_to-object.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "./node_modules/core-js/modules/_to-primitive.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/_to-primitive.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "./node_modules/core-js/modules/_typed-array.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_typed-array.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

if (__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js")) {
  var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js");
  var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
  var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
  var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
  var $typed = __webpack_require__(/*! ./_typed */ "./node_modules/core-js/modules/_typed.js");
  var $buffer = __webpack_require__(/*! ./_typed-buffer */ "./node_modules/core-js/modules/_typed-buffer.js");
  var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
  var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/modules/_an-instance.js");
  var propertyDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");
  var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
  var redefineAll = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/modules/_redefine-all.js");
  var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
  var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
  var toIndex = __webpack_require__(/*! ./_to-index */ "./node_modules/core-js/modules/_to-index.js");
  var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/modules/_to-absolute-index.js");
  var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");
  var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
  var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/modules/_classof.js");
  var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
  var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
  var isArrayIter = __webpack_require__(/*! ./_is-array-iter */ "./node_modules/core-js/modules/_is-array-iter.js");
  var create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/modules/_object-create.js");
  var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/modules/_object-gpo.js");
  var gOPN = __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/modules/_object-gopn.js").f;
  var getIterFn = __webpack_require__(/*! ./core.get-iterator-method */ "./node_modules/core-js/modules/core.get-iterator-method.js");
  var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js");
  var wks = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js");
  var createArrayMethod = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/modules/_array-methods.js");
  var createArrayIncludes = __webpack_require__(/*! ./_array-includes */ "./node_modules/core-js/modules/_array-includes.js");
  var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "./node_modules/core-js/modules/_species-constructor.js");
  var ArrayIterators = __webpack_require__(/*! ./es6.array.iterator */ "./node_modules/core-js/modules/es6.array.iterator.js");
  var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/modules/_iterators.js");
  var $iterDetect = __webpack_require__(/*! ./_iter-detect */ "./node_modules/core-js/modules/_iter-detect.js");
  var setSpecies = __webpack_require__(/*! ./_set-species */ "./node_modules/core-js/modules/_set-species.js");
  var arrayFill = __webpack_require__(/*! ./_array-fill */ "./node_modules/core-js/modules/_array-fill.js");
  var arrayCopyWithin = __webpack_require__(/*! ./_array-copy-within */ "./node_modules/core-js/modules/_array-copy-within.js");
  var $DP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
  var $GOPD = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js");
  var dP = $DP.f;
  var gOPD = $GOPD.f;
  var RangeError = global.RangeError;
  var TypeError = global.TypeError;
  var Uint8Array = global.Uint8Array;
  var ARRAY_BUFFER = 'ArrayBuffer';
  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;
  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
  var PROTOTYPE = 'prototype';
  var ArrayProto = Array[PROTOTYPE];
  var $ArrayBuffer = $buffer.ArrayBuffer;
  var $DataView = $buffer.DataView;
  var arrayForEach = createArrayMethod(0);
  var arrayFilter = createArrayMethod(2);
  var arraySome = createArrayMethod(3);
  var arrayEvery = createArrayMethod(4);
  var arrayFind = createArrayMethod(5);
  var arrayFindIndex = createArrayMethod(6);
  var arrayIncludes = createArrayIncludes(true);
  var arrayIndexOf = createArrayIncludes(false);
  var arrayValues = ArrayIterators.values;
  var arrayKeys = ArrayIterators.keys;
  var arrayEntries = ArrayIterators.entries;
  var arrayLastIndexOf = ArrayProto.lastIndexOf;
  var arrayReduce = ArrayProto.reduce;
  var arrayReduceRight = ArrayProto.reduceRight;
  var arrayJoin = ArrayProto.join;
  var arraySort = ArrayProto.sort;
  var arraySlice = ArrayProto.slice;
  var arrayToString = ArrayProto.toString;
  var arrayToLocaleString = ArrayProto.toLocaleString;
  var ITERATOR = wks('iterator');
  var TAG = wks('toStringTag');
  var TYPED_CONSTRUCTOR = uid('typed_constructor');
  var DEF_CONSTRUCTOR = uid('def_constructor');
  var ALL_CONSTRUCTORS = $typed.CONSTR;
  var TYPED_ARRAY = $typed.TYPED;
  var VIEW = $typed.VIEW;
  var WRONG_LENGTH = 'Wrong length!';

  var $map = createArrayMethod(1, function (O, length) {
    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
  });

  var LITTLE_ENDIAN = fails(function () {
    // eslint-disable-next-line no-undef
    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
  });

  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {
    new Uint8Array(1).set({});
  });

  var toOffset = function (it, BYTES) {
    var offset = toInteger(it);
    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');
    return offset;
  };

  var validate = function (it) {
    if (isObject(it) && TYPED_ARRAY in it) return it;
    throw TypeError(it + ' is not a typed array!');
  };

  var allocate = function (C, length) {
    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {
      throw TypeError('It is not a typed array constructor!');
    } return new C(length);
  };

  var speciesFromList = function (O, list) {
    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
  };

  var fromList = function (C, list) {
    var index = 0;
    var length = list.length;
    var result = allocate(C, length);
    while (length > index) result[index] = list[index++];
    return result;
  };

  var addGetter = function (it, key, internal) {
    dP(it, key, { get: function () { return this._d[internal]; } });
  };

  var $from = function from(source /* , mapfn, thisArg */) {
    var O = toObject(source);
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var iterFn = getIterFn(O);
    var i, length, values, result, step, iterator;
    if (iterFn != undefined && !isArrayIter(iterFn)) {
      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {
        values.push(step.value);
      } O = values;
    }
    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);
    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {
      result[i] = mapping ? mapfn(O[i], i) : O[i];
    }
    return result;
  };

  var $of = function of(/* ...items */) {
    var index = 0;
    var length = arguments.length;
    var result = allocate(this, length);
    while (length > index) result[index] = arguments[index++];
    return result;
  };

  // iOS Safari 6.x fails here
  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });

  var $toLocaleString = function toLocaleString() {
    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
  };

  var proto = {
    copyWithin: function copyWithin(target, start /* , end */) {
      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
    },
    every: function every(callbackfn /* , thisArg */) {
      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars
      return arrayFill.apply(validate(this), arguments);
    },
    filter: function filter(callbackfn /* , thisArg */) {
      return speciesFromList(this, arrayFilter(validate(this), callbackfn,
        arguments.length > 1 ? arguments[1] : undefined));
    },
    find: function find(predicate /* , thisArg */) {
      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    findIndex: function findIndex(predicate /* , thisArg */) {
      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    forEach: function forEach(callbackfn /* , thisArg */) {
      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    indexOf: function indexOf(searchElement /* , fromIndex */) {
      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    includes: function includes(searchElement /* , fromIndex */) {
      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    join: function join(separator) { // eslint-disable-line no-unused-vars
      return arrayJoin.apply(validate(this), arguments);
    },
    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars
      return arrayLastIndexOf.apply(validate(this), arguments);
    },
    map: function map(mapfn /* , thisArg */) {
      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
      return arrayReduce.apply(validate(this), arguments);
    },
    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
      return arrayReduceRight.apply(validate(this), arguments);
    },
    reverse: function reverse() {
      var that = this;
      var length = validate(that).length;
      var middle = Math.floor(length / 2);
      var index = 0;
      var value;
      while (index < middle) {
        value = that[index];
        that[index++] = that[--length];
        that[length] = value;
      } return that;
    },
    some: function some(callbackfn /* , thisArg */) {
      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    sort: function sort(comparefn) {
      return arraySort.call(validate(this), comparefn);
    },
    subarray: function subarray(begin, end) {
      var O = validate(this);
      var length = O.length;
      var $begin = toAbsoluteIndex(begin, length);
      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
        O.buffer,
        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)
      );
    }
  };

  var $slice = function slice(start, end) {
    return speciesFromList(this, arraySlice.call(validate(this), start, end));
  };

  var $set = function set(arrayLike /* , offset */) {
    validate(this);
    var offset = toOffset(arguments[1], 1);
    var length = this.length;
    var src = toObject(arrayLike);
    var len = toLength(src.length);
    var index = 0;
    if (len + offset > length) throw RangeError(WRONG_LENGTH);
    while (index < len) this[offset + index] = src[index++];
  };

  var $iterators = {
    entries: function entries() {
      return arrayEntries.call(validate(this));
    },
    keys: function keys() {
      return arrayKeys.call(validate(this));
    },
    values: function values() {
      return arrayValues.call(validate(this));
    }
  };

  var isTAIndex = function (target, key) {
    return isObject(target)
      && target[TYPED_ARRAY]
      && typeof key != 'symbol'
      && key in target
      && String(+key) == String(key);
  };
  var $getDesc = function getOwnPropertyDescriptor(target, key) {
    return isTAIndex(target, key = toPrimitive(key, true))
      ? propertyDesc(2, target[key])
      : gOPD(target, key);
  };
  var $setDesc = function defineProperty(target, key, desc) {
    if (isTAIndex(target, key = toPrimitive(key, true))
      && isObject(desc)
      && has(desc, 'value')
      && !has(desc, 'get')
      && !has(desc, 'set')
      // TODO: add validation descriptor w/o calling accessors
      && !desc.configurable
      && (!has(desc, 'writable') || desc.writable)
      && (!has(desc, 'enumerable') || desc.enumerable)
    ) {
      target[key] = desc.value;
      return target;
    } return dP(target, key, desc);
  };

  if (!ALL_CONSTRUCTORS) {
    $GOPD.f = $getDesc;
    $DP.f = $setDesc;
  }

  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
    getOwnPropertyDescriptor: $getDesc,
    defineProperty: $setDesc
  });

  if (fails(function () { arrayToString.call({}); })) {
    arrayToString = arrayToLocaleString = function toString() {
      return arrayJoin.call(this);
    };
  }

  var $TypedArrayPrototype$ = redefineAll({}, proto);
  redefineAll($TypedArrayPrototype$, $iterators);
  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
  redefineAll($TypedArrayPrototype$, {
    slice: $slice,
    set: $set,
    constructor: function () { /* noop */ },
    toString: arrayToString,
    toLocaleString: $toLocaleString
  });
  addGetter($TypedArrayPrototype$, 'buffer', 'b');
  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
  addGetter($TypedArrayPrototype$, 'length', 'e');
  dP($TypedArrayPrototype$, TAG, {
    get: function () { return this[TYPED_ARRAY]; }
  });

  // eslint-disable-next-line max-statements
  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {
    CLAMPED = !!CLAMPED;
    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';
    var GETTER = 'get' + KEY;
    var SETTER = 'set' + KEY;
    var TypedArray = global[NAME];
    var Base = TypedArray || {};
    var TAC = TypedArray && getPrototypeOf(TypedArray);
    var FORCED = !TypedArray || !$typed.ABV;
    var O = {};
    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
    var getter = function (that, index) {
      var data = that._d;
      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
    };
    var setter = function (that, index, value) {
      var data = that._d;
      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
    };
    var addElement = function (that, index) {
      dP(that, index, {
        get: function () {
          return getter(this, index);
        },
        set: function (value) {
          return setter(this, index, value);
        },
        enumerable: true
      });
    };
    if (FORCED) {
      TypedArray = wrapper(function (that, data, $offset, $length) {
        anInstance(that, TypedArray, NAME, '_d');
        var index = 0;
        var offset = 0;
        var buffer, byteLength, length, klass;
        if (!isObject(data)) {
          length = toIndex(data);
          byteLength = length * BYTES;
          buffer = new $ArrayBuffer(byteLength);
        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
          buffer = data;
          offset = toOffset($offset, BYTES);
          var $len = data.byteLength;
          if ($length === undefined) {
            if ($len % BYTES) throw RangeError(WRONG_LENGTH);
            byteLength = $len - offset;
            if (byteLength < 0) throw RangeError(WRONG_LENGTH);
          } else {
            byteLength = toLength($length) * BYTES;
            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);
          }
          length = byteLength / BYTES;
        } else if (TYPED_ARRAY in data) {
          return fromList(TypedArray, data);
        } else {
          return $from.call(TypedArray, data);
        }
        hide(that, '_d', {
          b: buffer,
          o: offset,
          l: byteLength,
          e: length,
          v: new $DataView(buffer)
        });
        while (index < length) addElement(that, index++);
      });
      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
      hide(TypedArrayPrototype, 'constructor', TypedArray);
    } else if (!fails(function () {
      TypedArray(1);
    }) || !fails(function () {
      new TypedArray(-1); // eslint-disable-line no-new
    }) || !$iterDetect(function (iter) {
      new TypedArray(); // eslint-disable-line no-new
      new TypedArray(null); // eslint-disable-line no-new
      new TypedArray(1.5); // eslint-disable-line no-new
      new TypedArray(iter); // eslint-disable-line no-new
    }, true)) {
      TypedArray = wrapper(function (that, data, $offset, $length) {
        anInstance(that, TypedArray, NAME);
        var klass;
        // `ws` module bug, temporarily remove validation length for Uint8Array
        // https://github.com/websockets/ws/pull/645
        if (!isObject(data)) return new Base(toIndex(data));
        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
          return $length !== undefined
            ? new Base(data, toOffset($offset, BYTES), $length)
            : $offset !== undefined
              ? new Base(data, toOffset($offset, BYTES))
              : new Base(data);
        }
        if (TYPED_ARRAY in data) return fromList(TypedArray, data);
        return $from.call(TypedArray, data);
      });
      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {
        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);
      });
      TypedArray[PROTOTYPE] = TypedArrayPrototype;
      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;
    }
    var $nativeIterator = TypedArrayPrototype[ITERATOR];
    var CORRECT_ITER_NAME = !!$nativeIterator
      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);
    var $iterator = $iterators.values;
    hide(TypedArray, TYPED_CONSTRUCTOR, true);
    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
    hide(TypedArrayPrototype, VIEW, true);
    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {
      dP(TypedArrayPrototype, TAG, {
        get: function () { return NAME; }
      });
    }

    O[NAME] = TypedArray;

    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

    $export($export.S, NAME, {
      BYTES_PER_ELEMENT: BYTES
    });

    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {
      from: $from,
      of: $of
    });

    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

    $export($export.P, NAME, proto);

    setSpecies(NAME);

    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });

    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;

    $export($export.P + $export.F * fails(function () {
      new TypedArray(1).slice();
    }), NAME, { slice: $slice });

    $export($export.P + $export.F * (fails(function () {
      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();
    }) || !fails(function () {
      TypedArrayPrototype.toLocaleString.call([1, 2]);
    })), NAME, { toLocaleString: $toLocaleString });

    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);
  };
} else module.exports = function () { /* empty */ };


/***/ }),

/***/ "./node_modules/core-js/modules/_typed-buffer.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/_typed-buffer.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js");
var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js");
var $typed = __webpack_require__(/*! ./_typed */ "./node_modules/core-js/modules/_typed.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
var redefineAll = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/modules/_redefine-all.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/modules/_an-instance.js");
var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var toIndex = __webpack_require__(/*! ./_to-index */ "./node_modules/core-js/modules/_to-index.js");
var gOPN = __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/modules/_object-gopn.js").f;
var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
var arrayFill = __webpack_require__(/*! ./_array-fill */ "./node_modules/core-js/modules/_array-fill.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/modules/_set-to-string-tag.js");
var ARRAY_BUFFER = 'ArrayBuffer';
var DATA_VIEW = 'DataView';
var PROTOTYPE = 'prototype';
var WRONG_LENGTH = 'Wrong length!';
var WRONG_INDEX = 'Wrong index!';
var $ArrayBuffer = global[ARRAY_BUFFER];
var $DataView = global[DATA_VIEW];
var Math = global.Math;
var RangeError = global.RangeError;
// eslint-disable-next-line no-shadow-restricted-names
var Infinity = global.Infinity;
var BaseBuffer = $ArrayBuffer;
var abs = Math.abs;
var pow = Math.pow;
var floor = Math.floor;
var log = Math.log;
var LN2 = Math.LN2;
var BUFFER = 'buffer';
var BYTE_LENGTH = 'byteLength';
var BYTE_OFFSET = 'byteOffset';
var $BUFFER = DESCRIPTORS ? '_b' : BUFFER;
var $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;
var $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;

// IEEE754 conversions based on https://github.com/feross/ieee754
function packIEEE754(value, mLen, nBytes) {
  var buffer = new Array(nBytes);
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;
  var i = 0;
  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
  var e, m, c;
  value = abs(value);
  // eslint-disable-next-line no-self-compare
  if (value != value || value === Infinity) {
    // eslint-disable-next-line no-self-compare
    m = value != value ? 1 : 0;
    e = eMax;
  } else {
    e = floor(log(value) / LN2);
    if (value * (c = pow(2, -e)) < 1) {
      e--;
      c *= 2;
    }
    if (e + eBias >= 1) {
      value += rt / c;
    } else {
      value += rt * pow(2, 1 - eBias);
    }
    if (value * c >= 2) {
      e++;
      c /= 2;
    }
    if (e + eBias >= eMax) {
      m = 0;
      e = eMax;
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * pow(2, mLen);
      e = e + eBias;
    } else {
      m = value * pow(2, eBias - 1) * pow(2, mLen);
      e = 0;
    }
  }
  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
  e = e << mLen | m;
  eLen += mLen;
  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
  buffer[--i] |= s * 128;
  return buffer;
}
function unpackIEEE754(buffer, mLen, nBytes) {
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var nBits = eLen - 7;
  var i = nBytes - 1;
  var s = buffer[i--];
  var e = s & 127;
  var m;
  s >>= 7;
  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
  m = e & (1 << -nBits) - 1;
  e >>= -nBits;
  nBits += mLen;
  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
  if (e === 0) {
    e = 1 - eBias;
  } else if (e === eMax) {
    return m ? NaN : s ? -Infinity : Infinity;
  } else {
    m = m + pow(2, mLen);
    e = e - eBias;
  } return (s ? -1 : 1) * m * pow(2, e - mLen);
}

function unpackI32(bytes) {
  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
}
function packI8(it) {
  return [it & 0xff];
}
function packI16(it) {
  return [it & 0xff, it >> 8 & 0xff];
}
function packI32(it) {
  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
}
function packF64(it) {
  return packIEEE754(it, 52, 8);
}
function packF32(it) {
  return packIEEE754(it, 23, 4);
}

function addGetter(C, key, internal) {
  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });
}

function get(view, bytes, index, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b;
  var start = intIndex + view[$OFFSET];
  var pack = store.slice(start, start + bytes);
  return isLittleEndian ? pack : pack.reverse();
}
function set(view, bytes, index, conversion, value, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b;
  var start = intIndex + view[$OFFSET];
  var pack = conversion(+value);
  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
}

if (!$typed.ABV) {
  $ArrayBuffer = function ArrayBuffer(length) {
    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
    var byteLength = toIndex(length);
    this._b = arrayFill.call(new Array(byteLength), 0);
    this[$LENGTH] = byteLength;
  };

  $DataView = function DataView(buffer, byteOffset, byteLength) {
    anInstance(this, $DataView, DATA_VIEW);
    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
    var bufferLength = buffer[$LENGTH];
    var offset = toInteger(byteOffset);
    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');
    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
    this[$BUFFER] = buffer;
    this[$OFFSET] = offset;
    this[$LENGTH] = byteLength;
  };

  if (DESCRIPTORS) {
    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
    addGetter($DataView, BUFFER, '_b');
    addGetter($DataView, BYTE_LENGTH, '_l');
    addGetter($DataView, BYTE_OFFSET, '_o');
  }

  redefineAll($DataView[PROTOTYPE], {
    getInt8: function getInt8(byteOffset) {
      return get(this, 1, byteOffset)[0] << 24 >> 24;
    },
    getUint8: function getUint8(byteOffset) {
      return get(this, 1, byteOffset)[0];
    },
    getInt16: function getInt16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
    },
    getUint16: function getUint16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return bytes[1] << 8 | bytes[0];
    },
    getInt32: function getInt32(byteOffset /* , littleEndian */) {
      return unpackI32(get(this, 4, byteOffset, arguments[1]));
    },
    getUint32: function getUint32(byteOffset /* , littleEndian */) {
      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
    },
    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
    },
    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
    },
    setInt8: function setInt8(byteOffset, value) {
      set(this, 1, byteOffset, packI8, value);
    },
    setUint8: function setUint8(byteOffset, value) {
      set(this, 1, byteOffset, packI8, value);
    },
    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packF32, value, arguments[2]);
    },
    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
      set(this, 8, byteOffset, packF64, value, arguments[2]);
    }
  });
} else {
  if (!fails(function () {
    $ArrayBuffer(1);
  }) || !fails(function () {
    new $ArrayBuffer(-1); // eslint-disable-line no-new
  }) || fails(function () {
    new $ArrayBuffer(); // eslint-disable-line no-new
    new $ArrayBuffer(1.5); // eslint-disable-line no-new
    new $ArrayBuffer(NaN); // eslint-disable-line no-new
    return $ArrayBuffer.name != ARRAY_BUFFER;
  })) {
    $ArrayBuffer = function ArrayBuffer(length) {
      anInstance(this, $ArrayBuffer);
      return new BaseBuffer(toIndex(length));
    };
    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {
      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);
    }
    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;
  }
  // iOS Safari 7.x bug
  var view = new $DataView(new $ArrayBuffer(2));
  var $setInt8 = $DataView[PROTOTYPE].setInt8;
  view.setInt8(0, 2147483648);
  view.setInt8(1, 2147483649);
  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {
    setInt8: function setInt8(byteOffset, value) {
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    },
    setUint8: function setUint8(byteOffset, value) {
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    }
  }, true);
}
setToStringTag($ArrayBuffer, ARRAY_BUFFER);
setToStringTag($DataView, DATA_VIEW);
hide($DataView[PROTOTYPE], $typed.VIEW, true);
exports[ARRAY_BUFFER] = $ArrayBuffer;
exports[DATA_VIEW] = $DataView;


/***/ }),

/***/ "./node_modules/core-js/modules/_typed.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/modules/_typed.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js");
var TYPED = uid('typed_array');
var VIEW = uid('view');
var ABV = !!(global.ArrayBuffer && global.DataView);
var CONSTR = ABV;
var i = 0;
var l = 9;
var Typed;

var TypedArrayConstructors = (
  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
).split(',');

while (i < l) {
  if (Typed = global[TypedArrayConstructors[i++]]) {
    hide(Typed.prototype, TYPED, true);
    hide(Typed.prototype, VIEW, true);
  } else CONSTR = false;
}

module.exports = {
  ABV: ABV,
  CONSTR: CONSTR,
  TYPED: TYPED,
  VIEW: VIEW
};


/***/ }),

/***/ "./node_modules/core-js/modules/_uid.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_uid.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "./node_modules/core-js/modules/_user-agent.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_user-agent.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var navigator = global.navigator;

module.exports = navigator && navigator.userAgent || '';


/***/ }),

/***/ "./node_modules/core-js/modules/_validate-collection.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/_validate-collection.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
module.exports = function (it, TYPE) {
  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_wks-define.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_wks-define.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js");
var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js");
var wksExt = __webpack_require__(/*! ./_wks-ext */ "./node_modules/core-js/modules/_wks-ext.js");
var defineProperty = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};


/***/ }),

/***/ "./node_modules/core-js/modules/_wks-ext.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_wks-ext.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js");


/***/ }),

/***/ "./node_modules/core-js/modules/_wks.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_wks.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/modules/_shared.js")('wks');
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js");
var Symbol = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),

/***/ "./node_modules/core-js/modules/core.get-iterator-method.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/modules/core.get-iterator-method.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/modules/_classof.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('iterator');
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/modules/_iterators.js");
module.exports = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js").getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.copy-within.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.copy-within.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

$export($export.P, 'Array', { copyWithin: __webpack_require__(/*! ./_array-copy-within */ "./node_modules/core-js/modules/_array-copy-within.js") });

__webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/modules/_add-to-unscopables.js")('copyWithin');


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.every.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.every.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $every = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/modules/_array-methods.js")(4);

$export($export.P + $export.F * !__webpack_require__(/*! ./_strict-method */ "./node_modules/core-js/modules/_strict-method.js")([].every, true), 'Array', {
  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
  every: function every(callbackfn /* , thisArg */) {
    return $every(this, callbackfn, arguments[1]);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.fill.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.fill.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

$export($export.P, 'Array', { fill: __webpack_require__(/*! ./_array-fill */ "./node_modules/core-js/modules/_array-fill.js") });

__webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/modules/_add-to-unscopables.js")('fill');


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.filter.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.filter.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $filter = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/modules/_array-methods.js")(2);

$export($export.P + $export.F * !__webpack_require__(/*! ./_strict-method */ "./node_modules/core-js/modules/_strict-method.js")([].filter, true), 'Array', {
  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
  filter: function filter(callbackfn /* , thisArg */) {
    return $filter(this, callbackfn, arguments[1]);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.find-index.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.find-index.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $find = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/modules/_array-methods.js")(6);
var KEY = 'findIndex';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  findIndex: function findIndex(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
__webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/modules/_add-to-unscopables.js")(KEY);


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.find.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.find.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $find = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/modules/_array-methods.js")(5);
var KEY = 'find';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  find: function find(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
__webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/modules/_add-to-unscopables.js")(KEY);


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.for-each.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.for-each.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $forEach = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/modules/_array-methods.js")(0);
var STRICT = __webpack_require__(/*! ./_strict-method */ "./node_modules/core-js/modules/_strict-method.js")([].forEach, true);

$export($export.P + $export.F * !STRICT, 'Array', {
  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
  forEach: function forEach(callbackfn /* , thisArg */) {
    return $forEach(this, callbackfn, arguments[1]);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.from.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.from.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var call = __webpack_require__(/*! ./_iter-call */ "./node_modules/core-js/modules/_iter-call.js");
var isArrayIter = __webpack_require__(/*! ./_is-array-iter */ "./node_modules/core-js/modules/_is-array-iter.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var createProperty = __webpack_require__(/*! ./_create-property */ "./node_modules/core-js/modules/_create-property.js");
var getIterFn = __webpack_require__(/*! ./core.get-iterator-method */ "./node_modules/core-js/modules/core.get-iterator-method.js");

$export($export.S + $export.F * !__webpack_require__(/*! ./_iter-detect */ "./node_modules/core-js/modules/_iter-detect.js")(function (iter) { Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
    var O = toObject(arrayLike);
    var C = typeof this == 'function' ? this : Array;
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var index = 0;
    var iterFn = getIterFn(O);
    var length, result, step, iterator;
    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);
      for (result = new C(length); length > index; index++) {
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.index-of.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.index-of.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $indexOf = __webpack_require__(/*! ./_array-includes */ "./node_modules/core-js/modules/_array-includes.js")(false);
var $native = [].indexOf;
var NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;

$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(/*! ./_strict-method */ "./node_modules/core-js/modules/_strict-method.js")($native)), 'Array', {
  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
    return NEGATIVE_ZERO
      // convert -0 to +0
      ? $native.apply(this, arguments) || 0
      : $indexOf(this, searchElement, arguments[1]);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.is-array.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.is-array.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

$export($export.S, 'Array', { isArray: __webpack_require__(/*! ./_is-array */ "./node_modules/core-js/modules/_is-array.js") });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.iterator.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.iterator.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/modules/_add-to-unscopables.js");
var step = __webpack_require__(/*! ./_iter-step */ "./node_modules/core-js/modules/_iter-step.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/modules/_iterators.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(/*! ./_iter-define */ "./node_modules/core-js/modules/_iter-define.js")(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.join.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.join.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 22.1.3.13 Array.prototype.join(separator)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
var arrayJoin = [].join;

// fallback for not array-like strings
$export($export.P + $export.F * (__webpack_require__(/*! ./_iobject */ "./node_modules/core-js/modules/_iobject.js") != Object || !__webpack_require__(/*! ./_strict-method */ "./node_modules/core-js/modules/_strict-method.js")(arrayJoin)), 'Array', {
  join: function join(separator) {
    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.last-index-of.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.last-index-of.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var $native = [].lastIndexOf;
var NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;

$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(/*! ./_strict-method */ "./node_modules/core-js/modules/_strict-method.js")($native)), 'Array', {
  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
  lastIndexOf: function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {
    // convert -0 to +0
    if (NEGATIVE_ZERO) return $native.apply(this, arguments) || 0;
    var O = toIObject(this);
    var length = toLength(O.length);
    var index = length - 1;
    if (arguments.length > 1) index = Math.min(index, toInteger(arguments[1]));
    if (index < 0) index = length + index;
    for (;index >= 0; index--) if (index in O) if (O[index] === searchElement) return index || 0;
    return -1;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.map.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.map.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $map = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/modules/_array-methods.js")(1);

$export($export.P + $export.F * !__webpack_require__(/*! ./_strict-method */ "./node_modules/core-js/modules/_strict-method.js")([].map, true), 'Array', {
  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
  map: function map(callbackfn /* , thisArg */) {
    return $map(this, callbackfn, arguments[1]);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.of.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.of.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var createProperty = __webpack_require__(/*! ./_create-property */ "./node_modules/core-js/modules/_create-property.js");

// WebKit Array.of isn't generic
$export($export.S + $export.F * __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  function F() { /* empty */ }
  return !(Array.of.call(F) instanceof F);
}), 'Array', {
  // 22.1.2.3 Array.of( ...items)
  of: function of(/* ...args */) {
    var index = 0;
    var aLen = arguments.length;
    var result = new (typeof this == 'function' ? this : Array)(aLen);
    while (aLen > index) createProperty(result, index, arguments[index++]);
    result.length = aLen;
    return result;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.reduce-right.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.reduce-right.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $reduce = __webpack_require__(/*! ./_array-reduce */ "./node_modules/core-js/modules/_array-reduce.js");

$export($export.P + $export.F * !__webpack_require__(/*! ./_strict-method */ "./node_modules/core-js/modules/_strict-method.js")([].reduceRight, true), 'Array', {
  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
  reduceRight: function reduceRight(callbackfn /* , initialValue */) {
    return $reduce(this, callbackfn, arguments.length, arguments[1], true);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.reduce.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.reduce.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $reduce = __webpack_require__(/*! ./_array-reduce */ "./node_modules/core-js/modules/_array-reduce.js");

$export($export.P + $export.F * !__webpack_require__(/*! ./_strict-method */ "./node_modules/core-js/modules/_strict-method.js")([].reduce, true), 'Array', {
  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
  reduce: function reduce(callbackfn /* , initialValue */) {
    return $reduce(this, callbackfn, arguments.length, arguments[1], false);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.slice.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.slice.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var html = __webpack_require__(/*! ./_html */ "./node_modules/core-js/modules/_html.js");
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/modules/_to-absolute-index.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var arraySlice = [].slice;

// fallback for not array-like ES3 strings and DOM objects
$export($export.P + $export.F * __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  if (html) arraySlice.call(html);
}), 'Array', {
  slice: function slice(begin, end) {
    var len = toLength(this.length);
    var klass = cof(this);
    end = end === undefined ? len : end;
    if (klass == 'Array') return arraySlice.call(this, begin, end);
    var start = toAbsoluteIndex(begin, len);
    var upTo = toAbsoluteIndex(end, len);
    var size = toLength(upTo - start);
    var cloned = new Array(size);
    var i = 0;
    for (; i < size; i++) cloned[i] = klass == 'String'
      ? this.charAt(start + i)
      : this[start + i];
    return cloned;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.some.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.some.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $some = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/modules/_array-methods.js")(3);

$export($export.P + $export.F * !__webpack_require__(/*! ./_strict-method */ "./node_modules/core-js/modules/_strict-method.js")([].some, true), 'Array', {
  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
  some: function some(callbackfn /* , thisArg */) {
    return $some(this, callbackfn, arguments[1]);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.sort.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.sort.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
var $sort = [].sort;
var test = [1, 2, 3];

$export($export.P + $export.F * (fails(function () {
  // IE8-
  test.sort(undefined);
}) || !fails(function () {
  // V8 bug
  test.sort(null);
  // Old WebKit
}) || !__webpack_require__(/*! ./_strict-method */ "./node_modules/core-js/modules/_strict-method.js")($sort)), 'Array', {
  // 22.1.3.25 Array.prototype.sort(comparefn)
  sort: function sort(comparefn) {
    return comparefn === undefined
      ? $sort.call(toObject(this))
      : $sort.call(toObject(this), aFunction(comparefn));
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.species.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.species.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./_set-species */ "./node_modules/core-js/modules/_set-species.js")('Array');


/***/ }),

/***/ "./node_modules/core-js/modules/es6.date.now.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.date.now.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.3.3.1 / 15.9.4.4 Date.now()
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

$export($export.S, 'Date', { now: function () { return new Date().getTime(); } });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.date.to-iso-string.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.date.to-iso-string.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var toISOString = __webpack_require__(/*! ./_date-to-iso-string */ "./node_modules/core-js/modules/_date-to-iso-string.js");

// PhantomJS / old WebKit has a broken implementations
$export($export.P + $export.F * (Date.prototype.toISOString !== toISOString), 'Date', {
  toISOString: toISOString
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.date.to-json.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.date.to-json.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");

$export($export.P + $export.F * __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  return new Date(NaN).toJSON() !== null
    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;
}), 'Date', {
  // eslint-disable-next-line no-unused-vars
  toJSON: function toJSON(key) {
    var O = toObject(this);
    var pv = toPrimitive(O);
    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.date.to-primitive.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.date.to-primitive.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var TO_PRIMITIVE = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('toPrimitive');
var proto = Date.prototype;

if (!(TO_PRIMITIVE in proto)) __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js")(proto, TO_PRIMITIVE, __webpack_require__(/*! ./_date-to-primitive */ "./node_modules/core-js/modules/_date-to-primitive.js"));


/***/ }),

/***/ "./node_modules/core-js/modules/es6.date.to-string.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.date.to-string.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var DateProto = Date.prototype;
var INVALID_DATE = 'Invalid Date';
var TO_STRING = 'toString';
var $toString = DateProto[TO_STRING];
var getTime = DateProto.getTime;
if (new Date(NaN) + '' != INVALID_DATE) {
  __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js")(DateProto, TO_STRING, function toString() {
    var value = getTime.call(this);
    // eslint-disable-next-line no-self-compare
    return value === value ? $toString.call(this) : INVALID_DATE;
  });
}


/***/ }),

/***/ "./node_modules/core-js/modules/es6.function.bind.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.function.bind.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

$export($export.P, 'Function', { bind: __webpack_require__(/*! ./_bind */ "./node_modules/core-js/modules/_bind.js") });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.function.has-instance.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.function.has-instance.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/modules/_object-gpo.js");
var HAS_INSTANCE = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('hasInstance');
var FunctionProto = Function.prototype;
// 19.2.3.6 Function.prototype[@@hasInstance](V)
if (!(HAS_INSTANCE in FunctionProto)) __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f(FunctionProto, HAS_INSTANCE, { value: function (O) {
  if (typeof this != 'function' || !isObject(O)) return false;
  if (!isObject(this.prototype)) return O instanceof this;
  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
  while (O = getPrototypeOf(O)) if (this.prototype === O) return true;
  return false;
} });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.function.name.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.function.name.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
var FProto = Function.prototype;
var nameRE = /^\s*function ([^ (]*)/;
var NAME = 'name';

// 19.2.4.2 name
NAME in FProto || __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") && dP(FProto, NAME, {
  configurable: true,
  get: function () {
    try {
      return ('' + this).match(nameRE)[1];
    } catch (e) {
      return '';
    }
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.map.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/es6.map.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var strong = __webpack_require__(/*! ./_collection-strong */ "./node_modules/core-js/modules/_collection-strong.js");
var validate = __webpack_require__(/*! ./_validate-collection */ "./node_modules/core-js/modules/_validate-collection.js");
var MAP = 'Map';

// 23.1 Map Objects
module.exports = __webpack_require__(/*! ./_collection */ "./node_modules/core-js/modules/_collection.js")(MAP, function (get) {
  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.1.3.6 Map.prototype.get(key)
  get: function get(key) {
    var entry = strong.getEntry(validate(this, MAP), key);
    return entry && entry.v;
  },
  // 23.1.3.9 Map.prototype.set(key, value)
  set: function set(key, value) {
    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);
  }
}, strong, true);


/***/ }),

/***/ "./node_modules/core-js/modules/es6.math.acosh.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.acosh.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.3 Math.acosh(x)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var log1p = __webpack_require__(/*! ./_math-log1p */ "./node_modules/core-js/modules/_math-log1p.js");
var sqrt = Math.sqrt;
var $acosh = Math.acosh;

$export($export.S + $export.F * !($acosh
  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
  && Math.floor($acosh(Number.MAX_VALUE)) == 710
  // Tor Browser bug: Math.acosh(Infinity) -> NaN
  && $acosh(Infinity) == Infinity
), 'Math', {
  acosh: function acosh(x) {
    return (x = +x) < 1 ? NaN : x > 94906265.62425156
      ? Math.log(x) + Math.LN2
      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.math.asinh.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.asinh.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.5 Math.asinh(x)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $asinh = Math.asinh;

function asinh(x) {
  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
}

// Tor Browser bug: Math.asinh(0) -> -0
$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', { asinh: asinh });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.math.atanh.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.atanh.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.7 Math.atanh(x)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $atanh = Math.atanh;

// Tor Browser bug: Math.atanh(-0) -> 0
$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
  atanh: function atanh(x) {
    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.math.cbrt.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.cbrt.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.9 Math.cbrt(x)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var sign = __webpack_require__(/*! ./_math-sign */ "./node_modules/core-js/modules/_math-sign.js");

$export($export.S, 'Math', {
  cbrt: function cbrt(x) {
    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.math.clz32.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.clz32.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.11 Math.clz32(x)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

$export($export.S, 'Math', {
  clz32: function clz32(x) {
    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.math.cosh.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.cosh.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.12 Math.cosh(x)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var exp = Math.exp;

$export($export.S, 'Math', {
  cosh: function cosh(x) {
    return (exp(x = +x) + exp(-x)) / 2;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.math.expm1.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.expm1.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.14 Math.expm1(x)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $expm1 = __webpack_require__(/*! ./_math-expm1 */ "./node_modules/core-js/modules/_math-expm1.js");

$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', { expm1: $expm1 });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.math.fround.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.fround.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.16 Math.fround(x)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

$export($export.S, 'Math', { fround: __webpack_require__(/*! ./_math-fround */ "./node_modules/core-js/modules/_math-fround.js") });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.math.hypot.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.hypot.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var abs = Math.abs;

$export($export.S, 'Math', {
  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars
    var sum = 0;
    var i = 0;
    var aLen = arguments.length;
    var larg = 0;
    var arg, div;
    while (i < aLen) {
      arg = abs(arguments[i++]);
      if (larg < arg) {
        div = larg / arg;
        sum = sum * div * div + 1;
        larg = arg;
      } else if (arg > 0) {
        div = arg / larg;
        sum += div * div;
      } else sum += arg;
    }
    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.math.imul.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.imul.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.18 Math.imul(x, y)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $imul = Math.imul;

// some WebKit versions fails with big numbers, some has wrong arity
$export($export.S + $export.F * __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
}), 'Math', {
  imul: function imul(x, y) {
    var UINT16 = 0xffff;
    var xn = +x;
    var yn = +y;
    var xl = UINT16 & xn;
    var yl = UINT16 & yn;
    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.math.log10.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.log10.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.21 Math.log10(x)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

$export($export.S, 'Math', {
  log10: function log10(x) {
    return Math.log(x) * Math.LOG10E;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.math.log1p.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.log1p.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.20 Math.log1p(x)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

$export($export.S, 'Math', { log1p: __webpack_require__(/*! ./_math-log1p */ "./node_modules/core-js/modules/_math-log1p.js") });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.math.log2.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.log2.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.22 Math.log2(x)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

$export($export.S, 'Math', {
  log2: function log2(x) {
    return Math.log(x) / Math.LN2;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.math.sign.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.sign.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.28 Math.sign(x)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

$export($export.S, 'Math', { sign: __webpack_require__(/*! ./_math-sign */ "./node_modules/core-js/modules/_math-sign.js") });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.math.sinh.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.sinh.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.30 Math.sinh(x)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var expm1 = __webpack_require__(/*! ./_math-expm1 */ "./node_modules/core-js/modules/_math-expm1.js");
var exp = Math.exp;

// V8 near Chromium 38 has a problem with very small numbers
$export($export.S + $export.F * __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  return !Math.sinh(-2e-17) != -2e-17;
}), 'Math', {
  sinh: function sinh(x) {
    return Math.abs(x = +x) < 1
      ? (expm1(x) - expm1(-x)) / 2
      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.math.tanh.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.tanh.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.33 Math.tanh(x)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var expm1 = __webpack_require__(/*! ./_math-expm1 */ "./node_modules/core-js/modules/_math-expm1.js");
var exp = Math.exp;

$export($export.S, 'Math', {
  tanh: function tanh(x) {
    var a = expm1(x = +x);
    var b = expm1(-x);
    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.math.trunc.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.trunc.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.34 Math.trunc(x)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

$export($export.S, 'Math', {
  trunc: function trunc(it) {
    return (it > 0 ? Math.floor : Math.ceil)(it);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.number.constructor.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.constructor.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");
var inheritIfRequired = __webpack_require__(/*! ./_inherit-if-required */ "./node_modules/core-js/modules/_inherit-if-required.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
var gOPN = __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/modules/_object-gopn.js").f;
var gOPD = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js").f;
var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
var $trim = __webpack_require__(/*! ./_string-trim */ "./node_modules/core-js/modules/_string-trim.js").trim;
var NUMBER = 'Number';
var $Number = global[NUMBER];
var Base = $Number;
var proto = $Number.prototype;
// Opera ~12 has broken Object#toString
var BROKEN_COF = cof(__webpack_require__(/*! ./_object-create */ "./node_modules/core-js/modules/_object-create.js")(proto)) == NUMBER;
var TRIM = 'trim' in String.prototype;

// 7.1.3 ToNumber(argument)
var toNumber = function (argument) {
  var it = toPrimitive(argument, false);
  if (typeof it == 'string' && it.length > 2) {
    it = TRIM ? it.trim() : $trim(it, 3);
    var first = it.charCodeAt(0);
    var third, radix, maxCode;
    if (first === 43 || first === 45) {
      third = it.charCodeAt(2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (it.charCodeAt(1)) {
        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
        default: return +it;
      }
      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {
        code = digits.charCodeAt(i);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if (code < 48 || code > maxCode) return NaN;
      } return parseInt(digits, radix);
    }
  } return +it;
};

if (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {
  $Number = function Number(value) {
    var it = arguments.length < 1 ? 0 : value;
    var that = this;
    return that instanceof $Number
      // check on 1..constructor(foo) case
      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)
        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
  };
  for (var keys = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") ? gOPN(Base) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES6 (in case, if modules with ES6 Number statics required before):
    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
  ).split(','), j = 0, key; keys.length > j; j++) {
    if (has(Base, key = keys[j]) && !has($Number, key)) {
      dP($Number, key, gOPD(Base, key));
    }
  }
  $Number.prototype = proto;
  proto.constructor = $Number;
  __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js")(global, NUMBER, $Number);
}


/***/ }),

/***/ "./node_modules/core-js/modules/es6.number.epsilon.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.epsilon.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.1 Number.EPSILON
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

$export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.number.is-finite.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.is-finite.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.2 Number.isFinite(number)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var _isFinite = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").isFinite;

$export($export.S, 'Number', {
  isFinite: function isFinite(it) {
    return typeof it == 'number' && _isFinite(it);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.number.is-integer.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.is-integer.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.3 Number.isInteger(number)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

$export($export.S, 'Number', { isInteger: __webpack_require__(/*! ./_is-integer */ "./node_modules/core-js/modules/_is-integer.js") });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.number.is-nan.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.is-nan.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.4 Number.isNaN(number)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

$export($export.S, 'Number', {
  isNaN: function isNaN(number) {
    // eslint-disable-next-line no-self-compare
    return number != number;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.number.is-safe-integer.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.is-safe-integer.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.5 Number.isSafeInteger(number)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var isInteger = __webpack_require__(/*! ./_is-integer */ "./node_modules/core-js/modules/_is-integer.js");
var abs = Math.abs;

$export($export.S, 'Number', {
  isSafeInteger: function isSafeInteger(number) {
    return isInteger(number) && abs(number) <= 0x1fffffffffffff;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.number.max-safe-integer.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.max-safe-integer.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.6 Number.MAX_SAFE_INTEGER
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

$export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.number.min-safe-integer.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.min-safe-integer.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.10 Number.MIN_SAFE_INTEGER
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

$export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.number.parse-float.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.parse-float.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $parseFloat = __webpack_require__(/*! ./_parse-float */ "./node_modules/core-js/modules/_parse-float.js");
// 20.1.2.12 Number.parseFloat(string)
$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', { parseFloat: $parseFloat });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.number.parse-int.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.parse-int.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $parseInt = __webpack_require__(/*! ./_parse-int */ "./node_modules/core-js/modules/_parse-int.js");
// 20.1.2.13 Number.parseInt(string, radix)
$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', { parseInt: $parseInt });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.number.to-fixed.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.to-fixed.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
var aNumberValue = __webpack_require__(/*! ./_a-number-value */ "./node_modules/core-js/modules/_a-number-value.js");
var repeat = __webpack_require__(/*! ./_string-repeat */ "./node_modules/core-js/modules/_string-repeat.js");
var $toFixed = 1.0.toFixed;
var floor = Math.floor;
var data = [0, 0, 0, 0, 0, 0];
var ERROR = 'Number.toFixed: incorrect invocation!';
var ZERO = '0';

var multiply = function (n, c) {
  var i = -1;
  var c2 = c;
  while (++i < 6) {
    c2 += n * data[i];
    data[i] = c2 % 1e7;
    c2 = floor(c2 / 1e7);
  }
};
var divide = function (n) {
  var i = 6;
  var c = 0;
  while (--i >= 0) {
    c += data[i];
    data[i] = floor(c / n);
    c = (c % n) * 1e7;
  }
};
var numToString = function () {
  var i = 6;
  var s = '';
  while (--i >= 0) {
    if (s !== '' || i === 0 || data[i] !== 0) {
      var t = String(data[i]);
      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
    }
  } return s;
};
var pow = function (x, n, acc) {
  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
};
var log = function (x) {
  var n = 0;
  var x2 = x;
  while (x2 >= 4096) {
    n += 12;
    x2 /= 4096;
  }
  while (x2 >= 2) {
    n += 1;
    x2 /= 2;
  } return n;
};

$export($export.P + $export.F * (!!$toFixed && (
  0.00008.toFixed(3) !== '0.000' ||
  0.9.toFixed(0) !== '1' ||
  1.255.toFixed(2) !== '1.25' ||
  1000000000000000128.0.toFixed(0) !== '1000000000000000128'
) || !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  // V8 ~ Android 4.3-
  $toFixed.call({});
})), 'Number', {
  toFixed: function toFixed(fractionDigits) {
    var x = aNumberValue(this, ERROR);
    var f = toInteger(fractionDigits);
    var s = '';
    var m = ZERO;
    var e, z, j, k;
    if (f < 0 || f > 20) throw RangeError(ERROR);
    // eslint-disable-next-line no-self-compare
    if (x != x) return 'NaN';
    if (x <= -1e21 || x >= 1e21) return String(x);
    if (x < 0) {
      s = '-';
      x = -x;
    }
    if (x > 1e-21) {
      e = log(x * pow(2, 69, 1)) - 69;
      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
      z *= 0x10000000000000;
      e = 52 - e;
      if (e > 0) {
        multiply(0, z);
        j = f;
        while (j >= 7) {
          multiply(1e7, 0);
          j -= 7;
        }
        multiply(pow(10, j, 1), 0);
        j = e - 1;
        while (j >= 23) {
          divide(1 << 23);
          j -= 23;
        }
        divide(1 << j);
        multiply(1, 1);
        divide(2);
        m = numToString();
      } else {
        multiply(0, z);
        multiply(1 << -e, 0);
        m = numToString() + repeat.call(ZERO, f);
      }
    }
    if (f > 0) {
      k = m.length;
      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
    } else {
      m = s + m;
    } return m;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.number.to-precision.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.to-precision.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
var aNumberValue = __webpack_require__(/*! ./_a-number-value */ "./node_modules/core-js/modules/_a-number-value.js");
var $toPrecision = 1.0.toPrecision;

$export($export.P + $export.F * ($fails(function () {
  // IE7-
  return $toPrecision.call(1, undefined) !== '1';
}) || !$fails(function () {
  // V8 ~ Android 4.3-
  $toPrecision.call({});
})), 'Number', {
  toPrecision: function toPrecision(precision) {
    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.object.assign.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.assign.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

$export($export.S + $export.F, 'Object', { assign: __webpack_require__(/*! ./_object-assign */ "./node_modules/core-js/modules/_object-assign.js") });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.object.create.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.create.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', { create: __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/modules/_object-create.js") });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.object.define-properties.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.define-properties.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
$export($export.S + $export.F * !__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js"), 'Object', { defineProperties: __webpack_require__(/*! ./_object-dps */ "./node_modules/core-js/modules/_object-dps.js") });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.object.define-property.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.define-property.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js"), 'Object', { defineProperty: __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.object.freeze.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.freeze.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.5 Object.freeze(O)
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var meta = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/modules/_meta.js").onFreeze;

__webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/modules/_object-sap.js")('freeze', function ($freeze) {
  return function freeze(it) {
    return $freeze && isObject(it) ? $freeze(meta(it)) : it;
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.object.get-own-property-descriptor.js":
/*!********************************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.get-own-property-descriptor.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
var $getOwnPropertyDescriptor = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js").f;

__webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/modules/_object-sap.js")('getOwnPropertyDescriptor', function () {
  return function getOwnPropertyDescriptor(it, key) {
    return $getOwnPropertyDescriptor(toIObject(it), key);
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.object.get-own-property-names.js":
/*!***************************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.get-own-property-names.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 Object.getOwnPropertyNames(O)
__webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/modules/_object-sap.js")('getOwnPropertyNames', function () {
  return __webpack_require__(/*! ./_object-gopn-ext */ "./node_modules/core-js/modules/_object-gopn-ext.js").f;
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.object.get-prototype-of.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.get-prototype-of.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 Object.getPrototypeOf(O)
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var $getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/modules/_object-gpo.js");

__webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/modules/_object-sap.js")('getPrototypeOf', function () {
  return function getPrototypeOf(it) {
    return $getPrototypeOf(toObject(it));
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.object.is-extensible.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.is-extensible.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.11 Object.isExtensible(O)
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");

__webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/modules/_object-sap.js")('isExtensible', function ($isExtensible) {
  return function isExtensible(it) {
    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.object.is-frozen.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.is-frozen.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.12 Object.isFrozen(O)
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");

__webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/modules/_object-sap.js")('isFrozen', function ($isFrozen) {
  return function isFrozen(it) {
    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.object.is-sealed.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.is-sealed.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.13 Object.isSealed(O)
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");

__webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/modules/_object-sap.js")('isSealed', function ($isSealed) {
  return function isSealed(it) {
    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.object.is.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.is.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.10 Object.is(value1, value2)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
$export($export.S, 'Object', { is: __webpack_require__(/*! ./_same-value */ "./node_modules/core-js/modules/_same-value.js") });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.object.keys.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.keys.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 Object.keys(O)
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var $keys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");

__webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/modules/_object-sap.js")('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.object.prevent-extensions.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.prevent-extensions.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.15 Object.preventExtensions(O)
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var meta = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/modules/_meta.js").onFreeze;

__webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/modules/_object-sap.js")('preventExtensions', function ($preventExtensions) {
  return function preventExtensions(it) {
    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.object.seal.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.seal.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.17 Object.seal(O)
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var meta = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/modules/_meta.js").onFreeze;

__webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/modules/_object-sap.js")('seal', function ($seal) {
  return function seal(it) {
    return $seal && isObject(it) ? $seal(meta(it)) : it;
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.object.set-prototype-of.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.set-prototype-of.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
$export($export.S, 'Object', { setPrototypeOf: __webpack_require__(/*! ./_set-proto */ "./node_modules/core-js/modules/_set-proto.js").set });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.object.to-string.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.to-string.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.3.6 Object.prototype.toString()
var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/modules/_classof.js");
var test = {};
test[__webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('toStringTag')] = 'z';
if (test + '' != '[object z]') {
  __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js")(Object.prototype, 'toString', function toString() {
    return '[object ' + classof(this) + ']';
  }, true);
}


/***/ }),

/***/ "./node_modules/core-js/modules/es6.parse-float.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.parse-float.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $parseFloat = __webpack_require__(/*! ./_parse-float */ "./node_modules/core-js/modules/_parse-float.js");
// 18.2.4 parseFloat(string)
$export($export.G + $export.F * (parseFloat != $parseFloat), { parseFloat: $parseFloat });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.parse-int.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.parse-int.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $parseInt = __webpack_require__(/*! ./_parse-int */ "./node_modules/core-js/modules/_parse-int.js");
// 18.2.5 parseInt(string, radix)
$export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.promise.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/es6.promise.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/modules/_classof.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/modules/_an-instance.js");
var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/modules/_for-of.js");
var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "./node_modules/core-js/modules/_species-constructor.js");
var task = __webpack_require__(/*! ./_task */ "./node_modules/core-js/modules/_task.js").set;
var microtask = __webpack_require__(/*! ./_microtask */ "./node_modules/core-js/modules/_microtask.js")();
var newPromiseCapabilityModule = __webpack_require__(/*! ./_new-promise-capability */ "./node_modules/core-js/modules/_new-promise-capability.js");
var perform = __webpack_require__(/*! ./_perform */ "./node_modules/core-js/modules/_perform.js");
var userAgent = __webpack_require__(/*! ./_user-agent */ "./node_modules/core-js/modules/_user-agent.js");
var promiseResolve = __webpack_require__(/*! ./_promise-resolve */ "./node_modules/core-js/modules/_promise-resolve.js");
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[__webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function')
      && promise.then(empty) instanceof FakePromise
      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8.indexOf('6.6') !== 0
      && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/modules/_redefine-all.js")($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
__webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/modules/_set-to-string-tag.js")($Promise, PROMISE);
__webpack_require__(/*! ./_set-species */ "./node_modules/core-js/modules/_set-species.js")(PROMISE);
Wrapper = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js")[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(/*! ./_iter-detect */ "./node_modules/core-js/modules/_iter-detect.js")(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.reflect.apply.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.apply.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var rApply = (__webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").Reflect || {}).apply;
var fApply = Function.apply;
// MS Edge argumentsList argument is optional
$export($export.S + $export.F * !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  rApply(function () { /* empty */ });
}), 'Reflect', {
  apply: function apply(target, thisArgument, argumentsList) {
    var T = aFunction(target);
    var L = anObject(argumentsList);
    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.reflect.construct.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.construct.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/modules/_object-create.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
var bind = __webpack_require__(/*! ./_bind */ "./node_modules/core-js/modules/_bind.js");
var rConstruct = (__webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").Reflect || {}).construct;

// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
var NEW_TARGET_BUG = fails(function () {
  function F() { /* empty */ }
  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);
});
var ARGS_BUG = !fails(function () {
  rConstruct(function () { /* empty */ });
});

$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
  construct: function construct(Target, args /* , newTarget */) {
    aFunction(Target);
    anObject(args);
    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);
    if (Target == newTarget) {
      // w/o altered newTarget, optimization for 0-4 arguments
      switch (args.length) {
        case 0: return new Target();
        case 1: return new Target(args[0]);
        case 2: return new Target(args[0], args[1]);
        case 3: return new Target(args[0], args[1], args[2]);
        case 4: return new Target(args[0], args[1], args[2], args[3]);
      }
      // w/o altered newTarget, lot of arguments case
      var $args = [null];
      $args.push.apply($args, args);
      return new (bind.apply(Target, $args))();
    }
    // with altered newTarget, not support built-in constructors
    var proto = newTarget.prototype;
    var instance = create(isObject(proto) ? proto : Object.prototype);
    var result = Function.apply.call(Target, instance, args);
    return isObject(result) ? result : instance;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.reflect.define-property.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.define-property.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");

// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
$export($export.S + $export.F * __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  // eslint-disable-next-line no-undef
  Reflect.defineProperty(dP.f({}, 1, { value: 1 }), 1, { value: 2 });
}), 'Reflect', {
  defineProperty: function defineProperty(target, propertyKey, attributes) {
    anObject(target);
    propertyKey = toPrimitive(propertyKey, true);
    anObject(attributes);
    try {
      dP.f(target, propertyKey, attributes);
      return true;
    } catch (e) {
      return false;
    }
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.reflect.delete-property.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.delete-property.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.4 Reflect.deleteProperty(target, propertyKey)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var gOPD = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js").f;
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");

$export($export.S, 'Reflect', {
  deleteProperty: function deleteProperty(target, propertyKey) {
    var desc = gOPD(anObject(target), propertyKey);
    return desc && !desc.configurable ? false : delete target[propertyKey];
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.reflect.enumerate.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.enumerate.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 26.1.5 Reflect.enumerate(target)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var Enumerate = function (iterated) {
  this._t = anObject(iterated); // target
  this._i = 0;                  // next index
  var keys = this._k = [];      // keys
  var key;
  for (key in iterated) keys.push(key);
};
__webpack_require__(/*! ./_iter-create */ "./node_modules/core-js/modules/_iter-create.js")(Enumerate, 'Object', function () {
  var that = this;
  var keys = that._k;
  var key;
  do {
    if (that._i >= keys.length) return { value: undefined, done: true };
  } while (!((key = keys[that._i++]) in that._t));
  return { value: key, done: false };
});

$export($export.S, 'Reflect', {
  enumerate: function enumerate(target) {
    return new Enumerate(target);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
var gOPD = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");

$export($export.S, 'Reflect', {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
    return gOPD.f(anObject(target), propertyKey);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.reflect.get-prototype-of.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.get-prototype-of.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.8 Reflect.getPrototypeOf(target)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var getProto = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/modules/_object-gpo.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");

$export($export.S, 'Reflect', {
  getPrototypeOf: function getPrototypeOf(target) {
    return getProto(anObject(target));
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.reflect.get.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.get.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.6 Reflect.get(target, propertyKey [, receiver])
var gOPD = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js");
var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/modules/_object-gpo.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");

function get(target, propertyKey /* , receiver */) {
  var receiver = arguments.length < 3 ? target : arguments[2];
  var desc, proto;
  if (anObject(target) === receiver) return target[propertyKey];
  if (desc = gOPD.f(target, propertyKey)) return has(desc, 'value')
    ? desc.value
    : desc.get !== undefined
      ? desc.get.call(receiver)
      : undefined;
  if (isObject(proto = getPrototypeOf(target))) return get(proto, propertyKey, receiver);
}

$export($export.S, 'Reflect', { get: get });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.reflect.has.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.has.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.9 Reflect.has(target, propertyKey)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

$export($export.S, 'Reflect', {
  has: function has(target, propertyKey) {
    return propertyKey in target;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.reflect.is-extensible.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.is-extensible.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.10 Reflect.isExtensible(target)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var $isExtensible = Object.isExtensible;

$export($export.S, 'Reflect', {
  isExtensible: function isExtensible(target) {
    anObject(target);
    return $isExtensible ? $isExtensible(target) : true;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.reflect.own-keys.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.own-keys.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.11 Reflect.ownKeys(target)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

$export($export.S, 'Reflect', { ownKeys: __webpack_require__(/*! ./_own-keys */ "./node_modules/core-js/modules/_own-keys.js") });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.reflect.prevent-extensions.js":
/*!************************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.prevent-extensions.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.12 Reflect.preventExtensions(target)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var $preventExtensions = Object.preventExtensions;

$export($export.S, 'Reflect', {
  preventExtensions: function preventExtensions(target) {
    anObject(target);
    try {
      if ($preventExtensions) $preventExtensions(target);
      return true;
    } catch (e) {
      return false;
    }
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.reflect.set-prototype-of.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.set-prototype-of.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.14 Reflect.setPrototypeOf(target, proto)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var setProto = __webpack_require__(/*! ./_set-proto */ "./node_modules/core-js/modules/_set-proto.js");

if (setProto) $export($export.S, 'Reflect', {
  setPrototypeOf: function setPrototypeOf(target, proto) {
    setProto.check(target, proto);
    try {
      setProto.set(target, proto);
      return true;
    } catch (e) {
      return false;
    }
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.reflect.set.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.set.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
var gOPD = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js");
var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/modules/_object-gpo.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");

function set(target, propertyKey, V /* , receiver */) {
  var receiver = arguments.length < 4 ? target : arguments[3];
  var ownDesc = gOPD.f(anObject(target), propertyKey);
  var existingDescriptor, proto;
  if (!ownDesc) {
    if (isObject(proto = getPrototypeOf(target))) {
      return set(proto, propertyKey, V, receiver);
    }
    ownDesc = createDesc(0);
  }
  if (has(ownDesc, 'value')) {
    if (ownDesc.writable === false || !isObject(receiver)) return false;
    if (existingDescriptor = gOPD.f(receiver, propertyKey)) {
      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;
      existingDescriptor.value = V;
      dP.f(receiver, propertyKey, existingDescriptor);
    } else dP.f(receiver, propertyKey, createDesc(0, V));
    return true;
  }
  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
}

$export($export.S, 'Reflect', { set: set });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.regexp.constructor.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.constructor.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var inheritIfRequired = __webpack_require__(/*! ./_inherit-if-required */ "./node_modules/core-js/modules/_inherit-if-required.js");
var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
var gOPN = __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/modules/_object-gopn.js").f;
var isRegExp = __webpack_require__(/*! ./_is-regexp */ "./node_modules/core-js/modules/_is-regexp.js");
var $flags = __webpack_require__(/*! ./_flags */ "./node_modules/core-js/modules/_flags.js");
var $RegExp = global.RegExp;
var Base = $RegExp;
var proto = $RegExp.prototype;
var re1 = /a/g;
var re2 = /a/g;
// "new" creates a new object, old webkit buggy here
var CORRECT_NEW = new $RegExp(re1) !== re1;

if (__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") && (!CORRECT_NEW || __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  re2[__webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('match')] = false;
  // RegExp constructor can alter flags and IsRegExp works correct with @@match
  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
}))) {
  $RegExp = function RegExp(p, f) {
    var tiRE = this instanceof $RegExp;
    var piRE = isRegExp(p);
    var fiU = f === undefined;
    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
      : inheritIfRequired(CORRECT_NEW
        ? new Base(piRE && !fiU ? p.source : p, f)
        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
      , tiRE ? this : proto, $RegExp);
  };
  var proxy = function (key) {
    key in $RegExp || dP($RegExp, key, {
      configurable: true,
      get: function () { return Base[key]; },
      set: function (it) { Base[key] = it; }
    });
  };
  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);
  proto.constructor = $RegExp;
  $RegExp.prototype = proto;
  __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js")(global, 'RegExp', $RegExp);
}

__webpack_require__(/*! ./_set-species */ "./node_modules/core-js/modules/_set-species.js")('RegExp');


/***/ }),

/***/ "./node_modules/core-js/modules/es6.regexp.exec.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.exec.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var regexpExec = __webpack_require__(/*! ./_regexp-exec */ "./node_modules/core-js/modules/_regexp-exec.js");
__webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js")({
  target: 'RegExp',
  proto: true,
  forced: regexpExec !== /./.exec
}, {
  exec: regexpExec
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.regexp.flags.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.flags.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 21.2.5.3 get RegExp.prototype.flags()
if (__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") && /./g.flags != 'g') __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f(RegExp.prototype, 'flags', {
  configurable: true,
  get: __webpack_require__(/*! ./_flags */ "./node_modules/core-js/modules/_flags.js")
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.regexp.match.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.match.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var advanceStringIndex = __webpack_require__(/*! ./_advance-string-index */ "./node_modules/core-js/modules/_advance-string-index.js");
var regExpExec = __webpack_require__(/*! ./_regexp-exec-abstract */ "./node_modules/core-js/modules/_regexp-exec-abstract.js");

// @@match logic
__webpack_require__(/*! ./_fix-re-wks */ "./node_modules/core-js/modules/_fix-re-wks.js")('match', 1, function (defined, MATCH, $match, maybeCallNative) {
  return [
    // `String.prototype.match` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.match
    function match(regexp) {
      var O = defined(this);
      var fn = regexp == undefined ? undefined : regexp[MATCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
    },
    // `RegExp.prototype[@@match]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match
    function (regexp) {
      var res = maybeCallNative($match, regexp, this);
      if (res.done) return res.value;
      var rx = anObject(regexp);
      var S = String(this);
      if (!rx.global) return regExpExec(rx, S);
      var fullUnicode = rx.unicode;
      rx.lastIndex = 0;
      var A = [];
      var n = 0;
      var result;
      while ((result = regExpExec(rx, S)) !== null) {
        var matchStr = String(result[0]);
        A[n] = matchStr;
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
        n++;
      }
      return n === 0 ? null : A;
    }
  ];
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.regexp.replace.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.replace.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
var advanceStringIndex = __webpack_require__(/*! ./_advance-string-index */ "./node_modules/core-js/modules/_advance-string-index.js");
var regExpExec = __webpack_require__(/*! ./_regexp-exec-abstract */ "./node_modules/core-js/modules/_regexp-exec-abstract.js");
var max = Math.max;
var min = Math.min;
var floor = Math.floor;
var SUBSTITUTION_SYMBOLS = /\$([$&`']|\d\d?|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&`']|\d\d?)/g;

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// @@replace logic
__webpack_require__(/*! ./_fix-re-wks */ "./node_modules/core-js/modules/_fix-re-wks.js")('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {
  return [
    // `String.prototype.replace` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = defined(this);
      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
      return fn !== undefined
        ? fn.call(searchValue, O, replaceValue)
        : $replace.call(String(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
    function (regexp, replaceValue) {
      var res = maybeCallNative($replace, regexp, this, replaceValue);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var functionalReplace = typeof replaceValue === 'function';
      if (!functionalReplace) replaceValue = String(replaceValue);
      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regExpExec(rx, S);
        if (result === null) break;
        results.push(result);
        if (!global) break;
        var matchStr = String(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      }
      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];
        var matched = String(result[0]);
        var position = max(min(toInteger(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = [matched].concat(captures, position, S);
          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
          var replacement = String(replaceValue.apply(undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + S.slice(nextSourcePosition);
    }
  ];

    // https://tc39.github.io/ecma262/#sec-getsubstitution
  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {
    var tailPos = position + matched.length;
    var m = captures.length;
    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
    if (namedCaptures !== undefined) {
      namedCaptures = toObject(namedCaptures);
      symbols = SUBSTITUTION_SYMBOLS;
    }
    return $replace.call(replacement, symbols, function (match, ch) {
      var capture;
      switch (ch.charAt(0)) {
        case '$': return '$';
        case '&': return matched;
        case '`': return str.slice(0, position);
        case "'": return str.slice(tailPos);
        case '<':
          capture = namedCaptures[ch.slice(1, -1)];
          break;
        default: // \d\d?
          var n = +ch;
          if (n === 0) return match;
          if (n > m) {
            var f = floor(n / 10);
            if (f === 0) return match;
            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
            return match;
          }
          capture = captures[n - 1];
      }
      return capture === undefined ? '' : capture;
    });
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.regexp.search.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.search.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var sameValue = __webpack_require__(/*! ./_same-value */ "./node_modules/core-js/modules/_same-value.js");
var regExpExec = __webpack_require__(/*! ./_regexp-exec-abstract */ "./node_modules/core-js/modules/_regexp-exec-abstract.js");

// @@search logic
__webpack_require__(/*! ./_fix-re-wks */ "./node_modules/core-js/modules/_fix-re-wks.js")('search', 1, function (defined, SEARCH, $search, maybeCallNative) {
  return [
    // `String.prototype.search` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.search
    function search(regexp) {
      var O = defined(this);
      var fn = regexp == undefined ? undefined : regexp[SEARCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
    },
    // `RegExp.prototype[@@search]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search
    function (regexp) {
      var res = maybeCallNative($search, regexp, this);
      if (res.done) return res.value;
      var rx = anObject(regexp);
      var S = String(this);
      var previousLastIndex = rx.lastIndex;
      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;
      var result = regExpExec(rx, S);
      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;
      return result === null ? -1 : result.index;
    }
  ];
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.regexp.split.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.split.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isRegExp = __webpack_require__(/*! ./_is-regexp */ "./node_modules/core-js/modules/_is-regexp.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "./node_modules/core-js/modules/_species-constructor.js");
var advanceStringIndex = __webpack_require__(/*! ./_advance-string-index */ "./node_modules/core-js/modules/_advance-string-index.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var callRegExpExec = __webpack_require__(/*! ./_regexp-exec-abstract */ "./node_modules/core-js/modules/_regexp-exec-abstract.js");
var regexpExec = __webpack_require__(/*! ./_regexp-exec */ "./node_modules/core-js/modules/_regexp-exec.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
var $min = Math.min;
var $push = [].push;
var $SPLIT = 'split';
var LENGTH = 'length';
var LAST_INDEX = 'lastIndex';
var MAX_UINT32 = 0xffffffff;

// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError
var SUPPORTS_Y = !fails(function () { RegExp(MAX_UINT32, 'y'); });

// @@split logic
__webpack_require__(/*! ./_fix-re-wks */ "./node_modules/core-js/modules/_fix-re-wks.js")('split', 2, function (defined, SPLIT, $split, maybeCallNative) {
  var internalSplit;
  if (
    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
    ''[$SPLIT](/.?/)[LENGTH]
  ) {
    // based on es5-shim implementation, need to rework it
    internalSplit = function (separator, limit) {
      var string = String(this);
      if (separator === undefined && limit === 0) return [];
      // If `separator` is not a regex, use native split
      if (!isRegExp(separator)) return $split.call(string, separator, limit);
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') +
                  (separator.multiline ? 'm' : '') +
                  (separator.unicode ? 'u' : '') +
                  (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0;
      // Make `global` and avoid `lastIndex` issues by working with a copy
      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var match, lastIndex, lastLength;
      while (match = regexpExec.call(separatorCopy, string)) {
        lastIndex = separatorCopy[LAST_INDEX];
        if (lastIndex > lastLastIndex) {
          output.push(string.slice(lastLastIndex, match.index));
          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));
          lastLength = match[0][LENGTH];
          lastLastIndex = lastIndex;
          if (output[LENGTH] >= splitLimit) break;
        }
        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
      }
      if (lastLastIndex === string[LENGTH]) {
        if (lastLength || !separatorCopy.test('')) output.push('');
      } else output.push(string.slice(lastLastIndex));
      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
    };
  // Chakra, V8
  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
    internalSplit = function (separator, limit) {
      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);
    };
  } else {
    internalSplit = $split;
  }

  return [
    // `String.prototype.split` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.split
    function split(separator, limit) {
      var O = defined(this);
      var splitter = separator == undefined ? undefined : separator[SPLIT];
      return splitter !== undefined
        ? splitter.call(separator, O, limit)
        : internalSplit.call(String(O), separator, limit);
    },
    // `RegExp.prototype[@@split]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
    //
    // NOTE: This cannot be properly polyfilled in engines that don't support
    // the 'y' flag.
    function (regexp, limit) {
      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var C = speciesConstructor(rx, RegExp);

      var unicodeMatching = rx.unicode;
      var flags = (rx.ignoreCase ? 'i' : '') +
                  (rx.multiline ? 'm' : '') +
                  (rx.unicode ? 'u' : '') +
                  (SUPPORTS_Y ? 'y' : 'g');

      // ^(? + rx + ) is needed, in combination with some S slicing, to
      // simulate the 'y' flag.
      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
      var p = 0;
      var q = 0;
      var A = [];
      while (q < S.length) {
        splitter.lastIndex = SUPPORTS_Y ? q : 0;
        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));
        var e;
        if (
          z === null ||
          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p
        ) {
          q = advanceStringIndex(S, q, unicodeMatching);
        } else {
          A.push(S.slice(p, q));
          if (A.length === lim) return A;
          for (var i = 1; i <= z.length - 1; i++) {
            A.push(z[i]);
            if (A.length === lim) return A;
          }
          q = p = e;
        }
      }
      A.push(S.slice(p));
      return A;
    }
  ];
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.regexp.to-string.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.to-string.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

__webpack_require__(/*! ./es6.regexp.flags */ "./node_modules/core-js/modules/es6.regexp.flags.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var $flags = __webpack_require__(/*! ./_flags */ "./node_modules/core-js/modules/_flags.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js");
var TO_STRING = 'toString';
var $toString = /./[TO_STRING];

var define = function (fn) {
  __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js")(RegExp.prototype, TO_STRING, fn, true);
};

// 21.2.5.14 RegExp.prototype.toString()
if (__webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {
  define(function toString() {
    var R = anObject(this);
    return '/'.concat(R.source, '/',
      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
  });
// FF44- RegExp#toString has a wrong name
} else if ($toString.name != TO_STRING) {
  define(function toString() {
    return $toString.call(this);
  });
}


/***/ }),

/***/ "./node_modules/core-js/modules/es6.set.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/es6.set.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var strong = __webpack_require__(/*! ./_collection-strong */ "./node_modules/core-js/modules/_collection-strong.js");
var validate = __webpack_require__(/*! ./_validate-collection */ "./node_modules/core-js/modules/_validate-collection.js");
var SET = 'Set';

// 23.2 Set Objects
module.exports = __webpack_require__(/*! ./_collection */ "./node_modules/core-js/modules/_collection.js")(SET, function (get) {
  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.2.3.1 Set.prototype.add(value)
  add: function add(value) {
    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);
  }
}, strong);


/***/ }),

/***/ "./node_modules/core-js/modules/es6.string.anchor.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.anchor.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.2 String.prototype.anchor(name)
__webpack_require__(/*! ./_string-html */ "./node_modules/core-js/modules/_string-html.js")('anchor', function (createHTML) {
  return function anchor(name) {
    return createHTML(this, 'a', 'name', name);
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.string.big.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.big.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.3 String.prototype.big()
__webpack_require__(/*! ./_string-html */ "./node_modules/core-js/modules/_string-html.js")('big', function (createHTML) {
  return function big() {
    return createHTML(this, 'big', '', '');
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.string.blink.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.blink.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.4 String.prototype.blink()
__webpack_require__(/*! ./_string-html */ "./node_modules/core-js/modules/_string-html.js")('blink', function (createHTML) {
  return function blink() {
    return createHTML(this, 'blink', '', '');
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.string.bold.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.bold.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.5 String.prototype.bold()
__webpack_require__(/*! ./_string-html */ "./node_modules/core-js/modules/_string-html.js")('bold', function (createHTML) {
  return function bold() {
    return createHTML(this, 'b', '', '');
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.string.code-point-at.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.code-point-at.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $at = __webpack_require__(/*! ./_string-at */ "./node_modules/core-js/modules/_string-at.js")(false);
$export($export.P, 'String', {
  // 21.1.3.3 String.prototype.codePointAt(pos)
  codePointAt: function codePointAt(pos) {
    return $at(this, pos);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.string.ends-with.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.ends-with.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var context = __webpack_require__(/*! ./_string-context */ "./node_modules/core-js/modules/_string-context.js");
var ENDS_WITH = 'endsWith';
var $endsWith = ''[ENDS_WITH];

$export($export.P + $export.F * __webpack_require__(/*! ./_fails-is-regexp */ "./node_modules/core-js/modules/_fails-is-regexp.js")(ENDS_WITH), 'String', {
  endsWith: function endsWith(searchString /* , endPosition = @length */) {
    var that = context(this, searchString, ENDS_WITH);
    var endPosition = arguments.length > 1 ? arguments[1] : undefined;
    var len = toLength(that.length);
    var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);
    var search = String(searchString);
    return $endsWith
      ? $endsWith.call(that, search, end)
      : that.slice(end - search.length, end) === search;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.string.fixed.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.fixed.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.6 String.prototype.fixed()
__webpack_require__(/*! ./_string-html */ "./node_modules/core-js/modules/_string-html.js")('fixed', function (createHTML) {
  return function fixed() {
    return createHTML(this, 'tt', '', '');
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.string.fontcolor.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.fontcolor.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.7 String.prototype.fontcolor(color)
__webpack_require__(/*! ./_string-html */ "./node_modules/core-js/modules/_string-html.js")('fontcolor', function (createHTML) {
  return function fontcolor(color) {
    return createHTML(this, 'font', 'color', color);
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.string.fontsize.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.fontsize.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.8 String.prototype.fontsize(size)
__webpack_require__(/*! ./_string-html */ "./node_modules/core-js/modules/_string-html.js")('fontsize', function (createHTML) {
  return function fontsize(size) {
    return createHTML(this, 'font', 'size', size);
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.string.from-code-point.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.from-code-point.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/modules/_to-absolute-index.js");
var fromCharCode = String.fromCharCode;
var $fromCodePoint = String.fromCodePoint;

// length should be 1, old FF problem
$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
  // 21.1.2.2 String.fromCodePoint(...codePoints)
  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars
    var res = [];
    var aLen = arguments.length;
    var i = 0;
    var code;
    while (aLen > i) {
      code = +arguments[i++];
      if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');
      res.push(code < 0x10000
        ? fromCharCode(code)
        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
      );
    } return res.join('');
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.string.includes.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.includes.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 21.1.3.7 String.prototype.includes(searchString, position = 0)

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var context = __webpack_require__(/*! ./_string-context */ "./node_modules/core-js/modules/_string-context.js");
var INCLUDES = 'includes';

$export($export.P + $export.F * __webpack_require__(/*! ./_fails-is-regexp */ "./node_modules/core-js/modules/_fails-is-regexp.js")(INCLUDES), 'String', {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~context(this, searchString, INCLUDES)
      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.string.italics.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.italics.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.9 String.prototype.italics()
__webpack_require__(/*! ./_string-html */ "./node_modules/core-js/modules/_string-html.js")('italics', function (createHTML) {
  return function italics() {
    return createHTML(this, 'i', '', '');
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.string.iterator.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.iterator.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__(/*! ./_string-at */ "./node_modules/core-js/modules/_string-at.js")(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(/*! ./_iter-define */ "./node_modules/core-js/modules/_iter-define.js")(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.string.link.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.link.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.10 String.prototype.link(url)
__webpack_require__(/*! ./_string-html */ "./node_modules/core-js/modules/_string-html.js")('link', function (createHTML) {
  return function link(url) {
    return createHTML(this, 'a', 'href', url);
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.string.raw.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.raw.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");

$export($export.S, 'String', {
  // 21.1.2.4 String.raw(callSite, ...substitutions)
  raw: function raw(callSite) {
    var tpl = toIObject(callSite.raw);
    var len = toLength(tpl.length);
    var aLen = arguments.length;
    var res = [];
    var i = 0;
    while (len > i) {
      res.push(String(tpl[i++]));
      if (i < aLen) res.push(String(arguments[i]));
    } return res.join('');
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.string.repeat.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.repeat.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

$export($export.P, 'String', {
  // 21.1.3.13 String.prototype.repeat(count)
  repeat: __webpack_require__(/*! ./_string-repeat */ "./node_modules/core-js/modules/_string-repeat.js")
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.string.small.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.small.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.11 String.prototype.small()
__webpack_require__(/*! ./_string-html */ "./node_modules/core-js/modules/_string-html.js")('small', function (createHTML) {
  return function small() {
    return createHTML(this, 'small', '', '');
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.string.starts-with.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.starts-with.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 21.1.3.18 String.prototype.startsWith(searchString [, position ])

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var context = __webpack_require__(/*! ./_string-context */ "./node_modules/core-js/modules/_string-context.js");
var STARTS_WITH = 'startsWith';
var $startsWith = ''[STARTS_WITH];

$export($export.P + $export.F * __webpack_require__(/*! ./_fails-is-regexp */ "./node_modules/core-js/modules/_fails-is-regexp.js")(STARTS_WITH), 'String', {
  startsWith: function startsWith(searchString /* , position = 0 */) {
    var that = context(this, searchString, STARTS_WITH);
    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = String(searchString);
    return $startsWith
      ? $startsWith.call(that, search, index)
      : that.slice(index, index + search.length) === search;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.string.strike.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.strike.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.12 String.prototype.strike()
__webpack_require__(/*! ./_string-html */ "./node_modules/core-js/modules/_string-html.js")('strike', function (createHTML) {
  return function strike() {
    return createHTML(this, 'strike', '', '');
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.string.sub.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.sub.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.13 String.prototype.sub()
__webpack_require__(/*! ./_string-html */ "./node_modules/core-js/modules/_string-html.js")('sub', function (createHTML) {
  return function sub() {
    return createHTML(this, 'sub', '', '');
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.string.sup.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.sup.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.14 String.prototype.sup()
__webpack_require__(/*! ./_string-html */ "./node_modules/core-js/modules/_string-html.js")('sup', function (createHTML) {
  return function sup() {
    return createHTML(this, 'sup', '', '');
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.string.trim.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.trim.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 21.1.3.25 String.prototype.trim()
__webpack_require__(/*! ./_string-trim */ "./node_modules/core-js/modules/_string-trim.js")('trim', function ($trim) {
  return function trim() {
    return $trim(this, 3);
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.symbol.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/es6.symbol.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
var META = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/modules/_meta.js").KEY;
var $fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
var shared = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/modules/_shared.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/modules/_set-to-string-tag.js");
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js");
var wks = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js");
var wksExt = __webpack_require__(/*! ./_wks-ext */ "./node_modules/core-js/modules/_wks-ext.js");
var wksDefine = __webpack_require__(/*! ./_wks-define */ "./node_modules/core-js/modules/_wks-define.js");
var enumKeys = __webpack_require__(/*! ./_enum-keys */ "./node_modules/core-js/modules/_enum-keys.js");
var isArray = __webpack_require__(/*! ./_is-array */ "./node_modules/core-js/modules/_is-array.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");
var _create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/modules/_object-create.js");
var gOPNExt = __webpack_require__(/*! ./_object-gopn-ext */ "./node_modules/core-js/modules/_object-gopn-ext.js");
var $GOPD = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js");
var $GOPS = __webpack_require__(/*! ./_object-gops */ "./node_modules/core-js/modules/_object-gops.js");
var $DP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
var $keys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/modules/_object-gopn.js").f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/modules/_object-pie.js").f = $propertyIsEnumerable;
  $GOPS.f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js")) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
var FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });

$export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return $GOPS.f(toObject(it));
  }
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js")($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);


/***/ }),

/***/ "./node_modules/core-js/modules/es6.typed.array-buffer.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.array-buffer.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $typed = __webpack_require__(/*! ./_typed */ "./node_modules/core-js/modules/_typed.js");
var buffer = __webpack_require__(/*! ./_typed-buffer */ "./node_modules/core-js/modules/_typed-buffer.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/modules/_to-absolute-index.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var ArrayBuffer = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").ArrayBuffer;
var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "./node_modules/core-js/modules/_species-constructor.js");
var $ArrayBuffer = buffer.ArrayBuffer;
var $DataView = buffer.DataView;
var $isView = $typed.ABV && ArrayBuffer.isView;
var $slice = $ArrayBuffer.prototype.slice;
var VIEW = $typed.VIEW;
var ARRAY_BUFFER = 'ArrayBuffer';

$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), { ArrayBuffer: $ArrayBuffer });

$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
  // 24.1.3.1 ArrayBuffer.isView(arg)
  isView: function isView(it) {
    return $isView && $isView(it) || isObject(it) && VIEW in it;
  }
});

$export($export.P + $export.U + $export.F * __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
}), ARRAY_BUFFER, {
  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
  slice: function slice(start, end) {
    if ($slice !== undefined && end === undefined) return $slice.call(anObject(this), start); // FF fix
    var len = anObject(this).byteLength;
    var first = toAbsoluteIndex(start, len);
    var fin = toAbsoluteIndex(end === undefined ? len : end, len);
    var result = new (speciesConstructor(this, $ArrayBuffer))(toLength(fin - first));
    var viewS = new $DataView(this);
    var viewT = new $DataView(result);
    var index = 0;
    while (first < fin) {
      viewT.setUint8(index++, viewS.getUint8(first++));
    } return result;
  }
});

__webpack_require__(/*! ./_set-species */ "./node_modules/core-js/modules/_set-species.js")(ARRAY_BUFFER);


/***/ }),

/***/ "./node_modules/core-js/modules/es6.typed.data-view.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.data-view.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
$export($export.G + $export.W + $export.F * !__webpack_require__(/*! ./_typed */ "./node_modules/core-js/modules/_typed.js").ABV, {
  DataView: __webpack_require__(/*! ./_typed-buffer */ "./node_modules/core-js/modules/_typed-buffer.js").DataView
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.typed.float32-array.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.float32-array.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./_typed-array */ "./node_modules/core-js/modules/_typed-array.js")('Float32', 4, function (init) {
  return function Float32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.typed.float64-array.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.float64-array.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./_typed-array */ "./node_modules/core-js/modules/_typed-array.js")('Float64', 8, function (init) {
  return function Float64Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.typed.int16-array.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.int16-array.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./_typed-array */ "./node_modules/core-js/modules/_typed-array.js")('Int16', 2, function (init) {
  return function Int16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.typed.int32-array.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.int32-array.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./_typed-array */ "./node_modules/core-js/modules/_typed-array.js")('Int32', 4, function (init) {
  return function Int32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.typed.int8-array.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.int8-array.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./_typed-array */ "./node_modules/core-js/modules/_typed-array.js")('Int8', 1, function (init) {
  return function Int8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.typed.uint16-array.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.uint16-array.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./_typed-array */ "./node_modules/core-js/modules/_typed-array.js")('Uint16', 2, function (init) {
  return function Uint16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.typed.uint32-array.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.uint32-array.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./_typed-array */ "./node_modules/core-js/modules/_typed-array.js")('Uint32', 4, function (init) {
  return function Uint32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.typed.uint8-array.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.uint8-array.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./_typed-array */ "./node_modules/core-js/modules/_typed-array.js")('Uint8', 1, function (init) {
  return function Uint8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.typed.uint8-clamped-array.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.uint8-clamped-array.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./_typed-array */ "./node_modules/core-js/modules/_typed-array.js")('Uint8', 1, function (init) {
  return function Uint8ClampedArray(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
}, true);


/***/ }),

/***/ "./node_modules/core-js/modules/es6.weak-map.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.weak-map.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var each = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/modules/_array-methods.js")(0);
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
var meta = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/modules/_meta.js");
var assign = __webpack_require__(/*! ./_object-assign */ "./node_modules/core-js/modules/_object-assign.js");
var weak = __webpack_require__(/*! ./_collection-weak */ "./node_modules/core-js/modules/_collection-weak.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var validate = __webpack_require__(/*! ./_validate-collection */ "./node_modules/core-js/modules/_validate-collection.js");
var NATIVE_WEAK_MAP = __webpack_require__(/*! ./_validate-collection */ "./node_modules/core-js/modules/_validate-collection.js");
var IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;
var WEAK_MAP = 'WeakMap';
var getWeak = meta.getWeak;
var isExtensible = Object.isExtensible;
var uncaughtFrozenStore = weak.ufstore;
var InternalMap;

var wrapper = function (get) {
  return function WeakMap() {
    return get(this, arguments.length > 0 ? arguments[0] : undefined);
  };
};

var methods = {
  // 23.3.3.3 WeakMap.prototype.get(key)
  get: function get(key) {
    if (isObject(key)) {
      var data = getWeak(key);
      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);
      return data ? data[this._i] : undefined;
    }
  },
  // 23.3.3.5 WeakMap.prototype.set(key, value)
  set: function set(key, value) {
    return weak.def(validate(this, WEAK_MAP), key, value);
  }
};

// 23.3 WeakMap Objects
var $WeakMap = module.exports = __webpack_require__(/*! ./_collection */ "./node_modules/core-js/modules/_collection.js")(WEAK_MAP, wrapper, methods, weak, true, true);

// IE11 WeakMap frozen keys fix
if (NATIVE_WEAK_MAP && IS_IE11) {
  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);
  assign(InternalMap.prototype, methods);
  meta.NEED = true;
  each(['delete', 'has', 'get', 'set'], function (key) {
    var proto = $WeakMap.prototype;
    var method = proto[key];
    redefine(proto, key, function (a, b) {
      // store frozen objects on internal weakmap shim
      if (isObject(a) && !isExtensible(a)) {
        if (!this._f) this._f = new InternalMap();
        var result = this._f[key](a, b);
        return key == 'set' ? this : result;
      // store all the rest on native weakmap
      } return method.call(this, a, b);
    });
  });
}


/***/ }),

/***/ "./node_modules/core-js/modules/es6.weak-set.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.weak-set.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var weak = __webpack_require__(/*! ./_collection-weak */ "./node_modules/core-js/modules/_collection-weak.js");
var validate = __webpack_require__(/*! ./_validate-collection */ "./node_modules/core-js/modules/_validate-collection.js");
var WEAK_SET = 'WeakSet';

// 23.4 WeakSet Objects
__webpack_require__(/*! ./_collection */ "./node_modules/core-js/modules/_collection.js")(WEAK_SET, function (get) {
  return function WeakSet() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.4.3.1 WeakSet.prototype.add(value)
  add: function add(value) {
    return weak.def(validate(this, WEAK_SET), value, true);
  }
}, weak, false, true);


/***/ }),

/***/ "./node_modules/core-js/modules/es7.array.flat-map.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.array.flat-map.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var flattenIntoArray = __webpack_require__(/*! ./_flatten-into-array */ "./node_modules/core-js/modules/_flatten-into-array.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
var arraySpeciesCreate = __webpack_require__(/*! ./_array-species-create */ "./node_modules/core-js/modules/_array-species-create.js");

$export($export.P, 'Array', {
  flatMap: function flatMap(callbackfn /* , thisArg */) {
    var O = toObject(this);
    var sourceLen, A;
    aFunction(callbackfn);
    sourceLen = toLength(O.length);
    A = arraySpeciesCreate(O, 0);
    flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);
    return A;
  }
});

__webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/modules/_add-to-unscopables.js")('flatMap');


/***/ }),

/***/ "./node_modules/core-js/modules/es7.array.includes.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.array.includes.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/Array.prototype.includes
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $includes = __webpack_require__(/*! ./_array-includes */ "./node_modules/core-js/modules/_array-includes.js")(true);

$export($export.P, 'Array', {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

__webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/modules/_add-to-unscopables.js")('includes');


/***/ }),

/***/ "./node_modules/core-js/modules/es7.object.entries.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.object.entries.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-values-entries
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $entries = __webpack_require__(/*! ./_object-to-array */ "./node_modules/core-js/modules/_object-to-array.js")(true);

$export($export.S, 'Object', {
  entries: function entries(it) {
    return $entries(it);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es7.object.get-own-property-descriptors.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.object.get-own-property-descriptors.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-getownpropertydescriptors
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var ownKeys = __webpack_require__(/*! ./_own-keys */ "./node_modules/core-js/modules/_own-keys.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
var gOPD = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js");
var createProperty = __webpack_require__(/*! ./_create-property */ "./node_modules/core-js/modules/_create-property.js");

$export($export.S, 'Object', {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
    var O = toIObject(object);
    var getDesc = gOPD.f;
    var keys = ownKeys(O);
    var result = {};
    var i = 0;
    var key, desc;
    while (keys.length > i) {
      desc = getDesc(O, key = keys[i++]);
      if (desc !== undefined) createProperty(result, key, desc);
    }
    return result;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es7.object.values.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es7.object.values.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-values-entries
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $values = __webpack_require__(/*! ./_object-to-array */ "./node_modules/core-js/modules/_object-to-array.js")(false);

$export($export.S, 'Object', {
  values: function values(it) {
    return $values(it);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es7.promise.finally.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.promise.finally.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// https://github.com/tc39/proposal-promise-finally

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "./node_modules/core-js/modules/_species-constructor.js");
var promiseResolve = __webpack_require__(/*! ./_promise-resolve */ "./node_modules/core-js/modules/_promise-resolve.js");

$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
  var C = speciesConstructor(this, core.Promise || global.Promise);
  var isFunction = typeof onFinally == 'function';
  return this.then(
    isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () { return x; });
    } : onFinally,
    isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () { throw e; });
    } : onFinally
  );
} });


/***/ }),

/***/ "./node_modules/core-js/modules/es7.string.pad-end.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.string.pad-end.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/proposal-string-pad-start-end
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $pad = __webpack_require__(/*! ./_string-pad */ "./node_modules/core-js/modules/_string-pad.js");
var userAgent = __webpack_require__(/*! ./_user-agent */ "./node_modules/core-js/modules/_user-agent.js");

// https://github.com/zloirock/core-js/issues/280
var WEBKIT_BUG = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(userAgent);

$export($export.P + $export.F * WEBKIT_BUG, 'String', {
  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {
    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es7.string.pad-start.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.string.pad-start.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/proposal-string-pad-start-end
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $pad = __webpack_require__(/*! ./_string-pad */ "./node_modules/core-js/modules/_string-pad.js");
var userAgent = __webpack_require__(/*! ./_user-agent */ "./node_modules/core-js/modules/_user-agent.js");

// https://github.com/zloirock/core-js/issues/280
var WEBKIT_BUG = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(userAgent);

$export($export.P + $export.F * WEBKIT_BUG, 'String', {
  padStart: function padStart(maxLength /* , fillString = ' ' */) {
    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es7.string.trim-left.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.string.trim-left.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
__webpack_require__(/*! ./_string-trim */ "./node_modules/core-js/modules/_string-trim.js")('trimLeft', function ($trim) {
  return function trimLeft() {
    return $trim(this, 1);
  };
}, 'trimStart');


/***/ }),

/***/ "./node_modules/core-js/modules/es7.string.trim-right.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.string.trim-right.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
__webpack_require__(/*! ./_string-trim */ "./node_modules/core-js/modules/_string-trim.js")('trimRight', function ($trim) {
  return function trimRight() {
    return $trim(this, 2);
  };
}, 'trimEnd');


/***/ }),

/***/ "./node_modules/core-js/modules/es7.symbol.async-iterator.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.symbol.async-iterator.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./_wks-define */ "./node_modules/core-js/modules/_wks-define.js")('asyncIterator');


/***/ }),

/***/ "./node_modules/core-js/modules/web.dom.iterable.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/web.dom.iterable.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $iterators = __webpack_require__(/*! ./es6.array.iterator */ "./node_modules/core-js/modules/es6.array.iterator.js");
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/modules/_iterators.js");
var wks = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js");
var ITERATOR = wks('iterator');
var TO_STRING_TAG = wks('toStringTag');
var ArrayValues = Iterators.Array;

var DOMIterables = {
  CSSRuleList: true, // TODO: Not spec compliant, should be false.
  CSSStyleDeclaration: false,
  CSSValueList: false,
  ClientRectList: false,
  DOMRectList: false,
  DOMStringList: false,
  DOMTokenList: true,
  DataTransferItemList: false,
  FileList: false,
  HTMLAllCollection: false,
  HTMLCollection: false,
  HTMLFormElement: false,
  HTMLSelectElement: false,
  MediaList: true, // TODO: Not spec compliant, should be false.
  MimeTypeArray: false,
  NamedNodeMap: false,
  NodeList: true,
  PaintRequestList: false,
  Plugin: false,
  PluginArray: false,
  SVGLengthList: false,
  SVGNumberList: false,
  SVGPathSegList: false,
  SVGPointList: false,
  SVGStringList: false,
  SVGTransformList: false,
  SourceBufferList: false,
  StyleSheetList: true, // TODO: Not spec compliant, should be false.
  TextTrackCueList: false,
  TextTrackList: false,
  TouchList: false
};

for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
  var NAME = collections[i];
  var explicit = DOMIterables[NAME];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  var key;
  if (proto) {
    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = ArrayValues;
    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
  }
}


/***/ }),

/***/ "./node_modules/core-js/modules/web.immediate.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/web.immediate.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $task = __webpack_require__(/*! ./_task */ "./node_modules/core-js/modules/_task.js");
$export($export.G + $export.B, {
  setImmediate: $task.set,
  clearImmediate: $task.clear
});


/***/ }),

/***/ "./node_modules/core-js/modules/web.timers.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/web.timers.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// ie9- setTimeout & setInterval additional parameters fix
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var userAgent = __webpack_require__(/*! ./_user-agent */ "./node_modules/core-js/modules/_user-agent.js");
var slice = [].slice;
var MSIE = /MSIE .\./.test(userAgent); // <- dirty ie9- check
var wrap = function (set) {
  return function (fn, time /* , ...args */) {
    var boundArgs = arguments.length > 2;
    var args = boundArgs ? slice.call(arguments, 2) : false;
    return set(boundArgs ? function () {
      // eslint-disable-next-line no-new-func
      (typeof fn == 'function' ? fn : Function(fn)).apply(this, args);
    } : fn, time);
  };
};
$export($export.G + $export.B + $export.F * MSIE, {
  setTimeout: wrap(global.setTimeout),
  setInterval: wrap(global.setInterval)
});


/***/ }),

/***/ "./node_modules/core-js/web/index.js":
/*!*******************************************!*\
  !*** ./node_modules/core-js/web/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../modules/web.timers */ "./node_modules/core-js/modules/web.timers.js");
__webpack_require__(/*! ../modules/web.immediate */ "./node_modules/core-js/modules/web.immediate.js");
__webpack_require__(/*! ../modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");
module.exports = __webpack_require__(/*! ../modules/_core */ "./node_modules/core-js/modules/_core.js");


/***/ }),

/***/ "./node_modules/expose-loader/index.js?IntlMessageFormat!./node_modules/intl-messageformat/index.js-exposed":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/expose-loader?IntlMessageFormat!./node_modules/intl-messageformat/index.js-exposed ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {module.exports = global["IntlMessageFormat"] = __webpack_require__(/*! -!./node_modules/strip-sourcemap-loader!./index.js */ "./node_modules/strip-sourcemap-loader/index.js!./node_modules/intl-messageformat/index.js");
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/intl-messageformat-parser/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/intl-messageformat-parser/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports = module.exports = __webpack_require__(/*! ./lib/parser */ "./node_modules/intl-messageformat-parser/lib/parser.js")['default'];
exports['default'] = exports;


/***/ }),

/***/ "./node_modules/intl-messageformat-parser/lib/parser.js":
/*!**************************************************************!*\
  !*** ./node_modules/intl-messageformat-parser/lib/parser.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports["default"] = (function() {
  /*
   * Generated by PEG.js 0.8.0.
   *
   * http://pegjs.majda.cz/
   */

  function peg$subclass(child, parent) {
    function ctor() { this.constructor = child; }
    ctor.prototype = parent.prototype;
    child.prototype = new ctor();
  }

  function SyntaxError(message, expected, found, offset, line, column) {
    this.message  = message;
    this.expected = expected;
    this.found    = found;
    this.offset   = offset;
    this.line     = line;
    this.column   = column;

    this.name     = "SyntaxError";
  }

  peg$subclass(SyntaxError, Error);

  function parse(input) {
    var options = arguments.length > 1 ? arguments[1] : {},

        peg$FAILED = {},

        peg$startRuleFunctions = { start: peg$parsestart },
        peg$startRuleFunction  = peg$parsestart,

        peg$c0 = [],
        peg$c1 = function(elements) {
                return {
                    type    : 'messageFormatPattern',
                    elements: elements
                };
            },
        peg$c2 = peg$FAILED,
        peg$c3 = function(text) {
                var string = '',
                    i, j, outerLen, inner, innerLen;

                for (i = 0, outerLen = text.length; i < outerLen; i += 1) {
                    inner = text[i];

                    for (j = 0, innerLen = inner.length; j < innerLen; j += 1) {
                        string += inner[j];
                    }
                }

                return string;
            },
        peg$c4 = function(messageText) {
                return {
                    type : 'messageTextElement',
                    value: messageText
                };
            },
        peg$c5 = /^[^ \t\n\r,.+={}#]/,
        peg$c6 = { type: "class", value: "[^ \\t\\n\\r,.+={}#]", description: "[^ \\t\\n\\r,.+={}#]" },
        peg$c7 = "{",
        peg$c8 = { type: "literal", value: "{", description: "\"{\"" },
        peg$c9 = null,
        peg$c10 = ",",
        peg$c11 = { type: "literal", value: ",", description: "\",\"" },
        peg$c12 = "}",
        peg$c13 = { type: "literal", value: "}", description: "\"}\"" },
        peg$c14 = function(id, format) {
                return {
                    type  : 'argumentElement',
                    id    : id,
                    format: format && format[2]
                };
            },
        peg$c15 = "number",
        peg$c16 = { type: "literal", value: "number", description: "\"number\"" },
        peg$c17 = "date",
        peg$c18 = { type: "literal", value: "date", description: "\"date\"" },
        peg$c19 = "time",
        peg$c20 = { type: "literal", value: "time", description: "\"time\"" },
        peg$c21 = function(type, style) {
                return {
                    type : type + 'Format',
                    style: style && style[2]
                };
            },
        peg$c22 = "plural",
        peg$c23 = { type: "literal", value: "plural", description: "\"plural\"" },
        peg$c24 = function(pluralStyle) {
                return {
                    type   : pluralStyle.type,
                    ordinal: false,
                    offset : pluralStyle.offset || 0,
                    options: pluralStyle.options
                };
            },
        peg$c25 = "selectordinal",
        peg$c26 = { type: "literal", value: "selectordinal", description: "\"selectordinal\"" },
        peg$c27 = function(pluralStyle) {
                return {
                    type   : pluralStyle.type,
                    ordinal: true,
                    offset : pluralStyle.offset || 0,
                    options: pluralStyle.options
                }
            },
        peg$c28 = "select",
        peg$c29 = { type: "literal", value: "select", description: "\"select\"" },
        peg$c30 = function(options) {
                return {
                    type   : 'selectFormat',
                    options: options
                };
            },
        peg$c31 = "=",
        peg$c32 = { type: "literal", value: "=", description: "\"=\"" },
        peg$c33 = function(selector, pattern) {
                return {
                    type    : 'optionalFormatPattern',
                    selector: selector,
                    value   : pattern
                };
            },
        peg$c34 = "offset:",
        peg$c35 = { type: "literal", value: "offset:", description: "\"offset:\"" },
        peg$c36 = function(number) {
                return number;
            },
        peg$c37 = function(offset, options) {
                return {
                    type   : 'pluralFormat',
                    offset : offset,
                    options: options
                };
            },
        peg$c38 = { type: "other", description: "whitespace" },
        peg$c39 = /^[ \t\n\r]/,
        peg$c40 = { type: "class", value: "[ \\t\\n\\r]", description: "[ \\t\\n\\r]" },
        peg$c41 = { type: "other", description: "optionalWhitespace" },
        peg$c42 = /^[0-9]/,
        peg$c43 = { type: "class", value: "[0-9]", description: "[0-9]" },
        peg$c44 = /^[0-9a-f]/i,
        peg$c45 = { type: "class", value: "[0-9a-f]i", description: "[0-9a-f]i" },
        peg$c46 = "0",
        peg$c47 = { type: "literal", value: "0", description: "\"0\"" },
        peg$c48 = /^[1-9]/,
        peg$c49 = { type: "class", value: "[1-9]", description: "[1-9]" },
        peg$c50 = function(digits) {
            return parseInt(digits, 10);
        },
        peg$c51 = /^[^{}\\\0-\x1F \t\n\r]/,
        peg$c52 = { type: "class", value: "[^{}\\\\\\0-\\x1F \\t\\n\\r]", description: "[^{}\\\\\\0-\\x1F \\t\\n\\r]" },
        peg$c53 = "\\\\",
        peg$c54 = { type: "literal", value: "\\\\", description: "\"\\\\\\\\\"" },
        peg$c55 = function() { return '\\'; },
        peg$c56 = "\\#",
        peg$c57 = { type: "literal", value: "\\#", description: "\"\\\\#\"" },
        peg$c58 = function() { return '\\#'; },
        peg$c59 = "\\{",
        peg$c60 = { type: "literal", value: "\\{", description: "\"\\\\{\"" },
        peg$c61 = function() { return '\u007B'; },
        peg$c62 = "\\}",
        peg$c63 = { type: "literal", value: "\\}", description: "\"\\\\}\"" },
        peg$c64 = function() { return '\u007D'; },
        peg$c65 = "\\u",
        peg$c66 = { type: "literal", value: "\\u", description: "\"\\\\u\"" },
        peg$c67 = function(digits) {
                return String.fromCharCode(parseInt(digits, 16));
            },
        peg$c68 = function(chars) { return chars.join(''); },

        peg$currPos          = 0,
        peg$reportedPos      = 0,
        peg$cachedPos        = 0,
        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },
        peg$maxFailPos       = 0,
        peg$maxFailExpected  = [],
        peg$silentFails      = 0,

        peg$result;

    if ("startRule" in options) {
      if (!(options.startRule in peg$startRuleFunctions)) {
        throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
      }

      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
    }

    function text() {
      return input.substring(peg$reportedPos, peg$currPos);
    }

    function offset() {
      return peg$reportedPos;
    }

    function line() {
      return peg$computePosDetails(peg$reportedPos).line;
    }

    function column() {
      return peg$computePosDetails(peg$reportedPos).column;
    }

    function expected(description) {
      throw peg$buildException(
        null,
        [{ type: "other", description: description }],
        peg$reportedPos
      );
    }

    function error(message) {
      throw peg$buildException(message, null, peg$reportedPos);
    }

    function peg$computePosDetails(pos) {
      function advance(details, startPos, endPos) {
        var p, ch;

        for (p = startPos; p < endPos; p++) {
          ch = input.charAt(p);
          if (ch === "\n") {
            if (!details.seenCR) { details.line++; }
            details.column = 1;
            details.seenCR = false;
          } else if (ch === "\r" || ch === "\u2028" || ch === "\u2029") {
            details.line++;
            details.column = 1;
            details.seenCR = true;
          } else {
            details.column++;
            details.seenCR = false;
          }
        }
      }

      if (peg$cachedPos !== pos) {
        if (peg$cachedPos > pos) {
          peg$cachedPos = 0;
          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };
        }
        advance(peg$cachedPosDetails, peg$cachedPos, pos);
        peg$cachedPos = pos;
      }

      return peg$cachedPosDetails;
    }

    function peg$fail(expected) {
      if (peg$currPos < peg$maxFailPos) { return; }

      if (peg$currPos > peg$maxFailPos) {
        peg$maxFailPos = peg$currPos;
        peg$maxFailExpected = [];
      }

      peg$maxFailExpected.push(expected);
    }

    function peg$buildException(message, expected, pos) {
      function cleanupExpected(expected) {
        var i = 1;

        expected.sort(function(a, b) {
          if (a.description < b.description) {
            return -1;
          } else if (a.description > b.description) {
            return 1;
          } else {
            return 0;
          }
        });

        while (i < expected.length) {
          if (expected[i - 1] === expected[i]) {
            expected.splice(i, 1);
          } else {
            i++;
          }
        }
      }

      function buildMessage(expected, found) {
        function stringEscape(s) {
          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }

          return s
            .replace(/\\/g,   '\\\\')
            .replace(/"/g,    '\\"')
            .replace(/\x08/g, '\\b')
            .replace(/\t/g,   '\\t')
            .replace(/\n/g,   '\\n')
            .replace(/\f/g,   '\\f')
            .replace(/\r/g,   '\\r')
            .replace(/[\x00-\x07\x0B\x0E\x0F]/g, function(ch) { return '\\x0' + hex(ch); })
            .replace(/[\x10-\x1F\x80-\xFF]/g,    function(ch) { return '\\x'  + hex(ch); })
            .replace(/[\u0180-\u0FFF]/g,         function(ch) { return '\\u0' + hex(ch); })
            .replace(/[\u1080-\uFFFF]/g,         function(ch) { return '\\u'  + hex(ch); });
        }

        var expectedDescs = new Array(expected.length),
            expectedDesc, foundDesc, i;

        for (i = 0; i < expected.length; i++) {
          expectedDescs[i] = expected[i].description;
        }

        expectedDesc = expected.length > 1
          ? expectedDescs.slice(0, -1).join(", ")
              + " or "
              + expectedDescs[expected.length - 1]
          : expectedDescs[0];

        foundDesc = found ? "\"" + stringEscape(found) + "\"" : "end of input";

        return "Expected " + expectedDesc + " but " + foundDesc + " found.";
      }

      var posDetails = peg$computePosDetails(pos),
          found      = pos < input.length ? input.charAt(pos) : null;

      if (expected !== null) {
        cleanupExpected(expected);
      }

      return new SyntaxError(
        message !== null ? message : buildMessage(expected, found),
        expected,
        found,
        pos,
        posDetails.line,
        posDetails.column
      );
    }

    function peg$parsestart() {
      var s0;

      s0 = peg$parsemessageFormatPattern();

      return s0;
    }

    function peg$parsemessageFormatPattern() {
      var s0, s1, s2;

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsemessageFormatElement();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsemessageFormatElement();
      }
      if (s1 !== peg$FAILED) {
        peg$reportedPos = s0;
        s1 = peg$c1(s1);
      }
      s0 = s1;

      return s0;
    }

    function peg$parsemessageFormatElement() {
      var s0;

      s0 = peg$parsemessageTextElement();
      if (s0 === peg$FAILED) {
        s0 = peg$parseargumentElement();
      }

      return s0;
    }

    function peg$parsemessageText() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$currPos;
      s3 = peg$parse_();
      if (s3 !== peg$FAILED) {
        s4 = peg$parsechars();
        if (s4 !== peg$FAILED) {
          s5 = peg$parse_();
          if (s5 !== peg$FAILED) {
            s3 = [s3, s4, s5];
            s2 = s3;
          } else {
            peg$currPos = s2;
            s2 = peg$c2;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$c2;
        }
      } else {
        peg$currPos = s2;
        s2 = peg$c2;
      }
      if (s2 !== peg$FAILED) {
        while (s2 !== peg$FAILED) {
          s1.push(s2);
          s2 = peg$currPos;
          s3 = peg$parse_();
          if (s3 !== peg$FAILED) {
            s4 = peg$parsechars();
            if (s4 !== peg$FAILED) {
              s5 = peg$parse_();
              if (s5 !== peg$FAILED) {
                s3 = [s3, s4, s5];
                s2 = s3;
              } else {
                peg$currPos = s2;
                s2 = peg$c2;
              }
            } else {
              peg$currPos = s2;
              s2 = peg$c2;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$c2;
          }
        }
      } else {
        s1 = peg$c2;
      }
      if (s1 !== peg$FAILED) {
        peg$reportedPos = s0;
        s1 = peg$c3(s1);
      }
      s0 = s1;
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parsews();
        if (s1 !== peg$FAILED) {
          s1 = input.substring(s0, peg$currPos);
        }
        s0 = s1;
      }

      return s0;
    }

    function peg$parsemessageTextElement() {
      var s0, s1;

      s0 = peg$currPos;
      s1 = peg$parsemessageText();
      if (s1 !== peg$FAILED) {
        peg$reportedPos = s0;
        s1 = peg$c4(s1);
      }
      s0 = s1;

      return s0;
    }

    function peg$parseargument() {
      var s0, s1, s2;

      s0 = peg$parsenumber();
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = [];
        if (peg$c5.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c6); }
        }
        if (s2 !== peg$FAILED) {
          while (s2 !== peg$FAILED) {
            s1.push(s2);
            if (peg$c5.test(input.charAt(peg$currPos))) {
              s2 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s2 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c6); }
            }
          }
        } else {
          s1 = peg$c2;
        }
        if (s1 !== peg$FAILED) {
          s1 = input.substring(s0, peg$currPos);
        }
        s0 = s1;
      }

      return s0;
    }

    function peg$parseargumentElement() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 123) {
        s1 = peg$c7;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c8); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          s3 = peg$parseargument();
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              s5 = peg$currPos;
              if (input.charCodeAt(peg$currPos) === 44) {
                s6 = peg$c10;
                peg$currPos++;
              } else {
                s6 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c11); }
              }
              if (s6 !== peg$FAILED) {
                s7 = peg$parse_();
                if (s7 !== peg$FAILED) {
                  s8 = peg$parseelementFormat();
                  if (s8 !== peg$FAILED) {
                    s6 = [s6, s7, s8];
                    s5 = s6;
                  } else {
                    peg$currPos = s5;
                    s5 = peg$c2;
                  }
                } else {
                  peg$currPos = s5;
                  s5 = peg$c2;
                }
              } else {
                peg$currPos = s5;
                s5 = peg$c2;
              }
              if (s5 === peg$FAILED) {
                s5 = peg$c9;
              }
              if (s5 !== peg$FAILED) {
                s6 = peg$parse_();
                if (s6 !== peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 125) {
                    s7 = peg$c12;
                    peg$currPos++;
                  } else {
                    s7 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c13); }
                  }
                  if (s7 !== peg$FAILED) {
                    peg$reportedPos = s0;
                    s1 = peg$c14(s3, s5);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$c2;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$c2;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c2;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c2;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c2;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c2;
      }

      return s0;
    }

    function peg$parseelementFormat() {
      var s0;

      s0 = peg$parsesimpleFormat();
      if (s0 === peg$FAILED) {
        s0 = peg$parsepluralFormat();
        if (s0 === peg$FAILED) {
          s0 = peg$parseselectOrdinalFormat();
          if (s0 === peg$FAILED) {
            s0 = peg$parseselectFormat();
          }
        }
      }

      return s0;
    }

    function peg$parsesimpleFormat() {
      var s0, s1, s2, s3, s4, s5, s6;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 6) === peg$c15) {
        s1 = peg$c15;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c16); }
      }
      if (s1 === peg$FAILED) {
        if (input.substr(peg$currPos, 4) === peg$c17) {
          s1 = peg$c17;
          peg$currPos += 4;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c18); }
        }
        if (s1 === peg$FAILED) {
          if (input.substr(peg$currPos, 4) === peg$c19) {
            s1 = peg$c19;
            peg$currPos += 4;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c20); }
          }
        }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          if (input.charCodeAt(peg$currPos) === 44) {
            s4 = peg$c10;
            peg$currPos++;
          } else {
            s4 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c11); }
          }
          if (s4 !== peg$FAILED) {
            s5 = peg$parse_();
            if (s5 !== peg$FAILED) {
              s6 = peg$parsechars();
              if (s6 !== peg$FAILED) {
                s4 = [s4, s5, s6];
                s3 = s4;
              } else {
                peg$currPos = s3;
                s3 = peg$c2;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$c2;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$c2;
          }
          if (s3 === peg$FAILED) {
            s3 = peg$c9;
          }
          if (s3 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c21(s1, s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$c2;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c2;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c2;
      }

      return s0;
    }

    function peg$parsepluralFormat() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 6) === peg$c22) {
        s1 = peg$c22;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c23); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 44) {
            s3 = peg$c10;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c11); }
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              s5 = peg$parsepluralStyle();
              if (s5 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c24(s5);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$c2;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c2;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c2;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c2;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c2;
      }

      return s0;
    }

    function peg$parseselectOrdinalFormat() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 13) === peg$c25) {
        s1 = peg$c25;
        peg$currPos += 13;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c26); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 44) {
            s3 = peg$c10;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c11); }
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              s5 = peg$parsepluralStyle();
              if (s5 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c27(s5);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$c2;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c2;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c2;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c2;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c2;
      }

      return s0;
    }

    function peg$parseselectFormat() {
      var s0, s1, s2, s3, s4, s5, s6;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 6) === peg$c28) {
        s1 = peg$c28;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c29); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 44) {
            s3 = peg$c10;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c11); }
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              s5 = [];
              s6 = peg$parseoptionalFormatPattern();
              if (s6 !== peg$FAILED) {
                while (s6 !== peg$FAILED) {
                  s5.push(s6);
                  s6 = peg$parseoptionalFormatPattern();
                }
              } else {
                s5 = peg$c2;
              }
              if (s5 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c30(s5);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$c2;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c2;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c2;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c2;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c2;
      }

      return s0;
    }

    function peg$parseselector() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      s1 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 61) {
        s2 = peg$c31;
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c32); }
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parsenumber();
        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$c2;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$c2;
      }
      if (s1 !== peg$FAILED) {
        s1 = input.substring(s0, peg$currPos);
      }
      s0 = s1;
      if (s0 === peg$FAILED) {
        s0 = peg$parsechars();
      }

      return s0;
    }

    function peg$parseoptionalFormatPattern() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;

      s0 = peg$currPos;
      s1 = peg$parse_();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseselector();
        if (s2 !== peg$FAILED) {
          s3 = peg$parse_();
          if (s3 !== peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 123) {
              s4 = peg$c7;
              peg$currPos++;
            } else {
              s4 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c8); }
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$parse_();
              if (s5 !== peg$FAILED) {
                s6 = peg$parsemessageFormatPattern();
                if (s6 !== peg$FAILED) {
                  s7 = peg$parse_();
                  if (s7 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 125) {
                      s8 = peg$c12;
                      peg$currPos++;
                    } else {
                      s8 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c13); }
                    }
                    if (s8 !== peg$FAILED) {
                      peg$reportedPos = s0;
                      s1 = peg$c33(s2, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$c2;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$c2;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$c2;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c2;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c2;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c2;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c2;
      }

      return s0;
    }

    function peg$parseoffset() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 7) === peg$c34) {
        s1 = peg$c34;
        peg$currPos += 7;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c35); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          s3 = peg$parsenumber();
          if (s3 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c36(s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$c2;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c2;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c2;
      }

      return s0;
    }

    function peg$parsepluralStyle() {
      var s0, s1, s2, s3, s4;

      s0 = peg$currPos;
      s1 = peg$parseoffset();
      if (s1 === peg$FAILED) {
        s1 = peg$c9;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parseoptionalFormatPattern();
          if (s4 !== peg$FAILED) {
            while (s4 !== peg$FAILED) {
              s3.push(s4);
              s4 = peg$parseoptionalFormatPattern();
            }
          } else {
            s3 = peg$c2;
          }
          if (s3 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c37(s1, s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$c2;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c2;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c2;
      }

      return s0;
    }

    function peg$parsews() {
      var s0, s1;

      peg$silentFails++;
      s0 = [];
      if (peg$c39.test(input.charAt(peg$currPos))) {
        s1 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c40); }
      }
      if (s1 !== peg$FAILED) {
        while (s1 !== peg$FAILED) {
          s0.push(s1);
          if (peg$c39.test(input.charAt(peg$currPos))) {
            s1 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c40); }
          }
        }
      } else {
        s0 = peg$c2;
      }
      peg$silentFails--;
      if (s0 === peg$FAILED) {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c38); }
      }

      return s0;
    }

    function peg$parse_() {
      var s0, s1, s2;

      peg$silentFails++;
      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsews();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsews();
      }
      if (s1 !== peg$FAILED) {
        s1 = input.substring(s0, peg$currPos);
      }
      s0 = s1;
      peg$silentFails--;
      if (s0 === peg$FAILED) {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c41); }
      }

      return s0;
    }

    function peg$parsedigit() {
      var s0;

      if (peg$c42.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c43); }
      }

      return s0;
    }

    function peg$parsehexDigit() {
      var s0;

      if (peg$c44.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c45); }
      }

      return s0;
    }

    function peg$parsenumber() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 48) {
        s1 = peg$c46;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c47); }
      }
      if (s1 === peg$FAILED) {
        s1 = peg$currPos;
        s2 = peg$currPos;
        if (peg$c48.test(input.charAt(peg$currPos))) {
          s3 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c49); }
        }
        if (s3 !== peg$FAILED) {
          s4 = [];
          s5 = peg$parsedigit();
          while (s5 !== peg$FAILED) {
            s4.push(s5);
            s5 = peg$parsedigit();
          }
          if (s4 !== peg$FAILED) {
            s3 = [s3, s4];
            s2 = s3;
          } else {
            peg$currPos = s2;
            s2 = peg$c2;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$c2;
        }
        if (s2 !== peg$FAILED) {
          s2 = input.substring(s1, peg$currPos);
        }
        s1 = s2;
      }
      if (s1 !== peg$FAILED) {
        peg$reportedPos = s0;
        s1 = peg$c50(s1);
      }
      s0 = s1;

      return s0;
    }

    function peg$parsechar() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      if (peg$c51.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c52); }
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        if (input.substr(peg$currPos, 2) === peg$c53) {
          s1 = peg$c53;
          peg$currPos += 2;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c54); }
        }
        if (s1 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c55();
        }
        s0 = s1;
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          if (input.substr(peg$currPos, 2) === peg$c56) {
            s1 = peg$c56;
            peg$currPos += 2;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c57); }
          }
          if (s1 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c58();
          }
          s0 = s1;
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            if (input.substr(peg$currPos, 2) === peg$c59) {
              s1 = peg$c59;
              peg$currPos += 2;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c60); }
            }
            if (s1 !== peg$FAILED) {
              peg$reportedPos = s0;
              s1 = peg$c61();
            }
            s0 = s1;
            if (s0 === peg$FAILED) {
              s0 = peg$currPos;
              if (input.substr(peg$currPos, 2) === peg$c62) {
                s1 = peg$c62;
                peg$currPos += 2;
              } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c63); }
              }
              if (s1 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c64();
              }
              s0 = s1;
              if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                if (input.substr(peg$currPos, 2) === peg$c65) {
                  s1 = peg$c65;
                  peg$currPos += 2;
                } else {
                  s1 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c66); }
                }
                if (s1 !== peg$FAILED) {
                  s2 = peg$currPos;
                  s3 = peg$currPos;
                  s4 = peg$parsehexDigit();
                  if (s4 !== peg$FAILED) {
                    s5 = peg$parsehexDigit();
                    if (s5 !== peg$FAILED) {
                      s6 = peg$parsehexDigit();
                      if (s6 !== peg$FAILED) {
                        s7 = peg$parsehexDigit();
                        if (s7 !== peg$FAILED) {
                          s4 = [s4, s5, s6, s7];
                          s3 = s4;
                        } else {
                          peg$currPos = s3;
                          s3 = peg$c2;
                        }
                      } else {
                        peg$currPos = s3;
                        s3 = peg$c2;
                      }
                    } else {
                      peg$currPos = s3;
                      s3 = peg$c2;
                    }
                  } else {
                    peg$currPos = s3;
                    s3 = peg$c2;
                  }
                  if (s3 !== peg$FAILED) {
                    s3 = input.substring(s2, peg$currPos);
                  }
                  s2 = s3;
                  if (s2 !== peg$FAILED) {
                    peg$reportedPos = s0;
                    s1 = peg$c67(s2);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$c2;
                }
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parsechars() {
      var s0, s1, s2;

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsechar();
      if (s2 !== peg$FAILED) {
        while (s2 !== peg$FAILED) {
          s1.push(s2);
          s2 = peg$parsechar();
        }
      } else {
        s1 = peg$c2;
      }
      if (s1 !== peg$FAILED) {
        peg$reportedPos = s0;
        s1 = peg$c68(s1);
      }
      s0 = s1;

      return s0;
    }

    peg$result = peg$startRuleFunction();

    if (peg$result !== peg$FAILED && peg$currPos === input.length) {
      return peg$result;
    } else {
      if (peg$result !== peg$FAILED && peg$currPos < input.length) {
        peg$fail({ type: "end", description: "end of input" });
      }

      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);
    }
  }

  return {
    SyntaxError: SyntaxError,
    parse:       parse
  };
})();



/***/ }),

/***/ "./node_modules/intl-messageformat/dist/locale-data/ca.js":
/*!****************************************************************!*\
  !*** ./node_modules/intl-messageformat/dist/locale-data/ca.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

IntlMessageFormat.__addLocaleData({"locale":"ca","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1];if(ord)return n==1||n==3?"one":n==2?"two":n==4?"few":"other";return n==1&&v0?"one":"other"}});
IntlMessageFormat.__addLocaleData({"locale":"ca-AD","parentLocale":"ca"});
IntlMessageFormat.__addLocaleData({"locale":"ca-ES-VALENCIA","parentLocale":"ca-ES"});
IntlMessageFormat.__addLocaleData({"locale":"ca-ES","parentLocale":"ca"});
IntlMessageFormat.__addLocaleData({"locale":"ca-FR","parentLocale":"ca"});
IntlMessageFormat.__addLocaleData({"locale":"ca-IT","parentLocale":"ca"});


/***/ }),

/***/ "./node_modules/intl-messageformat/dist/locale-data/de.js":
/*!****************************************************************!*\
  !*** ./node_modules/intl-messageformat/dist/locale-data/de.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

IntlMessageFormat.__addLocaleData({"locale":"de","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1];if(ord)return"other";return n==1&&v0?"one":"other"}});
IntlMessageFormat.__addLocaleData({"locale":"de-AT","parentLocale":"de"});
IntlMessageFormat.__addLocaleData({"locale":"de-BE","parentLocale":"de"});
IntlMessageFormat.__addLocaleData({"locale":"de-CH","parentLocale":"de"});
IntlMessageFormat.__addLocaleData({"locale":"de-LI","parentLocale":"de"});
IntlMessageFormat.__addLocaleData({"locale":"de-LU","parentLocale":"de"});


/***/ }),

/***/ "./node_modules/intl-messageformat/dist/locale-data/en.js":
/*!****************************************************************!*\
  !*** ./node_modules/intl-messageformat/dist/locale-data/en.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

IntlMessageFormat.__addLocaleData({"locale":"en","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1],t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2);if(ord)return n10==1&&n100!=11?"one":n10==2&&n100!=12?"two":n10==3&&n100!=13?"few":"other";return n==1&&v0?"one":"other"}});
IntlMessageFormat.__addLocaleData({"locale":"en-001","parentLocale":"en"});
IntlMessageFormat.__addLocaleData({"locale":"en-150","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-AG","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-AI","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-AS","parentLocale":"en"});
IntlMessageFormat.__addLocaleData({"locale":"en-AT","parentLocale":"en-150"});
IntlMessageFormat.__addLocaleData({"locale":"en-AU","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-BB","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-BE","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-BI","parentLocale":"en"});
IntlMessageFormat.__addLocaleData({"locale":"en-BM","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-BS","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-BW","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-BZ","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-CA","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-CC","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-CH","parentLocale":"en-150"});
IntlMessageFormat.__addLocaleData({"locale":"en-CK","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-CM","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-CX","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-CY","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-DE","parentLocale":"en-150"});
IntlMessageFormat.__addLocaleData({"locale":"en-DG","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-DK","parentLocale":"en-150"});
IntlMessageFormat.__addLocaleData({"locale":"en-DM","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-Dsrt","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"}});
IntlMessageFormat.__addLocaleData({"locale":"en-ER","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-FI","parentLocale":"en-150"});
IntlMessageFormat.__addLocaleData({"locale":"en-FJ","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-FK","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-FM","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-GB","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-GD","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-GG","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-GH","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-GI","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-GM","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-GU","parentLocale":"en"});
IntlMessageFormat.__addLocaleData({"locale":"en-GY","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-HK","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-IE","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-IL","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-IM","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-IN","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-IO","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-JE","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-JM","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-KE","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-KI","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-KN","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-KY","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-LC","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-LR","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-LS","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-MG","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-MH","parentLocale":"en"});
IntlMessageFormat.__addLocaleData({"locale":"en-MO","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-MP","parentLocale":"en"});
IntlMessageFormat.__addLocaleData({"locale":"en-MS","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-MT","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-MU","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-MW","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-MY","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-NA","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-NF","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-NG","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-NL","parentLocale":"en-150"});
IntlMessageFormat.__addLocaleData({"locale":"en-NR","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-NU","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-NZ","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-PG","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-PH","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-PK","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-PN","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-PR","parentLocale":"en"});
IntlMessageFormat.__addLocaleData({"locale":"en-PW","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-RW","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-SB","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-SC","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-SD","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-SE","parentLocale":"en-150"});
IntlMessageFormat.__addLocaleData({"locale":"en-SG","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-SH","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-SI","parentLocale":"en-150"});
IntlMessageFormat.__addLocaleData({"locale":"en-SL","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-SS","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-SX","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-SZ","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-Shaw","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"}});
IntlMessageFormat.__addLocaleData({"locale":"en-TC","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-TK","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-TO","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-TT","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-TV","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-TZ","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-UG","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-UM","parentLocale":"en"});
IntlMessageFormat.__addLocaleData({"locale":"en-US","parentLocale":"en"});
IntlMessageFormat.__addLocaleData({"locale":"en-VC","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-VG","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-VI","parentLocale":"en"});
IntlMessageFormat.__addLocaleData({"locale":"en-VU","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-WS","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-ZA","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-ZM","parentLocale":"en-001"});
IntlMessageFormat.__addLocaleData({"locale":"en-ZW","parentLocale":"en-001"});


/***/ }),

/***/ "./node_modules/intl-messageformat/dist/locale-data/es.js":
/*!****************************************************************!*\
  !*** ./node_modules/intl-messageformat/dist/locale-data/es.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

IntlMessageFormat.__addLocaleData({"locale":"es","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"}});
IntlMessageFormat.__addLocaleData({"locale":"es-419","parentLocale":"es"});
IntlMessageFormat.__addLocaleData({"locale":"es-AR","parentLocale":"es-419"});
IntlMessageFormat.__addLocaleData({"locale":"es-BO","parentLocale":"es-419"});
IntlMessageFormat.__addLocaleData({"locale":"es-CL","parentLocale":"es-419"});
IntlMessageFormat.__addLocaleData({"locale":"es-CO","parentLocale":"es-419"});
IntlMessageFormat.__addLocaleData({"locale":"es-CR","parentLocale":"es-419"});
IntlMessageFormat.__addLocaleData({"locale":"es-CU","parentLocale":"es-419"});
IntlMessageFormat.__addLocaleData({"locale":"es-DO","parentLocale":"es-419"});
IntlMessageFormat.__addLocaleData({"locale":"es-EA","parentLocale":"es"});
IntlMessageFormat.__addLocaleData({"locale":"es-EC","parentLocale":"es-419"});
IntlMessageFormat.__addLocaleData({"locale":"es-GQ","parentLocale":"es"});
IntlMessageFormat.__addLocaleData({"locale":"es-GT","parentLocale":"es-419"});
IntlMessageFormat.__addLocaleData({"locale":"es-HN","parentLocale":"es-419"});
IntlMessageFormat.__addLocaleData({"locale":"es-IC","parentLocale":"es"});
IntlMessageFormat.__addLocaleData({"locale":"es-MX","parentLocale":"es-419"});
IntlMessageFormat.__addLocaleData({"locale":"es-NI","parentLocale":"es-419"});
IntlMessageFormat.__addLocaleData({"locale":"es-PA","parentLocale":"es-419"});
IntlMessageFormat.__addLocaleData({"locale":"es-PE","parentLocale":"es-419"});
IntlMessageFormat.__addLocaleData({"locale":"es-PH","parentLocale":"es"});
IntlMessageFormat.__addLocaleData({"locale":"es-PR","parentLocale":"es-419"});
IntlMessageFormat.__addLocaleData({"locale":"es-PY","parentLocale":"es-419"});
IntlMessageFormat.__addLocaleData({"locale":"es-SV","parentLocale":"es-419"});
IntlMessageFormat.__addLocaleData({"locale":"es-US","parentLocale":"es-419"});
IntlMessageFormat.__addLocaleData({"locale":"es-UY","parentLocale":"es-419"});
IntlMessageFormat.__addLocaleData({"locale":"es-VE","parentLocale":"es-419"});


/***/ }),

/***/ "./node_modules/intl-messageformat/dist/locale-data/fr.js":
/*!****************************************************************!*\
  !*** ./node_modules/intl-messageformat/dist/locale-data/fr.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

IntlMessageFormat.__addLocaleData({"locale":"fr","pluralRuleFunction":function (n,ord){if(ord)return n==1?"one":"other";return n>=0&&n<2?"one":"other"}});
IntlMessageFormat.__addLocaleData({"locale":"fr-BE","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-BF","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-BI","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-BJ","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-BL","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-CA","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-CD","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-CF","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-CG","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-CH","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-CI","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-CM","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-DJ","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-DZ","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-GA","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-GF","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-GN","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-GP","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-GQ","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-HT","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-KM","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-LU","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-MA","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-MC","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-MF","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-MG","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-ML","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-MQ","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-MR","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-MU","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-NC","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-NE","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-PF","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-PM","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-RE","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-RW","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-SC","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-SN","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-SY","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-TD","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-TG","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-TN","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-VU","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-WF","parentLocale":"fr"});
IntlMessageFormat.__addLocaleData({"locale":"fr-YT","parentLocale":"fr"});


/***/ }),

/***/ "./node_modules/intl-messageformat/dist/locale-data/it.js":
/*!****************************************************************!*\
  !*** ./node_modules/intl-messageformat/dist/locale-data/it.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

IntlMessageFormat.__addLocaleData({"locale":"it","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1];if(ord)return n==11||n==8||n==80||n==800?"many":"other";return n==1&&v0?"one":"other"}});
IntlMessageFormat.__addLocaleData({"locale":"it-CH","parentLocale":"it"});
IntlMessageFormat.__addLocaleData({"locale":"it-SM","parentLocale":"it"});


/***/ }),

/***/ "./node_modules/intl-messageformat/dist/locale-data/ja.js":
/*!****************************************************************!*\
  !*** ./node_modules/intl-messageformat/dist/locale-data/ja.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

IntlMessageFormat.__addLocaleData({"locale":"ja","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"}});


/***/ }),

/***/ "./node_modules/intl-messageformat/dist/locale-data/nl.js":
/*!****************************************************************!*\
  !*** ./node_modules/intl-messageformat/dist/locale-data/nl.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

IntlMessageFormat.__addLocaleData({"locale":"nl","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1];if(ord)return"other";return n==1&&v0?"one":"other"}});
IntlMessageFormat.__addLocaleData({"locale":"nl-AW","parentLocale":"nl"});
IntlMessageFormat.__addLocaleData({"locale":"nl-BE","parentLocale":"nl"});
IntlMessageFormat.__addLocaleData({"locale":"nl-BQ","parentLocale":"nl"});
IntlMessageFormat.__addLocaleData({"locale":"nl-CW","parentLocale":"nl"});
IntlMessageFormat.__addLocaleData({"locale":"nl-SR","parentLocale":"nl"});
IntlMessageFormat.__addLocaleData({"locale":"nl-SX","parentLocale":"nl"});


/***/ }),

/***/ "./node_modules/intl-messageformat/dist/locale-data/pt.js":
/*!****************************************************************!*\
  !*** ./node_modules/intl-messageformat/dist/locale-data/pt.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

IntlMessageFormat.__addLocaleData({"locale":"pt","pluralRuleFunction":function (n,ord){var s=String(n).split("."),t0=Number(s[0])==n;if(ord)return"other";return t0&&n>=0&&n<=2&&n!=2?"one":"other"}});
IntlMessageFormat.__addLocaleData({"locale":"pt-AO","parentLocale":"pt-PT"});
IntlMessageFormat.__addLocaleData({"locale":"pt-PT","parentLocale":"pt","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1];if(ord)return"other";return n==1&&v0?"one":"other"}});
IntlMessageFormat.__addLocaleData({"locale":"pt-CV","parentLocale":"pt-PT"});
IntlMessageFormat.__addLocaleData({"locale":"pt-GW","parentLocale":"pt-PT"});
IntlMessageFormat.__addLocaleData({"locale":"pt-MO","parentLocale":"pt-PT"});
IntlMessageFormat.__addLocaleData({"locale":"pt-MZ","parentLocale":"pt-PT"});
IntlMessageFormat.__addLocaleData({"locale":"pt-ST","parentLocale":"pt-PT"});
IntlMessageFormat.__addLocaleData({"locale":"pt-TL","parentLocale":"pt-PT"});


/***/ }),

/***/ "./node_modules/intl-messageformat/dist/locale-data/sv.js":
/*!****************************************************************!*\
  !*** ./node_modules/intl-messageformat/dist/locale-data/sv.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

IntlMessageFormat.__addLocaleData({"locale":"sv","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1],t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2);if(ord)return(n10==1||n10==2)&&n100!=11&&n100!=12?"one":"other";return n==1&&v0?"one":"other"}});
IntlMessageFormat.__addLocaleData({"locale":"sv-AX","parentLocale":"sv"});
IntlMessageFormat.__addLocaleData({"locale":"sv-FI","parentLocale":"sv"});


/***/ }),

/***/ "./node_modules/intl-messageformat/dist/locale-data/th.js":
/*!****************************************************************!*\
  !*** ./node_modules/intl-messageformat/dist/locale-data/th.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

IntlMessageFormat.__addLocaleData({"locale":"th","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"}});


/***/ }),

/***/ "./node_modules/intl-messageformat/dist/locale-data/zh.js":
/*!****************************************************************!*\
  !*** ./node_modules/intl-messageformat/dist/locale-data/zh.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

IntlMessageFormat.__addLocaleData({"locale":"zh","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"}});
IntlMessageFormat.__addLocaleData({"locale":"zh-Hans","parentLocale":"zh"});
IntlMessageFormat.__addLocaleData({"locale":"zh-Hans-HK","parentLocale":"zh-Hans"});
IntlMessageFormat.__addLocaleData({"locale":"zh-Hans-MO","parentLocale":"zh-Hans"});
IntlMessageFormat.__addLocaleData({"locale":"zh-Hans-SG","parentLocale":"zh-Hans"});
IntlMessageFormat.__addLocaleData({"locale":"zh-Hant","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"}});
IntlMessageFormat.__addLocaleData({"locale":"zh-Hant-HK","parentLocale":"zh-Hant"});
IntlMessageFormat.__addLocaleData({"locale":"zh-Hant-MO","parentLocale":"zh-Hant-HK"});


/***/ }),

/***/ "./node_modules/intl-messageformat/lib/compiler.js":
/*!*********************************************************!*\
  !*** ./node_modules/intl-messageformat/lib/compiler.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
Copyright (c) 2014, Yahoo! Inc. All rights reserved.
Copyrights licensed under the New BSD License.
See the accompanying LICENSE file for terms.
*/

/* jslint esnext: true */


exports["default"] = Compiler;

function Compiler(locales, formats, pluralFn) {
    this.locales  = locales;
    this.formats  = formats;
    this.pluralFn = pluralFn;
}

Compiler.prototype.compile = function (ast) {
    this.pluralStack        = [];
    this.currentPlural      = null;
    this.pluralNumberFormat = null;

    return this.compileMessage(ast);
};

Compiler.prototype.compileMessage = function (ast) {
    if (!(ast && ast.type === 'messageFormatPattern')) {
        throw new Error('Message AST is not of type: "messageFormatPattern"');
    }

    var elements = ast.elements,
        pattern  = [];

    var i, len, element;

    for (i = 0, len = elements.length; i < len; i += 1) {
        element = elements[i];

        switch (element.type) {
            case 'messageTextElement':
                pattern.push(this.compileMessageText(element));
                break;

            case 'argumentElement':
                pattern.push(this.compileArgument(element));
                break;

            default:
                throw new Error('Message element does not have a valid type');
        }
    }

    return pattern;
};

Compiler.prototype.compileMessageText = function (element) {
    // When this `element` is part of plural sub-pattern and its value contains
    // an unescaped '#', use a `PluralOffsetString` helper to properly output
    // the number with the correct offset in the string.
    if (this.currentPlural && /(^|[^\\])#/g.test(element.value)) {
        // Create a cache a NumberFormat instance that can be reused for any
        // PluralOffsetString instance in this message.
        if (!this.pluralNumberFormat) {
            this.pluralNumberFormat = new Intl.NumberFormat(this.locales);
        }

        return new PluralOffsetString(
                this.currentPlural.id,
                this.currentPlural.format.offset,
                this.pluralNumberFormat,
                element.value);
    }

    // Unescape the escaped '#'s in the message text.
    return element.value.replace(/\\#/g, '#');
};

Compiler.prototype.compileArgument = function (element) {
    var format = element.format;

    if (!format) {
        return new StringFormat(element.id);
    }

    var formats  = this.formats,
        locales  = this.locales,
        pluralFn = this.pluralFn,
        options;

    switch (format.type) {
        case 'numberFormat':
            options = formats.number[format.style];
            return {
                id    : element.id,
                format: new Intl.NumberFormat(locales, options).format
            };

        case 'dateFormat':
            options = formats.date[format.style];
            return {
                id    : element.id,
                format: new Intl.DateTimeFormat(locales, options).format
            };

        case 'timeFormat':
            options = formats.time[format.style];
            return {
                id    : element.id,
                format: new Intl.DateTimeFormat(locales, options).format
            };

        case 'pluralFormat':
            options = this.compileOptions(element);
            return new PluralFormat(
                element.id, format.ordinal, format.offset, options, pluralFn
            );

        case 'selectFormat':
            options = this.compileOptions(element);
            return new SelectFormat(element.id, options);

        default:
            throw new Error('Message element does not have a valid format type');
    }
};

Compiler.prototype.compileOptions = function (element) {
    var format      = element.format,
        options     = format.options,
        optionsHash = {};

    // Save the current plural element, if any, then set it to a new value when
    // compiling the options sub-patterns. This conforms the spec's algorithm
    // for handling `"#"` syntax in message text.
    this.pluralStack.push(this.currentPlural);
    this.currentPlural = format.type === 'pluralFormat' ? element : null;

    var i, len, option;

    for (i = 0, len = options.length; i < len; i += 1) {
        option = options[i];

        // Compile the sub-pattern and save it under the options's selector.
        optionsHash[option.selector] = this.compileMessage(option.value);
    }

    // Pop the plural stack to put back the original current plural value.
    this.currentPlural = this.pluralStack.pop();

    return optionsHash;
};

// -- Compiler Helper Classes --------------------------------------------------

function StringFormat(id) {
    this.id = id;
}

StringFormat.prototype.format = function (value) {
    if (!value) {
        return '';
    }

    return typeof value === 'string' ? value : String(value);
};

function PluralFormat(id, useOrdinal, offset, options, pluralFn) {
    this.id         = id;
    this.useOrdinal = useOrdinal;
    this.offset     = offset;
    this.options    = options;
    this.pluralFn   = pluralFn;
}

PluralFormat.prototype.getOption = function (value) {
    var options = this.options;

    var option = options['=' + value] ||
            options[this.pluralFn(value - this.offset, this.useOrdinal)];

    return option || options.other;
};

function PluralOffsetString(id, offset, numberFormat, string) {
    this.id           = id;
    this.offset       = offset;
    this.numberFormat = numberFormat;
    this.string       = string;
}

PluralOffsetString.prototype.format = function (value) {
    var number = this.numberFormat.format(value - this.offset);

    return this.string
            .replace(/(^|[^\\])#/g, '$1' + number)
            .replace(/\\#/g, '#');
};

function SelectFormat(id, options) {
    this.id      = id;
    this.options = options;
}

SelectFormat.prototype.getOption = function (value) {
    var options = this.options;
    return options[value] || options.other;
};



/***/ }),

/***/ "./node_modules/intl-messageformat/lib/core.js":
/*!*****************************************************!*\
  !*** ./node_modules/intl-messageformat/lib/core.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
Copyright (c) 2014, Yahoo! Inc. All rights reserved.
Copyrights licensed under the New BSD License.
See the accompanying LICENSE file for terms.
*/

/* jslint esnext: true */


var src$utils$$ = __webpack_require__(/*! ./utils */ "./node_modules/intl-messageformat/lib/utils.js"), src$es5$$ = __webpack_require__(/*! ./es5 */ "./node_modules/intl-messageformat/lib/es5.js"), src$compiler$$ = __webpack_require__(/*! ./compiler */ "./node_modules/intl-messageformat/lib/compiler.js"), intl$messageformat$parser$$ = __webpack_require__(/*! intl-messageformat-parser */ "./node_modules/intl-messageformat-parser/index.js");
exports["default"] = MessageFormat;

// -- MessageFormat --------------------------------------------------------

function MessageFormat(message, locales, formats) {
    // Parse string messages into an AST.
    var ast = typeof message === 'string' ?
            MessageFormat.__parse(message) : message;

    if (!(ast && ast.type === 'messageFormatPattern')) {
        throw new TypeError('A message must be provided as a String or AST.');
    }

    // Creates a new object with the specified `formats` merged with the default
    // formats.
    formats = this._mergeFormats(MessageFormat.formats, formats);

    // Defined first because it's used to build the format pattern.
    src$es5$$.defineProperty(this, '_locale',  {value: this._resolveLocale(locales)});

    // Compile the `ast` to a pattern that is highly optimized for repeated
    // `format()` invocations. **Note:** This passes the `locales` set provided
    // to the constructor instead of just the resolved locale.
    var pluralFn = this._findPluralRuleFunction(this._locale);
    var pattern  = this._compilePattern(ast, locales, formats, pluralFn);

    // "Bind" `format()` method to `this` so it can be passed by reference like
    // the other `Intl` APIs.
    var messageFormat = this;
    this.format = function (values) {
        return messageFormat._format(pattern, values);
    };
}

// Default format options used as the prototype of the `formats` provided to the
// constructor. These are used when constructing the internal Intl.NumberFormat
// and Intl.DateTimeFormat instances.
src$es5$$.defineProperty(MessageFormat, 'formats', {
    enumerable: true,

    value: {
        number: {
            'currency': {
                style: 'currency'
            },

            'percent': {
                style: 'percent'
            }
        },

        date: {
            'short': {
                month: 'numeric',
                day  : 'numeric',
                year : '2-digit'
            },

            'medium': {
                month: 'short',
                day  : 'numeric',
                year : 'numeric'
            },

            'long': {
                month: 'long',
                day  : 'numeric',
                year : 'numeric'
            },

            'full': {
                weekday: 'long',
                month  : 'long',
                day    : 'numeric',
                year   : 'numeric'
            }
        },

        time: {
            'short': {
                hour  : 'numeric',
                minute: 'numeric'
            },

            'medium':  {
                hour  : 'numeric',
                minute: 'numeric',
                second: 'numeric'
            },

            'long': {
                hour        : 'numeric',
                minute      : 'numeric',
                second      : 'numeric',
                timeZoneName: 'short'
            },

            'full': {
                hour        : 'numeric',
                minute      : 'numeric',
                second      : 'numeric',
                timeZoneName: 'short'
            }
        }
    }
});

// Define internal private properties for dealing with locale data.
src$es5$$.defineProperty(MessageFormat, '__localeData__', {value: src$es5$$.objCreate(null)});
src$es5$$.defineProperty(MessageFormat, '__addLocaleData', {value: function (data) {
    if (!(data && data.locale)) {
        throw new Error(
            'Locale data provided to IntlMessageFormat is missing a ' +
            '`locale` property'
        );
    }

    MessageFormat.__localeData__[data.locale.toLowerCase()] = data;
}});

// Defines `__parse()` static method as an exposed private.
src$es5$$.defineProperty(MessageFormat, '__parse', {value: intl$messageformat$parser$$["default"].parse});

// Define public `defaultLocale` property which defaults to English, but can be
// set by the developer.
src$es5$$.defineProperty(MessageFormat, 'defaultLocale', {
    enumerable: true,
    writable  : true,
    value     : undefined
});

MessageFormat.prototype.resolvedOptions = function () {
    // TODO: Provide anything else?
    return {
        locale: this._locale
    };
};

MessageFormat.prototype._compilePattern = function (ast, locales, formats, pluralFn) {
    var compiler = new src$compiler$$["default"](locales, formats, pluralFn);
    return compiler.compile(ast);
};

MessageFormat.prototype._findPluralRuleFunction = function (locale) {
    var localeData = MessageFormat.__localeData__;
    var data       = localeData[locale.toLowerCase()];

    // The locale data is de-duplicated, so we have to traverse the locale's
    // hierarchy until we find a `pluralRuleFunction` to return.
    while (data) {
        if (data.pluralRuleFunction) {
            return data.pluralRuleFunction;
        }

        data = data.parentLocale && localeData[data.parentLocale.toLowerCase()];
    }

    throw new Error(
        'Locale data added to IntlMessageFormat is missing a ' +
        '`pluralRuleFunction` for :' + locale
    );
};

MessageFormat.prototype._format = function (pattern, values) {
    var result = '',
        i, len, part, id, value;

    for (i = 0, len = pattern.length; i < len; i += 1) {
        part = pattern[i];

        // Exist early for string parts.
        if (typeof part === 'string') {
            result += part;
            continue;
        }

        id = part.id;

        // Enforce that all required values are provided by the caller.
        if (!(values && src$utils$$.hop.call(values, id))) {
            throw new Error('A value must be provided for: ' + id);
        }

        value = values[id];

        // Recursively format plural and select parts' option — which can be a
        // nested pattern structure. The choosing of the option to use is
        // abstracted-by and delegated-to the part helper object.
        if (part.options) {
            result += this._format(part.getOption(value), values);
        } else {
            result += part.format(value);
        }
    }

    return result;
};

MessageFormat.prototype._mergeFormats = function (defaults, formats) {
    var mergedFormats = {},
        type, mergedType;

    for (type in defaults) {
        if (!src$utils$$.hop.call(defaults, type)) { continue; }

        mergedFormats[type] = mergedType = src$es5$$.objCreate(defaults[type]);

        if (formats && src$utils$$.hop.call(formats, type)) {
            src$utils$$.extend(mergedType, formats[type]);
        }
    }

    return mergedFormats;
};

MessageFormat.prototype._resolveLocale = function (locales) {
    if (typeof locales === 'string') {
        locales = [locales];
    }

    // Create a copy of the array so we can push on the default locale.
    locales = (locales || []).concat(MessageFormat.defaultLocale);

    var localeData = MessageFormat.__localeData__;
    var i, len, localeParts, data;

    // Using the set of locales + the default locale, we look for the first one
    // which that has been registered. When data does not exist for a locale, we
    // traverse its ancestors to find something that's been registered within
    // its hierarchy of locales. Since we lack the proper `parentLocale` data
    // here, we must take a naive approach to traversal.
    for (i = 0, len = locales.length; i < len; i += 1) {
        localeParts = locales[i].toLowerCase().split('-');

        while (localeParts.length) {
            data = localeData[localeParts.join('-')];
            if (data) {
                // Return the normalized locale string; e.g., we return "en-US",
                // instead of "en-us".
                return data.locale;
            }

            localeParts.pop();
        }
    }

    var defaultLocale = locales.pop();
    throw new Error(
        'No locale data has been added to IntlMessageFormat for: ' +
        locales.join(', ') + ', or the default locale: ' + defaultLocale
    );
};



/***/ }),

/***/ "./node_modules/intl-messageformat/lib/en.js":
/*!***************************************************!*\
  !*** ./node_modules/intl-messageformat/lib/en.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// GENERATED FILE

exports["default"] = {"locale":"en","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1],t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2);if(ord)return n10==1&&n100!=11?"one":n10==2&&n100!=12?"two":n10==3&&n100!=13?"few":"other";return n==1&&v0?"one":"other"}};



/***/ }),

/***/ "./node_modules/intl-messageformat/lib/es5.js":
/*!****************************************************!*\
  !*** ./node_modules/intl-messageformat/lib/es5.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
Copyright (c) 2014, Yahoo! Inc. All rights reserved.
Copyrights licensed under the New BSD License.
See the accompanying LICENSE file for terms.
*/

/* jslint esnext: true */


var src$utils$$ = __webpack_require__(/*! ./utils */ "./node_modules/intl-messageformat/lib/utils.js");

// Purposely using the same implementation as the Intl.js `Intl` polyfill.
// Copyright 2013 Andy Earnshaw, MIT License

var realDefineProp = (function () {
    try { return !!Object.defineProperty({}, 'a', {}); }
    catch (e) { return false; }
})();

var es3 = !realDefineProp && !Object.prototype.__defineGetter__;

var defineProperty = realDefineProp ? Object.defineProperty :
        function (obj, name, desc) {

    if ('get' in desc && obj.__defineGetter__) {
        obj.__defineGetter__(name, desc.get);
    } else if (!src$utils$$.hop.call(obj, name) || 'value' in desc) {
        obj[name] = desc.value;
    }
};

var objCreate = Object.create || function (proto, props) {
    var obj, k;

    function F() {}
    F.prototype = proto;
    obj = new F();

    for (k in props) {
        if (src$utils$$.hop.call(props, k)) {
            defineProperty(obj, k, props[k]);
        }
    }

    return obj;
};
exports.defineProperty = defineProperty, exports.objCreate = objCreate;



/***/ }),

/***/ "./node_modules/intl-messageformat/lib/main.js":
/*!*****************************************************!*\
  !*** ./node_modules/intl-messageformat/lib/main.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* jslint esnext: true */


var src$core$$ = __webpack_require__(/*! ./core */ "./node_modules/intl-messageformat/lib/core.js"), src$en$$ = __webpack_require__(/*! ./en */ "./node_modules/intl-messageformat/lib/en.js");

src$core$$["default"].__addLocaleData(src$en$$["default"]);
src$core$$["default"].defaultLocale = 'en';

exports["default"] = src$core$$["default"];



/***/ }),

/***/ "./node_modules/intl-messageformat/lib/utils.js":
/*!******************************************************!*\
  !*** ./node_modules/intl-messageformat/lib/utils.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
Copyright (c) 2014, Yahoo! Inc. All rights reserved.
Copyrights licensed under the New BSD License.
See the accompanying LICENSE file for terms.
*/

/* jslint esnext: true */


exports.extend = extend;
var hop = Object.prototype.hasOwnProperty;

function extend(obj) {
    var sources = Array.prototype.slice.call(arguments, 1),
        i, len, source, key;

    for (i = 0, len = sources.length; i < len; i += 1) {
        source = sources[i];
        if (!source) { continue; }

        for (key in source) {
            if (hop.call(source, key)) {
                obj[key] = source[key];
            }
        }
    }

    return obj;
}
exports.hop = hop;



/***/ }),

/***/ "./node_modules/intl/index.js":
/*!************************************!*\
  !*** ./node_modules/intl/index.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {// Expose `IntlPolyfill` as global to add locale data into runtime later on.
global.IntlPolyfill = __webpack_require__(/*! ./lib/core.js */ "./node_modules/intl/lib/core.js");

// Require all locale data for `Intl`. This module will be
// ignored when bundling for the browser with Browserify/Webpack.
__webpack_require__(/*! ./locale-data/complete.js */ 0);

// hack to export the polyfill as global Intl if needed
if (!global.Intl) {
    global.Intl = global.IntlPolyfill;
    global.IntlPolyfill.__applyLocaleSensitivePrototypes();
}

// providing an idiomatic api for the nodejs version of this module
module.exports = global.IntlPolyfill;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/intl/lib/core.js":
/*!***************************************!*\
  !*** ./node_modules/intl/lib/core.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj;
};

var jsx = function () {
  var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7;
  return function createRawReactElement(type, props, key, children) {
    var defaultProps = type && type.defaultProps;
    var childrenLength = arguments.length - 3;

    if (!props && childrenLength !== 0) {
      props = {};
    }

    if (props && defaultProps) {
      for (var propName in defaultProps) {
        if (props[propName] === void 0) {
          props[propName] = defaultProps[propName];
        }
      }
    } else if (!props) {
      props = defaultProps || {};
    }

    if (childrenLength === 1) {
      props.children = children;
    } else if (childrenLength > 1) {
      var childArray = Array(childrenLength);

      for (var i = 0; i < childrenLength; i++) {
        childArray[i] = arguments[i + 3];
      }

      props.children = childArray;
    }

    return {
      $$typeof: REACT_ELEMENT_TYPE,
      type: type,
      key: key === undefined ? null : '' + key,
      ref: null,
      props: props,
      _owner: null
    };
  };
}();

var asyncToGenerator = function (fn) {
  return function () {
    var gen = fn.apply(this, arguments);
    return new Promise(function (resolve, reject) {
      function step(key, arg) {
        try {
          var info = gen[key](arg);
          var value = info.value;
        } catch (error) {
          reject(error);
          return;
        }

        if (info.done) {
          resolve(value);
        } else {
          return Promise.resolve(value).then(function (value) {
            return step("next", value);
          }, function (err) {
            return step("throw", err);
          });
        }
      }

      return step("next");
    });
  };
};

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var defineEnumerableProperties = function (obj, descs) {
  for (var key in descs) {
    var desc = descs[key];
    desc.configurable = desc.enumerable = true;
    if ("value" in desc) desc.writable = true;
    Object.defineProperty(obj, key, desc);
  }

  return obj;
};

var defaults = function (obj, defaults) {
  var keys = Object.getOwnPropertyNames(defaults);

  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var value = Object.getOwnPropertyDescriptor(defaults, key);

    if (value && value.configurable && obj[key] === undefined) {
      Object.defineProperty(obj, key, value);
    }
  }

  return obj;
};

var defineProperty$1 = function (obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var get = function get(object, property, receiver) {
  if (object === null) object = Function.prototype;
  var desc = Object.getOwnPropertyDescriptor(object, property);

  if (desc === undefined) {
    var parent = Object.getPrototypeOf(object);

    if (parent === null) {
      return undefined;
    } else {
      return get(parent, property, receiver);
    }
  } else if ("value" in desc) {
    return desc.value;
  } else {
    var getter = desc.get;

    if (getter === undefined) {
      return undefined;
    }

    return getter.call(receiver);
  }
};

var inherits = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};

var _instanceof = function (left, right) {
  if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {
    return right[Symbol.hasInstance](left);
  } else {
    return left instanceof right;
  }
};

var interopRequireDefault = function (obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
};

var interopRequireWildcard = function (obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};

    if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
      }
    }

    newObj.default = obj;
    return newObj;
  }
};

var newArrowCheck = function (innerThis, boundThis) {
  if (innerThis !== boundThis) {
    throw new TypeError("Cannot instantiate an arrow function");
  }
};

var objectDestructuringEmpty = function (obj) {
  if (obj == null) throw new TypeError("Cannot destructure undefined");
};

var objectWithoutProperties = function (obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};

var possibleConstructorReturn = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

var selfGlobal = typeof global === "undefined" ? self : global;

var set = function set(object, property, value, receiver) {
  var desc = Object.getOwnPropertyDescriptor(object, property);

  if (desc === undefined) {
    var parent = Object.getPrototypeOf(object);

    if (parent !== null) {
      set(parent, property, value, receiver);
    }
  } else if ("value" in desc && desc.writable) {
    desc.value = value;
  } else {
    var setter = desc.set;

    if (setter !== undefined) {
      setter.call(receiver, value);
    }
  }

  return value;
};

var slicedToArray = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if (Symbol.iterator in Object(arr)) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

var slicedToArrayLoose = function (arr, i) {
  if (Array.isArray(arr)) {
    return arr;
  } else if (Symbol.iterator in Object(arr)) {
    var _arr = [];

    for (var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {
      _arr.push(_step.value);

      if (i && _arr.length === i) break;
    }

    return _arr;
  } else {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }
};

var taggedTemplateLiteral = function (strings, raw) {
  return Object.freeze(Object.defineProperties(strings, {
    raw: {
      value: Object.freeze(raw)
    }
  }));
};

var taggedTemplateLiteralLoose = function (strings, raw) {
  strings.raw = raw;
  return strings;
};

var temporalRef = function (val, name, undef) {
  if (val === undef) {
    throw new ReferenceError(name + " is not defined - temporal dead zone");
  } else {
    return val;
  }
};

var temporalUndefined = {};

var toArray = function (arr) {
  return Array.isArray(arr) ? arr : Array.from(arr);
};

var toConsumableArray = function (arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

    return arr2;
  } else {
    return Array.from(arr);
  }
};



var babelHelpers$1 = Object.freeze({
  jsx: jsx,
  asyncToGenerator: asyncToGenerator,
  classCallCheck: classCallCheck,
  createClass: createClass,
  defineEnumerableProperties: defineEnumerableProperties,
  defaults: defaults,
  defineProperty: defineProperty$1,
  get: get,
  inherits: inherits,
  interopRequireDefault: interopRequireDefault,
  interopRequireWildcard: interopRequireWildcard,
  newArrowCheck: newArrowCheck,
  objectDestructuringEmpty: objectDestructuringEmpty,
  objectWithoutProperties: objectWithoutProperties,
  possibleConstructorReturn: possibleConstructorReturn,
  selfGlobal: selfGlobal,
  set: set,
  slicedToArray: slicedToArray,
  slicedToArrayLoose: slicedToArrayLoose,
  taggedTemplateLiteral: taggedTemplateLiteral,
  taggedTemplateLiteralLoose: taggedTemplateLiteralLoose,
  temporalRef: temporalRef,
  temporalUndefined: temporalUndefined,
  toArray: toArray,
  toConsumableArray: toConsumableArray,
  typeof: _typeof,
  extends: _extends,
  instanceof: _instanceof
});

var realDefineProp = function () {
    var sentinel = function sentinel() {};
    try {
        Object.defineProperty(sentinel, 'a', {
            get: function get() {
                return 1;
            }
        });
        Object.defineProperty(sentinel, 'prototype', { writable: false });
        return sentinel.a === 1 && sentinel.prototype instanceof Object;
    } catch (e) {
        return false;
    }
}();

// Need a workaround for getters in ES3
var es3 = !realDefineProp && !Object.prototype.__defineGetter__;

// We use this a lot (and need it for proto-less objects)
var hop = Object.prototype.hasOwnProperty;

// Naive defineProperty for compatibility
var defineProperty = realDefineProp ? Object.defineProperty : function (obj, name, desc) {
    if ('get' in desc && obj.__defineGetter__) obj.__defineGetter__(name, desc.get);else if (!hop.call(obj, name) || 'value' in desc) obj[name] = desc.value;
};

// Array.prototype.indexOf, as good as we need it to be
var arrIndexOf = Array.prototype.indexOf || function (search) {
    /*jshint validthis:true */
    var t = this;
    if (!t.length) return -1;

    for (var i = arguments[1] || 0, max = t.length; i < max; i++) {
        if (t[i] === search) return i;
    }

    return -1;
};

// Create an object with the specified prototype (2nd arg required for Record)
var objCreate = Object.create || function (proto, props) {
    var obj = void 0;

    function F() {}
    F.prototype = proto;
    obj = new F();

    for (var k in props) {
        if (hop.call(props, k)) defineProperty(obj, k, props[k]);
    }

    return obj;
};

// Snapshot some (hopefully still) native built-ins
var arrSlice = Array.prototype.slice;
var arrConcat = Array.prototype.concat;
var arrPush = Array.prototype.push;
var arrJoin = Array.prototype.join;
var arrShift = Array.prototype.shift;

// Naive Function.prototype.bind for compatibility
var fnBind = Function.prototype.bind || function (thisObj) {
    var fn = this,
        args = arrSlice.call(arguments, 1);

    // All our (presently) bound functions have either 1 or 0 arguments. By returning
    // different function signatures, we can pass some tests in ES3 environments
    if (fn.length === 1) {
        return function () {
            return fn.apply(thisObj, arrConcat.call(args, arrSlice.call(arguments)));
        };
    }
    return function () {
        return fn.apply(thisObj, arrConcat.call(args, arrSlice.call(arguments)));
    };
};

// Object housing internal properties for constructors
var internals = objCreate(null);

// Keep internal properties internal
var secret = Math.random();

// Helper functions
// ================

/**
 * A function to deal with the inaccuracy of calculating log10 in pre-ES6
 * JavaScript environments. Math.log(num) / Math.LN10 was responsible for
 * causing issue #62.
 */
function log10Floor(n) {
    // ES6 provides the more accurate Math.log10
    if (typeof Math.log10 === 'function') return Math.floor(Math.log10(n));

    var x = Math.round(Math.log(n) * Math.LOG10E);
    return x - (Number('1e' + x) > n);
}

/**
 * A map that doesn't contain Object in its prototype chain
 */
function Record(obj) {
    // Copy only own properties over unless this object is already a Record instance
    for (var k in obj) {
        if (obj instanceof Record || hop.call(obj, k)) defineProperty(this, k, { value: obj[k], enumerable: true, writable: true, configurable: true });
    }
}
Record.prototype = objCreate(null);

/**
 * An ordered list
 */
function List() {
    defineProperty(this, 'length', { writable: true, value: 0 });

    if (arguments.length) arrPush.apply(this, arrSlice.call(arguments));
}
List.prototype = objCreate(null);

/**
 * Constructs a regular expression to restore tainted RegExp properties
 */
function createRegExpRestore() {
    if (internals.disableRegExpRestore) {
        return function () {/* no-op */};
    }

    var regExpCache = {
        lastMatch: RegExp.lastMatch || '',
        leftContext: RegExp.leftContext,
        multiline: RegExp.multiline,
        input: RegExp.input
    },
        has = false;

    // Create a snapshot of all the 'captured' properties
    for (var i = 1; i <= 9; i++) {
        has = (regExpCache['$' + i] = RegExp['$' + i]) || has;
    }return function () {
        // Now we've snapshotted some properties, escape the lastMatch string
        var esc = /[.?*+^$[\]\\(){}|-]/g,
            lm = regExpCache.lastMatch.replace(esc, '\\$&'),
            reg = new List();

        // If any of the captured strings were non-empty, iterate over them all
        if (has) {
            for (var _i = 1; _i <= 9; _i++) {
                var m = regExpCache['$' + _i];

                // If it's empty, add an empty capturing group
                if (!m) lm = '()' + lm;

                // Else find the string in lm and escape & wrap it to capture it
                else {
                        m = m.replace(esc, '\\$&');
                        lm = lm.replace(m, '(' + m + ')');
                    }

                // Push it to the reg and chop lm to make sure further groups come after
                arrPush.call(reg, lm.slice(0, lm.indexOf('(') + 1));
                lm = lm.slice(lm.indexOf('(') + 1);
            }
        }

        var exprStr = arrJoin.call(reg, '') + lm;

        // Shorten the regex by replacing each part of the expression with a match
        // for a string of that exact length.  This is safe for the type of
        // expressions generated above, because the expression matches the whole
        // match string, so we know each group and each segment between capturing
        // groups can be matched by its length alone.
        exprStr = exprStr.replace(/(\\\(|\\\)|[^()])+/g, function (match) {
            return '[\\s\\S]{' + match.replace('\\', '').length + '}';
        });

        // Create the regular expression that will reconstruct the RegExp properties
        var expr = new RegExp(exprStr, regExpCache.multiline ? 'gm' : 'g');

        // Set the lastIndex of the generated expression to ensure that the match
        // is found in the correct index.
        expr.lastIndex = regExpCache.leftContext.length;

        expr.exec(regExpCache.input);
    };
}

/**
 * Mimics ES5's abstract ToObject() function
 */
function toObject(arg) {
    if (arg === null) throw new TypeError('Cannot convert null or undefined to object');

    if ((typeof arg === 'undefined' ? 'undefined' : babelHelpers$1['typeof'](arg)) === 'object') return arg;
    return Object(arg);
}

function toNumber(arg) {
    if (typeof arg === 'number') return arg;
    return Number(arg);
}

function toInteger(arg) {
    var number = toNumber(arg);
    if (isNaN(number)) return 0;
    if (number === +0 || number === -0 || number === +Infinity || number === -Infinity) return number;
    if (number < 0) return Math.floor(Math.abs(number)) * -1;
    return Math.floor(Math.abs(number));
}

function toLength(arg) {
    var len = toInteger(arg);
    if (len <= 0) return 0;
    if (len === Infinity) return Math.pow(2, 53) - 1;
    return Math.min(len, Math.pow(2, 53) - 1);
}

/**
 * Returns "internal" properties for an object
 */
function getInternalProperties(obj) {
    if (hop.call(obj, '__getInternalProperties')) return obj.__getInternalProperties(secret);

    return objCreate(null);
}

/**
* Defines regular expressions for various operations related to the BCP 47 syntax,
* as defined at http://tools.ietf.org/html/bcp47#section-2.1
*/

// extlang       = 3ALPHA              ; selected ISO 639 codes
//                 *2("-" 3ALPHA)      ; permanently reserved
var extlang = '[a-z]{3}(?:-[a-z]{3}){0,2}';

// language      = 2*3ALPHA            ; shortest ISO 639 code
//                 ["-" extlang]       ; sometimes followed by
//                                     ; extended language subtags
//               / 4ALPHA              ; or reserved for future use
//               / 5*8ALPHA            ; or registered language subtag
var language = '(?:[a-z]{2,3}(?:-' + extlang + ')?|[a-z]{4}|[a-z]{5,8})';

// script        = 4ALPHA              ; ISO 15924 code
var script = '[a-z]{4}';

// region        = 2ALPHA              ; ISO 3166-1 code
//               / 3DIGIT              ; UN M.49 code
var region = '(?:[a-z]{2}|\\d{3})';

// variant       = 5*8alphanum         ; registered variants
//               / (DIGIT 3alphanum)
var variant = '(?:[a-z0-9]{5,8}|\\d[a-z0-9]{3})';

//                                     ; Single alphanumerics
//                                     ; "x" reserved for private use
// singleton     = DIGIT               ; 0 - 9
//               / %x41-57             ; A - W
//               / %x59-5A             ; Y - Z
//               / %x61-77             ; a - w
//               / %x79-7A             ; y - z
var singleton = '[0-9a-wy-z]';

// extension     = singleton 1*("-" (2*8alphanum))
var extension = singleton + '(?:-[a-z0-9]{2,8})+';

// privateuse    = "x" 1*("-" (1*8alphanum))
var privateuse = 'x(?:-[a-z0-9]{1,8})+';

// irregular     = "en-GB-oed"         ; irregular tags do not match
//               / "i-ami"             ; the 'langtag' production and
//               / "i-bnn"             ; would not otherwise be
//               / "i-default"         ; considered 'well-formed'
//               / "i-enochian"        ; These tags are all valid,
//               / "i-hak"             ; but most are deprecated
//               / "i-klingon"         ; in favor of more modern
//               / "i-lux"             ; subtags or subtag
//               / "i-mingo"           ; combination
//               / "i-navajo"
//               / "i-pwn"
//               / "i-tao"
//               / "i-tay"
//               / "i-tsu"
//               / "sgn-BE-FR"
//               / "sgn-BE-NL"
//               / "sgn-CH-DE"
var irregular = '(?:en-GB-oed' + '|i-(?:ami|bnn|default|enochian|hak|klingon|lux|mingo|navajo|pwn|tao|tay|tsu)' + '|sgn-(?:BE-FR|BE-NL|CH-DE))';

// regular       = "art-lojban"        ; these tags match the 'langtag'
//               / "cel-gaulish"       ; production, but their subtags
//               / "no-bok"            ; are not extended language
//               / "no-nyn"            ; or variant subtags: their meaning
//               / "zh-guoyu"          ; is defined by their registration
//               / "zh-hakka"          ; and all of these are deprecated
//               / "zh-min"            ; in favor of a more modern
//               / "zh-min-nan"        ; subtag or sequence of subtags
//               / "zh-xiang"
var regular = '(?:art-lojban|cel-gaulish|no-bok|no-nyn' + '|zh-(?:guoyu|hakka|min|min-nan|xiang))';

// grandfathered = irregular           ; non-redundant tags registered
//               / regular             ; during the RFC 3066 era
var grandfathered = '(?:' + irregular + '|' + regular + ')';

// langtag       = language
//                 ["-" script]
//                 ["-" region]
//                 *("-" variant)
//                 *("-" extension)
//                 ["-" privateuse]
var langtag = language + '(?:-' + script + ')?(?:-' + region + ')?(?:-' + variant + ')*(?:-' + extension + ')*(?:-' + privateuse + ')?';

// Language-Tag  = langtag             ; normal language tags
//               / privateuse          ; private use tag
//               / grandfathered       ; grandfathered tags
var expBCP47Syntax = RegExp('^(?:' + langtag + '|' + privateuse + '|' + grandfathered + ')$', 'i');

// Match duplicate variants in a language tag
var expVariantDupes = RegExp('^(?!x).*?-(' + variant + ')-(?:\\w{4,8}-(?!x-))*\\1\\b', 'i');

// Match duplicate singletons in a language tag (except in private use)
var expSingletonDupes = RegExp('^(?!x).*?-(' + singleton + ')-(?:\\w+-(?!x-))*\\1\\b', 'i');

// Match all extension sequences
var expExtSequences = RegExp('-' + extension, 'ig');

// Default locale is the first-added locale data for us
var defaultLocale = void 0;
function setDefaultLocale(locale) {
    defaultLocale = locale;
}

// IANA Subtag Registry redundant tag and subtag maps
var redundantTags = {
    tags: {
        "art-lojban": "jbo",
        "i-ami": "ami",
        "i-bnn": "bnn",
        "i-hak": "hak",
        "i-klingon": "tlh",
        "i-lux": "lb",
        "i-navajo": "nv",
        "i-pwn": "pwn",
        "i-tao": "tao",
        "i-tay": "tay",
        "i-tsu": "tsu",
        "no-bok": "nb",
        "no-nyn": "nn",
        "sgn-BE-FR": "sfb",
        "sgn-BE-NL": "vgt",
        "sgn-CH-DE": "sgg",
        "zh-guoyu": "cmn",
        "zh-hakka": "hak",
        "zh-min-nan": "nan",
        "zh-xiang": "hsn",
        "sgn-BR": "bzs",
        "sgn-CO": "csn",
        "sgn-DE": "gsg",
        "sgn-DK": "dsl",
        "sgn-ES": "ssp",
        "sgn-FR": "fsl",
        "sgn-GB": "bfi",
        "sgn-GR": "gss",
        "sgn-IE": "isg",
        "sgn-IT": "ise",
        "sgn-JP": "jsl",
        "sgn-MX": "mfs",
        "sgn-NI": "ncs",
        "sgn-NL": "dse",
        "sgn-NO": "nsl",
        "sgn-PT": "psr",
        "sgn-SE": "swl",
        "sgn-US": "ase",
        "sgn-ZA": "sfs",
        "zh-cmn": "cmn",
        "zh-cmn-Hans": "cmn-Hans",
        "zh-cmn-Hant": "cmn-Hant",
        "zh-gan": "gan",
        "zh-wuu": "wuu",
        "zh-yue": "yue"
    },
    subtags: {
        BU: "MM",
        DD: "DE",
        FX: "FR",
        TP: "TL",
        YD: "YE",
        ZR: "CD",
        heploc: "alalc97",
        'in': "id",
        iw: "he",
        ji: "yi",
        jw: "jv",
        mo: "ro",
        ayx: "nun",
        bjd: "drl",
        ccq: "rki",
        cjr: "mom",
        cka: "cmr",
        cmk: "xch",
        drh: "khk",
        drw: "prs",
        gav: "dev",
        hrr: "jal",
        ibi: "opa",
        kgh: "kml",
        lcq: "ppr",
        mst: "mry",
        myt: "mry",
        sca: "hle",
        tie: "ras",
        tkk: "twm",
        tlw: "weo",
        tnf: "prs",
        ybd: "rki",
        yma: "lrr"
    },
    extLang: {
        aao: ["aao", "ar"],
        abh: ["abh", "ar"],
        abv: ["abv", "ar"],
        acm: ["acm", "ar"],
        acq: ["acq", "ar"],
        acw: ["acw", "ar"],
        acx: ["acx", "ar"],
        acy: ["acy", "ar"],
        adf: ["adf", "ar"],
        ads: ["ads", "sgn"],
        aeb: ["aeb", "ar"],
        aec: ["aec", "ar"],
        aed: ["aed", "sgn"],
        aen: ["aen", "sgn"],
        afb: ["afb", "ar"],
        afg: ["afg", "sgn"],
        ajp: ["ajp", "ar"],
        apc: ["apc", "ar"],
        apd: ["apd", "ar"],
        arb: ["arb", "ar"],
        arq: ["arq", "ar"],
        ars: ["ars", "ar"],
        ary: ["ary", "ar"],
        arz: ["arz", "ar"],
        ase: ["ase", "sgn"],
        asf: ["asf", "sgn"],
        asp: ["asp", "sgn"],
        asq: ["asq", "sgn"],
        asw: ["asw", "sgn"],
        auz: ["auz", "ar"],
        avl: ["avl", "ar"],
        ayh: ["ayh", "ar"],
        ayl: ["ayl", "ar"],
        ayn: ["ayn", "ar"],
        ayp: ["ayp", "ar"],
        bbz: ["bbz", "ar"],
        bfi: ["bfi", "sgn"],
        bfk: ["bfk", "sgn"],
        bjn: ["bjn", "ms"],
        bog: ["bog", "sgn"],
        bqn: ["bqn", "sgn"],
        bqy: ["bqy", "sgn"],
        btj: ["btj", "ms"],
        bve: ["bve", "ms"],
        bvl: ["bvl", "sgn"],
        bvu: ["bvu", "ms"],
        bzs: ["bzs", "sgn"],
        cdo: ["cdo", "zh"],
        cds: ["cds", "sgn"],
        cjy: ["cjy", "zh"],
        cmn: ["cmn", "zh"],
        coa: ["coa", "ms"],
        cpx: ["cpx", "zh"],
        csc: ["csc", "sgn"],
        csd: ["csd", "sgn"],
        cse: ["cse", "sgn"],
        csf: ["csf", "sgn"],
        csg: ["csg", "sgn"],
        csl: ["csl", "sgn"],
        csn: ["csn", "sgn"],
        csq: ["csq", "sgn"],
        csr: ["csr", "sgn"],
        czh: ["czh", "zh"],
        czo: ["czo", "zh"],
        doq: ["doq", "sgn"],
        dse: ["dse", "sgn"],
        dsl: ["dsl", "sgn"],
        dup: ["dup", "ms"],
        ecs: ["ecs", "sgn"],
        esl: ["esl", "sgn"],
        esn: ["esn", "sgn"],
        eso: ["eso", "sgn"],
        eth: ["eth", "sgn"],
        fcs: ["fcs", "sgn"],
        fse: ["fse", "sgn"],
        fsl: ["fsl", "sgn"],
        fss: ["fss", "sgn"],
        gan: ["gan", "zh"],
        gds: ["gds", "sgn"],
        gom: ["gom", "kok"],
        gse: ["gse", "sgn"],
        gsg: ["gsg", "sgn"],
        gsm: ["gsm", "sgn"],
        gss: ["gss", "sgn"],
        gus: ["gus", "sgn"],
        hab: ["hab", "sgn"],
        haf: ["haf", "sgn"],
        hak: ["hak", "zh"],
        hds: ["hds", "sgn"],
        hji: ["hji", "ms"],
        hks: ["hks", "sgn"],
        hos: ["hos", "sgn"],
        hps: ["hps", "sgn"],
        hsh: ["hsh", "sgn"],
        hsl: ["hsl", "sgn"],
        hsn: ["hsn", "zh"],
        icl: ["icl", "sgn"],
        ils: ["ils", "sgn"],
        inl: ["inl", "sgn"],
        ins: ["ins", "sgn"],
        ise: ["ise", "sgn"],
        isg: ["isg", "sgn"],
        isr: ["isr", "sgn"],
        jak: ["jak", "ms"],
        jax: ["jax", "ms"],
        jcs: ["jcs", "sgn"],
        jhs: ["jhs", "sgn"],
        jls: ["jls", "sgn"],
        jos: ["jos", "sgn"],
        jsl: ["jsl", "sgn"],
        jus: ["jus", "sgn"],
        kgi: ["kgi", "sgn"],
        knn: ["knn", "kok"],
        kvb: ["kvb", "ms"],
        kvk: ["kvk", "sgn"],
        kvr: ["kvr", "ms"],
        kxd: ["kxd", "ms"],
        lbs: ["lbs", "sgn"],
        lce: ["lce", "ms"],
        lcf: ["lcf", "ms"],
        liw: ["liw", "ms"],
        lls: ["lls", "sgn"],
        lsg: ["lsg", "sgn"],
        lsl: ["lsl", "sgn"],
        lso: ["lso", "sgn"],
        lsp: ["lsp", "sgn"],
        lst: ["lst", "sgn"],
        lsy: ["lsy", "sgn"],
        ltg: ["ltg", "lv"],
        lvs: ["lvs", "lv"],
        lzh: ["lzh", "zh"],
        max: ["max", "ms"],
        mdl: ["mdl", "sgn"],
        meo: ["meo", "ms"],
        mfa: ["mfa", "ms"],
        mfb: ["mfb", "ms"],
        mfs: ["mfs", "sgn"],
        min: ["min", "ms"],
        mnp: ["mnp", "zh"],
        mqg: ["mqg", "ms"],
        mre: ["mre", "sgn"],
        msd: ["msd", "sgn"],
        msi: ["msi", "ms"],
        msr: ["msr", "sgn"],
        mui: ["mui", "ms"],
        mzc: ["mzc", "sgn"],
        mzg: ["mzg", "sgn"],
        mzy: ["mzy", "sgn"],
        nan: ["nan", "zh"],
        nbs: ["nbs", "sgn"],
        ncs: ["ncs", "sgn"],
        nsi: ["nsi", "sgn"],
        nsl: ["nsl", "sgn"],
        nsp: ["nsp", "sgn"],
        nsr: ["nsr", "sgn"],
        nzs: ["nzs", "sgn"],
        okl: ["okl", "sgn"],
        orn: ["orn", "ms"],
        ors: ["ors", "ms"],
        pel: ["pel", "ms"],
        pga: ["pga", "ar"],
        pks: ["pks", "sgn"],
        prl: ["prl", "sgn"],
        prz: ["prz", "sgn"],
        psc: ["psc", "sgn"],
        psd: ["psd", "sgn"],
        pse: ["pse", "ms"],
        psg: ["psg", "sgn"],
        psl: ["psl", "sgn"],
        pso: ["pso", "sgn"],
        psp: ["psp", "sgn"],
        psr: ["psr", "sgn"],
        pys: ["pys", "sgn"],
        rms: ["rms", "sgn"],
        rsi: ["rsi", "sgn"],
        rsl: ["rsl", "sgn"],
        sdl: ["sdl", "sgn"],
        sfb: ["sfb", "sgn"],
        sfs: ["sfs", "sgn"],
        sgg: ["sgg", "sgn"],
        sgx: ["sgx", "sgn"],
        shu: ["shu", "ar"],
        slf: ["slf", "sgn"],
        sls: ["sls", "sgn"],
        sqk: ["sqk", "sgn"],
        sqs: ["sqs", "sgn"],
        ssh: ["ssh", "ar"],
        ssp: ["ssp", "sgn"],
        ssr: ["ssr", "sgn"],
        svk: ["svk", "sgn"],
        swc: ["swc", "sw"],
        swh: ["swh", "sw"],
        swl: ["swl", "sgn"],
        syy: ["syy", "sgn"],
        tmw: ["tmw", "ms"],
        tse: ["tse", "sgn"],
        tsm: ["tsm", "sgn"],
        tsq: ["tsq", "sgn"],
        tss: ["tss", "sgn"],
        tsy: ["tsy", "sgn"],
        tza: ["tza", "sgn"],
        ugn: ["ugn", "sgn"],
        ugy: ["ugy", "sgn"],
        ukl: ["ukl", "sgn"],
        uks: ["uks", "sgn"],
        urk: ["urk", "ms"],
        uzn: ["uzn", "uz"],
        uzs: ["uzs", "uz"],
        vgt: ["vgt", "sgn"],
        vkk: ["vkk", "ms"],
        vkt: ["vkt", "ms"],
        vsi: ["vsi", "sgn"],
        vsl: ["vsl", "sgn"],
        vsv: ["vsv", "sgn"],
        wuu: ["wuu", "zh"],
        xki: ["xki", "sgn"],
        xml: ["xml", "sgn"],
        xmm: ["xmm", "ms"],
        xms: ["xms", "sgn"],
        yds: ["yds", "sgn"],
        ysl: ["ysl", "sgn"],
        yue: ["yue", "zh"],
        zib: ["zib", "sgn"],
        zlm: ["zlm", "ms"],
        zmi: ["zmi", "ms"],
        zsl: ["zsl", "sgn"],
        zsm: ["zsm", "ms"]
    }
};

/**
 * Convert only a-z to uppercase as per section 6.1 of the spec
 */
function toLatinUpperCase(str) {
    var i = str.length;

    while (i--) {
        var ch = str.charAt(i);

        if (ch >= "a" && ch <= "z") str = str.slice(0, i) + ch.toUpperCase() + str.slice(i + 1);
    }

    return str;
}

/**
 * The IsStructurallyValidLanguageTag abstract operation verifies that the locale
 * argument (which must be a String value)
 *
 * - represents a well-formed BCP 47 language tag as specified in RFC 5646 section
 *   2.1, or successor,
 * - does not include duplicate variant subtags, and
 * - does not include duplicate singleton subtags.
 *
 * The abstract operation returns true if locale can be generated from the ABNF
 * grammar in section 2.1 of the RFC, starting with Language-Tag, and does not
 * contain duplicate variant or singleton subtags (other than as a private use
 * subtag). It returns false otherwise. Terminal value characters in the grammar are
 * interpreted as the Unicode equivalents of the ASCII octet values given.
 */
function /* 6.2.2 */IsStructurallyValidLanguageTag(locale) {
    // represents a well-formed BCP 47 language tag as specified in RFC 5646
    if (!expBCP47Syntax.test(locale)) return false;

    // does not include duplicate variant subtags, and
    if (expVariantDupes.test(locale)) return false;

    // does not include duplicate singleton subtags.
    if (expSingletonDupes.test(locale)) return false;

    return true;
}

/**
 * The CanonicalizeLanguageTag abstract operation returns the canonical and case-
 * regularized form of the locale argument (which must be a String value that is
 * a structurally valid BCP 47 language tag as verified by the
 * IsStructurallyValidLanguageTag abstract operation). It takes the steps
 * specified in RFC 5646 section 4.5, or successor, to bring the language tag
 * into canonical form, and to regularize the case of the subtags, but does not
 * take the steps to bring a language tag into “extlang form” and to reorder
 * variant subtags.

 * The specifications for extensions to BCP 47 language tags, such as RFC 6067,
 * may include canonicalization rules for the extension subtag sequences they
 * define that go beyond the canonicalization rules of RFC 5646 section 4.5.
 * Implementations are allowed, but not required, to apply these additional rules.
 */
function /* 6.2.3 */CanonicalizeLanguageTag(locale) {
    var match = void 0,
        parts = void 0;

    // A language tag is in 'canonical form' when the tag is well-formed
    // according to the rules in Sections 2.1 and 2.2

    // Section 2.1 says all subtags use lowercase...
    locale = locale.toLowerCase();

    // ...with 2 exceptions: 'two-letter and four-letter subtags that neither
    // appear at the start of the tag nor occur after singletons.  Such two-letter
    // subtags are all uppercase (as in the tags "en-CA-x-ca" or "sgn-BE-FR") and
    // four-letter subtags are titlecase (as in the tag "az-Latn-x-latn").
    parts = locale.split('-');
    for (var i = 1, max = parts.length; i < max; i++) {
        // Two-letter subtags are all uppercase
        if (parts[i].length === 2) parts[i] = parts[i].toUpperCase();

        // Four-letter subtags are titlecase
        else if (parts[i].length === 4) parts[i] = parts[i].charAt(0).toUpperCase() + parts[i].slice(1);

            // Is it a singleton?
            else if (parts[i].length === 1 && parts[i] !== 'x') break;
    }
    locale = arrJoin.call(parts, '-');

    // The steps laid out in RFC 5646 section 4.5 are as follows:

    // 1.  Extension sequences are ordered into case-insensitive ASCII order
    //     by singleton subtag.
    if ((match = locale.match(expExtSequences)) && match.length > 1) {
        // The built-in sort() sorts by ASCII order, so use that
        match.sort();

        // Replace all extensions with the joined, sorted array
        locale = locale.replace(RegExp('(?:' + expExtSequences.source + ')+', 'i'), arrJoin.call(match, ''));
    }

    // 2.  Redundant or grandfathered tags are replaced by their 'Preferred-
    //     Value', if there is one.
    if (hop.call(redundantTags.tags, locale)) locale = redundantTags.tags[locale];

    // 3.  Subtags are replaced by their 'Preferred-Value', if there is one.
    //     For extlangs, the original primary language subtag is also
    //     replaced if there is a primary language subtag in the 'Preferred-
    //     Value'.
    parts = locale.split('-');

    for (var _i = 1, _max = parts.length; _i < _max; _i++) {
        if (hop.call(redundantTags.subtags, parts[_i])) parts[_i] = redundantTags.subtags[parts[_i]];else if (hop.call(redundantTags.extLang, parts[_i])) {
            parts[_i] = redundantTags.extLang[parts[_i]][0];

            // For extlang tags, the prefix needs to be removed if it is redundant
            if (_i === 1 && redundantTags.extLang[parts[1]][1] === parts[0]) {
                parts = arrSlice.call(parts, _i++);
                _max -= 1;
            }
        }
    }

    return arrJoin.call(parts, '-');
}

/**
 * The DefaultLocale abstract operation returns a String value representing the
 * structurally valid (6.2.2) and canonicalized (6.2.3) BCP 47 language tag for the
 * host environment’s current locale.
 */
function /* 6.2.4 */DefaultLocale() {
    return defaultLocale;
}

// Sect 6.3 Currency Codes
// =======================

var expCurrencyCode = /^[A-Z]{3}$/;

/**
 * The IsWellFormedCurrencyCode abstract operation verifies that the currency argument
 * (after conversion to a String value) represents a well-formed 3-letter ISO currency
 * code. The following steps are taken:
 */
function /* 6.3.1 */IsWellFormedCurrencyCode(currency) {
    // 1. Let `c` be ToString(currency)
    var c = String(currency);

    // 2. Let `normalized` be the result of mapping c to upper case as described
    //    in 6.1.
    var normalized = toLatinUpperCase(c);

    // 3. If the string length of normalized is not 3, return false.
    // 4. If normalized contains any character that is not in the range "A" to "Z"
    //    (U+0041 to U+005A), return false.
    if (expCurrencyCode.test(normalized) === false) return false;

    // 5. Return true
    return true;
}

var expUnicodeExSeq = /-u(?:-[0-9a-z]{2,8})+/gi; // See `extension` below

function /* 9.2.1 */CanonicalizeLocaleList(locales) {
    // The abstract operation CanonicalizeLocaleList takes the following steps:

    // 1. If locales is undefined, then a. Return a new empty List
    if (locales === undefined) return new List();

    // 2. Let seen be a new empty List.
    var seen = new List();

    // 3. If locales is a String value, then
    //    a. Let locales be a new array created as if by the expression new
    //    Array(locales) where Array is the standard built-in constructor with
    //    that name and locales is the value of locales.
    locales = typeof locales === 'string' ? [locales] : locales;

    // 4. Let O be ToObject(locales).
    var O = toObject(locales);

    // 5. Let lenValue be the result of calling the [[Get]] internal method of
    //    O with the argument "length".
    // 6. Let len be ToUint32(lenValue).
    var len = toLength(O.length);

    // 7. Let k be 0.
    var k = 0;

    // 8. Repeat, while k < len
    while (k < len) {
        // a. Let Pk be ToString(k).
        var Pk = String(k);

        // b. Let kPresent be the result of calling the [[HasProperty]] internal
        //    method of O with argument Pk.
        var kPresent = Pk in O;

        // c. If kPresent is true, then
        if (kPresent) {
            // i. Let kValue be the result of calling the [[Get]] internal
            //     method of O with argument Pk.
            var kValue = O[Pk];

            // ii. If the type of kValue is not String or Object, then throw a
            //     TypeError exception.
            if (kValue === null || typeof kValue !== 'string' && (typeof kValue === "undefined" ? "undefined" : babelHelpers$1["typeof"](kValue)) !== 'object') throw new TypeError('String or Object type expected');

            // iii. Let tag be ToString(kValue).
            var tag = String(kValue);

            // iv. If the result of calling the abstract operation
            //     IsStructurallyValidLanguageTag (defined in 6.2.2), passing tag as
            //     the argument, is false, then throw a RangeError exception.
            if (!IsStructurallyValidLanguageTag(tag)) throw new RangeError("'" + tag + "' is not a structurally valid language tag");

            // v. Let tag be the result of calling the abstract operation
            //    CanonicalizeLanguageTag (defined in 6.2.3), passing tag as the
            //    argument.
            tag = CanonicalizeLanguageTag(tag);

            // vi. If tag is not an element of seen, then append tag as the last
            //     element of seen.
            if (arrIndexOf.call(seen, tag) === -1) arrPush.call(seen, tag);
        }

        // d. Increase k by 1.
        k++;
    }

    // 9. Return seen.
    return seen;
}

/**
 * The BestAvailableLocale abstract operation compares the provided argument
 * locale, which must be a String value with a structurally valid and
 * canonicalized BCP 47 language tag, against the locales in availableLocales and
 * returns either the longest non-empty prefix of locale that is an element of
 * availableLocales, or undefined if there is no such element. It uses the
 * fallback mechanism of RFC 4647, section 3.4. The following steps are taken:
 */
function /* 9.2.2 */BestAvailableLocale(availableLocales, locale) {
    // 1. Let candidate be locale
    var candidate = locale;

    // 2. Repeat
    while (candidate) {
        // a. If availableLocales contains an element equal to candidate, then return
        // candidate.
        if (arrIndexOf.call(availableLocales, candidate) > -1) return candidate;

        // b. Let pos be the character index of the last occurrence of "-"
        // (U+002D) within candidate. If that character does not occur, return
        // undefined.
        var pos = candidate.lastIndexOf('-');

        if (pos < 0) return;

        // c. If pos ≥ 2 and the character "-" occurs at index pos-2 of candidate,
        //    then decrease pos by 2.
        if (pos >= 2 && candidate.charAt(pos - 2) === '-') pos -= 2;

        // d. Let candidate be the substring of candidate from position 0, inclusive,
        //    to position pos, exclusive.
        candidate = candidate.substring(0, pos);
    }
}

/**
 * The LookupMatcher abstract operation compares requestedLocales, which must be
 * a List as returned by CanonicalizeLocaleList, against the locales in
 * availableLocales and determines the best available language to meet the
 * request. The following steps are taken:
 */
function /* 9.2.3 */LookupMatcher(availableLocales, requestedLocales) {
    // 1. Let i be 0.
    var i = 0;

    // 2. Let len be the number of elements in requestedLocales.
    var len = requestedLocales.length;

    // 3. Let availableLocale be undefined.
    var availableLocale = void 0;

    var locale = void 0,
        noExtensionsLocale = void 0;

    // 4. Repeat while i < len and availableLocale is undefined:
    while (i < len && !availableLocale) {
        // a. Let locale be the element of requestedLocales at 0-origined list
        //    position i.
        locale = requestedLocales[i];

        // b. Let noExtensionsLocale be the String value that is locale with all
        //    Unicode locale extension sequences removed.
        noExtensionsLocale = String(locale).replace(expUnicodeExSeq, '');

        // c. Let availableLocale be the result of calling the
        //    BestAvailableLocale abstract operation (defined in 9.2.2) with
        //    arguments availableLocales and noExtensionsLocale.
        availableLocale = BestAvailableLocale(availableLocales, noExtensionsLocale);

        // d. Increase i by 1.
        i++;
    }

    // 5. Let result be a new Record.
    var result = new Record();

    // 6. If availableLocale is not undefined, then
    if (availableLocale !== undefined) {
        // a. Set result.[[locale]] to availableLocale.
        result['[[locale]]'] = availableLocale;

        // b. If locale and noExtensionsLocale are not the same String value, then
        if (String(locale) !== String(noExtensionsLocale)) {
            // i. Let extension be the String value consisting of the first
            //    substring of locale that is a Unicode locale extension sequence.
            var extension = locale.match(expUnicodeExSeq)[0];

            // ii. Let extensionIndex be the character position of the initial
            //     "-" of the first Unicode locale extension sequence within locale.
            var extensionIndex = locale.indexOf('-u-');

            // iii. Set result.[[extension]] to extension.
            result['[[extension]]'] = extension;

            // iv. Set result.[[extensionIndex]] to extensionIndex.
            result['[[extensionIndex]]'] = extensionIndex;
        }
    }
    // 7. Else
    else
        // a. Set result.[[locale]] to the value returned by the DefaultLocale abstract
        //    operation (defined in 6.2.4).
        result['[[locale]]'] = DefaultLocale();

    // 8. Return result
    return result;
}

/**
 * The BestFitMatcher abstract operation compares requestedLocales, which must be
 * a List as returned by CanonicalizeLocaleList, against the locales in
 * availableLocales and determines the best available language to meet the
 * request. The algorithm is implementation dependent, but should produce results
 * that a typical user of the requested locales would perceive as at least as
 * good as those produced by the LookupMatcher abstract operation. Options
 * specified through Unicode locale extension sequences must be ignored by the
 * algorithm. Information about such subsequences is returned separately.
 * The abstract operation returns a record with a [[locale]] field, whose value
 * is the language tag of the selected locale, which must be an element of
 * availableLocales. If the language tag of the request locale that led to the
 * selected locale contained a Unicode locale extension sequence, then the
 * returned record also contains an [[extension]] field whose value is the first
 * Unicode locale extension sequence, and an [[extensionIndex]] field whose value
 * is the index of the first Unicode locale extension sequence within the request
 * locale language tag.
 */
function /* 9.2.4 */BestFitMatcher(availableLocales, requestedLocales) {
    return LookupMatcher(availableLocales, requestedLocales);
}

/**
 * The ResolveLocale abstract operation compares a BCP 47 language priority list
 * requestedLocales against the locales in availableLocales and determines the
 * best available language to meet the request. availableLocales and
 * requestedLocales must be provided as List values, options as a Record.
 */
function /* 9.2.5 */ResolveLocale(availableLocales, requestedLocales, options, relevantExtensionKeys, localeData) {
    if (availableLocales.length === 0) {
        throw new ReferenceError('No locale data has been provided for this object yet.');
    }

    // The following steps are taken:
    // 1. Let matcher be the value of options.[[localeMatcher]].
    var matcher = options['[[localeMatcher]]'];

    var r = void 0;

    // 2. If matcher is "lookup", then
    if (matcher === 'lookup')
        // a. Let r be the result of calling the LookupMatcher abstract operation
        //    (defined in 9.2.3) with arguments availableLocales and
        //    requestedLocales.
        r = LookupMatcher(availableLocales, requestedLocales);

        // 3. Else
    else
        // a. Let r be the result of calling the BestFitMatcher abstract
        //    operation (defined in 9.2.4) with arguments availableLocales and
        //    requestedLocales.
        r = BestFitMatcher(availableLocales, requestedLocales);

    // 4. Let foundLocale be the value of r.[[locale]].
    var foundLocale = r['[[locale]]'];

    var extensionSubtags = void 0,
        extensionSubtagsLength = void 0;

    // 5. If r has an [[extension]] field, then
    if (hop.call(r, '[[extension]]')) {
        // a. Let extension be the value of r.[[extension]].
        var extension = r['[[extension]]'];
        // b. Let split be the standard built-in function object defined in ES5,
        //    15.5.4.14.
        var split = String.prototype.split;
        // c. Let extensionSubtags be the result of calling the [[Call]] internal
        //    method of split with extension as the this value and an argument
        //    list containing the single item "-".
        extensionSubtags = split.call(extension, '-');
        // d. Let extensionSubtagsLength be the result of calling the [[Get]]
        //    internal method of extensionSubtags with argument "length".
        extensionSubtagsLength = extensionSubtags.length;
    }

    // 6. Let result be a new Record.
    var result = new Record();

    // 7. Set result.[[dataLocale]] to foundLocale.
    result['[[dataLocale]]'] = foundLocale;

    // 8. Let supportedExtension be "-u".
    var supportedExtension = '-u';
    // 9. Let i be 0.
    var i = 0;
    // 10. Let len be the result of calling the [[Get]] internal method of
    //     relevantExtensionKeys with argument "length".
    var len = relevantExtensionKeys.length;

    // 11 Repeat while i < len:
    while (i < len) {
        // a. Let key be the result of calling the [[Get]] internal method of
        //    relevantExtensionKeys with argument ToString(i).
        var key = relevantExtensionKeys[i];
        // b. Let foundLocaleData be the result of calling the [[Get]] internal
        //    method of localeData with the argument foundLocale.
        var foundLocaleData = localeData[foundLocale];
        // c. Let keyLocaleData be the result of calling the [[Get]] internal
        //    method of foundLocaleData with the argument key.
        var keyLocaleData = foundLocaleData[key];
        // d. Let value be the result of calling the [[Get]] internal method of
        //    keyLocaleData with argument "0".
        var value = keyLocaleData['0'];
        // e. Let supportedExtensionAddition be "".
        var supportedExtensionAddition = '';
        // f. Let indexOf be the standard built-in function object defined in
        //    ES5, 15.4.4.14.
        var indexOf = arrIndexOf;

        // g. If extensionSubtags is not undefined, then
        if (extensionSubtags !== undefined) {
            // i. Let keyPos be the result of calling the [[Call]] internal
            //    method of indexOf with extensionSubtags as the this value and
            // an argument list containing the single item key.
            var keyPos = indexOf.call(extensionSubtags, key);

            // ii. If keyPos ≠ -1, then
            if (keyPos !== -1) {
                // 1. If keyPos + 1 < extensionSubtagsLength and the length of the
                //    result of calling the [[Get]] internal method of
                //    extensionSubtags with argument ToString(keyPos +1) is greater
                //    than 2, then
                if (keyPos + 1 < extensionSubtagsLength && extensionSubtags[keyPos + 1].length > 2) {
                    // a. Let requestedValue be the result of calling the [[Get]]
                    //    internal method of extensionSubtags with argument
                    //    ToString(keyPos + 1).
                    var requestedValue = extensionSubtags[keyPos + 1];
                    // b. Let valuePos be the result of calling the [[Call]]
                    //    internal method of indexOf with keyLocaleData as the
                    //    this value and an argument list containing the single
                    //    item requestedValue.
                    var valuePos = indexOf.call(keyLocaleData, requestedValue);

                    // c. If valuePos ≠ -1, then
                    if (valuePos !== -1) {
                        // i. Let value be requestedValue.
                        value = requestedValue,
                        // ii. Let supportedExtensionAddition be the
                        //     concatenation of "-", key, "-", and value.
                        supportedExtensionAddition = '-' + key + '-' + value;
                    }
                }
                // 2. Else
                else {
                        // a. Let valuePos be the result of calling the [[Call]]
                        // internal method of indexOf with keyLocaleData as the this
                        // value and an argument list containing the single item
                        // "true".
                        var _valuePos = indexOf(keyLocaleData, 'true');

                        // b. If valuePos ≠ -1, then
                        if (_valuePos !== -1)
                            // i. Let value be "true".
                            value = 'true';
                    }
            }
        }
        // h. If options has a field [[<key>]], then
        if (hop.call(options, '[[' + key + ']]')) {
            // i. Let optionsValue be the value of options.[[<key>]].
            var optionsValue = options['[[' + key + ']]'];

            // ii. If the result of calling the [[Call]] internal method of indexOf
            //     with keyLocaleData as the this value and an argument list
            //     containing the single item optionsValue is not -1, then
            if (indexOf.call(keyLocaleData, optionsValue) !== -1) {
                // 1. If optionsValue is not equal to value, then
                if (optionsValue !== value) {
                    // a. Let value be optionsValue.
                    value = optionsValue;
                    // b. Let supportedExtensionAddition be "".
                    supportedExtensionAddition = '';
                }
            }
        }
        // i. Set result.[[<key>]] to value.
        result['[[' + key + ']]'] = value;

        // j. Append supportedExtensionAddition to supportedExtension.
        supportedExtension += supportedExtensionAddition;

        // k. Increase i by 1.
        i++;
    }
    // 12. If the length of supportedExtension is greater than 2, then
    if (supportedExtension.length > 2) {
        // a.
        var privateIndex = foundLocale.indexOf("-x-");
        // b.
        if (privateIndex === -1) {
            // i.
            foundLocale = foundLocale + supportedExtension;
        }
        // c.
        else {
                // i.
                var preExtension = foundLocale.substring(0, privateIndex);
                // ii.
                var postExtension = foundLocale.substring(privateIndex);
                // iii.
                foundLocale = preExtension + supportedExtension + postExtension;
            }
        // d. asserting - skipping
        // e.
        foundLocale = CanonicalizeLanguageTag(foundLocale);
    }
    // 13. Set result.[[locale]] to foundLocale.
    result['[[locale]]'] = foundLocale;

    // 14. Return result.
    return result;
}

/**
 * The LookupSupportedLocales abstract operation returns the subset of the
 * provided BCP 47 language priority list requestedLocales for which
 * availableLocales has a matching locale when using the BCP 47 Lookup algorithm.
 * Locales appear in the same order in the returned list as in requestedLocales.
 * The following steps are taken:
 */
function /* 9.2.6 */LookupSupportedLocales(availableLocales, requestedLocales) {
    // 1. Let len be the number of elements in requestedLocales.
    var len = requestedLocales.length;
    // 2. Let subset be a new empty List.
    var subset = new List();
    // 3. Let k be 0.
    var k = 0;

    // 4. Repeat while k < len
    while (k < len) {
        // a. Let locale be the element of requestedLocales at 0-origined list
        //    position k.
        var locale = requestedLocales[k];
        // b. Let noExtensionsLocale be the String value that is locale with all
        //    Unicode locale extension sequences removed.
        var noExtensionsLocale = String(locale).replace(expUnicodeExSeq, '');
        // c. Let availableLocale be the result of calling the
        //    BestAvailableLocale abstract operation (defined in 9.2.2) with
        //    arguments availableLocales and noExtensionsLocale.
        var availableLocale = BestAvailableLocale(availableLocales, noExtensionsLocale);

        // d. If availableLocale is not undefined, then append locale to the end of
        //    subset.
        if (availableLocale !== undefined) arrPush.call(subset, locale);

        // e. Increment k by 1.
        k++;
    }

    // 5. Let subsetArray be a new Array object whose elements are the same
    //    values in the same order as the elements of subset.
    var subsetArray = arrSlice.call(subset);

    // 6. Return subsetArray.
    return subsetArray;
}

/**
 * The BestFitSupportedLocales abstract operation returns the subset of the
 * provided BCP 47 language priority list requestedLocales for which
 * availableLocales has a matching locale when using the Best Fit Matcher
 * algorithm. Locales appear in the same order in the returned list as in
 * requestedLocales. The steps taken are implementation dependent.
 */
function /*9.2.7 */BestFitSupportedLocales(availableLocales, requestedLocales) {
    // ###TODO: implement this function as described by the specification###
    return LookupSupportedLocales(availableLocales, requestedLocales);
}

/**
 * The SupportedLocales abstract operation returns the subset of the provided BCP
 * 47 language priority list requestedLocales for which availableLocales has a
 * matching locale. Two algorithms are available to match the locales: the Lookup
 * algorithm described in RFC 4647 section 3.4, and an implementation dependent
 * best-fit algorithm. Locales appear in the same order in the returned list as
 * in requestedLocales. The following steps are taken:
 */
function /*9.2.8 */SupportedLocales(availableLocales, requestedLocales, options) {
    var matcher = void 0,
        subset = void 0;

    // 1. If options is not undefined, then
    if (options !== undefined) {
        // a. Let options be ToObject(options).
        options = new Record(toObject(options));
        // b. Let matcher be the result of calling the [[Get]] internal method of
        //    options with argument "localeMatcher".
        matcher = options.localeMatcher;

        // c. If matcher is not undefined, then
        if (matcher !== undefined) {
            // i. Let matcher be ToString(matcher).
            matcher = String(matcher);

            // ii. If matcher is not "lookup" or "best fit", then throw a RangeError
            //     exception.
            if (matcher !== 'lookup' && matcher !== 'best fit') throw new RangeError('matcher should be "lookup" or "best fit"');
        }
    }
    // 2. If matcher is undefined or "best fit", then
    if (matcher === undefined || matcher === 'best fit')
        // a. Let subset be the result of calling the BestFitSupportedLocales
        //    abstract operation (defined in 9.2.7) with arguments
        //    availableLocales and requestedLocales.
        subset = BestFitSupportedLocales(availableLocales, requestedLocales);
        // 3. Else
    else
        // a. Let subset be the result of calling the LookupSupportedLocales
        //    abstract operation (defined in 9.2.6) with arguments
        //    availableLocales and requestedLocales.
        subset = LookupSupportedLocales(availableLocales, requestedLocales);

    // 4. For each named own property name P of subset,
    for (var P in subset) {
        if (!hop.call(subset, P)) continue;

        // a. Let desc be the result of calling the [[GetOwnProperty]] internal
        //    method of subset with P.
        // b. Set desc.[[Writable]] to false.
        // c. Set desc.[[Configurable]] to false.
        // d. Call the [[DefineOwnProperty]] internal method of subset with P, desc,
        //    and true as arguments.
        defineProperty(subset, P, {
            writable: false, configurable: false, value: subset[P]
        });
    }
    // "Freeze" the array so no new elements can be added
    defineProperty(subset, 'length', { writable: false });

    // 5. Return subset
    return subset;
}

/**
 * The GetOption abstract operation extracts the value of the property named
 * property from the provided options object, converts it to the required type,
 * checks whether it is one of a List of allowed values, and fills in a fallback
 * value if necessary.
 */
function /*9.2.9 */GetOption(options, property, type, values, fallback) {
    // 1. Let value be the result of calling the [[Get]] internal method of
    //    options with argument property.
    var value = options[property];

    // 2. If value is not undefined, then
    if (value !== undefined) {
        // a. Assert: type is "boolean" or "string".
        // b. If type is "boolean", then let value be ToBoolean(value).
        // c. If type is "string", then let value be ToString(value).
        value = type === 'boolean' ? Boolean(value) : type === 'string' ? String(value) : value;

        // d. If values is not undefined, then
        if (values !== undefined) {
            // i. If values does not contain an element equal to value, then throw a
            //    RangeError exception.
            if (arrIndexOf.call(values, value) === -1) throw new RangeError("'" + value + "' is not an allowed value for `" + property + '`');
        }

        // e. Return value.
        return value;
    }
    // Else return fallback.
    return fallback;
}

/**
 * The GetNumberOption abstract operation extracts a property value from the
 * provided options object, converts it to a Number value, checks whether it is
 * in the allowed range, and fills in a fallback value if necessary.
 */
function /* 9.2.10 */GetNumberOption(options, property, minimum, maximum, fallback) {
    // 1. Let value be the result of calling the [[Get]] internal method of
    //    options with argument property.
    var value = options[property];

    // 2. If value is not undefined, then
    if (value !== undefined) {
        // a. Let value be ToNumber(value).
        value = Number(value);

        // b. If value is NaN or less than minimum or greater than maximum, throw a
        //    RangeError exception.
        if (isNaN(value) || value < minimum || value > maximum) throw new RangeError('Value is not a number or outside accepted range');

        // c. Return floor(value).
        return Math.floor(value);
    }
    // 3. Else return fallback.
    return fallback;
}

// 8 The Intl Object
var Intl = {};

// 8.2 Function Properties of the Intl Object

// 8.2.1
// @spec[tc39/ecma402/master/spec/intl.html]
// @clause[sec-intl.getcanonicallocales]
function getCanonicalLocales(locales) {
    // 1. Let ll be ? CanonicalizeLocaleList(locales).
    var ll = CanonicalizeLocaleList(locales);
    // 2. Return CreateArrayFromList(ll).
    {
        var result = [];

        var len = ll.length;
        var k = 0;

        while (k < len) {
            result[k] = ll[k];
            k++;
        }
        return result;
    }
}

Object.defineProperty(Intl, 'getCanonicalLocales', {
    enumerable: false,
    configurable: true,
    writable: true,
    value: getCanonicalLocales
});

// Currency minor units output from get-4217 grunt task, formatted
var currencyMinorUnits = {
    BHD: 3, BYR: 0, XOF: 0, BIF: 0, XAF: 0, CLF: 4, CLP: 0, KMF: 0, DJF: 0,
    XPF: 0, GNF: 0, ISK: 0, IQD: 3, JPY: 0, JOD: 3, KRW: 0, KWD: 3, LYD: 3,
    OMR: 3, PYG: 0, RWF: 0, TND: 3, UGX: 0, UYI: 0, VUV: 0, VND: 0
};

// Define the NumberFormat constructor internally so it cannot be tainted
function NumberFormatConstructor() {
    var locales = arguments[0];
    var options = arguments[1];

    if (!this || this === Intl) {
        return new Intl.NumberFormat(locales, options);
    }

    return InitializeNumberFormat(toObject(this), locales, options);
}

defineProperty(Intl, 'NumberFormat', {
    configurable: true,
    writable: true,
    value: NumberFormatConstructor
});

// Must explicitly set prototypes as unwritable
defineProperty(Intl.NumberFormat, 'prototype', {
    writable: false
});

/**
 * The abstract operation InitializeNumberFormat accepts the arguments
 * numberFormat (which must be an object), locales, and options. It initializes
 * numberFormat as a NumberFormat object.
 */
function /*11.1.1.1 */InitializeNumberFormat(numberFormat, locales, options) {
    // This will be a internal properties object if we're not already initialized
    var internal = getInternalProperties(numberFormat);

    // Create an object whose props can be used to restore the values of RegExp props
    var regexpRestore = createRegExpRestore();

    // 1. If numberFormat has an [[initializedIntlObject]] internal property with
    // value true, throw a TypeError exception.
    if (internal['[[initializedIntlObject]]'] === true) throw new TypeError('`this` object has already been initialized as an Intl object');

    // Need this to access the `internal` object
    defineProperty(numberFormat, '__getInternalProperties', {
        value: function value() {
            // NOTE: Non-standard, for internal use only
            if (arguments[0] === secret) return internal;
        }
    });

    // 2. Set the [[initializedIntlObject]] internal property of numberFormat to true.
    internal['[[initializedIntlObject]]'] = true;

    // 3. Let requestedLocales be the result of calling the CanonicalizeLocaleList
    //    abstract operation (defined in 9.2.1) with argument locales.
    var requestedLocales = CanonicalizeLocaleList(locales);

    // 4. If options is undefined, then
    if (options === undefined)
        // a. Let options be the result of creating a new object as if by the
        // expression new Object() where Object is the standard built-in constructor
        // with that name.
        options = {};

        // 5. Else
    else
        // a. Let options be ToObject(options).
        options = toObject(options);

    // 6. Let opt be a new Record.
    var opt = new Record(),


    // 7. Let matcher be the result of calling the GetOption abstract operation
    //    (defined in 9.2.9) with the arguments options, "localeMatcher", "string",
    //    a List containing the two String values "lookup" and "best fit", and
    //    "best fit".
    matcher = GetOption(options, 'localeMatcher', 'string', new List('lookup', 'best fit'), 'best fit');

    // 8. Set opt.[[localeMatcher]] to matcher.
    opt['[[localeMatcher]]'] = matcher;

    // 9. Let NumberFormat be the standard built-in object that is the initial value
    //    of Intl.NumberFormat.
    // 10. Let localeData be the value of the [[localeData]] internal property of
    //     NumberFormat.
    var localeData = internals.NumberFormat['[[localeData]]'];

    // 11. Let r be the result of calling the ResolveLocale abstract operation
    //     (defined in 9.2.5) with the [[availableLocales]] internal property of
    //     NumberFormat, requestedLocales, opt, the [[relevantExtensionKeys]]
    //     internal property of NumberFormat, and localeData.
    var r = ResolveLocale(internals.NumberFormat['[[availableLocales]]'], requestedLocales, opt, internals.NumberFormat['[[relevantExtensionKeys]]'], localeData);

    // 12. Set the [[locale]] internal property of numberFormat to the value of
    //     r.[[locale]].
    internal['[[locale]]'] = r['[[locale]]'];

    // 13. Set the [[numberingSystem]] internal property of numberFormat to the value
    //     of r.[[nu]].
    internal['[[numberingSystem]]'] = r['[[nu]]'];

    // The specification doesn't tell us to do this, but it's helpful later on
    internal['[[dataLocale]]'] = r['[[dataLocale]]'];

    // 14. Let dataLocale be the value of r.[[dataLocale]].
    var dataLocale = r['[[dataLocale]]'];

    // 15. Let s be the result of calling the GetOption abstract operation with the
    //     arguments options, "style", "string", a List containing the three String
    //     values "decimal", "percent", and "currency", and "decimal".
    var s = GetOption(options, 'style', 'string', new List('decimal', 'percent', 'currency'), 'decimal');

    // 16. Set the [[style]] internal property of numberFormat to s.
    internal['[[style]]'] = s;

    // 17. Let c be the result of calling the GetOption abstract operation with the
    //     arguments options, "currency", "string", undefined, and undefined.
    var c = GetOption(options, 'currency', 'string');

    // 18. If c is not undefined and the result of calling the
    //     IsWellFormedCurrencyCode abstract operation (defined in 6.3.1) with
    //     argument c is false, then throw a RangeError exception.
    if (c !== undefined && !IsWellFormedCurrencyCode(c)) throw new RangeError("'" + c + "' is not a valid currency code");

    // 19. If s is "currency" and c is undefined, throw a TypeError exception.
    if (s === 'currency' && c === undefined) throw new TypeError('Currency code is required when style is currency');

    var cDigits = void 0;

    // 20. If s is "currency", then
    if (s === 'currency') {
        // a. Let c be the result of converting c to upper case as specified in 6.1.
        c = c.toUpperCase();

        // b. Set the [[currency]] internal property of numberFormat to c.
        internal['[[currency]]'] = c;

        // c. Let cDigits be the result of calling the CurrencyDigits abstract
        //    operation (defined below) with argument c.
        cDigits = CurrencyDigits(c);
    }

    // 21. Let cd be the result of calling the GetOption abstract operation with the
    //     arguments options, "currencyDisplay", "string", a List containing the
    //     three String values "code", "symbol", and "name", and "symbol".
    var cd = GetOption(options, 'currencyDisplay', 'string', new List('code', 'symbol', 'name'), 'symbol');

    // 22. If s is "currency", then set the [[currencyDisplay]] internal property of
    //     numberFormat to cd.
    if (s === 'currency') internal['[[currencyDisplay]]'] = cd;

    // 23. Let mnid be the result of calling the GetNumberOption abstract operation
    //     (defined in 9.2.10) with arguments options, "minimumIntegerDigits", 1, 21,
    //     and 1.
    var mnid = GetNumberOption(options, 'minimumIntegerDigits', 1, 21, 1);

    // 24. Set the [[minimumIntegerDigits]] internal property of numberFormat to mnid.
    internal['[[minimumIntegerDigits]]'] = mnid;

    // 25. If s is "currency", then let mnfdDefault be cDigits; else let mnfdDefault
    //     be 0.
    var mnfdDefault = s === 'currency' ? cDigits : 0;

    // 26. Let mnfd be the result of calling the GetNumberOption abstract operation
    //     with arguments options, "minimumFractionDigits", 0, 20, and mnfdDefault.
    var mnfd = GetNumberOption(options, 'minimumFractionDigits', 0, 20, mnfdDefault);

    // 27. Set the [[minimumFractionDigits]] internal property of numberFormat to mnfd.
    internal['[[minimumFractionDigits]]'] = mnfd;

    // 28. If s is "currency", then let mxfdDefault be max(mnfd, cDigits); else if s
    //     is "percent", then let mxfdDefault be max(mnfd, 0); else let mxfdDefault
    //     be max(mnfd, 3).
    var mxfdDefault = s === 'currency' ? Math.max(mnfd, cDigits) : s === 'percent' ? Math.max(mnfd, 0) : Math.max(mnfd, 3);

    // 29. Let mxfd be the result of calling the GetNumberOption abstract operation
    //     with arguments options, "maximumFractionDigits", mnfd, 20, and mxfdDefault.
    var mxfd = GetNumberOption(options, 'maximumFractionDigits', mnfd, 20, mxfdDefault);

    // 30. Set the [[maximumFractionDigits]] internal property of numberFormat to mxfd.
    internal['[[maximumFractionDigits]]'] = mxfd;

    // 31. Let mnsd be the result of calling the [[Get]] internal method of options
    //     with argument "minimumSignificantDigits".
    var mnsd = options.minimumSignificantDigits;

    // 32. Let mxsd be the result of calling the [[Get]] internal method of options
    //     with argument "maximumSignificantDigits".
    var mxsd = options.maximumSignificantDigits;

    // 33. If mnsd is not undefined or mxsd is not undefined, then:
    if (mnsd !== undefined || mxsd !== undefined) {
        // a. Let mnsd be the result of calling the GetNumberOption abstract
        //    operation with arguments options, "minimumSignificantDigits", 1, 21,
        //    and 1.
        mnsd = GetNumberOption(options, 'minimumSignificantDigits', 1, 21, 1);

        // b. Let mxsd be the result of calling the GetNumberOption abstract
        //     operation with arguments options, "maximumSignificantDigits", mnsd,
        //     21, and 21.
        mxsd = GetNumberOption(options, 'maximumSignificantDigits', mnsd, 21, 21);

        // c. Set the [[minimumSignificantDigits]] internal property of numberFormat
        //    to mnsd, and the [[maximumSignificantDigits]] internal property of
        //    numberFormat to mxsd.
        internal['[[minimumSignificantDigits]]'] = mnsd;
        internal['[[maximumSignificantDigits]]'] = mxsd;
    }
    // 34. Let g be the result of calling the GetOption abstract operation with the
    //     arguments options, "useGrouping", "boolean", undefined, and true.
    var g = GetOption(options, 'useGrouping', 'boolean', undefined, true);

    // 35. Set the [[useGrouping]] internal property of numberFormat to g.
    internal['[[useGrouping]]'] = g;

    // 36. Let dataLocaleData be the result of calling the [[Get]] internal method of
    //     localeData with argument dataLocale.
    var dataLocaleData = localeData[dataLocale];

    // 37. Let patterns be the result of calling the [[Get]] internal method of
    //     dataLocaleData with argument "patterns".
    var patterns = dataLocaleData.patterns;

    // 38. Assert: patterns is an object (see 11.2.3)

    // 39. Let stylePatterns be the result of calling the [[Get]] internal method of
    //     patterns with argument s.
    var stylePatterns = patterns[s];

    // 40. Set the [[positivePattern]] internal property of numberFormat to the
    //     result of calling the [[Get]] internal method of stylePatterns with the
    //     argument "positivePattern".
    internal['[[positivePattern]]'] = stylePatterns.positivePattern;

    // 41. Set the [[negativePattern]] internal property of numberFormat to the
    //     result of calling the [[Get]] internal method of stylePatterns with the
    //     argument "negativePattern".
    internal['[[negativePattern]]'] = stylePatterns.negativePattern;

    // 42. Set the [[boundFormat]] internal property of numberFormat to undefined.
    internal['[[boundFormat]]'] = undefined;

    // 43. Set the [[initializedNumberFormat]] internal property of numberFormat to
    //     true.
    internal['[[initializedNumberFormat]]'] = true;

    // In ES3, we need to pre-bind the format() function
    if (es3) numberFormat.format = GetFormatNumber.call(numberFormat);

    // Restore the RegExp properties
    regexpRestore();

    // Return the newly initialised object
    return numberFormat;
}

function CurrencyDigits(currency) {
    // When the CurrencyDigits abstract operation is called with an argument currency
    // (which must be an upper case String value), the following steps are taken:

    // 1. If the ISO 4217 currency and funds code list contains currency as an
    // alphabetic code, then return the minor unit value corresponding to the
    // currency from the list; else return 2.
    return currencyMinorUnits[currency] !== undefined ? currencyMinorUnits[currency] : 2;
}

/* 11.2.3 */internals.NumberFormat = {
    '[[availableLocales]]': [],
    '[[relevantExtensionKeys]]': ['nu'],
    '[[localeData]]': {}
};

/**
 * When the supportedLocalesOf method of Intl.NumberFormat is called, the
 * following steps are taken:
 */
/* 11.2.2 */
defineProperty(Intl.NumberFormat, 'supportedLocalesOf', {
    configurable: true,
    writable: true,
    value: fnBind.call(function (locales) {
        // Bound functions only have the `this` value altered if being used as a constructor,
        // this lets us imitate a native function that has no constructor
        if (!hop.call(this, '[[availableLocales]]')) throw new TypeError('supportedLocalesOf() is not a constructor');

        // Create an object whose props can be used to restore the values of RegExp props
        var regexpRestore = createRegExpRestore(),


        // 1. If options is not provided, then let options be undefined.
        options = arguments[1],


        // 2. Let availableLocales be the value of the [[availableLocales]] internal
        //    property of the standard built-in object that is the initial value of
        //    Intl.NumberFormat.

        availableLocales = this['[[availableLocales]]'],


        // 3. Let requestedLocales be the result of calling the CanonicalizeLocaleList
        //    abstract operation (defined in 9.2.1) with argument locales.
        requestedLocales = CanonicalizeLocaleList(locales);

        // Restore the RegExp properties
        regexpRestore();

        // 4. Return the result of calling the SupportedLocales abstract operation
        //    (defined in 9.2.8) with arguments availableLocales, requestedLocales,
        //    and options.
        return SupportedLocales(availableLocales, requestedLocales, options);
    }, internals.NumberFormat)
});

/**
 * This named accessor property returns a function that formats a number
 * according to the effective locale and the formatting options of this
 * NumberFormat object.
 */
/* 11.3.2 */defineProperty(Intl.NumberFormat.prototype, 'format', {
    configurable: true,
    get: GetFormatNumber
});

function GetFormatNumber() {
    var internal = this !== null && babelHelpers$1["typeof"](this) === 'object' && getInternalProperties(this);

    // Satisfy test 11.3_b
    if (!internal || !internal['[[initializedNumberFormat]]']) throw new TypeError('`this` value for format() is not an initialized Intl.NumberFormat object.');

    // The value of the [[Get]] attribute is a function that takes the following
    // steps:

    // 1. If the [[boundFormat]] internal property of this NumberFormat object
    //    is undefined, then:
    if (internal['[[boundFormat]]'] === undefined) {
        // a. Let F be a Function object, with internal properties set as
        //    specified for built-in functions in ES5, 15, or successor, and the
        //    length property set to 1, that takes the argument value and
        //    performs the following steps:
        var F = function F(value) {
            // i. If value is not provided, then let value be undefined.
            // ii. Let x be ToNumber(value).
            // iii. Return the result of calling the FormatNumber abstract
            //      operation (defined below) with arguments this and x.
            return FormatNumber(this, /* x = */Number(value));
        };

        // b. Let bind be the standard built-in function object defined in ES5,
        //    15.3.4.5.
        // c. Let bf be the result of calling the [[Call]] internal method of
        //    bind with F as the this value and an argument list containing
        //    the single item this.
        var bf = fnBind.call(F, this);

        // d. Set the [[boundFormat]] internal property of this NumberFormat
        //    object to bf.
        internal['[[boundFormat]]'] = bf;
    }
    // Return the value of the [[boundFormat]] internal property of this
    // NumberFormat object.
    return internal['[[boundFormat]]'];
}

function formatToParts() {
    var value = arguments.length <= 0 || arguments[0] === undefined ? undefined : arguments[0];

    var internal = this !== null && babelHelpers$1["typeof"](this) === 'object' && getInternalProperties(this);
    if (!internal || !internal['[[initializedNumberFormat]]']) throw new TypeError('`this` value for formatToParts() is not an initialized Intl.NumberFormat object.');

    var x = Number(value);
    return FormatNumberToParts(this, x);
}

Object.defineProperty(Intl.NumberFormat.prototype, 'formatToParts', {
    configurable: true,
    enumerable: false,
    writable: true,
    value: formatToParts
});

/*
 * @spec[stasm/ecma402/number-format-to-parts/spec/numberformat.html]
 * @clause[sec-formatnumbertoparts]
 */
function FormatNumberToParts(numberFormat, x) {
    // 1. Let parts be ? PartitionNumberPattern(numberFormat, x).
    var parts = PartitionNumberPattern(numberFormat, x);
    // 2. Let result be ArrayCreate(0).
    var result = [];
    // 3. Let n be 0.
    var n = 0;
    // 4. For each part in parts, do:
    for (var i = 0; parts.length > i; i++) {
        var part = parts[i];
        // a. Let O be ObjectCreate(%ObjectPrototype%).
        var O = {};
        // a. Perform ? CreateDataPropertyOrThrow(O, "type", part.[[type]]).
        O.type = part['[[type]]'];
        // a. Perform ? CreateDataPropertyOrThrow(O, "value", part.[[value]]).
        O.value = part['[[value]]'];
        // a. Perform ? CreateDataPropertyOrThrow(result, ? ToString(n), O).
        result[n] = O;
        // a. Increment n by 1.
        n += 1;
    }
    // 5. Return result.
    return result;
}

/*
 * @spec[stasm/ecma402/number-format-to-parts/spec/numberformat.html]
 * @clause[sec-partitionnumberpattern]
 */
function PartitionNumberPattern(numberFormat, x) {

    var internal = getInternalProperties(numberFormat),
        locale = internal['[[dataLocale]]'],
        nums = internal['[[numberingSystem]]'],
        data = internals.NumberFormat['[[localeData]]'][locale],
        ild = data.symbols[nums] || data.symbols.latn,
        pattern = void 0;

    // 1. If x is not NaN and x < 0, then:
    if (!isNaN(x) && x < 0) {
        // a. Let x be -x.
        x = -x;
        // a. Let pattern be the value of numberFormat.[[negativePattern]].
        pattern = internal['[[negativePattern]]'];
    }
    // 2. Else,
    else {
            // a. Let pattern be the value of numberFormat.[[positivePattern]].
            pattern = internal['[[positivePattern]]'];
        }
    // 3. Let result be a new empty List.
    var result = new List();
    // 4. Let beginIndex be Call(%StringProto_indexOf%, pattern, "{", 0).
    var beginIndex = pattern.indexOf('{', 0);
    // 5. Let endIndex be 0.
    var endIndex = 0;
    // 6. Let nextIndex be 0.
    var nextIndex = 0;
    // 7. Let length be the number of code units in pattern.
    var length = pattern.length;
    // 8. Repeat while beginIndex is an integer index into pattern:
    while (beginIndex > -1 && beginIndex < length) {
        // a. Set endIndex to Call(%StringProto_indexOf%, pattern, "}", beginIndex)
        endIndex = pattern.indexOf('}', beginIndex);
        // a. If endIndex = -1, throw new Error exception.
        if (endIndex === -1) throw new Error();
        // a. If beginIndex is greater than nextIndex, then:
        if (beginIndex > nextIndex) {
            // i. Let literal be a substring of pattern from position nextIndex, inclusive, to position beginIndex, exclusive.
            var literal = pattern.substring(nextIndex, beginIndex);
            // ii. Add new part record { [[type]]: "literal", [[value]]: literal } as a new element of the list result.
            arrPush.call(result, { '[[type]]': 'literal', '[[value]]': literal });
        }
        // a. Let p be the substring of pattern from position beginIndex, exclusive, to position endIndex, exclusive.
        var p = pattern.substring(beginIndex + 1, endIndex);
        // a. If p is equal "number", then:
        if (p === "number") {
            // i. If x is NaN,
            if (isNaN(x)) {
                // 1. Let n be an ILD String value indicating the NaN value.
                var n = ild.nan;
                // 2. Add new part record { [[type]]: "nan", [[value]]: n } as a new element of the list result.
                arrPush.call(result, { '[[type]]': 'nan', '[[value]]': n });
            }
            // ii. Else if isFinite(x) is false,
            else if (!isFinite(x)) {
                    // 1. Let n be an ILD String value indicating infinity.
                    var _n = ild.infinity;
                    // 2. Add new part record { [[type]]: "infinity", [[value]]: n } as a new element of the list result.
                    arrPush.call(result, { '[[type]]': 'infinity', '[[value]]': _n });
                }
                // iii. Else,
                else {
                        // 1. If the value of numberFormat.[[style]] is "percent" and isFinite(x), let x be 100 × x.
                        if (internal['[[style]]'] === 'percent' && isFinite(x)) x *= 100;

                        var _n2 = void 0;
                        // 2. If the numberFormat.[[minimumSignificantDigits]] and numberFormat.[[maximumSignificantDigits]] are present, then
                        if (hop.call(internal, '[[minimumSignificantDigits]]') && hop.call(internal, '[[maximumSignificantDigits]]')) {
                            // a. Let n be ToRawPrecision(x, numberFormat.[[minimumSignificantDigits]], numberFormat.[[maximumSignificantDigits]]).
                            _n2 = ToRawPrecision(x, internal['[[minimumSignificantDigits]]'], internal['[[maximumSignificantDigits]]']);
                        }
                        // 3. Else,
                        else {
                                // a. Let n be ToRawFixed(x, numberFormat.[[minimumIntegerDigits]], numberFormat.[[minimumFractionDigits]], numberFormat.[[maximumFractionDigits]]).
                                _n2 = ToRawFixed(x, internal['[[minimumIntegerDigits]]'], internal['[[minimumFractionDigits]]'], internal['[[maximumFractionDigits]]']);
                            }
                        // 4. If the value of the numberFormat.[[numberingSystem]] matches one of the values in the "Numbering System" column of Table 2 below, then
                        if (numSys[nums]) {
                            (function () {
                                // a. Let digits be an array whose 10 String valued elements are the UTF-16 string representations of the 10 digits specified in the "Digits" column of the matching row in Table 2.
                                var digits = numSys[nums];
                                // a. Replace each digit in n with the value of digits[digit].
                                _n2 = String(_n2).replace(/\d/g, function (digit) {
                                    return digits[digit];
                                });
                            })();
                        }
                        // 5. Else use an implementation dependent algorithm to map n to the appropriate representation of n in the given numbering system.
                        else _n2 = String(_n2); // ###TODO###

                        var integer = void 0;
                        var fraction = void 0;
                        // 6. Let decimalSepIndex be Call(%StringProto_indexOf%, n, ".", 0).
                        var decimalSepIndex = _n2.indexOf('.', 0);
                        // 7. If decimalSepIndex > 0, then:
                        if (decimalSepIndex > 0) {
                            // a. Let integer be the substring of n from position 0, inclusive, to position decimalSepIndex, exclusive.
                            integer = _n2.substring(0, decimalSepIndex);
                            // a. Let fraction be the substring of n from position decimalSepIndex, exclusive, to the end of n.
                            fraction = _n2.substring(decimalSepIndex + 1, decimalSepIndex.length);
                        }
                        // 8. Else:
                        else {
                                // a. Let integer be n.
                                integer = _n2;
                                // a. Let fraction be undefined.
                                fraction = undefined;
                            }
                        // 9. If the value of the numberFormat.[[useGrouping]] is true,
                        if (internal['[[useGrouping]]'] === true) {
                            // a. Let groupSepSymbol be the ILND String representing the grouping separator.
                            var groupSepSymbol = ild.group;
                            // a. Let groups be a List whose elements are, in left to right order, the substrings defined by ILND set of locations within the integer.
                            var groups = [];
                            // ----> implementation:
                            // Primary group represents the group closest to the decimal
                            var pgSize = data.patterns.primaryGroupSize || 3;
                            // Secondary group is every other group
                            var sgSize = data.patterns.secondaryGroupSize || pgSize;
                            // Group only if necessary
                            if (integer.length > pgSize) {
                                // Index of the primary grouping separator
                                var end = integer.length - pgSize;
                                // Starting index for our loop
                                var idx = end % sgSize;
                                var start = integer.slice(0, idx);
                                if (start.length) arrPush.call(groups, start);
                                // Loop to separate into secondary grouping digits
                                while (idx < end) {
                                    arrPush.call(groups, integer.slice(idx, idx + sgSize));
                                    idx += sgSize;
                                }
                                // Add the primary grouping digits
                                arrPush.call(groups, integer.slice(end));
                            } else {
                                arrPush.call(groups, integer);
                            }
                            // a. Assert: The number of elements in groups List is greater than 0.
                            if (groups.length === 0) throw new Error();
                            // a. Repeat, while groups List is not empty:
                            while (groups.length) {
                                // i. Remove the first element from groups and let integerGroup be the value of that element.
                                var integerGroup = arrShift.call(groups);
                                // ii. Add new part record { [[type]]: "integer", [[value]]: integerGroup } as a new element of the list result.
                                arrPush.call(result, { '[[type]]': 'integer', '[[value]]': integerGroup });
                                // iii. If groups List is not empty, then:
                                if (groups.length) {
                                    // 1. Add new part record { [[type]]: "group", [[value]]: groupSepSymbol } as a new element of the list result.
                                    arrPush.call(result, { '[[type]]': 'group', '[[value]]': groupSepSymbol });
                                }
                            }
                        }
                        // 10. Else,
                        else {
                                // a. Add new part record { [[type]]: "integer", [[value]]: integer } as a new element of the list result.
                                arrPush.call(result, { '[[type]]': 'integer', '[[value]]': integer });
                            }
                        // 11. If fraction is not undefined, then:
                        if (fraction !== undefined) {
                            // a. Let decimalSepSymbol be the ILND String representing the decimal separator.
                            var decimalSepSymbol = ild.decimal;
                            // a. Add new part record { [[type]]: "decimal", [[value]]: decimalSepSymbol } as a new element of the list result.
                            arrPush.call(result, { '[[type]]': 'decimal', '[[value]]': decimalSepSymbol });
                            // a. Add new part record { [[type]]: "fraction", [[value]]: fraction } as a new element of the list result.
                            arrPush.call(result, { '[[type]]': 'fraction', '[[value]]': fraction });
                        }
                    }
        }
        // a. Else if p is equal "plusSign", then:
        else if (p === "plusSign") {
                // i. Let plusSignSymbol be the ILND String representing the plus sign.
                var plusSignSymbol = ild.plusSign;
                // ii. Add new part record { [[type]]: "plusSign", [[value]]: plusSignSymbol } as a new element of the list result.
                arrPush.call(result, { '[[type]]': 'plusSign', '[[value]]': plusSignSymbol });
            }
            // a. Else if p is equal "minusSign", then:
            else if (p === "minusSign") {
                    // i. Let minusSignSymbol be the ILND String representing the minus sign.
                    var minusSignSymbol = ild.minusSign;
                    // ii. Add new part record { [[type]]: "minusSign", [[value]]: minusSignSymbol } as a new element of the list result.
                    arrPush.call(result, { '[[type]]': 'minusSign', '[[value]]': minusSignSymbol });
                }
                // a. Else if p is equal "percentSign" and numberFormat.[[style]] is "percent", then:
                else if (p === "percentSign" && internal['[[style]]'] === "percent") {
                        // i. Let percentSignSymbol be the ILND String representing the percent sign.
                        var percentSignSymbol = ild.percentSign;
                        // ii. Add new part record { [[type]]: "percentSign", [[value]]: percentSignSymbol } as a new element of the list result.
                        arrPush.call(result, { '[[type]]': 'literal', '[[value]]': percentSignSymbol });
                    }
                    // a. Else if p is equal "currency" and numberFormat.[[style]] is "currency", then:
                    else if (p === "currency" && internal['[[style]]'] === "currency") {
                            // i. Let currency be the value of numberFormat.[[currency]].
                            var currency = internal['[[currency]]'];

                            var cd = void 0;

                            // ii. If numberFormat.[[currencyDisplay]] is "code", then
                            if (internal['[[currencyDisplay]]'] === "code") {
                                // 1. Let cd be currency.
                                cd = currency;
                            }
                            // iii. Else if numberFormat.[[currencyDisplay]] is "symbol", then
                            else if (internal['[[currencyDisplay]]'] === "symbol") {
                                    // 1. Let cd be an ILD string representing currency in short form. If the implementation does not have such a representation of currency, use currency itself.
                                    cd = data.currencies[currency] || currency;
                                }
                                // iv. Else if numberFormat.[[currencyDisplay]] is "name", then
                                else if (internal['[[currencyDisplay]]'] === "name") {
                                        // 1. Let cd be an ILD string representing currency in long form. If the implementation does not have such a representation of currency, then use currency itself.
                                        cd = currency;
                                    }
                            // v. Add new part record { [[type]]: "currency", [[value]]: cd } as a new element of the list result.
                            arrPush.call(result, { '[[type]]': 'currency', '[[value]]': cd });
                        }
                        // a. Else,
                        else {
                                // i. Let literal be the substring of pattern from position beginIndex, inclusive, to position endIndex, inclusive.
                                var _literal = pattern.substring(beginIndex, endIndex);
                                // ii. Add new part record { [[type]]: "literal", [[value]]: literal } as a new element of the list result.
                                arrPush.call(result, { '[[type]]': 'literal', '[[value]]': _literal });
                            }
        // a. Set nextIndex to endIndex + 1.
        nextIndex = endIndex + 1;
        // a. Set beginIndex to Call(%StringProto_indexOf%, pattern, "{", nextIndex)
        beginIndex = pattern.indexOf('{', nextIndex);
    }
    // 9. If nextIndex is less than length, then:
    if (nextIndex < length) {
        // a. Let literal be the substring of pattern from position nextIndex, inclusive, to position length, exclusive.
        var _literal2 = pattern.substring(nextIndex, length);
        // a. Add new part record { [[type]]: "literal", [[value]]: literal } as a new element of the list result.
        arrPush.call(result, { '[[type]]': 'literal', '[[value]]': _literal2 });
    }
    // 10. Return result.
    return result;
}

/*
 * @spec[stasm/ecma402/number-format-to-parts/spec/numberformat.html]
 * @clause[sec-formatnumber]
 */
function FormatNumber(numberFormat, x) {
    // 1. Let parts be ? PartitionNumberPattern(numberFormat, x).
    var parts = PartitionNumberPattern(numberFormat, x);
    // 2. Let result be an empty String.
    var result = '';
    // 3. For each part in parts, do:
    for (var i = 0; parts.length > i; i++) {
        var part = parts[i];
        // a. Set result to a String value produced by concatenating result and part.[[value]].
        result += part['[[value]]'];
    }
    // 4. Return result.
    return result;
}

/**
 * When the ToRawPrecision abstract operation is called with arguments x (which
 * must be a finite non-negative number), minPrecision, and maxPrecision (both
 * must be integers between 1 and 21) the following steps are taken:
 */
function ToRawPrecision(x, minPrecision, maxPrecision) {
    // 1. Let p be maxPrecision.
    var p = maxPrecision;

    var m = void 0,
        e = void 0;

    // 2. If x = 0, then
    if (x === 0) {
        // a. Let m be the String consisting of p occurrences of the character "0".
        m = arrJoin.call(Array(p + 1), '0');
        // b. Let e be 0.
        e = 0;
    }
    // 3. Else
    else {
            // a. Let e and n be integers such that 10ᵖ⁻¹ ≤ n < 10ᵖ and for which the
            //    exact mathematical value of n × 10ᵉ⁻ᵖ⁺¹ – x is as close to zero as
            //    possible. If there are two such sets of e and n, pick the e and n for
            //    which n × 10ᵉ⁻ᵖ⁺¹ is larger.
            e = log10Floor(Math.abs(x));

            // Easier to get to m from here
            var f = Math.round(Math.exp(Math.abs(e - p + 1) * Math.LN10));

            // b. Let m be the String consisting of the digits of the decimal
            //    representation of n (in order, with no leading zeroes)
            m = String(Math.round(e - p + 1 < 0 ? x * f : x / f));
        }

    // 4. If e ≥ p, then
    if (e >= p)
        // a. Return the concatenation of m and e-p+1 occurrences of the character "0".
        return m + arrJoin.call(Array(e - p + 1 + 1), '0');

        // 5. If e = p-1, then
    else if (e === p - 1)
            // a. Return m.
            return m;

            // 6. If e ≥ 0, then
        else if (e >= 0)
                // a. Let m be the concatenation of the first e+1 characters of m, the character
                //    ".", and the remaining p–(e+1) characters of m.
                m = m.slice(0, e + 1) + '.' + m.slice(e + 1);

                // 7. If e < 0, then
            else if (e < 0)
                    // a. Let m be the concatenation of the String "0.", –(e+1) occurrences of the
                    //    character "0", and the string m.
                    m = '0.' + arrJoin.call(Array(-(e + 1) + 1), '0') + m;

    // 8. If m contains the character ".", and maxPrecision > minPrecision, then
    if (m.indexOf(".") >= 0 && maxPrecision > minPrecision) {
        // a. Let cut be maxPrecision – minPrecision.
        var cut = maxPrecision - minPrecision;

        // b. Repeat while cut > 0 and the last character of m is "0":
        while (cut > 0 && m.charAt(m.length - 1) === '0') {
            //  i. Remove the last character from m.
            m = m.slice(0, -1);

            //  ii. Decrease cut by 1.
            cut--;
        }

        // c. If the last character of m is ".", then
        if (m.charAt(m.length - 1) === '.')
            //    i. Remove the last character from m.
            m = m.slice(0, -1);
    }
    // 9. Return m.
    return m;
}

/**
 * @spec[tc39/ecma402/master/spec/numberformat.html]
 * @clause[sec-torawfixed]
 * When the ToRawFixed abstract operation is called with arguments x (which must
 * be a finite non-negative number), minInteger (which must be an integer between
 * 1 and 21), minFraction, and maxFraction (which must be integers between 0 and
 * 20) the following steps are taken:
 */
function ToRawFixed(x, minInteger, minFraction, maxFraction) {
    // 1. Let f be maxFraction.
    var f = maxFraction;
    // 2. Let n be an integer for which the exact mathematical value of n ÷ 10f – x is as close to zero as possible. If there are two such n, pick the larger n.
    var n = Math.pow(10, f) * x; // diverging...
    // 3. If n = 0, let m be the String "0". Otherwise, let m be the String consisting of the digits of the decimal representation of n (in order, with no leading zeroes).
    var m = n === 0 ? "0" : n.toFixed(0); // divering...

    {
        // this diversion is needed to take into consideration big numbers, e.g.:
        // 1.2344501e+37 -> 12344501000000000000000000000000000000
        var idx = void 0;
        var exp = (idx = m.indexOf('e')) > -1 ? m.slice(idx + 1) : 0;
        if (exp) {
            m = m.slice(0, idx).replace('.', '');
            m += arrJoin.call(Array(exp - (m.length - 1) + 1), '0');
        }
    }

    var int = void 0;
    // 4. If f ≠ 0, then
    if (f !== 0) {
        // a. Let k be the number of characters in m.
        var k = m.length;
        // a. If k ≤ f, then
        if (k <= f) {
            // i. Let z be the String consisting of f+1–k occurrences of the character "0".
            var z = arrJoin.call(Array(f + 1 - k + 1), '0');
            // ii. Let m be the concatenation of Strings z and m.
            m = z + m;
            // iii. Let k be f+1.
            k = f + 1;
        }
        // a. Let a be the first k–f characters of m, and let b be the remaining f characters of m.
        var a = m.substring(0, k - f),
            b = m.substring(k - f, m.length);
        // a. Let m be the concatenation of the three Strings a, ".", and b.
        m = a + "." + b;
        // a. Let int be the number of characters in a.
        int = a.length;
    }
    // 5. Else, let int be the number of characters in m.
    else int = m.length;
    // 6. Let cut be maxFraction – minFraction.
    var cut = maxFraction - minFraction;
    // 7. Repeat while cut > 0 and the last character of m is "0":
    while (cut > 0 && m.slice(-1) === "0") {
        // a. Remove the last character from m.
        m = m.slice(0, -1);
        // a. Decrease cut by 1.
        cut--;
    }
    // 8. If the last character of m is ".", then
    if (m.slice(-1) === ".") {
        // a. Remove the last character from m.
        m = m.slice(0, -1);
    }
    // 9. If int < minInteger, then
    if (int < minInteger) {
        // a. Let z be the String consisting of minInteger–int occurrences of the character "0".
        var _z = arrJoin.call(Array(minInteger - int + 1), '0');
        // a. Let m be the concatenation of Strings z and m.
        m = _z + m;
    }
    // 10. Return m.
    return m;
}

// Sect 11.3.2 Table 2, Numbering systems
// ======================================
var numSys = {
    arab: ["٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩"],
    arabext: ["۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹"],
    bali: ["᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙"],
    beng: ["০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯"],
    deva: ["०", "१", "२", "३", "४", "५", "६", "७", "८", "९"],
    fullwide: ["０", "１", "２", "３", "４", "５", "６", "７", "８", "９"],
    gujr: ["૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯"],
    guru: ["੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯"],
    hanidec: ["〇", "一", "二", "三", "四", "五", "六", "七", "八", "九"],
    khmr: ["០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩"],
    knda: ["೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯"],
    laoo: ["໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙"],
    latn: ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"],
    limb: ["᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏"],
    mlym: ["൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯"],
    mong: ["᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙"],
    mymr: ["၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉"],
    orya: ["୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯"],
    tamldec: ["௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯"],
    telu: ["౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯"],
    thai: ["๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙"],
    tibt: ["༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩"]
};

/**
 * This function provides access to the locale and formatting options computed
 * during initialization of the object.
 *
 * The function returns a new object whose properties and attributes are set as
 * if constructed by an object literal assigning to each of the following
 * properties the value of the corresponding internal property of this
 * NumberFormat object (see 11.4): locale, numberingSystem, style, currency,
 * currencyDisplay, minimumIntegerDigits, minimumFractionDigits,
 * maximumFractionDigits, minimumSignificantDigits, maximumSignificantDigits, and
 * useGrouping. Properties whose corresponding internal properties are not present
 * are not assigned.
 */
/* 11.3.3 */defineProperty(Intl.NumberFormat.prototype, 'resolvedOptions', {
    configurable: true,
    writable: true,
    value: function value() {
        var prop = void 0,
            descs = new Record(),
            props = ['locale', 'numberingSystem', 'style', 'currency', 'currencyDisplay', 'minimumIntegerDigits', 'minimumFractionDigits', 'maximumFractionDigits', 'minimumSignificantDigits', 'maximumSignificantDigits', 'useGrouping'],
            internal = this !== null && babelHelpers$1["typeof"](this) === 'object' && getInternalProperties(this);

        // Satisfy test 11.3_b
        if (!internal || !internal['[[initializedNumberFormat]]']) throw new TypeError('`this` value for resolvedOptions() is not an initialized Intl.NumberFormat object.');

        for (var i = 0, max = props.length; i < max; i++) {
            if (hop.call(internal, prop = '[[' + props[i] + ']]')) descs[props[i]] = { value: internal[prop], writable: true, configurable: true, enumerable: true };
        }

        return objCreate({}, descs);
    }
});

/* jslint esnext: true */

// Match these datetime components in a CLDR pattern, except those in single quotes
var expDTComponents = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;
// trim patterns after transformations
var expPatternTrimmer = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
// Skip over patterns with these datetime components because we don't have data
// to back them up:
// timezone, weekday, amoung others
var unwantedDTCs = /[rqQASjJgwWIQq]/; // xXVO were removed from this list in favor of computing matches with timeZoneName values but printing as empty string

var dtKeys = ["era", "year", "month", "day", "weekday", "quarter"];
var tmKeys = ["hour", "minute", "second", "hour12", "timeZoneName"];

function isDateFormatOnly(obj) {
    for (var i = 0; i < tmKeys.length; i += 1) {
        if (obj.hasOwnProperty(tmKeys[i])) {
            return false;
        }
    }
    return true;
}

function isTimeFormatOnly(obj) {
    for (var i = 0; i < dtKeys.length; i += 1) {
        if (obj.hasOwnProperty(dtKeys[i])) {
            return false;
        }
    }
    return true;
}

function joinDateAndTimeFormats(dateFormatObj, timeFormatObj) {
    var o = { _: {} };
    for (var i = 0; i < dtKeys.length; i += 1) {
        if (dateFormatObj[dtKeys[i]]) {
            o[dtKeys[i]] = dateFormatObj[dtKeys[i]];
        }
        if (dateFormatObj._[dtKeys[i]]) {
            o._[dtKeys[i]] = dateFormatObj._[dtKeys[i]];
        }
    }
    for (var j = 0; j < tmKeys.length; j += 1) {
        if (timeFormatObj[tmKeys[j]]) {
            o[tmKeys[j]] = timeFormatObj[tmKeys[j]];
        }
        if (timeFormatObj._[tmKeys[j]]) {
            o._[tmKeys[j]] = timeFormatObj._[tmKeys[j]];
        }
    }
    return o;
}

function computeFinalPatterns(formatObj) {
    // From http://www.unicode.org/reports/tr35/tr35-dates.html#Date_Format_Patterns:
    //  'In patterns, two single quotes represents a literal single quote, either
    //   inside or outside single quotes. Text within single quotes is not
    //   interpreted in any way (except for two adjacent single quotes).'
    formatObj.pattern12 = formatObj.extendedPattern.replace(/'([^']*)'/g, function ($0, literal) {
        return literal ? literal : "'";
    });

    // pattern 12 is always the default. we can produce the 24 by removing {ampm}
    formatObj.pattern = formatObj.pattern12.replace('{ampm}', '').replace(expPatternTrimmer, '');
    return formatObj;
}

function expDTComponentsMeta($0, formatObj) {
    switch ($0.charAt(0)) {
        // --- Era
        case 'G':
            formatObj.era = ['short', 'short', 'short', 'long', 'narrow'][$0.length - 1];
            return '{era}';

        // --- Year
        case 'y':
        case 'Y':
        case 'u':
        case 'U':
        case 'r':
            formatObj.year = $0.length === 2 ? '2-digit' : 'numeric';
            return '{year}';

        // --- Quarter (not supported in this polyfill)
        case 'Q':
        case 'q':
            formatObj.quarter = ['numeric', '2-digit', 'short', 'long', 'narrow'][$0.length - 1];
            return '{quarter}';

        // --- Month
        case 'M':
        case 'L':
            formatObj.month = ['numeric', '2-digit', 'short', 'long', 'narrow'][$0.length - 1];
            return '{month}';

        // --- Week (not supported in this polyfill)
        case 'w':
            // week of the year
            formatObj.week = $0.length === 2 ? '2-digit' : 'numeric';
            return '{weekday}';
        case 'W':
            // week of the month
            formatObj.week = 'numeric';
            return '{weekday}';

        // --- Day
        case 'd':
            // day of the month
            formatObj.day = $0.length === 2 ? '2-digit' : 'numeric';
            return '{day}';
        case 'D': // day of the year
        case 'F': // day of the week
        case 'g':
            // 1..n: Modified Julian day
            formatObj.day = 'numeric';
            return '{day}';

        // --- Week Day
        case 'E':
            // day of the week
            formatObj.weekday = ['short', 'short', 'short', 'long', 'narrow', 'short'][$0.length - 1];
            return '{weekday}';
        case 'e':
            // local day of the week
            formatObj.weekday = ['numeric', '2-digit', 'short', 'long', 'narrow', 'short'][$0.length - 1];
            return '{weekday}';
        case 'c':
            // stand alone local day of the week
            formatObj.weekday = ['numeric', undefined, 'short', 'long', 'narrow', 'short'][$0.length - 1];
            return '{weekday}';

        // --- Period
        case 'a': // AM, PM
        case 'b': // am, pm, noon, midnight
        case 'B':
            // flexible day periods
            formatObj.hour12 = true;
            return '{ampm}';

        // --- Hour
        case 'h':
        case 'H':
            formatObj.hour = $0.length === 2 ? '2-digit' : 'numeric';
            return '{hour}';
        case 'k':
        case 'K':
            formatObj.hour12 = true; // 12-hour-cycle time formats (using h or K)
            formatObj.hour = $0.length === 2 ? '2-digit' : 'numeric';
            return '{hour}';

        // --- Minute
        case 'm':
            formatObj.minute = $0.length === 2 ? '2-digit' : 'numeric';
            return '{minute}';

        // --- Second
        case 's':
            formatObj.second = $0.length === 2 ? '2-digit' : 'numeric';
            return '{second}';
        case 'S':
        case 'A':
            formatObj.second = 'numeric';
            return '{second}';

        // --- Timezone
        case 'z': // 1..3, 4: specific non-location format
        case 'Z': // 1..3, 4, 5: The ISO8601 varios formats
        case 'O': // 1, 4: miliseconds in day short, long
        case 'v': // 1, 4: generic non-location format
        case 'V': // 1, 2, 3, 4: time zone ID or city
        case 'X': // 1, 2, 3, 4: The ISO8601 varios formats
        case 'x':
            // 1, 2, 3, 4: The ISO8601 varios formats
            // this polyfill only supports much, for now, we are just doing something dummy
            formatObj.timeZoneName = $0.length < 4 ? 'short' : 'long';
            return '{timeZoneName}';
    }
}

/**
 * Converts the CLDR availableFormats into the objects and patterns required by
 * the ECMAScript Internationalization API specification.
 */
function createDateTimeFormat(skeleton, pattern) {
    // we ignore certain patterns that are unsupported to avoid this expensive op.
    if (unwantedDTCs.test(pattern)) return undefined;

    var formatObj = {
        originalPattern: pattern,
        _: {}
    };

    // Replace the pattern string with the one required by the specification, whilst
    // at the same time evaluating it for the subsets and formats
    formatObj.extendedPattern = pattern.replace(expDTComponents, function ($0) {
        // See which symbol we're dealing with
        return expDTComponentsMeta($0, formatObj._);
    });

    // Match the skeleton string with the one required by the specification
    // this implementation is based on the Date Field Symbol Table:
    // http://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
    // Note: we are adding extra data to the formatObject even though this polyfill
    //       might not support it.
    skeleton.replace(expDTComponents, function ($0) {
        // See which symbol we're dealing with
        return expDTComponentsMeta($0, formatObj);
    });

    return computeFinalPatterns(formatObj);
}

/**
 * Processes DateTime formats from CLDR to an easier-to-parse format.
 * the result of this operation should be cached the first time a particular
 * calendar is analyzed.
 *
 * The specification requires we support at least the following subsets of
 * date/time components:
 *
 *   - 'weekday', 'year', 'month', 'day', 'hour', 'minute', 'second'
 *   - 'weekday', 'year', 'month', 'day'
 *   - 'year', 'month', 'day'
 *   - 'year', 'month'
 *   - 'month', 'day'
 *   - 'hour', 'minute', 'second'
 *   - 'hour', 'minute'
 *
 * We need to cherry pick at least these subsets from the CLDR data and convert
 * them into the pattern objects used in the ECMA-402 API.
 */
function createDateTimeFormats(formats) {
    var availableFormats = formats.availableFormats;
    var timeFormats = formats.timeFormats;
    var dateFormats = formats.dateFormats;
    var result = [];
    var skeleton = void 0,
        pattern = void 0,
        computed = void 0,
        i = void 0,
        j = void 0;
    var timeRelatedFormats = [];
    var dateRelatedFormats = [];

    // Map available (custom) formats into a pattern for createDateTimeFormats
    for (skeleton in availableFormats) {
        if (availableFormats.hasOwnProperty(skeleton)) {
            pattern = availableFormats[skeleton];
            computed = createDateTimeFormat(skeleton, pattern);
            if (computed) {
                result.push(computed);
                // in some cases, the format is only displaying date specific props
                // or time specific props, in which case we need to also produce the
                // combined formats.
                if (isDateFormatOnly(computed)) {
                    dateRelatedFormats.push(computed);
                } else if (isTimeFormatOnly(computed)) {
                    timeRelatedFormats.push(computed);
                }
            }
        }
    }

    // Map time formats into a pattern for createDateTimeFormats
    for (skeleton in timeFormats) {
        if (timeFormats.hasOwnProperty(skeleton)) {
            pattern = timeFormats[skeleton];
            computed = createDateTimeFormat(skeleton, pattern);
            if (computed) {
                result.push(computed);
                timeRelatedFormats.push(computed);
            }
        }
    }

    // Map date formats into a pattern for createDateTimeFormats
    for (skeleton in dateFormats) {
        if (dateFormats.hasOwnProperty(skeleton)) {
            pattern = dateFormats[skeleton];
            computed = createDateTimeFormat(skeleton, pattern);
            if (computed) {
                result.push(computed);
                dateRelatedFormats.push(computed);
            }
        }
    }

    // combine custom time and custom date formats when they are orthogonals to complete the
    // formats supported by CLDR.
    // This Algo is based on section "Missing Skeleton Fields" from:
    // http://unicode.org/reports/tr35/tr35-dates.html#availableFormats_appendItems
    for (i = 0; i < timeRelatedFormats.length; i += 1) {
        for (j = 0; j < dateRelatedFormats.length; j += 1) {
            if (dateRelatedFormats[j].month === 'long') {
                pattern = dateRelatedFormats[j].weekday ? formats.full : formats.long;
            } else if (dateRelatedFormats[j].month === 'short') {
                pattern = formats.medium;
            } else {
                pattern = formats.short;
            }
            computed = joinDateAndTimeFormats(dateRelatedFormats[j], timeRelatedFormats[i]);
            computed.originalPattern = pattern;
            computed.extendedPattern = pattern.replace('{0}', timeRelatedFormats[i].extendedPattern).replace('{1}', dateRelatedFormats[j].extendedPattern).replace(/^[,\s]+|[,\s]+$/gi, '');
            result.push(computeFinalPatterns(computed));
        }
    }

    return result;
}

// this represents the exceptions of the rule that are not covered by CLDR availableFormats
// for single property configurations, they play no role when using multiple properties, and
// those that are not in this table, are not exceptions or are not covered by the data we
// provide.
var validSyntheticProps = {
    second: {
        numeric: 's',
        '2-digit': 'ss'
    },
    minute: {
        numeric: 'm',
        '2-digit': 'mm'
    },
    year: {
        numeric: 'y',
        '2-digit': 'yy'
    },
    day: {
        numeric: 'd',
        '2-digit': 'dd'
    },
    month: {
        numeric: 'L',
        '2-digit': 'LL',
        narrow: 'LLLLL',
        short: 'LLL',
        long: 'LLLL'
    },
    weekday: {
        narrow: 'ccccc',
        short: 'ccc',
        long: 'cccc'
    }
};

function generateSyntheticFormat(propName, propValue) {
    if (validSyntheticProps[propName] && validSyntheticProps[propName][propValue]) {
        var _ref2;

        return _ref2 = {
            originalPattern: validSyntheticProps[propName][propValue],
            _: defineProperty$1({}, propName, propValue),
            extendedPattern: "{" + propName + "}"
        }, defineProperty$1(_ref2, propName, propValue), defineProperty$1(_ref2, "pattern12", "{" + propName + "}"), defineProperty$1(_ref2, "pattern", "{" + propName + "}"), _ref2;
    }
}

// An object map of date component keys, saves using a regex later
var dateWidths = objCreate(null, { narrow: {}, short: {}, long: {} });

/**
 * Returns a string for a date component, resolved using multiple inheritance as specified
 * as specified in the Unicode Technical Standard 35.
 */
function resolveDateString(data, ca, component, width, key) {
    // From http://www.unicode.org/reports/tr35/tr35.html#Multiple_Inheritance:
    // 'In clearly specified instances, resources may inherit from within the same locale.
    //  For example, ... the Buddhist calendar inherits from the Gregorian calendar.'
    var obj = data[ca] && data[ca][component] ? data[ca][component] : data.gregory[component],


    // "sideways" inheritance resolves strings when a key doesn't exist
    alts = {
        narrow: ['short', 'long'],
        short: ['long', 'narrow'],
        long: ['short', 'narrow']
    },


    //
    resolved = hop.call(obj, width) ? obj[width] : hop.call(obj, alts[width][0]) ? obj[alts[width][0]] : obj[alts[width][1]];

    // `key` wouldn't be specified for components 'dayPeriods'
    return key !== null ? resolved[key] : resolved;
}

// Define the DateTimeFormat constructor internally so it cannot be tainted
function DateTimeFormatConstructor() {
    var locales = arguments[0];
    var options = arguments[1];

    if (!this || this === Intl) {
        return new Intl.DateTimeFormat(locales, options);
    }
    return InitializeDateTimeFormat(toObject(this), locales, options);
}

defineProperty(Intl, 'DateTimeFormat', {
    configurable: true,
    writable: true,
    value: DateTimeFormatConstructor
});

// Must explicitly set prototypes as unwritable
defineProperty(DateTimeFormatConstructor, 'prototype', {
    writable: false
});

/**
 * The abstract operation InitializeDateTimeFormat accepts the arguments dateTimeFormat
 * (which must be an object), locales, and options. It initializes dateTimeFormat as a
 * DateTimeFormat object.
 */
function /* 12.1.1.1 */InitializeDateTimeFormat(dateTimeFormat, locales, options) {
    // This will be a internal properties object if we're not already initialized
    var internal = getInternalProperties(dateTimeFormat);

    // Create an object whose props can be used to restore the values of RegExp props
    var regexpRestore = createRegExpRestore();

    // 1. If dateTimeFormat has an [[initializedIntlObject]] internal property with
    //    value true, throw a TypeError exception.
    if (internal['[[initializedIntlObject]]'] === true) throw new TypeError('`this` object has already been initialized as an Intl object');

    // Need this to access the `internal` object
    defineProperty(dateTimeFormat, '__getInternalProperties', {
        value: function value() {
            // NOTE: Non-standard, for internal use only
            if (arguments[0] === secret) return internal;
        }
    });

    // 2. Set the [[initializedIntlObject]] internal property of numberFormat to true.
    internal['[[initializedIntlObject]]'] = true;

    // 3. Let requestedLocales be the result of calling the CanonicalizeLocaleList
    //    abstract operation (defined in 9.2.1) with argument locales.
    var requestedLocales = CanonicalizeLocaleList(locales);

    // 4. Let options be the result of calling the ToDateTimeOptions abstract
    //    operation (defined below) with arguments options, "any", and "date".
    options = ToDateTimeOptions(options, 'any', 'date');

    // 5. Let opt be a new Record.
    var opt = new Record();

    // 6. Let matcher be the result of calling the GetOption abstract operation
    //    (defined in 9.2.9) with arguments options, "localeMatcher", "string", a List
    //    containing the two String values "lookup" and "best fit", and "best fit".
    var matcher = GetOption(options, 'localeMatcher', 'string', new List('lookup', 'best fit'), 'best fit');

    // 7. Set opt.[[localeMatcher]] to matcher.
    opt['[[localeMatcher]]'] = matcher;

    // 8. Let DateTimeFormat be the standard built-in object that is the initial
    //    value of Intl.DateTimeFormat.
    var DateTimeFormat = internals.DateTimeFormat; // This is what we *really* need

    // 9. Let localeData be the value of the [[localeData]] internal property of
    //    DateTimeFormat.
    var localeData = DateTimeFormat['[[localeData]]'];

    // 10. Let r be the result of calling the ResolveLocale abstract operation
    //     (defined in 9.2.5) with the [[availableLocales]] internal property of
    //      DateTimeFormat, requestedLocales, opt, the [[relevantExtensionKeys]]
    //      internal property of DateTimeFormat, and localeData.
    var r = ResolveLocale(DateTimeFormat['[[availableLocales]]'], requestedLocales, opt, DateTimeFormat['[[relevantExtensionKeys]]'], localeData);

    // 11. Set the [[locale]] internal property of dateTimeFormat to the value of
    //     r.[[locale]].
    internal['[[locale]]'] = r['[[locale]]'];

    // 12. Set the [[calendar]] internal property of dateTimeFormat to the value of
    //     r.[[ca]].
    internal['[[calendar]]'] = r['[[ca]]'];

    // 13. Set the [[numberingSystem]] internal property of dateTimeFormat to the value of
    //     r.[[nu]].
    internal['[[numberingSystem]]'] = r['[[nu]]'];

    // The specification doesn't tell us to do this, but it's helpful later on
    internal['[[dataLocale]]'] = r['[[dataLocale]]'];

    // 14. Let dataLocale be the value of r.[[dataLocale]].
    var dataLocale = r['[[dataLocale]]'];

    // 15. Let tz be the result of calling the [[Get]] internal method of options with
    //     argument "timeZone".
    var tz = options.timeZone;

    // 16. If tz is not undefined, then
    if (tz !== undefined) {
        // a. Let tz be ToString(tz).
        // b. Convert tz to upper case as described in 6.1.
        //    NOTE: If an implementation accepts additional time zone values, as permitted
        //          under certain conditions by the Conformance clause, different casing
        //          rules apply.
        tz = toLatinUpperCase(tz);

        // c. If tz is not "UTC", then throw a RangeError exception.
        // ###TODO: accept more time zones###
        if (tz !== 'UTC') throw new RangeError('timeZone is not supported.');
    }

    // 17. Set the [[timeZone]] internal property of dateTimeFormat to tz.
    internal['[[timeZone]]'] = tz;

    // 18. Let opt be a new Record.
    opt = new Record();

    // 19. For each row of Table 3, except the header row, do:
    for (var prop in dateTimeComponents) {
        if (!hop.call(dateTimeComponents, prop)) continue;

        // 20. Let prop be the name given in the Property column of the row.
        // 21. Let value be the result of calling the GetOption abstract operation,
        //     passing as argument options, the name given in the Property column of the
        //     row, "string", a List containing the strings given in the Values column of
        //     the row, and undefined.
        var value = GetOption(options, prop, 'string', dateTimeComponents[prop]);

        // 22. Set opt.[[<prop>]] to value.
        opt['[[' + prop + ']]'] = value;
    }

    // Assigned a value below
    var bestFormat = void 0;

    // 23. Let dataLocaleData be the result of calling the [[Get]] internal method of
    //     localeData with argument dataLocale.
    var dataLocaleData = localeData[dataLocale];

    // 24. Let formats be the result of calling the [[Get]] internal method of
    //     dataLocaleData with argument "formats".
    //     Note: we process the CLDR formats into the spec'd structure
    var formats = ToDateTimeFormats(dataLocaleData.formats);

    // 25. Let matcher be the result of calling the GetOption abstract operation with
    //     arguments options, "formatMatcher", "string", a List containing the two String
    //     values "basic" and "best fit", and "best fit".
    matcher = GetOption(options, 'formatMatcher', 'string', new List('basic', 'best fit'), 'best fit');

    // Optimization: caching the processed formats as a one time operation by
    // replacing the initial structure from localeData
    dataLocaleData.formats = formats;

    // 26. If matcher is "basic", then
    if (matcher === 'basic') {
        // 27. Let bestFormat be the result of calling the BasicFormatMatcher abstract
        //     operation (defined below) with opt and formats.
        bestFormat = BasicFormatMatcher(opt, formats);

        // 28. Else
    } else {
        {
            // diverging
            var _hr = GetOption(options, 'hour12', 'boolean' /*, undefined, undefined*/);
            opt.hour12 = _hr === undefined ? dataLocaleData.hour12 : _hr;
        }
        // 29. Let bestFormat be the result of calling the BestFitFormatMatcher
        //     abstract operation (defined below) with opt and formats.
        bestFormat = BestFitFormatMatcher(opt, formats);
    }

    // 30. For each row in Table 3, except the header row, do
    for (var _prop in dateTimeComponents) {
        if (!hop.call(dateTimeComponents, _prop)) continue;

        // a. Let prop be the name given in the Property column of the row.
        // b. Let pDesc be the result of calling the [[GetOwnProperty]] internal method of
        //    bestFormat with argument prop.
        // c. If pDesc is not undefined, then
        if (hop.call(bestFormat, _prop)) {
            // i. Let p be the result of calling the [[Get]] internal method of bestFormat
            //    with argument prop.
            var p = bestFormat[_prop];
            {
                // diverging
                p = bestFormat._ && hop.call(bestFormat._, _prop) ? bestFormat._[_prop] : p;
            }

            // ii. Set the [[<prop>]] internal property of dateTimeFormat to p.
            internal['[[' + _prop + ']]'] = p;
        }
    }

    var pattern = void 0; // Assigned a value below

    // 31. Let hr12 be the result of calling the GetOption abstract operation with
    //     arguments options, "hour12", "boolean", undefined, and undefined.
    var hr12 = GetOption(options, 'hour12', 'boolean' /*, undefined, undefined*/);

    // 32. If dateTimeFormat has an internal property [[hour]], then
    if (internal['[[hour]]']) {
        // a. If hr12 is undefined, then let hr12 be the result of calling the [[Get]]
        //    internal method of dataLocaleData with argument "hour12".
        hr12 = hr12 === undefined ? dataLocaleData.hour12 : hr12;

        // b. Set the [[hour12]] internal property of dateTimeFormat to hr12.
        internal['[[hour12]]'] = hr12;

        // c. If hr12 is true, then
        if (hr12 === true) {
            // i. Let hourNo0 be the result of calling the [[Get]] internal method of
            //    dataLocaleData with argument "hourNo0".
            var hourNo0 = dataLocaleData.hourNo0;

            // ii. Set the [[hourNo0]] internal property of dateTimeFormat to hourNo0.
            internal['[[hourNo0]]'] = hourNo0;

            // iii. Let pattern be the result of calling the [[Get]] internal method of
            //      bestFormat with argument "pattern12".
            pattern = bestFormat.pattern12;
        }

        // d. Else
        else
            // i. Let pattern be the result of calling the [[Get]] internal method of
            //    bestFormat with argument "pattern".
            pattern = bestFormat.pattern;
    }

    // 33. Else
    else
        // a. Let pattern be the result of calling the [[Get]] internal method of
        //    bestFormat with argument "pattern".
        pattern = bestFormat.pattern;

    // 34. Set the [[pattern]] internal property of dateTimeFormat to pattern.
    internal['[[pattern]]'] = pattern;

    // 35. Set the [[boundFormat]] internal property of dateTimeFormat to undefined.
    internal['[[boundFormat]]'] = undefined;

    // 36. Set the [[initializedDateTimeFormat]] internal property of dateTimeFormat to
    //     true.
    internal['[[initializedDateTimeFormat]]'] = true;

    // In ES3, we need to pre-bind the format() function
    if (es3) dateTimeFormat.format = GetFormatDateTime.call(dateTimeFormat);

    // Restore the RegExp properties
    regexpRestore();

    // Return the newly initialised object
    return dateTimeFormat;
}

/**
 * Several DateTimeFormat algorithms use values from the following table, which provides
 * property names and allowable values for the components of date and time formats:
 */
var dateTimeComponents = {
    weekday: ["narrow", "short", "long"],
    era: ["narrow", "short", "long"],
    year: ["2-digit", "numeric"],
    month: ["2-digit", "numeric", "narrow", "short", "long"],
    day: ["2-digit", "numeric"],
    hour: ["2-digit", "numeric"],
    minute: ["2-digit", "numeric"],
    second: ["2-digit", "numeric"],
    timeZoneName: ["short", "long"]
};

/**
 * When the ToDateTimeOptions abstract operation is called with arguments options,
 * required, and defaults, the following steps are taken:
 */
function ToDateTimeFormats(formats) {
    if (Object.prototype.toString.call(formats) === '[object Array]') {
        return formats;
    }
    return createDateTimeFormats(formats);
}

/**
 * When the ToDateTimeOptions abstract operation is called with arguments options,
 * required, and defaults, the following steps are taken:
 */
function ToDateTimeOptions(options, required, defaults) {
    // 1. If options is undefined, then let options be null, else let options be
    //    ToObject(options).
    if (options === undefined) options = null;else {
        // (#12) options needs to be a Record, but it also needs to inherit properties
        var opt2 = toObject(options);
        options = new Record();

        for (var k in opt2) {
            options[k] = opt2[k];
        }
    }

    // 2. Let create be the standard built-in function object defined in ES5, 15.2.3.5.
    var create = objCreate;

    // 3. Let options be the result of calling the [[Call]] internal method of create with
    //    undefined as the this value and an argument list containing the single item
    //    options.
    options = create(options);

    // 4. Let needDefaults be true.
    var needDefaults = true;

    // 5. If required is "date" or "any", then
    if (required === 'date' || required === 'any') {
        // a. For each of the property names "weekday", "year", "month", "day":
        // i. If the result of calling the [[Get]] internal method of options with the
        //    property name is not undefined, then let needDefaults be false.
        if (options.weekday !== undefined || options.year !== undefined || options.month !== undefined || options.day !== undefined) needDefaults = false;
    }

    // 6. If required is "time" or "any", then
    if (required === 'time' || required === 'any') {
        // a. For each of the property names "hour", "minute", "second":
        // i. If the result of calling the [[Get]] internal method of options with the
        //    property name is not undefined, then let needDefaults be false.
        if (options.hour !== undefined || options.minute !== undefined || options.second !== undefined) needDefaults = false;
    }

    // 7. If needDefaults is true and defaults is either "date" or "all", then
    if (needDefaults && (defaults === 'date' || defaults === 'all'))
        // a. For each of the property names "year", "month", "day":
        // i. Call the [[DefineOwnProperty]] internal method of options with the
        //    property name, Property Descriptor {[[Value]]: "numeric", [[Writable]]:
        //    true, [[Enumerable]]: true, [[Configurable]]: true}, and false.
        options.year = options.month = options.day = 'numeric';

    // 8. If needDefaults is true and defaults is either "time" or "all", then
    if (needDefaults && (defaults === 'time' || defaults === 'all'))
        // a. For each of the property names "hour", "minute", "second":
        // i. Call the [[DefineOwnProperty]] internal method of options with the
        //    property name, Property Descriptor {[[Value]]: "numeric", [[Writable]]:
        //    true, [[Enumerable]]: true, [[Configurable]]: true}, and false.
        options.hour = options.minute = options.second = 'numeric';

    // 9. Return options.
    return options;
}

/**
 * When the BasicFormatMatcher abstract operation is called with two arguments options and
 * formats, the following steps are taken:
 */
function BasicFormatMatcher(options, formats) {
    // 1. Let removalPenalty be 120.
    var removalPenalty = 120;

    // 2. Let additionPenalty be 20.
    var additionPenalty = 20;

    // 3. Let longLessPenalty be 8.
    var longLessPenalty = 8;

    // 4. Let longMorePenalty be 6.
    var longMorePenalty = 6;

    // 5. Let shortLessPenalty be 6.
    var shortLessPenalty = 6;

    // 6. Let shortMorePenalty be 3.
    var shortMorePenalty = 3;

    // 7. Let bestScore be -Infinity.
    var bestScore = -Infinity;

    // 8. Let bestFormat be undefined.
    var bestFormat = void 0;

    // 9. Let i be 0.
    var i = 0;

    // 10. Assert: formats is an Array object.

    // 11. Let len be the result of calling the [[Get]] internal method of formats with argument "length".
    var len = formats.length;

    // 12. Repeat while i < len:
    while (i < len) {
        // a. Let format be the result of calling the [[Get]] internal method of formats with argument ToString(i).
        var format = formats[i];

        // b. Let score be 0.
        var score = 0;

        // c. For each property shown in Table 3:
        for (var property in dateTimeComponents) {
            if (!hop.call(dateTimeComponents, property)) continue;

            // i. Let optionsProp be options.[[<property>]].
            var optionsProp = options['[[' + property + ']]'];

            // ii. Let formatPropDesc be the result of calling the [[GetOwnProperty]] internal method of format
            //     with argument property.
            // iii. If formatPropDesc is not undefined, then
            //     1. Let formatProp be the result of calling the [[Get]] internal method of format with argument property.
            var formatProp = hop.call(format, property) ? format[property] : undefined;

            // iv. If optionsProp is undefined and formatProp is not undefined, then decrease score by
            //     additionPenalty.
            if (optionsProp === undefined && formatProp !== undefined) score -= additionPenalty;

            // v. Else if optionsProp is not undefined and formatProp is undefined, then decrease score by
            //    removalPenalty.
            else if (optionsProp !== undefined && formatProp === undefined) score -= removalPenalty;

                // vi. Else
                else {
                        // 1. Let values be the array ["2-digit", "numeric", "narrow", "short",
                        //    "long"].
                        var values = ['2-digit', 'numeric', 'narrow', 'short', 'long'];

                        // 2. Let optionsPropIndex be the index of optionsProp within values.
                        var optionsPropIndex = arrIndexOf.call(values, optionsProp);

                        // 3. Let formatPropIndex be the index of formatProp within values.
                        var formatPropIndex = arrIndexOf.call(values, formatProp);

                        // 4. Let delta be max(min(formatPropIndex - optionsPropIndex, 2), -2).
                        var delta = Math.max(Math.min(formatPropIndex - optionsPropIndex, 2), -2);

                        // 5. If delta = 2, decrease score by longMorePenalty.
                        if (delta === 2) score -= longMorePenalty;

                        // 6. Else if delta = 1, decrease score by shortMorePenalty.
                        else if (delta === 1) score -= shortMorePenalty;

                            // 7. Else if delta = -1, decrease score by shortLessPenalty.
                            else if (delta === -1) score -= shortLessPenalty;

                                // 8. Else if delta = -2, decrease score by longLessPenalty.
                                else if (delta === -2) score -= longLessPenalty;
                    }
        }

        // d. If score > bestScore, then
        if (score > bestScore) {
            // i. Let bestScore be score.
            bestScore = score;

            // ii. Let bestFormat be format.
            bestFormat = format;
        }

        // e. Increase i by 1.
        i++;
    }

    // 13. Return bestFormat.
    return bestFormat;
}

/**
 * When the BestFitFormatMatcher abstract operation is called with two arguments options
 * and formats, it performs implementation dependent steps, which should return a set of
 * component representations that a typical user of the selected locale would perceive as
 * at least as good as the one returned by BasicFormatMatcher.
 *
 * This polyfill defines the algorithm to be the same as BasicFormatMatcher,
 * with the addition of bonus points awarded where the requested format is of
 * the same data type as the potentially matching format.
 *
 * This algo relies on the concept of closest distance matching described here:
 * http://unicode.org/reports/tr35/tr35-dates.html#Matching_Skeletons
 * Typically a “best match” is found using a closest distance match, such as:
 *
 * Symbols requesting a best choice for the locale are replaced.
 *      j → one of {H, k, h, K}; C → one of {a, b, B}
 * -> Covered by cldr.js matching process
 *
 * For fields with symbols representing the same type (year, month, day, etc):
 *     Most symbols have a small distance from each other.
 *         M ≅ L; E ≅ c; a ≅ b ≅ B; H ≅ k ≅ h ≅ K; ...
 *     -> Covered by cldr.js matching process
 *
 *     Width differences among fields, other than those marking text vs numeric, are given small distance from each other.
 *         MMM ≅ MMMM
 *         MM ≅ M
 *     Numeric and text fields are given a larger distance from each other.
 *         MMM ≈ MM
 *     Symbols representing substantial differences (week of year vs week of month) are given much larger a distances from each other.
 *         d ≋ D; ...
 *     Missing or extra fields cause a match to fail. (But see Missing Skeleton Fields).
 *
 *
 * For example,
 *
 *     { month: 'numeric', day: 'numeric' }
 *
 * should match
 *
 *     { month: '2-digit', day: '2-digit' }
 *
 * rather than
 *
 *     { month: 'short', day: 'numeric' }
 *
 * This makes sense because a user requesting a formatted date with numeric parts would
 * not expect to see the returned format containing narrow, short or long part names
 */
function BestFitFormatMatcher(options, formats) {
    /** Diverging: this block implements the hack for single property configuration, eg.:
     *
     *      `new Intl.DateTimeFormat('en', {day: 'numeric'})`
     *
     * should produce a single digit with the day of the month. This is needed because
     * CLDR `availableFormats` data structure doesn't cover these cases.
     */
    {
        var optionsPropNames = [];
        for (var property in dateTimeComponents) {
            if (!hop.call(dateTimeComponents, property)) continue;

            if (options['[[' + property + ']]'] !== undefined) {
                optionsPropNames.push(property);
            }
        }
        if (optionsPropNames.length === 1) {
            var _bestFormat = generateSyntheticFormat(optionsPropNames[0], options['[[' + optionsPropNames[0] + ']]']);
            if (_bestFormat) {
                return _bestFormat;
            }
        }
    }

    // 1. Let removalPenalty be 120.
    var removalPenalty = 120;

    // 2. Let additionPenalty be 20.
    var additionPenalty = 20;

    // 3. Let longLessPenalty be 8.
    var longLessPenalty = 8;

    // 4. Let longMorePenalty be 6.
    var longMorePenalty = 6;

    // 5. Let shortLessPenalty be 6.
    var shortLessPenalty = 6;

    // 6. Let shortMorePenalty be 3.
    var shortMorePenalty = 3;

    var patternPenalty = 2;

    var hour12Penalty = 1;

    // 7. Let bestScore be -Infinity.
    var bestScore = -Infinity;

    // 8. Let bestFormat be undefined.
    var bestFormat = void 0;

    // 9. Let i be 0.
    var i = 0;

    // 10. Assert: formats is an Array object.

    // 11. Let len be the result of calling the [[Get]] internal method of formats with argument "length".
    var len = formats.length;

    // 12. Repeat while i < len:
    while (i < len) {
        // a. Let format be the result of calling the [[Get]] internal method of formats with argument ToString(i).
        var format = formats[i];

        // b. Let score be 0.
        var score = 0;

        // c. For each property shown in Table 3:
        for (var _property in dateTimeComponents) {
            if (!hop.call(dateTimeComponents, _property)) continue;

            // i. Let optionsProp be options.[[<property>]].
            var optionsProp = options['[[' + _property + ']]'];

            // ii. Let formatPropDesc be the result of calling the [[GetOwnProperty]] internal method of format
            //     with argument property.
            // iii. If formatPropDesc is not undefined, then
            //     1. Let formatProp be the result of calling the [[Get]] internal method of format with argument property.
            var formatProp = hop.call(format, _property) ? format[_property] : undefined;

            // Diverging: using the default properties produced by the pattern/skeleton
            // to match it with user options, and apply a penalty
            var patternProp = hop.call(format._, _property) ? format._[_property] : undefined;
            if (optionsProp !== patternProp) {
                score -= patternPenalty;
            }

            // iv. If optionsProp is undefined and formatProp is not undefined, then decrease score by
            //     additionPenalty.
            if (optionsProp === undefined && formatProp !== undefined) score -= additionPenalty;

            // v. Else if optionsProp is not undefined and formatProp is undefined, then decrease score by
            //    removalPenalty.
            else if (optionsProp !== undefined && formatProp === undefined) score -= removalPenalty;

                // vi. Else
                else {
                        // 1. Let values be the array ["2-digit", "numeric", "narrow", "short",
                        //    "long"].
                        var values = ['2-digit', 'numeric', 'narrow', 'short', 'long'];

                        // 2. Let optionsPropIndex be the index of optionsProp within values.
                        var optionsPropIndex = arrIndexOf.call(values, optionsProp);

                        // 3. Let formatPropIndex be the index of formatProp within values.
                        var formatPropIndex = arrIndexOf.call(values, formatProp);

                        // 4. Let delta be max(min(formatPropIndex - optionsPropIndex, 2), -2).
                        var delta = Math.max(Math.min(formatPropIndex - optionsPropIndex, 2), -2);

                        {
                            // diverging from spec
                            // When the bestFit argument is true, subtract additional penalty where data types are not the same
                            if (formatPropIndex <= 1 && optionsPropIndex >= 2 || formatPropIndex >= 2 && optionsPropIndex <= 1) {
                                // 5. If delta = 2, decrease score by longMorePenalty.
                                if (delta > 0) score -= longMorePenalty;else if (delta < 0) score -= longLessPenalty;
                            } else {
                                // 5. If delta = 2, decrease score by longMorePenalty.
                                if (delta > 1) score -= shortMorePenalty;else if (delta < -1) score -= shortLessPenalty;
                            }
                        }
                    }
        }

        {
            // diverging to also take into consideration differences between 12 or 24 hours
            // which is special for the best fit only.
            if (format._.hour12 !== options.hour12) {
                score -= hour12Penalty;
            }
        }

        // d. If score > bestScore, then
        if (score > bestScore) {
            // i. Let bestScore be score.
            bestScore = score;
            // ii. Let bestFormat be format.
            bestFormat = format;
        }

        // e. Increase i by 1.
        i++;
    }

    // 13. Return bestFormat.
    return bestFormat;
}

/* 12.2.3 */internals.DateTimeFormat = {
    '[[availableLocales]]': [],
    '[[relevantExtensionKeys]]': ['ca', 'nu'],
    '[[localeData]]': {}
};

/**
 * When the supportedLocalesOf method of Intl.DateTimeFormat is called, the
 * following steps are taken:
 */
/* 12.2.2 */
defineProperty(Intl.DateTimeFormat, 'supportedLocalesOf', {
    configurable: true,
    writable: true,
    value: fnBind.call(function (locales) {
        // Bound functions only have the `this` value altered if being used as a constructor,
        // this lets us imitate a native function that has no constructor
        if (!hop.call(this, '[[availableLocales]]')) throw new TypeError('supportedLocalesOf() is not a constructor');

        // Create an object whose props can be used to restore the values of RegExp props
        var regexpRestore = createRegExpRestore(),


        // 1. If options is not provided, then let options be undefined.
        options = arguments[1],


        // 2. Let availableLocales be the value of the [[availableLocales]] internal
        //    property of the standard built-in object that is the initial value of
        //    Intl.NumberFormat.

        availableLocales = this['[[availableLocales]]'],


        // 3. Let requestedLocales be the result of calling the CanonicalizeLocaleList
        //    abstract operation (defined in 9.2.1) with argument locales.
        requestedLocales = CanonicalizeLocaleList(locales);

        // Restore the RegExp properties
        regexpRestore();

        // 4. Return the result of calling the SupportedLocales abstract operation
        //    (defined in 9.2.8) with arguments availableLocales, requestedLocales,
        //    and options.
        return SupportedLocales(availableLocales, requestedLocales, options);
    }, internals.NumberFormat)
});

/**
 * This named accessor property returns a function that formats a number
 * according to the effective locale and the formatting options of this
 * DateTimeFormat object.
 */
/* 12.3.2 */defineProperty(Intl.DateTimeFormat.prototype, 'format', {
    configurable: true,
    get: GetFormatDateTime
});

function GetFormatDateTime() {
    var internal = this !== null && babelHelpers$1["typeof"](this) === 'object' && getInternalProperties(this);

    // Satisfy test 12.3_b
    if (!internal || !internal['[[initializedDateTimeFormat]]']) throw new TypeError('`this` value for format() is not an initialized Intl.DateTimeFormat object.');

    // The value of the [[Get]] attribute is a function that takes the following
    // steps:

    // 1. If the [[boundFormat]] internal property of this DateTimeFormat object
    //    is undefined, then:
    if (internal['[[boundFormat]]'] === undefined) {
        // a. Let F be a Function object, with internal properties set as
        //    specified for built-in functions in ES5, 15, or successor, and the
        //    length property set to 0, that takes the argument date and
        //    performs the following steps:
        var F = function F() {
            var date = arguments.length <= 0 || arguments[0] === undefined ? undefined : arguments[0];

            //   i. If date is not provided or is undefined, then let x be the
            //      result as if by the expression Date.now() where Date.now is
            //      the standard built-in function defined in ES5, 15.9.4.4.
            //  ii. Else let x be ToNumber(date).
            // iii. Return the result of calling the FormatDateTime abstract
            //      operation (defined below) with arguments this and x.
            var x = date === undefined ? Date.now() : toNumber(date);
            return FormatDateTime(this, x);
        };
        // b. Let bind be the standard built-in function object defined in ES5,
        //    15.3.4.5.
        // c. Let bf be the result of calling the [[Call]] internal method of
        //    bind with F as the this value and an argument list containing
        //    the single item this.
        var bf = fnBind.call(F, this);
        // d. Set the [[boundFormat]] internal property of this NumberFormat
        //    object to bf.
        internal['[[boundFormat]]'] = bf;
    }
    // Return the value of the [[boundFormat]] internal property of this
    // NumberFormat object.
    return internal['[[boundFormat]]'];
}

function formatToParts$1() {
    var date = arguments.length <= 0 || arguments[0] === undefined ? undefined : arguments[0];

    var internal = this !== null && babelHelpers$1["typeof"](this) === 'object' && getInternalProperties(this);

    if (!internal || !internal['[[initializedDateTimeFormat]]']) throw new TypeError('`this` value for formatToParts() is not an initialized Intl.DateTimeFormat object.');

    var x = date === undefined ? Date.now() : toNumber(date);
    return FormatToPartsDateTime(this, x);
}

Object.defineProperty(Intl.DateTimeFormat.prototype, 'formatToParts', {
    enumerable: false,
    writable: true,
    configurable: true,
    value: formatToParts$1
});

function CreateDateTimeParts(dateTimeFormat, x) {
    // 1. If x is not a finite Number, then throw a RangeError exception.
    if (!isFinite(x)) throw new RangeError('Invalid valid date passed to format');

    var internal = dateTimeFormat.__getInternalProperties(secret);

    // Creating restore point for properties on the RegExp object... please wait
    /* let regexpRestore = */createRegExpRestore(); // ###TODO: review this

    // 2. Let locale be the value of the [[locale]] internal property of dateTimeFormat.
    var locale = internal['[[locale]]'];

    // 3. Let nf be the result of creating a new NumberFormat object as if by the
    // expression new Intl.NumberFormat([locale], {useGrouping: false}) where
    // Intl.NumberFormat is the standard built-in constructor defined in 11.1.3.
    var nf = new Intl.NumberFormat([locale], { useGrouping: false });

    // 4. Let nf2 be the result of creating a new NumberFormat object as if by the
    // expression new Intl.NumberFormat([locale], {minimumIntegerDigits: 2, useGrouping:
    // false}) where Intl.NumberFormat is the standard built-in constructor defined in
    // 11.1.3.
    var nf2 = new Intl.NumberFormat([locale], { minimumIntegerDigits: 2, useGrouping: false });

    // 5. Let tm be the result of calling the ToLocalTime abstract operation (defined
    // below) with x, the value of the [[calendar]] internal property of dateTimeFormat,
    // and the value of the [[timeZone]] internal property of dateTimeFormat.
    var tm = ToLocalTime(x, internal['[[calendar]]'], internal['[[timeZone]]']);

    // 6. Let result be the value of the [[pattern]] internal property of dateTimeFormat.
    var pattern = internal['[[pattern]]'];

    // 7.
    var result = new List();

    // 8.
    var index = 0;

    // 9.
    var beginIndex = pattern.indexOf('{');

    // 10.
    var endIndex = 0;

    // Need the locale minus any extensions
    var dataLocale = internal['[[dataLocale]]'];

    // Need the calendar data from CLDR
    var localeData = internals.DateTimeFormat['[[localeData]]'][dataLocale].calendars;
    var ca = internal['[[calendar]]'];

    // 11.
    while (beginIndex !== -1) {
        var fv = void 0;
        // a.
        endIndex = pattern.indexOf('}', beginIndex);
        // b.
        if (endIndex === -1) {
            throw new Error('Unclosed pattern');
        }
        // c.
        if (beginIndex > index) {
            arrPush.call(result, {
                type: 'literal',
                value: pattern.substring(index, beginIndex)
            });
        }
        // d.
        var p = pattern.substring(beginIndex + 1, endIndex);
        // e.
        if (dateTimeComponents.hasOwnProperty(p)) {
            //   i. Let f be the value of the [[<p>]] internal property of dateTimeFormat.
            var f = internal['[[' + p + ']]'];
            //  ii. Let v be the value of tm.[[<p>]].
            var v = tm['[[' + p + ']]'];
            // iii. If p is "year" and v ≤ 0, then let v be 1 - v.
            if (p === 'year' && v <= 0) {
                v = 1 - v;
            }
            //  iv. If p is "month", then increase v by 1.
            else if (p === 'month') {
                    v++;
                }
                //   v. If p is "hour" and the value of the [[hour12]] internal property of
                //      dateTimeFormat is true, then
                else if (p === 'hour' && internal['[[hour12]]'] === true) {
                        // 1. Let v be v modulo 12.
                        v = v % 12;
                        // 2. If v is 0 and the value of the [[hourNo0]] internal property of
                        //    dateTimeFormat is true, then let v be 12.
                        if (v === 0 && internal['[[hourNo0]]'] === true) {
                            v = 12;
                        }
                    }

            //  vi. If f is "numeric", then
            if (f === 'numeric') {
                // 1. Let fv be the result of calling the FormatNumber abstract operation
                //    (defined in 11.3.2) with arguments nf and v.
                fv = FormatNumber(nf, v);
            }
            // vii. Else if f is "2-digit", then
            else if (f === '2-digit') {
                    // 1. Let fv be the result of calling the FormatNumber abstract operation
                    //    with arguments nf2 and v.
                    fv = FormatNumber(nf2, v);
                    // 2. If the length of fv is greater than 2, let fv be the substring of fv
                    //    containing the last two characters.
                    if (fv.length > 2) {
                        fv = fv.slice(-2);
                    }
                }
                // viii. Else if f is "narrow", "short", or "long", then let fv be a String
                //     value representing f in the desired form; the String value depends upon
                //     the implementation and the effective locale and calendar of
                //     dateTimeFormat. If p is "month", then the String value may also depend
                //     on whether dateTimeFormat has a [[day]] internal property. If p is
                //     "timeZoneName", then the String value may also depend on the value of
                //     the [[inDST]] field of tm.
                else if (f in dateWidths) {
                        switch (p) {
                            case 'month':
                                fv = resolveDateString(localeData, ca, 'months', f, tm['[[' + p + ']]']);
                                break;

                            case 'weekday':
                                try {
                                    fv = resolveDateString(localeData, ca, 'days', f, tm['[[' + p + ']]']);
                                    // fv = resolveDateString(ca.days, f)[tm['[['+ p +']]']];
                                } catch (e) {
                                    throw new Error('Could not find weekday data for locale ' + locale);
                                }
                                break;

                            case 'timeZoneName':
                                fv = ''; // ###TODO
                                break;

                            case 'era':
                                try {
                                    fv = resolveDateString(localeData, ca, 'eras', f, tm['[[' + p + ']]']);
                                } catch (e) {
                                    throw new Error('Could not find era data for locale ' + locale);
                                }
                                break;

                            default:
                                fv = tm['[[' + p + ']]'];
                        }
                    }
            // ix
            arrPush.call(result, {
                type: p,
                value: fv
            });
            // f.
        } else if (p === 'ampm') {
            // i.
            var _v = tm['[[hour]]'];
            // ii./iii.
            fv = resolveDateString(localeData, ca, 'dayPeriods', _v > 11 ? 'pm' : 'am', null);
            // iv.
            arrPush.call(result, {
                type: 'dayPeriod',
                value: fv
            });
            // g.
        } else {
            arrPush.call(result, {
                type: 'literal',
                value: pattern.substring(beginIndex, endIndex + 1)
            });
        }
        // h.
        index = endIndex + 1;
        // i.
        beginIndex = pattern.indexOf('{', index);
    }
    // 12.
    if (endIndex < pattern.length - 1) {
        arrPush.call(result, {
            type: 'literal',
            value: pattern.substr(endIndex + 1)
        });
    }
    // 13.
    return result;
}

/**
 * When the FormatDateTime abstract operation is called with arguments dateTimeFormat
 * (which must be an object initialized as a DateTimeFormat) and x (which must be a Number
 * value), it returns a String value representing x (interpreted as a time value as
 * specified in ES5, 15.9.1.1) according to the effective locale and the formatting
 * options of dateTimeFormat.
 */
function FormatDateTime(dateTimeFormat, x) {
    var parts = CreateDateTimeParts(dateTimeFormat, x);
    var result = '';

    for (var i = 0; parts.length > i; i++) {
        var part = parts[i];
        result += part.value;
    }
    return result;
}

function FormatToPartsDateTime(dateTimeFormat, x) {
    var parts = CreateDateTimeParts(dateTimeFormat, x);
    var result = [];
    for (var i = 0; parts.length > i; i++) {
        var part = parts[i];
        result.push({
            type: part.type,
            value: part.value
        });
    }
    return result;
}

/**
 * When the ToLocalTime abstract operation is called with arguments date, calendar, and
 * timeZone, the following steps are taken:
 */
function ToLocalTime(date, calendar, timeZone) {
    // 1. Apply calendrical calculations on date for the given calendar and time zone to
    //    produce weekday, era, year, month, day, hour, minute, second, and inDST values.
    //    The calculations should use best available information about the specified
    //    calendar and time zone. If the calendar is "gregory", then the calculations must
    //    match the algorithms specified in ES5, 15.9.1, except that calculations are not
    //    bound by the restrictions on the use of best available information on time zones
    //    for local time zone adjustment and daylight saving time adjustment imposed by
    //    ES5, 15.9.1.7 and 15.9.1.8.
    // ###TODO###
    var d = new Date(date),
        m = 'get' + (timeZone || '');

    // 2. Return a Record with fields [[weekday]], [[era]], [[year]], [[month]], [[day]],
    //    [[hour]], [[minute]], [[second]], and [[inDST]], each with the corresponding
    //    calculated value.
    return new Record({
        '[[weekday]]': d[m + 'Day'](),
        '[[era]]': +(d[m + 'FullYear']() >= 0),
        '[[year]]': d[m + 'FullYear'](),
        '[[month]]': d[m + 'Month'](),
        '[[day]]': d[m + 'Date'](),
        '[[hour]]': d[m + 'Hours'](),
        '[[minute]]': d[m + 'Minutes'](),
        '[[second]]': d[m + 'Seconds'](),
        '[[inDST]]': false // ###TODO###
    });
}

/**
 * The function returns a new object whose properties and attributes are set as if
 * constructed by an object literal assigning to each of the following properties the
 * value of the corresponding internal property of this DateTimeFormat object (see 12.4):
 * locale, calendar, numberingSystem, timeZone, hour12, weekday, era, year, month, day,
 * hour, minute, second, and timeZoneName. Properties whose corresponding internal
 * properties are not present are not assigned.
 */
/* 12.3.3 */defineProperty(Intl.DateTimeFormat.prototype, 'resolvedOptions', {
    writable: true,
    configurable: true,
    value: function value() {
        var prop = void 0,
            descs = new Record(),
            props = ['locale', 'calendar', 'numberingSystem', 'timeZone', 'hour12', 'weekday', 'era', 'year', 'month', 'day', 'hour', 'minute', 'second', 'timeZoneName'],
            internal = this !== null && babelHelpers$1["typeof"](this) === 'object' && getInternalProperties(this);

        // Satisfy test 12.3_b
        if (!internal || !internal['[[initializedDateTimeFormat]]']) throw new TypeError('`this` value for resolvedOptions() is not an initialized Intl.DateTimeFormat object.');

        for (var i = 0, max = props.length; i < max; i++) {
            if (hop.call(internal, prop = '[[' + props[i] + ']]')) descs[props[i]] = { value: internal[prop], writable: true, configurable: true, enumerable: true };
        }

        return objCreate({}, descs);
    }
});

var ls = Intl.__localeSensitiveProtos = {
    Number: {},
    Date: {}
};

/**
 * When the toLocaleString method is called with optional arguments locales and options,
 * the following steps are taken:
 */
/* 13.2.1 */ls.Number.toLocaleString = function () {
    // Satisfy test 13.2.1_1
    if (Object.prototype.toString.call(this) !== '[object Number]') throw new TypeError('`this` value must be a number for Number.prototype.toLocaleString()');

    // 1. Let x be this Number value (as defined in ES5, 15.7.4).
    // 2. If locales is not provided, then let locales be undefined.
    // 3. If options is not provided, then let options be undefined.
    // 4. Let numberFormat be the result of creating a new object as if by the
    //    expression new Intl.NumberFormat(locales, options) where
    //    Intl.NumberFormat is the standard built-in constructor defined in 11.1.3.
    // 5. Return the result of calling the FormatNumber abstract operation
    //    (defined in 11.3.2) with arguments numberFormat and x.
    return FormatNumber(new NumberFormatConstructor(arguments[0], arguments[1]), this);
};

/**
 * When the toLocaleString method is called with optional arguments locales and options,
 * the following steps are taken:
 */
/* 13.3.1 */ls.Date.toLocaleString = function () {
    // Satisfy test 13.3.0_1
    if (Object.prototype.toString.call(this) !== '[object Date]') throw new TypeError('`this` value must be a Date instance for Date.prototype.toLocaleString()');

    // 1. Let x be this time value (as defined in ES5, 15.9.5).
    var x = +this;

    // 2. If x is NaN, then return "Invalid Date".
    if (isNaN(x)) return 'Invalid Date';

    // 3. If locales is not provided, then let locales be undefined.
    var locales = arguments[0];

    // 4. If options is not provided, then let options be undefined.
    var options = arguments[1];

    // 5. Let options be the result of calling the ToDateTimeOptions abstract
    //    operation (defined in 12.1.1) with arguments options, "any", and "all".
    options = ToDateTimeOptions(options, 'any', 'all');

    // 6. Let dateTimeFormat be the result of creating a new object as if by the
    //    expression new Intl.DateTimeFormat(locales, options) where
    //    Intl.DateTimeFormat is the standard built-in constructor defined in 12.1.3.
    var dateTimeFormat = new DateTimeFormatConstructor(locales, options);

    // 7. Return the result of calling the FormatDateTime abstract operation (defined
    //    in 12.3.2) with arguments dateTimeFormat and x.
    return FormatDateTime(dateTimeFormat, x);
};

/**
 * When the toLocaleDateString method is called with optional arguments locales and
 * options, the following steps are taken:
 */
/* 13.3.2 */ls.Date.toLocaleDateString = function () {
    // Satisfy test 13.3.0_1
    if (Object.prototype.toString.call(this) !== '[object Date]') throw new TypeError('`this` value must be a Date instance for Date.prototype.toLocaleDateString()');

    // 1. Let x be this time value (as defined in ES5, 15.9.5).
    var x = +this;

    // 2. If x is NaN, then return "Invalid Date".
    if (isNaN(x)) return 'Invalid Date';

    // 3. If locales is not provided, then let locales be undefined.
    var locales = arguments[0],


    // 4. If options is not provided, then let options be undefined.
    options = arguments[1];

    // 5. Let options be the result of calling the ToDateTimeOptions abstract
    //    operation (defined in 12.1.1) with arguments options, "date", and "date".
    options = ToDateTimeOptions(options, 'date', 'date');

    // 6. Let dateTimeFormat be the result of creating a new object as if by the
    //    expression new Intl.DateTimeFormat(locales, options) where
    //    Intl.DateTimeFormat is the standard built-in constructor defined in 12.1.3.
    var dateTimeFormat = new DateTimeFormatConstructor(locales, options);

    // 7. Return the result of calling the FormatDateTime abstract operation (defined
    //    in 12.3.2) with arguments dateTimeFormat and x.
    return FormatDateTime(dateTimeFormat, x);
};

/**
 * When the toLocaleTimeString method is called with optional arguments locales and
 * options, the following steps are taken:
 */
/* 13.3.3 */ls.Date.toLocaleTimeString = function () {
    // Satisfy test 13.3.0_1
    if (Object.prototype.toString.call(this) !== '[object Date]') throw new TypeError('`this` value must be a Date instance for Date.prototype.toLocaleTimeString()');

    // 1. Let x be this time value (as defined in ES5, 15.9.5).
    var x = +this;

    // 2. If x is NaN, then return "Invalid Date".
    if (isNaN(x)) return 'Invalid Date';

    // 3. If locales is not provided, then let locales be undefined.
    var locales = arguments[0];

    // 4. If options is not provided, then let options be undefined.
    var options = arguments[1];

    // 5. Let options be the result of calling the ToDateTimeOptions abstract
    //    operation (defined in 12.1.1) with arguments options, "time", and "time".
    options = ToDateTimeOptions(options, 'time', 'time');

    // 6. Let dateTimeFormat be the result of creating a new object as if by the
    //    expression new Intl.DateTimeFormat(locales, options) where
    //    Intl.DateTimeFormat is the standard built-in constructor defined in 12.1.3.
    var dateTimeFormat = new DateTimeFormatConstructor(locales, options);

    // 7. Return the result of calling the FormatDateTime abstract operation (defined
    //    in 12.3.2) with arguments dateTimeFormat and x.
    return FormatDateTime(dateTimeFormat, x);
};

defineProperty(Intl, '__applyLocaleSensitivePrototypes', {
    writable: true,
    configurable: true,
    value: function value() {
        defineProperty(Number.prototype, 'toLocaleString', { writable: true, configurable: true, value: ls.Number.toLocaleString });
        // Need this here for IE 8, to avoid the _DontEnum_ bug
        defineProperty(Date.prototype, 'toLocaleString', { writable: true, configurable: true, value: ls.Date.toLocaleString });

        for (var k in ls.Date) {
            if (hop.call(ls.Date, k)) defineProperty(Date.prototype, k, { writable: true, configurable: true, value: ls.Date[k] });
        }
    }
});

/**
 * Can't really ship a single script with data for hundreds of locales, so we provide
 * this __addLocaleData method as a means for the developer to add the data on an
 * as-needed basis
 */
defineProperty(Intl, '__addLocaleData', {
    value: function value(data) {
        if (!IsStructurallyValidLanguageTag(data.locale)) throw new Error("Object passed doesn't identify itself with a valid language tag");

        addLocaleData(data, data.locale);
    }
});

function addLocaleData(data, tag) {
    // Both NumberFormat and DateTimeFormat require number data, so throw if it isn't present
    if (!data.number) throw new Error("Object passed doesn't contain locale data for Intl.NumberFormat");

    var locale = void 0,
        locales = [tag],
        parts = tag.split('-');

    // Create fallbacks for locale data with scripts, e.g. Latn, Hans, Vaii, etc
    if (parts.length > 2 && parts[1].length === 4) arrPush.call(locales, parts[0] + '-' + parts[2]);

    while (locale = arrShift.call(locales)) {
        // Add to NumberFormat internal properties as per 11.2.3
        arrPush.call(internals.NumberFormat['[[availableLocales]]'], locale);
        internals.NumberFormat['[[localeData]]'][locale] = data.number;

        // ...and DateTimeFormat internal properties as per 12.2.3
        if (data.date) {
            data.date.nu = data.number.nu;
            arrPush.call(internals.DateTimeFormat['[[availableLocales]]'], locale);
            internals.DateTimeFormat['[[localeData]]'][locale] = data.date;
        }
    }

    // If this is the first set of locale data added, make it the default
    if (defaultLocale === undefined) setDefaultLocale(tag);
}

defineProperty(Intl, '__disableRegExpRestore', {
    value: function value() {
        internals.disableRegExpRestore = true;
    }
});

module.exports = Intl;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/intl/locale-data/jsonp/ca.js":
/*!***************************************************!*\
  !*** ./node_modules/intl/locale-data/jsonp/ca.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

IntlPolyfill.__addLocaleData({locale:"ca",date:{ca:["gregory","buddhist","chinese","coptic","dangi","ethioaa","ethiopic","generic","hebrew","indian","islamic","islamicc","japanese","persian","roc"],hourNo0:true,hour12:false,formats:{short:"{1} {0}",medium:"{1}, {0}",full:"{1} 'a' 'les' {0}",long:"{1}, {0}",availableFormats:{"d":"d","E":"ccc",Ed:"E d",Ehm:"E h:mm a",EHm:"E H:mm",Ehms:"E h:mm:ss a",EHms:"E H:mm:ss",Gy:"y G",GyMMM:"LLL y G",GyMMMd:"d MMM y G",GyMMMEd:"E, d MMM y G",GyMMMM:"LLLL 'de' y G",GyMMMMd:"d MMMM 'de' y G",GyMMMMEd:"E, d MMMM 'de' y G","h":"h a","H":"H",hm:"h:mm a",Hm:"HH:mm",hms:"h:mm:ss a",Hms:"HH:mm:ss",hmsv:"h:mm:ss a v",Hmsv:"HH:mm:ss v",hmv:"h:mm a v",Hmv:"HH:mm v","M":"L",Md:"d/M",MEd:"E d/M",MMM:"LLL",MMMd:"d MMM",MMMEd:"E, d MMM",MMMMd:"d MMMM",MMMMEd:"E, d MMMM",ms:"mm:ss","y":"y",yM:"M/y",yMd:"d/M/y",yMEd:"E, d/M/y",yMMM:"LLL 'de' y",yMMMd:"d MMM y",yMMMEd:"E, d MMM y",yMMMM:"LLLL 'de' y",yMMMMd:"d MMMM 'de' y",yMMMMEd:"E, d MMMM 'de' y",yQQQ:"QQQ y",yQQQQ:"QQQQ y"},dateFormats:{yMMMMEEEEd:"EEEE, d MMMM 'de' y",yMMMMd:"d MMMM 'de' y",yMMMd:"d MMM y",yMd:"d/M/yy"},timeFormats:{hmmsszzzz:"H:mm:ss zzzz",hmsz:"H:mm:ss z",hms:"H:mm:ss",hm:"H:mm"}},calendars:{buddhist:{months:{narrow:["GN","FB","MÇ","AB","MG","JN","JL","AG","ST","OC","NV","DS"],short:["gen.","febr.","març","abr.","maig","juny","jul.","ag.","set.","oct.","nov.","des."],long:["de gener","de febrer","de març","d’abril","de maig","de juny","de juliol","d’agost","de setembre","d’octubre","de novembre","de desembre"]},days:{narrow:["dg","dl","dt","dc","dj","dv","ds"],short:["dg.","dl.","dt.","dc.","dj.","dv.","ds."],long:["diumenge","dilluns","dimarts","dimecres","dijous","divendres","dissabte"]},eras:{narrow:["eB"],short:["eB"],long:["eB"]},dayPeriods:{am:"a. m.",pm:"p. m."}},chinese:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["1","2","3","4","5","6","7","8","9","10","11","12"],long:["1","2","3","4","5","6","7","8","9","10","11","12"]},days:{narrow:["dg","dl","dt","dc","dj","dv","ds"],short:["dg.","dl.","dt.","dc.","dj.","dv.","ds."],long:["diumenge","dilluns","dimarts","dimecres","dijous","divendres","dissabte"]},dayPeriods:{am:"a. m.",pm:"p. m."}},coptic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Tout","Baba","Hator","Kiahk","Toba","Amshir","Baramhat","Baramouda","Bashans","Paona","Epep","Mesra","Nasie"],long:["Tout","Baba","Hator","Kiahk","Toba","Amshir","Baramhat","Baramouda","Bashans","Paona","Epep","Mesra","Nasie"]},days:{narrow:["dg","dl","dt","dc","dj","dv","ds"],short:["dg.","dl.","dt.","dc.","dj.","dv.","ds."],long:["diumenge","dilluns","dimarts","dimecres","dijous","divendres","dissabte"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"a. m.",pm:"p. m."}},dangi:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["1","2","3","4","5","6","7","8","9","10","11","12"],long:["1","2","3","4","5","6","7","8","9","10","11","12"]},days:{narrow:["dg","dl","dt","dc","dj","dv","ds"],short:["dg.","dl.","dt.","dc.","dj.","dv.","ds."],long:["diumenge","dilluns","dimarts","dimecres","dijous","divendres","dissabte"]},dayPeriods:{am:"a. m.",pm:"p. m."}},ethiopic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"],long:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"]},days:{narrow:["dg","dl","dt","dc","dj","dv","ds"],short:["dg.","dl.","dt.","dc.","dj.","dv.","ds."],long:["diumenge","dilluns","dimarts","dimecres","dijous","divendres","dissabte"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"a. m.",pm:"p. m."}},ethioaa:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"],long:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"]},days:{narrow:["dg","dl","dt","dc","dj","dv","ds"],short:["dg.","dl.","dt.","dc.","dj.","dv.","ds."],long:["diumenge","dilluns","dimarts","dimecres","dijous","divendres","dissabte"]},eras:{narrow:["ERA0"],short:["ERA0"],long:["ERA0"]},dayPeriods:{am:"a. m.",pm:"p. m."}},generic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"],long:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"]},days:{narrow:["dg","dl","dt","dc","dj","dv","ds"],short:["dg.","dl.","dt.","dc.","dj.","dv.","ds."],long:["diumenge","dilluns","dimarts","dimecres","dijous","divendres","dissabte"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"a. m.",pm:"p. m."}},gregory:{months:{narrow:["GN","FB","MÇ","AB","MG","JN","JL","AG","ST","OC","NV","DS"],short:["gen.","febr.","març","abr.","maig","juny","jul.","ag.","set.","oct.","nov.","des."],long:["de gener","de febrer","de març","d’abril","de maig","de juny","de juliol","d’agost","de setembre","d’octubre","de novembre","de desembre"]},days:{narrow:["dg","dl","dt","dc","dj","dv","ds"],short:["dg.","dl.","dt.","dc.","dj.","dv.","ds."],long:["diumenge","dilluns","dimarts","dimecres","dijous","divendres","dissabte"]},eras:{narrow:["aC","dC","AEC","EC"],short:["aC","dC","AEC","EC"],long:["abans de Crist","després de Crist","abans de l’Era Comuna","Era Comuna"]},dayPeriods:{am:"a. m.",pm:"p. m."}},hebrew:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13","7"],short:["Tishri","Heshvan","Kislev","Tevet","Shevat","Adar I","Adar","Nisan","Iyar","Sivan","Tamuz","Av","Elul","Adar II"],long:["Tishri","Heshvan","Kislev","Tevet","Shevat","Adar I","Adar","Nisan","Iyar","Sivan","Tamuz","Av","Elul","Adar II"]},days:{narrow:["dg","dl","dt","dc","dj","dv","ds"],short:["dg.","dl.","dt.","dc.","dj.","dv.","ds."],long:["diumenge","dilluns","dimarts","dimecres","dijous","divendres","dissabte"]},eras:{narrow:["AM"],short:["AM"],long:["AM"]},dayPeriods:{am:"a. m.",pm:"p. m."}},indian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Chaitra","Vaisakha","Jyaistha","Asadha","Sravana","Bhadra","Asvina","Kartika","Agrahayana","Pausa","Magha","Phalguna"],long:["Chaitra","Vaisakha","Jyaistha","Asadha","Sravana","Bhadra","Asvina","Kartika","Agrahayana","Pausa","Magha","Phalguna"]},days:{narrow:["dg","dl","dt","dc","dj","dv","ds"],short:["dg.","dl.","dt.","dc.","dj.","dv.","ds."],long:["diumenge","dilluns","dimarts","dimecres","dijous","divendres","dissabte"]},eras:{narrow:["Saka"],short:["Saka"],long:["Saka"]},dayPeriods:{am:"a. m.",pm:"p. m."}},islamic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Muh.","Saf.","Rab. I","Rab. II","Jum. I","Jum. II","Raj.","Sha.","Ram.","Shaw.","Dhuʻl-Q.","Dhuʻl-H."],long:["Muharram","Safar","Rabiʻ I","Rabiʻ II","Jumada I","Jumada II","Rajab","Shaʻban","Ramadan","Shawwal","Dhuʻl-Qiʻdah","Dhuʻl-Hijjah"]},days:{narrow:["dg","dl","dt","dc","dj","dv","ds"],short:["dg.","dl.","dt.","dc.","dj.","dv.","ds."],long:["diumenge","dilluns","dimarts","dimecres","dijous","divendres","dissabte"]},eras:{narrow:["AH"],short:["AH"],long:["AH"]},dayPeriods:{am:"a. m.",pm:"p. m."}},islamicc:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Muh.","Saf.","Rab. I","Rab. II","Jum. I","Jum. II","Raj.","Sha.","Ram.","Shaw.","Dhuʻl-Q.","Dhuʻl-H."],long:["Muharram","Safar","Rabiʻ I","Rabiʻ II","Jumada I","Jumada II","Rajab","Shaʻban","Ramadan","Shawwal","Dhuʻl-Qiʻdah","Dhuʻl-Hijjah"]},days:{narrow:["dg","dl","dt","dc","dj","dv","ds"],short:["dg.","dl.","dt.","dc.","dj.","dv.","ds."],long:["diumenge","dilluns","dimarts","dimecres","dijous","divendres","dissabte"]},eras:{narrow:["AH"],short:["AH"],long:["AH"]},dayPeriods:{am:"a. m.",pm:"p. m."}},japanese:{months:{narrow:["GN","FB","MÇ","AB","MG","JN","JL","AG","ST","OC","NV","DS"],short:["gen.","febr.","març","abr.","maig","juny","jul.","ag.","set.","oct.","nov.","des."],long:["de gener","de febrer","de març","d’abril","de maig","de juny","de juliol","d’agost","de setembre","d’octubre","de novembre","de desembre"]},days:{narrow:["dg","dl","dt","dc","dj","dv","ds"],short:["dg.","dl.","dt.","dc.","dj.","dv.","ds."],long:["diumenge","dilluns","dimarts","dimecres","dijous","divendres","dissabte"]},eras:{narrow:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","M","T","S","H"],short:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","Meiji","Taishō","Shōwa","Heisei"],long:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","Meiji","Taishō","Shōwa","Heisei"]},dayPeriods:{am:"a. m.",pm:"p. m."}},persian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Farvardin","Ordibehesht","Khordad","Tir","Mordad","Shahrivar","Mehr","Aban","Azar","Dey","Bahman","Esfand"],long:["Farvardin","Ordibehesht","Khordad","Tir","Mordad","Shahrivar","Mehr","Aban","Azar","Dey","Bahman","Esfand"]},days:{narrow:["dg","dl","dt","dc","dj","dv","ds"],short:["dg.","dl.","dt.","dc.","dj.","dv.","ds."],long:["diumenge","dilluns","dimarts","dimecres","dijous","divendres","dissabte"]},eras:{narrow:["AP"],short:["AP"],long:["AP"]},dayPeriods:{am:"a. m.",pm:"p. m."}},roc:{months:{narrow:["GN","FB","MÇ","AB","MG","JN","JL","AG","ST","OC","NV","DS"],short:["gen.","febr.","març","abr.","maig","juny","jul.","ag.","set.","oct.","nov.","des."],long:["de gener","de febrer","de març","d’abril","de maig","de juny","de juliol","d’agost","de setembre","d’octubre","de novembre","de desembre"]},days:{narrow:["dg","dl","dt","dc","dj","dv","ds"],short:["dg.","dl.","dt.","dc.","dj.","dv.","ds."],long:["diumenge","dilluns","dimarts","dimecres","dijous","divendres","dissabte"]},eras:{narrow:["Before R.O.C.","R.O.C."],short:["Before R.O.C.","R.O.C."],long:["Before R.O.C.","R.O.C."]},dayPeriods:{am:"a. m.",pm:"p. m."}}}},number:{nu:["latn"],patterns:{decimal:{positivePattern:"{number}",negativePattern:"{minusSign}{number}"},currency:{positivePattern:"{number} {currency}",negativePattern:"{minusSign}{number} {currency}"},percent:{positivePattern:"{number}{percentSign}",negativePattern:"{minusSign}{number}{percentSign}"}},symbols:{latn:{decimal:",",group:".",nan:"NaN",plusSign:"+",minusSign:"-",percentSign:"%",infinity:"∞"}},currencies:{AUD:"AU$",CNY:"¥",ESP:"₧",EUR:"€",GBP:"£",HKD:"HK$",ILS:"₪",INR:"₹",JPY:"JP¥",KRW:"₩",NZD:"NZ$",THB:"฿",TWD:"NT$",VND:"₫",XAF:"FCFA",XOF:"CFA",XPF:"CFPF"}}});

/***/ }),

/***/ "./node_modules/intl/locale-data/jsonp/de.js":
/*!***************************************************!*\
  !*** ./node_modules/intl/locale-data/jsonp/de.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

IntlPolyfill.__addLocaleData({locale:"de",date:{ca:["gregory","buddhist","chinese","coptic","dangi","ethioaa","ethiopic","generic","hebrew","indian","islamic","islamicc","japanese","persian","roc"],hourNo0:true,hour12:false,formats:{short:"{1}, {0}",medium:"{1}, {0}",full:"{1} 'um' {0}",long:"{1} 'um' {0}",availableFormats:{"d":"d","E":"ccc",Ed:"E, d.",Ehm:"E h:mm a",EHm:"E, HH:mm",Ehms:"E, h:mm:ss a",EHms:"E, HH:mm:ss",Gy:"y G",GyMMM:"MMM y G",GyMMMd:"d. MMM y G",GyMMMEd:"E, d. MMM y G","h":"h a","H":"HH 'Uhr'",hm:"h:mm a",Hm:"HH:mm",hms:"h:mm:ss a",Hms:"HH:mm:ss",hmsv:"h:mm:ss a v",Hmsv:"HH:mm:ss v",hmv:"h:mm a v",Hmv:"HH:mm v","M":"L",Md:"d.M.",MEd:"E, d.M.",MMd:"d.MM.",MMdd:"dd.MM.",MMM:"LLL",MMMd:"d. MMM",MMMEd:"E, d. MMM",MMMMd:"d. MMMM",MMMMEd:"E, d. MMMM",ms:"mm:ss","y":"y",yM:"M.y",yMd:"d.M.y",yMEd:"E, d.M.y",yMM:"MM.y",yMMdd:"dd.MM.y",yMMM:"MMM y",yMMMd:"d. MMM y",yMMMEd:"E, d. MMM y",yMMMM:"MMMM y",yQQQ:"QQQ y",yQQQQ:"QQQQ y"},dateFormats:{yMMMMEEEEd:"EEEE, d. MMMM y",yMMMMd:"d. MMMM y",yMMMd:"dd.MM.y",yMd:"dd.MM.yy"},timeFormats:{hmmsszzzz:"HH:mm:ss zzzz",hmsz:"HH:mm:ss z",hms:"HH:mm:ss",hm:"HH:mm"}},calendars:{buddhist:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["Jan.","Feb.","März","Apr.","Mai","Juni","Juli","Aug.","Sep.","Okt.","Nov.","Dez."],long:["Januar","Februar","März","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"]},days:{narrow:["S","M","D","M","D","F","S"],short:["So.","Mo.","Di.","Mi.","Do.","Fr.","Sa."],long:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"]},eras:{narrow:["BE"],short:["BE"],long:["BE"]},dayPeriods:{am:"vorm.",pm:"nachm."}},chinese:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"],long:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"]},days:{narrow:["S","M","D","M","D","F","S"],short:["So.","Mo.","Di.","Mi.","Do.","Fr.","Sa."],long:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"]},dayPeriods:{am:"vorm.",pm:"nachm."}},coptic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Tout","Baba","Hator","Kiahk","Toba","Amshir","Baramhat","Baramouda","Bashans","Paona","Epep","Mesra","Nasie"],long:["Tout","Baba","Hator","Kiahk","Toba","Amshir","Baramhat","Baramouda","Bashans","Paona","Epep","Mesra","Nasie"]},days:{narrow:["S","M","D","M","D","F","S"],short:["So.","Mo.","Di.","Mi.","Do.","Fr.","Sa."],long:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"vorm.",pm:"nachm."}},dangi:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"],long:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"]},days:{narrow:["S","M","D","M","D","F","S"],short:["So.","Mo.","Di.","Mi.","Do.","Fr.","Sa."],long:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"]},dayPeriods:{am:"vorm.",pm:"nachm."}},ethiopic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"],long:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"]},days:{narrow:["S","M","D","M","D","F","S"],short:["So.","Mo.","Di.","Mi.","Do.","Fr.","Sa."],long:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"vorm.",pm:"nachm."}},ethioaa:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"],long:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"]},days:{narrow:["S","M","D","M","D","F","S"],short:["So.","Mo.","Di.","Mi.","Do.","Fr.","Sa."],long:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"]},eras:{narrow:["ERA0"],short:["ERA0"],long:["ERA0"]},dayPeriods:{am:"vorm.",pm:"nachm."}},generic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"],long:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"]},days:{narrow:["S","M","D","M","D","F","S"],short:["So.","Mo.","Di.","Mi.","Do.","Fr.","Sa."],long:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"vorm.",pm:"nachm."}},gregory:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["Jan.","Feb.","März","Apr.","Mai","Juni","Juli","Aug.","Sep.","Okt.","Nov.","Dez."],long:["Januar","Februar","März","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"]},days:{narrow:["S","M","D","M","D","F","S"],short:["So.","Mo.","Di.","Mi.","Do.","Fr.","Sa."],long:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"]},eras:{narrow:["v. Chr.","n. Chr.","v. u. Z.","u. Z."],short:["v. Chr.","n. Chr.","v. u. Z.","u. Z."],long:["v. Chr.","n. Chr.","vor unserer Zeitrechnung","unserer Zeitrechnung"]},dayPeriods:{am:"vorm.",pm:"nachm."}},hebrew:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13","7"],short:["Tishri","Heshvan","Kislev","Tevet","Shevat","Adar I","Adar","Nisan","Iyar","Sivan","Tamuz","Av","Elul","Adar II"],long:["Tishri","Heshvan","Kislev","Tevet","Shevat","Adar I","Adar","Nisan","Iyar","Sivan","Tamuz","Av","Elul","Adar II"]},days:{narrow:["S","M","D","M","D","F","S"],short:["So.","Mo.","Di.","Mi.","Do.","Fr.","Sa."],long:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"]},eras:{narrow:["AM"],short:["AM"],long:["AM"]},dayPeriods:{am:"vorm.",pm:"nachm."}},indian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Chaitra","Vaisakha","Jyaistha","Asadha","Sravana","Bhadra","Asvina","Kartika","Agrahayana","Pausa","Magha","Phalguna"],long:["Chaitra","Vaisakha","Jyaistha","Asadha","Sravana","Bhadra","Asvina","Kartika","Agrahayana","Pausa","Magha","Phalguna"]},days:{narrow:["S","M","D","M","D","F","S"],short:["So.","Mo.","Di.","Mi.","Do.","Fr.","Sa."],long:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"]},eras:{narrow:["Saka"],short:["Saka"],long:["Saka"]},dayPeriods:{am:"vorm.",pm:"nachm."}},islamic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Muh.","Saf.","Rab. I","Rab. II","Jum. I","Jum. II","Raj.","Sha.","Ram.","Shaw.","Dhuʻl-Q.","Dhuʻl-H."],long:["Muharram","Safar","Rabiʻ I","Rabiʻ II","Jumada I","Jumada II","Rajab","Shaʻban","Ramadan","Shawwal","Dhuʻl-Qiʻdah","Dhuʻl-Hijjah"]},days:{narrow:["S","M","D","M","D","F","S"],short:["So.","Mo.","Di.","Mi.","Do.","Fr.","Sa."],long:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"]},eras:{narrow:["AH"],short:["AH"],long:["AH"]},dayPeriods:{am:"vorm.",pm:"nachm."}},islamicc:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Muh.","Saf.","Rab. I","Rab. II","Jum. I","Jum. II","Raj.","Sha.","Ram.","Shaw.","Dhuʻl-Q.","Dhuʻl-H."],long:["Muharram","Safar","Rabiʻ I","Rabiʻ II","Jumada I","Jumada II","Rajab","Shaʻban","Ramadan","Shawwal","Dhuʻl-Qiʻdah","Dhuʻl-Hijjah"]},days:{narrow:["S","M","D","M","D","F","S"],short:["So.","Mo.","Di.","Mi.","Do.","Fr.","Sa."],long:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"]},eras:{narrow:["AH"],short:["AH"],long:["AH"]},dayPeriods:{am:"vorm.",pm:"nachm."}},japanese:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["Jan.","Feb.","März","Apr.","Mai","Juni","Juli","Aug.","Sep.","Okt.","Nov.","Dez."],long:["Januar","Februar","März","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"]},days:{narrow:["S","M","D","M","D","F","S"],short:["So.","Mo.","Di.","Mi.","Do.","Fr.","Sa."],long:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"]},eras:{narrow:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","M","T","S","H"],short:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","Meiji","Taishō","Shōwa","Heisei"],long:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","Meiji","Taishō","Shōwa","Heisei"]},dayPeriods:{am:"vorm.",pm:"nachm."}},persian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Farvardin","Ordibehesht","Khordad","Tir","Mordad","Shahrivar","Mehr","Aban","Azar","Dey","Bahman","Esfand"],long:["Farvardin","Ordibehesht","Khordad","Tir","Mordad","Shahrivar","Mehr","Aban","Azar","Dey","Bahman","Esfand"]},days:{narrow:["S","M","D","M","D","F","S"],short:["So.","Mo.","Di.","Mi.","Do.","Fr.","Sa."],long:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"]},eras:{narrow:["AP"],short:["AP"],long:["AP"]},dayPeriods:{am:"vorm.",pm:"nachm."}},roc:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["Jan.","Feb.","März","Apr.","Mai","Juni","Juli","Aug.","Sep.","Okt.","Nov.","Dez."],long:["Januar","Februar","März","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"]},days:{narrow:["S","M","D","M","D","F","S"],short:["So.","Mo.","Di.","Mi.","Do.","Fr.","Sa."],long:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"]},eras:{narrow:["Before R.O.C.","Minguo"],short:["Before R.O.C.","Minguo"],long:["Before R.O.C.","Minguo"]},dayPeriods:{am:"vorm.",pm:"nachm."}}}},number:{nu:["latn"],patterns:{decimal:{positivePattern:"{number}",negativePattern:"{minusSign}{number}"},currency:{positivePattern:"{number} {currency}",negativePattern:"{minusSign}{number} {currency}"},percent:{positivePattern:"{number} {percentSign}",negativePattern:"{minusSign}{number} {percentSign}"}},symbols:{latn:{decimal:",",group:".",nan:"NaN",plusSign:"+",minusSign:"-",percentSign:"%",infinity:"∞"}},currencies:{ATS:"öS",AUD:"AU$",BGM:"BGK",BGO:"BGJ",BRL:"R$",CAD:"CA$",CNY:"CN¥",DEM:"DM",EUR:"€",GBP:"£",HKD:"HK$",ILS:"₪",INR:"₹",JPY:"¥",KRW:"₩",MXN:"MX$",NZD:"NZ$",THB:"฿",TWD:"NT$",USD:"$",VND:"₫",XAF:"FCFA",XCD:"EC$",XOF:"CFA",XPF:"CFPF"}}});

/***/ }),

/***/ "./node_modules/intl/locale-data/jsonp/en.js":
/*!***************************************************!*\
  !*** ./node_modules/intl/locale-data/jsonp/en.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

IntlPolyfill.__addLocaleData({locale:"en",date:{ca:["gregory","buddhist","chinese","coptic","dangi","ethioaa","ethiopic","generic","hebrew","indian","islamic","islamicc","japanese","persian","roc"],hourNo0:true,hour12:true,formats:{short:"{1}, {0}",medium:"{1}, {0}",full:"{1} 'at' {0}",long:"{1} 'at' {0}",availableFormats:{"d":"d","E":"ccc",Ed:"d E",Ehm:"E h:mm a",EHm:"E HH:mm",Ehms:"E h:mm:ss a",EHms:"E HH:mm:ss",Gy:"y G",GyMMM:"MMM y G",GyMMMd:"MMM d, y G",GyMMMEd:"E, MMM d, y G","h":"h a","H":"HH",hm:"h:mm a",Hm:"HH:mm",hms:"h:mm:ss a",Hms:"HH:mm:ss",hmsv:"h:mm:ss a v",Hmsv:"HH:mm:ss v",hmv:"h:mm a v",Hmv:"HH:mm v","M":"L",Md:"M/d",MEd:"E, M/d",MMM:"LLL",MMMd:"MMM d",MMMEd:"E, MMM d",MMMMd:"MMMM d",ms:"mm:ss","y":"y",yM:"M/y",yMd:"M/d/y",yMEd:"E, M/d/y",yMMM:"MMM y",yMMMd:"MMM d, y",yMMMEd:"E, MMM d, y",yMMMM:"MMMM y",yQQQ:"QQQ y",yQQQQ:"QQQQ y"},dateFormats:{yMMMMEEEEd:"EEEE, MMMM d, y",yMMMMd:"MMMM d, y",yMMMd:"MMM d, y",yMd:"M/d/yy"},timeFormats:{hmmsszzzz:"h:mm:ss a zzzz",hmsz:"h:mm:ss a z",hms:"h:mm:ss a",hm:"h:mm a"}},calendars:{buddhist:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],long:["January","February","March","April","May","June","July","August","September","October","November","December"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},eras:{narrow:["BE"],short:["BE"],long:["BE"]},dayPeriods:{am:"AM",pm:"PM"}},chinese:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Mo1","Mo2","Mo3","Mo4","Mo5","Mo6","Mo7","Mo8","Mo9","Mo10","Mo11","Mo12"],long:["Month1","Month2","Month3","Month4","Month5","Month6","Month7","Month8","Month9","Month10","Month11","Month12"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},dayPeriods:{am:"AM",pm:"PM"}},coptic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Tout","Baba","Hator","Kiahk","Toba","Amshir","Baramhat","Baramouda","Bashans","Paona","Epep","Mesra","Nasie"],long:["Tout","Baba","Hator","Kiahk","Toba","Amshir","Baramhat","Baramouda","Bashans","Paona","Epep","Mesra","Nasie"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"AM",pm:"PM"}},dangi:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Mo1","Mo2","Mo3","Mo4","Mo5","Mo6","Mo7","Mo8","Mo9","Mo10","Mo11","Mo12"],long:["Month1","Month2","Month3","Month4","Month5","Month6","Month7","Month8","Month9","Month10","Month11","Month12"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},dayPeriods:{am:"AM",pm:"PM"}},ethiopic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"],long:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"AM",pm:"PM"}},ethioaa:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"],long:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},eras:{narrow:["ERA0"],short:["ERA0"],long:["ERA0"]},dayPeriods:{am:"AM",pm:"PM"}},generic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"],long:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"AM",pm:"PM"}},gregory:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],long:["January","February","March","April","May","June","July","August","September","October","November","December"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},eras:{narrow:["B","A","BCE","CE"],short:["BC","AD","BCE","CE"],long:["Before Christ","Anno Domini","Before Common Era","Common Era"]},dayPeriods:{am:"AM",pm:"PM"}},hebrew:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13","7"],short:["Tishri","Heshvan","Kislev","Tevet","Shevat","Adar I","Adar","Nisan","Iyar","Sivan","Tamuz","Av","Elul","Adar II"],long:["Tishri","Heshvan","Kislev","Tevet","Shevat","Adar I","Adar","Nisan","Iyar","Sivan","Tamuz","Av","Elul","Adar II"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},eras:{narrow:["AM"],short:["AM"],long:["AM"]},dayPeriods:{am:"AM",pm:"PM"}},indian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Chaitra","Vaisakha","Jyaistha","Asadha","Sravana","Bhadra","Asvina","Kartika","Agrahayana","Pausa","Magha","Phalguna"],long:["Chaitra","Vaisakha","Jyaistha","Asadha","Sravana","Bhadra","Asvina","Kartika","Agrahayana","Pausa","Magha","Phalguna"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},eras:{narrow:["Saka"],short:["Saka"],long:["Saka"]},dayPeriods:{am:"AM",pm:"PM"}},islamic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Muh.","Saf.","Rab. I","Rab. II","Jum. I","Jum. II","Raj.","Sha.","Ram.","Shaw.","Dhuʻl-Q.","Dhuʻl-H."],long:["Muharram","Safar","Rabiʻ I","Rabiʻ II","Jumada I","Jumada II","Rajab","Shaʻban","Ramadan","Shawwal","Dhuʻl-Qiʻdah","Dhuʻl-Hijjah"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},eras:{narrow:["AH"],short:["AH"],long:["AH"]},dayPeriods:{am:"AM",pm:"PM"}},islamicc:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Muh.","Saf.","Rab. I","Rab. II","Jum. I","Jum. II","Raj.","Sha.","Ram.","Shaw.","Dhuʻl-Q.","Dhuʻl-H."],long:["Muharram","Safar","Rabiʻ I","Rabiʻ II","Jumada I","Jumada II","Rajab","Shaʻban","Ramadan","Shawwal","Dhuʻl-Qiʻdah","Dhuʻl-Hijjah"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},eras:{narrow:["AH"],short:["AH"],long:["AH"]},dayPeriods:{am:"AM",pm:"PM"}},japanese:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],long:["January","February","March","April","May","June","July","August","September","October","November","December"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},eras:{narrow:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","M","T","S","H"],short:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","Meiji","Taishō","Shōwa","Heisei"],long:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","Meiji","Taishō","Shōwa","Heisei"]},dayPeriods:{am:"AM",pm:"PM"}},persian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Farvardin","Ordibehesht","Khordad","Tir","Mordad","Shahrivar","Mehr","Aban","Azar","Dey","Bahman","Esfand"],long:["Farvardin","Ordibehesht","Khordad","Tir","Mordad","Shahrivar","Mehr","Aban","Azar","Dey","Bahman","Esfand"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},eras:{narrow:["AP"],short:["AP"],long:["AP"]},dayPeriods:{am:"AM",pm:"PM"}},roc:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],long:["January","February","March","April","May","June","July","August","September","October","November","December"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},eras:{narrow:["Before R.O.C.","Minguo"],short:["Before R.O.C.","Minguo"],long:["Before R.O.C.","Minguo"]},dayPeriods:{am:"AM",pm:"PM"}}}},number:{nu:["latn"],patterns:{decimal:{positivePattern:"{number}",negativePattern:"{minusSign}{number}"},currency:{positivePattern:"{currency}{number}",negativePattern:"{minusSign}{currency}{number}"},percent:{positivePattern:"{number}{percentSign}",negativePattern:"{minusSign}{number}{percentSign}"}},symbols:{latn:{decimal:".",group:",",nan:"NaN",plusSign:"+",minusSign:"-",percentSign:"%",infinity:"∞"}},currencies:{AUD:"A$",BRL:"R$",CAD:"CA$",CNY:"CN¥",EUR:"€",GBP:"£",HKD:"HK$",ILS:"₪",INR:"₹",JPY:"¥",KRW:"₩",MXN:"MX$",NZD:"NZ$",TWD:"NT$",USD:"$",VND:"₫",XAF:"FCFA",XCD:"EC$",XOF:"CFA",XPF:"CFPF"}}});

/***/ }),

/***/ "./node_modules/intl/locale-data/jsonp/es.js":
/*!***************************************************!*\
  !*** ./node_modules/intl/locale-data/jsonp/es.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

IntlPolyfill.__addLocaleData({locale:"es",date:{ca:["gregory","buddhist","chinese","coptic","dangi","ethioaa","ethiopic","generic","hebrew","indian","islamic","islamicc","japanese","persian","roc"],hourNo0:true,hour12:false,formats:{short:"{1} {0}",medium:"{1} {0}",full:"{1}, {0}",long:"{1}, {0}",availableFormats:{"d":"d","E":"ccc",Ed:"E d",Ehm:"E, h:mm a",EHm:"E, H:mm",Ehms:"E, h:mm:ss a",EHms:"E, H:mm:ss",Gy:"y G",GyMMM:"MMM y G",GyMMMd:"d MMM y G",GyMMMEd:"E, d MMM y G",GyMMMM:"MMMM 'de' y G",GyMMMMd:"d 'de' MMMM 'de' y G",GyMMMMEd:"E, d 'de' MMMM 'de' y G","h":"h a","H":"H",hm:"h:mm a",Hm:"H:mm",hms:"h:mm:ss a",Hms:"H:mm:ss",hmsv:"h:mm:ss a v",Hmsv:"H:mm:ss v",hmsvvvv:"h:mm:ss a (vvvv)",Hmsvvvv:"H:mm:ss (vvvv)",hmv:"h:mm a v",Hmv:"H:mm v","M":"L",Md:"d/M",MEd:"E, d/M",MMd:"d/M",MMdd:"d/M",MMM:"LLL",MMMd:"d MMM",MMMEd:"E, d MMM",MMMMd:"d 'de' MMMM",MMMMEd:"E, d 'de' MMMM",ms:"mm:ss","y":"y",yM:"M/y",yMd:"d/M/y",yMEd:"EEE, d/M/y",yMM:"M/y",yMMM:"MMM y",yMMMd:"d MMM y",yMMMEd:"EEE, d MMM y",yMMMM:"MMMM 'de' y",yMMMMd:"d 'de' MMMM 'de' y",yMMMMEd:"EEE, d 'de' MMMM 'de' y",yQQQ:"QQQ y",yQQQQ:"QQQQ 'de' y"},dateFormats:{yMMMMEEEEd:"EEEE, d 'de' MMMM 'de' y",yMMMMd:"d 'de' MMMM 'de' y",yMMMd:"d MMM y",yMd:"d/M/yy"},timeFormats:{hmmsszzzz:"H:mm:ss (zzzz)",hmsz:"H:mm:ss z",hms:"H:mm:ss",hm:"H:mm"}},calendars:{buddhist:{months:{narrow:["E","F","M","A","M","J","J","A","S","O","N","D"],short:["ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sept.","oct.","nov.","dic."],long:["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},eras:{narrow:["BE"],short:["BE"],long:["BE"]},dayPeriods:{am:"a. m.",pm:"p. m."}},chinese:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"],long:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},dayPeriods:{am:"a. m.",pm:"p. m."}},coptic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Tout","Baba","Hator","Kiahk","Toba","Amshir","Baramhat","Baramouda","Bashans","Paona","Epep","Mesra","Nasie"],long:["Tout","Baba","Hator","Kiahk","Toba","Amshir","Baramhat","Baramouda","Bashans","Paona","Epep","Mesra","Nasie"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"a. m.",pm:"p. m."}},dangi:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"],long:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},dayPeriods:{am:"a. m.",pm:"p. m."}},ethiopic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"],long:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"a. m.",pm:"p. m."}},ethioaa:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"],long:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},eras:{narrow:["ERA0"],short:["ERA0"],long:["ERA0"]},dayPeriods:{am:"a. m.",pm:"p. m."}},generic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"],long:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"a. m.",pm:"p. m."}},gregory:{months:{narrow:["E","F","M","A","M","J","J","A","S","O","N","D"],short:["ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sept.","oct.","nov.","dic."],long:["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},eras:{narrow:["a. C.","d. C.","a. e. c.","e. c."],short:["a. C.","d. C.","a. e. c.","e. c."],long:["antes de Cristo","después de Cristo","antes de la era común","era común"]},dayPeriods:{am:"a. m.",pm:"p. m."}},hebrew:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13","7"],short:["Tishri","Heshvan","Kislev","Tevet","Shevat","Adar I","Adar","Nisan","Iyar","Sivan","Tamuz","Av","Elul","Adar II"],long:["Tishri","Heshvan","Kislev","Tevet","Shevat","Adar I","Adar","Nisan","Iyar","Sivan","Tamuz","Av","Elul","Adar II"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},eras:{narrow:["AM"],short:["AM"],long:["AM"]},dayPeriods:{am:"a. m.",pm:"p. m."}},indian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Chaitra","Vaisakha","Jyaistha","Asadha","Sravana","Bhadra","Asvina","Kartika","Agrahayana","Pausa","Magha","Phalguna"],long:["Chaitra","Vaisakha","Jyaistha","Asadha","Sravana","Bhadra","Asvina","Kartika","Agrahayana","Pausa","Magha","Phalguna"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},eras:{narrow:["Saka"],short:["Saka"],long:["Saka"]},dayPeriods:{am:"a. m.",pm:"p. m."}},islamic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Muh.","Saf.","Rab. I","Rab. II","Jum. I","Jum. II","Raj.","Sha.","Ram.","Shaw.","Dhuʻl-Q.","Dhuʻl-H."],long:["Muharram","Safar","Rabiʻ I","Rabiʻ II","Jumada I","Jumada II","Rajab","Shaʻban","Ramadan","Shawwal","Dhuʻl-Qiʻdah","Dhuʻl-Hijjah"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},eras:{narrow:["AH"],short:["AH"],long:["AH"]},dayPeriods:{am:"a. m.",pm:"p. m."}},islamicc:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Muh.","Saf.","Rab. I","Rab. II","Jum. I","Jum. II","Raj.","Sha.","Ram.","Shaw.","Dhuʻl-Q.","Dhuʻl-H."],long:["Muharram","Safar","Rabiʻ I","Rabiʻ II","Jumada I","Jumada II","Rajab","Shaʻban","Ramadan","Shawwal","Dhuʻl-Qiʻdah","Dhuʻl-Hijjah"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},eras:{narrow:["AH"],short:["AH"],long:["AH"]},dayPeriods:{am:"a. m.",pm:"p. m."}},japanese:{months:{narrow:["E","F","M","A","M","J","J","A","S","O","N","D"],short:["ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sept.","oct.","nov.","dic."],long:["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},eras:{narrow:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","M","T","S","H"],short:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","Meiji","Taishō","Shōwa","Heisei"],long:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","Meiji","Taishō","Shōwa","Heisei"]},dayPeriods:{am:"a. m.",pm:"p. m."}},persian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Farvardin","Ordibehesht","Khordad","Tir","Mordad","Shahrivar","Mehr","Aban","Azar","Dey","Bahman","Esfand"],long:["Farvardin","Ordibehesht","Khordad","Tir","Mordad","Shahrivar","Mehr","Aban","Azar","Dey","Bahman","Esfand"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},eras:{narrow:["AP"],short:["AP"],long:["AP"]},dayPeriods:{am:"a. m.",pm:"p. m."}},roc:{months:{narrow:["E","F","M","A","M","J","J","A","S","O","N","D"],short:["ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sept.","oct.","nov.","dic."],long:["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},eras:{narrow:["antes de R.O.C.","R.O.C."],short:["antes de R.O.C.","R.O.C."],long:["antes de R.O.C.","R.O.C."]},dayPeriods:{am:"a. m.",pm:"p. m."}}}},number:{nu:["latn"],patterns:{decimal:{positivePattern:"{number}",negativePattern:"{minusSign}{number}"},currency:{positivePattern:"{number} {currency}",negativePattern:"{minusSign}{number} {currency}"},percent:{positivePattern:"{number} {percentSign}",negativePattern:"{minusSign}{number} {percentSign}"}},symbols:{latn:{decimal:",",group:".",nan:"NaN",plusSign:"+",minusSign:"-",percentSign:"%",infinity:"∞"}},currencies:{CAD:"CA$",ESP:"₧",EUR:"€",THB:"฿",USD:"$",VND:"₫",XPF:"CFPF"}}});

/***/ }),

/***/ "./node_modules/intl/locale-data/jsonp/fr.js":
/*!***************************************************!*\
  !*** ./node_modules/intl/locale-data/jsonp/fr.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

IntlPolyfill.__addLocaleData({locale:"fr",date:{ca:["gregory","buddhist","chinese","coptic","dangi","ethioaa","ethiopic","generic","hebrew","indian","islamic","islamicc","japanese","persian","roc"],hourNo0:true,hour12:false,formats:{short:"{1} {0}",medium:"{1} 'à' {0}",full:"{1} 'à' {0}",long:"{1} 'à' {0}",availableFormats:{"d":"d","E":"E",Ed:"E d",Ehm:"E h:mm a",EHm:"E HH:mm",Ehms:"E h:mm:ss a",EHms:"E HH:mm:ss",Gy:"y G",GyMMM:"MMM y G",GyMMMd:"d MMM y G",GyMMMEd:"E d MMM y G","h":"h a","H":"HH 'h'",hm:"h:mm a",Hm:"HH:mm",hms:"h:mm:ss a",Hms:"HH:mm:ss",hmsv:"h:mm:ss a v",Hmsv:"HH:mm:ss v",hmv:"h:mm a v",Hmv:"HH:mm v","M":"L",Md:"dd/MM",MEd:"E dd/MM",MMM:"LLL",MMMd:"d MMM",MMMEd:"E d MMM",MMMMd:"d MMMM",ms:"mm:ss","y":"y",yM:"MM/y",yMd:"dd/MM/y",yMEd:"E dd/MM/y",yMMM:"MMM y",yMMMd:"d MMM y",yMMMEd:"E d MMM y",yMMMM:"MMMM y",yQQQ:"QQQ y",yQQQQ:"QQQQ y"},dateFormats:{yMMMMEEEEd:"EEEE d MMMM y",yMMMMd:"d MMMM y",yMMMd:"d MMM y",yMd:"dd/MM/y"},timeFormats:{hmmsszzzz:"HH:mm:ss zzzz",hmsz:"HH:mm:ss z",hms:"HH:mm:ss",hm:"HH:mm"}},calendars:{buddhist:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["janv.","févr.","mars","avr.","mai","juin","juil.","août","sept.","oct.","nov.","déc."],long:["janvier","février","mars","avril","mai","juin","juillet","août","septembre","octobre","novembre","décembre"]},days:{narrow:["D","L","M","M","J","V","S"],short:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],long:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"]},eras:{narrow:["E.B."],short:["ère b."],long:["ère bouddhiste"]},dayPeriods:{am:"AM",pm:"PM"}},chinese:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["1yuè","2yuè","3yuè","4yuè","5yuè","6yuè","7yuè","8yuè","9yuè","10yuè","11yuè","12yuè"],long:["zhēngyuè","èryuè","sānyuè","sìyuè","wǔyuè","liùyuè","qīyuè","bāyuè","jiǔyuè","shíyuè","shíyīyuè","shí’èryuè"]},days:{narrow:["D","L","M","M","J","V","S"],short:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],long:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"]},dayPeriods:{am:"AM",pm:"PM"}},coptic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Tout","Baba","Hator","Kiahk","Toba","Amshir","Baramhat","Baramouda","Bashans","Paona","Epep","Mesra","Nasie"],long:["Tout","Baba","Hator","Kiahk","Toba","Amshir","Baramhat","Baramouda","Bashans","Paona","Epep","Mesra","Nasie"]},days:{narrow:["D","L","M","M","J","V","S"],short:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],long:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"AM",pm:"PM"}},dangi:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["1yuè","2yuè","3yuè","4yuè","5yuè","6yuè","7yuè","8yuè","9yuè","10yuè","11yuè","12yuè"],long:["zhēngyuè","èryuè","sānyuè","sìyuè","wǔyuè","liùyuè","qīyuè","bāyuè","jiǔyuè","shíyuè","shíyīyuè","shí’èryuè"]},days:{narrow:["D","L","M","M","J","V","S"],short:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],long:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"]},dayPeriods:{am:"AM",pm:"PM"}},ethiopic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"],long:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"]},days:{narrow:["D","L","M","M","J","V","S"],short:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],long:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"AM",pm:"PM"}},ethioaa:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"],long:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"]},days:{narrow:["D","L","M","M","J","V","S"],short:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],long:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"]},eras:{narrow:["ERA0"],short:["ERA0"],long:["ERA0"]},dayPeriods:{am:"AM",pm:"PM"}},generic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"],long:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"]},days:{narrow:["D","L","M","M","J","V","S"],short:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],long:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"AM",pm:"PM"}},gregory:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["janv.","févr.","mars","avr.","mai","juin","juil.","août","sept.","oct.","nov.","déc."],long:["janvier","février","mars","avril","mai","juin","juillet","août","septembre","octobre","novembre","décembre"]},days:{narrow:["D","L","M","M","J","V","S"],short:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],long:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"]},eras:{narrow:["av. J.-C.","ap. J.-C.","AEC","EC"],short:["av. J.-C.","ap. J.-C.","AEC","EC"],long:["avant Jésus-Christ","après Jésus-Christ","avant l’ère commune","de l’ère commune"]},dayPeriods:{am:"AM",pm:"PM"}},hebrew:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13","7"],short:["Tisseri","Hesvan","Kislev","Tébeth","Schébat","Adar I","Adar","Nissan","Iyar","Sivan","Tamouz","Ab","Elloul","Adar II"],long:["Tisseri","Hesvan","Kislev","Tébeth","Schébat","Adar I","Adar","Nissan","Iyar","Sivan","Tamouz","Ab","Elloul","Adar II"]},days:{narrow:["D","L","M","M","J","V","S"],short:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],long:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"]},eras:{narrow:["AM"],short:["AM"],long:["AM"]},dayPeriods:{am:"AM",pm:"PM"}},indian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Chaitra","Vaisakha","Jyaistha","Asadha","Sravana","Bhadra","Asvina","Kartika","Agrahayana","Pausa","Magha","Phalguna"],long:["Chaitra","Vaisakha","Jyaistha","Asadha","Sravana","Bhadra","Asvina","Kartika","Agrahayana","Pausa","Magha","Phalguna"]},days:{narrow:["D","L","M","M","J","V","S"],short:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],long:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"]},eras:{narrow:["Saka"],short:["Saka"],long:["Saka"]},dayPeriods:{am:"AM",pm:"PM"}},islamic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["mouh.","saf.","rab. aw.","rab. th.","joum. oul.","joum. tha.","raj.","chaa.","ram.","chaw.","dhou. q.","dhou. h."],long:["mouharram","safar","rabia al awal","rabia ath-thani","joumada al oula","joumada ath-thania","rajab","chaabane","ramadan","chawwal","dhou al qi`da","dhou al-hijja"]},days:{narrow:["D","L","M","M","J","V","S"],short:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],long:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"]},eras:{narrow:["AH"],short:["AH"],long:["AH"]},dayPeriods:{am:"AM",pm:"PM"}},islamicc:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["mouh.","saf.","rab. aw.","rab. th.","joum. oul.","joum. tha.","raj.","chaa.","ram.","chaw.","dhou. q.","dhou. h."],long:["mouharram","safar","rabia al awal","rabia ath-thani","joumada al oula","joumada ath-thania","rajab","chaabane","ramadan","chawwal","dhou al qi`da","dhou al-hijja"]},days:{narrow:["D","L","M","M","J","V","S"],short:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],long:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"]},eras:{narrow:["AH"],short:["AH"],long:["AH"]},dayPeriods:{am:"AM",pm:"PM"}},japanese:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["janv.","févr.","mars","avr.","mai","juin","juil.","août","sept.","oct.","nov.","déc."],long:["janvier","février","mars","avril","mai","juin","juillet","août","septembre","octobre","novembre","décembre"]},days:{narrow:["D","L","M","M","J","V","S"],short:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],long:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"]},eras:{narrow:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","M","T","S","H"],short:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","Meiji","Taishō","Shōwa","Heisei"],long:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","Meiji","Taishō","Shōwa","Heisei"]},dayPeriods:{am:"AM",pm:"PM"}},persian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Farvardin","Ordibehesht","Khordad","Tir","Mordad","Shahrivar","Mehr","Aban","Azar","Dey","Bahman","Esfand"],long:["Farvardin","Ordibehesht","Khordad","Tir","Mordad","Shahrivar","Mehr","Aban","Azar","Dey","Bahman","Esfand"]},days:{narrow:["D","L","M","M","J","V","S"],short:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],long:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"]},eras:{narrow:["AP"],short:["AP"],long:["AP"]},dayPeriods:{am:"AM",pm:"PM"}},roc:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["janv.","févr.","mars","avr.","mai","juin","juil.","août","sept.","oct.","nov.","déc."],long:["janvier","février","mars","avril","mai","juin","juillet","août","septembre","octobre","novembre","décembre"]},days:{narrow:["D","L","M","M","J","V","S"],short:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],long:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"]},eras:{narrow:["avant RdC","RdC"],short:["avant RdC","RdC"],long:["avant RdC","RdC"]},dayPeriods:{am:"AM",pm:"PM"}}}},number:{nu:["latn"],patterns:{decimal:{positivePattern:"{number}",negativePattern:"{minusSign}{number}"},currency:{positivePattern:"{number} {currency}",negativePattern:"{minusSign}{number} {currency}"},percent:{positivePattern:"{number} {percentSign}",negativePattern:"{minusSign}{number} {percentSign}"}},symbols:{latn:{decimal:",",group:" ",nan:"NaN",plusSign:"+",minusSign:"-",percentSign:"%",infinity:"∞"}},currencies:{ARS:"$AR",AUD:"$AU",BEF:"FB",BMD:"$BM",BND:"$BN",BRL:"R$",BSD:"$BS",BZD:"$BZ",CAD:"$CA",CLP:"$CL",COP:"$CO",CYP:"£CY",EUR:"€",FJD:"$FJ",FKP:"£FK",FRF:"F",GBP:"£GB",GIP:"£GI",IEP:"£IE",ILP:"£IL",ILS:"₪",INR:"₹",ITL:"₤IT",KRW:"₩",LBP:"£LB",MTP:"£MT",MXN:"$MX",NAD:"$NA",NZD:"$NZ",RHD:"$RH",SBD:"$SB",SGD:"$SG",SRD:"$SR",TTD:"$TT",USD:"$US",UYU:"$UY",VND:"₫",WST:"WS$",XAF:"FCFA",XOF:"CFA",XPF:"FCFP"}}});

/***/ }),

/***/ "./node_modules/intl/locale-data/jsonp/it.js":
/*!***************************************************!*\
  !*** ./node_modules/intl/locale-data/jsonp/it.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

IntlPolyfill.__addLocaleData({locale:"it",date:{ca:["gregory","buddhist","chinese","coptic","dangi","ethioaa","ethiopic","generic","hebrew","indian","islamic","islamicc","japanese","persian","roc"],hourNo0:true,hour12:false,formats:{short:"{1}, {0}",medium:"{1}, {0}",full:"{1} {0}",long:"{1} {0}",availableFormats:{"d":"d","E":"ccc",Ed:"E d",Ehm:"E h:mm a",EHm:"E HH:mm",Ehms:"E h:mm:ss a",EHms:"E HH:mm:ss",Gy:"y G",GyMMM:"MMM y G",GyMMMd:"d MMM y G",GyMMMEd:"E d MMM y G","h":"h a","H":"HH",hm:"h:mm a",Hm:"HH:mm",hms:"h:mm:ss a",Hms:"HH:mm:ss",hmsv:"h:mm:ss a v",Hmsv:"HH:mm:ss v",hmv:"h:mm a v",Hmv:"HH:mm v","M":"L",Md:"d/M",MEd:"E d/M",MMM:"LLL",MMMd:"d MMM",MMMEd:"E d MMM",MMMMd:"d MMMM",ms:"mm:ss","y":"y",yM:"M/y",yMd:"d/M/y",yMEd:"E d/M/y",yMMM:"MMM y",yMMMd:"d MMM y",yMMMEd:"E d MMM y",yMMMM:"MMMM y",yQQQ:"QQQ y",yQQQQ:"QQQQ y"},dateFormats:{yMMMMEEEEd:"EEEE d MMMM y",yMMMMd:"d MMMM y",yMMMd:"dd MMM y",yMd:"dd/MM/yy"},timeFormats:{hmmsszzzz:"HH:mm:ss zzzz",hmsz:"HH:mm:ss z",hms:"HH:mm:ss",hm:"HH:mm"}},calendars:{buddhist:{months:{narrow:["G","F","M","A","M","G","L","A","S","O","N","D"],short:["gen","feb","mar","apr","mag","giu","lug","ago","set","ott","nov","dic"],long:["gennaio","febbraio","marzo","aprile","maggio","giugno","luglio","agosto","settembre","ottobre","novembre","dicembre"]},days:{narrow:["D","L","M","M","G","V","S"],short:["dom","lun","mar","mer","gio","ven","sab"],long:["domenica","lunedì","martedì","mercoledì","giovedì","venerdì","sabato"]},eras:{narrow:["EB"],short:["EB"],long:["EB"]},dayPeriods:{am:"AM",pm:"PM"}},chinese:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"],long:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"]},days:{narrow:["D","L","M","M","G","V","S"],short:["dom","lun","mar","mer","gio","ven","sab"],long:["domenica","lunedì","martedì","mercoledì","giovedì","venerdì","sabato"]},dayPeriods:{am:"AM",pm:"PM"}},coptic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Tout","Baba","Hator","Kiahk","Toba","Amshir","Baramhat","Baramouda","Bashans","Paona","Epep","Mesra","Nasie"],long:["Tout","Baba","Hator","Kiahk","Toba","Amshir","Baramhat","Baramouda","Bashans","Paona","Epep","Mesra","Nasie"]},days:{narrow:["D","L","M","M","G","V","S"],short:["dom","lun","mar","mer","gio","ven","sab"],long:["domenica","lunedì","martedì","mercoledì","giovedì","venerdì","sabato"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"AM",pm:"PM"}},dangi:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"],long:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"]},days:{narrow:["D","L","M","M","G","V","S"],short:["dom","lun","mar","mer","gio","ven","sab"],long:["domenica","lunedì","martedì","mercoledì","giovedì","venerdì","sabato"]},dayPeriods:{am:"AM",pm:"PM"}},ethiopic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"],long:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"]},days:{narrow:["D","L","M","M","G","V","S"],short:["dom","lun","mar","mer","gio","ven","sab"],long:["domenica","lunedì","martedì","mercoledì","giovedì","venerdì","sabato"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"AM",pm:"PM"}},ethioaa:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"],long:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"]},days:{narrow:["D","L","M","M","G","V","S"],short:["dom","lun","mar","mer","gio","ven","sab"],long:["domenica","lunedì","martedì","mercoledì","giovedì","venerdì","sabato"]},eras:{narrow:["ERA0"],short:["ERA0"],long:["ERA0"]},dayPeriods:{am:"AM",pm:"PM"}},generic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"],long:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"]},days:{narrow:["D","L","M","M","G","V","S"],short:["dom","lun","mar","mer","gio","ven","sab"],long:["domenica","lunedì","martedì","mercoledì","giovedì","venerdì","sabato"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"AM",pm:"PM"}},gregory:{months:{narrow:["G","F","M","A","M","G","L","A","S","O","N","D"],short:["gen","feb","mar","apr","mag","giu","lug","ago","set","ott","nov","dic"],long:["gennaio","febbraio","marzo","aprile","maggio","giugno","luglio","agosto","settembre","ottobre","novembre","dicembre"]},days:{narrow:["D","L","M","M","G","V","S"],short:["dom","lun","mar","mer","gio","ven","sab"],long:["domenica","lunedì","martedì","mercoledì","giovedì","venerdì","sabato"]},eras:{narrow:["aC","dC","BCE","CE"],short:["a.C.","d.C.","a.E.V.","E.V."],long:["a.C.","d.C.","avanti Era Volgare","Era Volgare"]},dayPeriods:{am:"AM",pm:"PM"}},hebrew:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13","7"],short:["Tishri","Heshvan","Kislev","Tevet","Shevat","Adar I","Adar","Nisan","Iyar","Sivan","Tamuz","Av","Elul","Adar II"],long:["Tishri","Heshvan","Kislev","Tevet","Shevat","Adar I","Adar","Nisan","Iyar","Sivan","Tamuz","Av","Elul","Adar II"]},days:{narrow:["D","L","M","M","G","V","S"],short:["dom","lun","mar","mer","gio","ven","sab"],long:["domenica","lunedì","martedì","mercoledì","giovedì","venerdì","sabato"]},eras:{narrow:["AM"],short:["AM"],long:["AM"]},dayPeriods:{am:"AM",pm:"PM"}},indian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Chaitra","Vaisakha","Jyaistha","Asadha","Sravana","Bhadra","Asvina","Kartika","Agrahayana","Pausa","Magha","Phalguna"],long:["Chaitra","Vaisakha","Jyaistha","Asadha","Sravana","Bhadra","Asvina","Kartika","Agrahayana","Pausa","Magha","Phalguna"]},days:{narrow:["D","L","M","M","G","V","S"],short:["dom","lun","mar","mer","gio","ven","sab"],long:["domenica","lunedì","martedì","mercoledì","giovedì","venerdì","sabato"]},eras:{narrow:["Saka"],short:["Saka"],long:["Saka"]},dayPeriods:{am:"AM",pm:"PM"}},islamic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Muh.","Saf.","Rab. I","Rab. II","Jum. I","Jum. II","Raj.","Sha.","Ram.","Shaw.","Dhuʻl-Q.","Dhuʻl-H."],long:["Muharram","Safar","Rabiʻ I","Rabiʻ II","Jumada I","Jumada II","Rajab","Shaʻban","Ramadan","Shawwal","Dhuʻl-Qiʻdah","Dhuʻl-Hijjah"]},days:{narrow:["D","L","M","M","G","V","S"],short:["dom","lun","mar","mer","gio","ven","sab"],long:["domenica","lunedì","martedì","mercoledì","giovedì","venerdì","sabato"]},eras:{narrow:["AH"],short:["AH"],long:["AH"]},dayPeriods:{am:"AM",pm:"PM"}},islamicc:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Muh.","Saf.","Rab. I","Rab. II","Jum. I","Jum. II","Raj.","Sha.","Ram.","Shaw.","Dhuʻl-Q.","Dhuʻl-H."],long:["Muharram","Safar","Rabiʻ I","Rabiʻ II","Jumada I","Jumada II","Rajab","Shaʻban","Ramadan","Shawwal","Dhuʻl-Qiʻdah","Dhuʻl-Hijjah"]},days:{narrow:["D","L","M","M","G","V","S"],short:["dom","lun","mar","mer","gio","ven","sab"],long:["domenica","lunedì","martedì","mercoledì","giovedì","venerdì","sabato"]},eras:{narrow:["AH"],short:["AH"],long:["AH"]},dayPeriods:{am:"AM",pm:"PM"}},japanese:{months:{narrow:["G","F","M","A","M","G","L","A","S","O","N","D"],short:["gen","feb","mar","apr","mag","giu","lug","ago","set","ott","nov","dic"],long:["gennaio","febbraio","marzo","aprile","maggio","giugno","luglio","agosto","settembre","ottobre","novembre","dicembre"]},days:{narrow:["D","L","M","M","G","V","S"],short:["dom","lun","mar","mer","gio","ven","sab"],long:["domenica","lunedì","martedì","mercoledì","giovedì","venerdì","sabato"]},eras:{narrow:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","M","T","S","H"],short:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","Meiji","Taishō","Shōwa","Heisei"],long:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","Meiji","Taishō","Shōwa","Heisei"]},dayPeriods:{am:"AM",pm:"PM"}},persian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Farvardin","Ordibehesht","Khordad","Tir","Mordad","Shahrivar","Mehr","Aban","Azar","Dey","Bahman","Esfand"],long:["Farvardin","Ordibehesht","Khordad","Tir","Mordad","Shahrivar","Mehr","Aban","Azar","Dey","Bahman","Esfand"]},days:{narrow:["D","L","M","M","G","V","S"],short:["dom","lun","mar","mer","gio","ven","sab"],long:["domenica","lunedì","martedì","mercoledì","giovedì","venerdì","sabato"]},eras:{narrow:["AP"],short:["AP"],long:["AP"]},dayPeriods:{am:"AM",pm:"PM"}},roc:{months:{narrow:["G","F","M","A","M","G","L","A","S","O","N","D"],short:["gen","feb","mar","apr","mag","giu","lug","ago","set","ott","nov","dic"],long:["gennaio","febbraio","marzo","aprile","maggio","giugno","luglio","agosto","settembre","ottobre","novembre","dicembre"]},days:{narrow:["D","L","M","M","G","V","S"],short:["dom","lun","mar","mer","gio","ven","sab"],long:["domenica","lunedì","martedì","mercoledì","giovedì","venerdì","sabato"]},eras:{narrow:["Prima di R.O.C.","Minguo"],short:["Prima di R.O.C.","Minguo"],long:["Prima di R.O.C.","Minguo"]},dayPeriods:{am:"AM",pm:"PM"}}}},number:{nu:["latn"],patterns:{decimal:{positivePattern:"{number}",negativePattern:"{minusSign}{number}"},currency:{positivePattern:"{number} {currency}",negativePattern:"{minusSign}{number} {currency}"},percent:{positivePattern:"{number}{percentSign}",negativePattern:"{minusSign}{number}{percentSign}"}},symbols:{latn:{decimal:",",group:".",nan:"NaN",plusSign:"+",minusSign:"-",percentSign:"%",infinity:"∞"}},currencies:{AUD:"A$",CAD:"CA$",CNY:"CN¥",EUR:"€",GBP:"£",ILS:"₪",INR:"₹",NZD:"NZ$",THB:"฿",USD:"US$",VND:"₫",XAF:"FCFA",XCD:"EC$",XOF:"CFA",XPF:"CFPF"}}});

/***/ }),

/***/ "./node_modules/intl/locale-data/jsonp/ja.js":
/*!***************************************************!*\
  !*** ./node_modules/intl/locale-data/jsonp/ja.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

IntlPolyfill.__addLocaleData({locale:"ja",date:{ca:["gregory","buddhist","chinese","coptic","dangi","ethioaa","ethiopic","generic","hebrew","indian","islamic","islamicc","japanese","persian","roc"],hourNo0:false,hour12:false,formats:{short:"{1} {0}",medium:"{1} {0}",full:"{1} {0}",long:"{1} {0}",availableFormats:{"d":"d日","E":"ccc",Ed:"d日(E)",EEEEd:"d日EEEE",Ehm:"aK:mm (E)",EHm:"H:mm (E)",Ehms:"aK:mm:ss (E)",EHms:"H:mm:ss (E)",Gy:"Gy年",GyMMM:"Gy年M月",GyMMMd:"Gy年M月d日",GyMMMEd:"Gy年M月d日(E)",GyMMMEEEEd:"Gy年M月d日EEEE","h":"aK時","H":"H時",hm:"aK:mm",Hm:"H:mm",hms:"aK:mm:ss",Hms:"H:mm:ss",hmsv:"aK:mm:ss v",Hmsv:"H:mm:ss v",hmv:"aK:mm v",Hmv:"H:mm v","M":"M月",Md:"M/d",MEd:"M/d(E)",MEEEEd:"M/dEEEE",MMM:"M月",MMMd:"M月d日",MMMEd:"M月d日(E)",MMMEEEEd:"M月d日EEEE",MMMMd:"M月d日",ms:"mm:ss","y":"y年",yM:"y/M",yMd:"y/M/d",yMEd:"y/M/d(E)",yMEEEEd:"y/M/dEEEE",yMM:"y/MM",yMMM:"y年M月",yMMMd:"y年M月d日",yMMMEd:"y年M月d日(E)",yMMMEEEEd:"y年M月d日EEEE",yMMMM:"y年M月",yQQQ:"y/QQQ",yQQQQ:"yQQQQ"},dateFormats:{yMMMMEEEEd:"y年M月d日EEEE",yMMMMd:"y年M月d日",yMMMd:"y/MM/dd",yMd:"y/MM/dd"},timeFormats:{hmmsszzzz:"H時mm分ss秒 zzzz",hmsz:"H:mm:ss z",hms:"H:mm:ss",hm:"H:mm"}},calendars:{buddhist:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"],long:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"]},days:{narrow:["日","月","火","水","木","金","土"],short:["日","月","火","水","木","金","土"],long:["日曜日","月曜日","火曜日","水曜日","木曜日","金曜日","土曜日"]},eras:{narrow:["BE"],short:["BE"],long:["仏暦"]},dayPeriods:{am:"午前",pm:"午後"}},chinese:{months:{narrow:["正","二","三","四","五","六","七","八","九","十","十一","十二"],short:["正月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"],long:["正月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]},days:{narrow:["日","月","火","水","木","金","土"],short:["日","月","火","水","木","金","土"],long:["日曜日","月曜日","火曜日","水曜日","木曜日","金曜日","土曜日"]},dayPeriods:{am:"午前",pm:"午後"}},coptic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["トウト","ババ","ハトール","キアック","トーバ","アムシール","バラムハート","バラモウダ","バシャンス","パオーナ","エペープ","メスラ","ナシエ"],long:["トウト","ババ","ハトール","キアック","トーバ","アムシール","バラムハート","バラモウダ","バシャンス","パオーナ","エペープ","メスラ","ナシエ"]},days:{narrow:["日","月","火","水","木","金","土"],short:["日","月","火","水","木","金","土"],long:["日曜日","月曜日","火曜日","水曜日","木曜日","金曜日","土曜日"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"午前",pm:"午後"}},dangi:{months:{narrow:["正","二","三","四","五","六","七","八","九","十","十一","十二"],short:["正月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"],long:["正月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]},days:{narrow:["日","月","火","水","木","金","土"],short:["日","月","火","水","木","金","土"],long:["日曜日","月曜日","火曜日","水曜日","木曜日","金曜日","土曜日"]},dayPeriods:{am:"午前",pm:"午後"}},ethiopic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["メスケレム","テケムト","ヘダル","ターサス","テル","イェカティト","メガビト","ミアジア","ゲンボト","セネ","ハムレ","ネハッセ","パグメン"],long:["メスケレム","テケムト","ヘダル","ターサス","テル","イェカティト","メガビト","ミアジア","ゲンボト","セネ","ハムレ","ネハッセ","パグメン"]},days:{narrow:["日","月","火","水","木","金","土"],short:["日","月","火","水","木","金","土"],long:["日曜日","月曜日","火曜日","水曜日","木曜日","金曜日","土曜日"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"午前",pm:"午後"}},ethioaa:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["メスケレム","テケムト","ヘダル","ターサス","テル","イェカティト","メガビト","ミアジア","ゲンボト","セネ","ハムレ","ネハッセ","パグメン"],long:["メスケレム","テケムト","ヘダル","ターサス","テル","イェカティト","メガビト","ミアジア","ゲンボト","セネ","ハムレ","ネハッセ","パグメン"]},days:{narrow:["日","月","火","水","木","金","土"],short:["日","月","火","水","木","金","土"],long:["日曜日","月曜日","火曜日","水曜日","木曜日","金曜日","土曜日"]},eras:{narrow:["ERA0"],short:["ERA0"],long:["ERA0"]},dayPeriods:{am:"午前",pm:"午後"}},generic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"],long:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"]},days:{narrow:["日","月","火","水","木","金","土"],short:["日","月","火","水","木","金","土"],long:["日曜日","月曜日","火曜日","水曜日","木曜日","金曜日","土曜日"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"午前",pm:"午後"}},gregory:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"],long:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"]},days:{narrow:["日","月","火","水","木","金","土"],short:["日","月","火","水","木","金","土"],long:["日曜日","月曜日","火曜日","水曜日","木曜日","金曜日","土曜日"]},eras:{narrow:["BC","AD","BCE","CE"],short:["紀元前","西暦","西暦紀元前","西暦紀元"],long:["紀元前","西暦","西暦紀元前","西暦紀元"]},dayPeriods:{am:"午前",pm:"午後"}},hebrew:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13","7"],short:["ティスレ","へシボン","キスレブ","テベット","シバット","アダル I","アダル","ニサン","イヤル","シバン","タムズ","アヴ","エルル","アダル II"],long:["ティスレ","へシボン","キスレブ","テベット","シバット","アダル I","アダル","ニサン","イヤル","シバン","タムズ","アヴ","エルル","アダル II"]},days:{narrow:["日","月","火","水","木","金","土"],short:["日","月","火","水","木","金","土"],long:["日曜日","月曜日","火曜日","水曜日","木曜日","金曜日","土曜日"]},eras:{narrow:["AM"],short:["AM"],long:["AM"]},dayPeriods:{am:"午前",pm:"午後"}},indian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["カイトラ","ヴァイサカ","ジャイスタ","アーサダ","スラバナ","バードラ","アスビナ","カルディカ","アヴラハヤナ","パウサ","マーガ","パルグナ"],long:["カイトラ","ヴァイサカ","ジャイスタ","アーサダ","スラバナ","バードラ","アスビナ","カルディカ","アヴラハヤナ","パウサ","マーガ","パルグナ"]},days:{narrow:["日","月","火","水","木","金","土"],short:["日","月","火","水","木","金","土"],long:["日曜日","月曜日","火曜日","水曜日","木曜日","金曜日","土曜日"]},eras:{narrow:["サカ"],short:["サカ"],long:["サカ"]},dayPeriods:{am:"午前",pm:"午後"}},islamic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["ムハッラム","サフアル","ラビー・ウル・アウワル","ラビー・ウッ・サーニー","ジュマーダル・アウワル","ジュマーダッサーニー","ラジャブ","シャアバーン","ラマダーン","シャウワール","ズル・カイダ","ズル・ヒッジャ"],long:["ムハッラム","サフアル","ラビー・ウル・アウワル","ラビー・ウッ・サーニー","ジュマーダル・アウワル","ジュマーダッサーニー","ラジャブ","シャアバーン","ラマダーン","シャウワール","ズル・カイダ","ズル・ヒッジャ"]},days:{narrow:["日","月","火","水","木","金","土"],short:["日","月","火","水","木","金","土"],long:["日曜日","月曜日","火曜日","水曜日","木曜日","金曜日","土曜日"]},eras:{narrow:["AH"],short:["AH"],long:["AH"]},dayPeriods:{am:"午前",pm:"午後"}},islamicc:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["ムハッラム","サフアル","ラビー・ウル・アウワル","ラビー・ウッ・サーニー","ジュマーダル・アウワル","ジュマーダッサーニー","ラジャブ","シャアバーン","ラマダーン","シャウワール","ズル・カイダ","ズル・ヒッジャ"],long:["ムハッラム","サフアル","ラビー・ウル・アウワル","ラビー・ウッ・サーニー","ジュマーダル・アウワル","ジュマーダッサーニー","ラジャブ","シャアバーン","ラマダーン","シャウワール","ズル・カイダ","ズル・ヒッジャ"]},days:{narrow:["日","月","火","水","木","金","土"],short:["日","月","火","水","木","金","土"],long:["日曜日","月曜日","火曜日","水曜日","木曜日","金曜日","土曜日"]},eras:{narrow:["AH"],short:["AH"],long:["AH"]},dayPeriods:{am:"午前",pm:"午後"}},japanese:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"],long:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"]},days:{narrow:["日","月","火","水","木","金","土"],short:["日","月","火","水","木","金","土"],long:["日曜日","月曜日","火曜日","水曜日","木曜日","金曜日","土曜日"]},eras:{narrow:["大化","白雉","白鳯","朱鳥","大宝","慶雲","和銅","霊亀","養老","神亀","天平","天平感宝","天平勝宝","天平宝字","天平神護","神護景雲","宝亀","天応","延暦","大同","弘仁","天長","承和","嘉祥","仁寿","斉衡","天安","貞観","元慶","仁和","寛平","昌泰","延喜","延長","承平","天慶","天暦","天徳","応和","康保","安和","天禄","天延","貞元","天元","永観","寛和","永延","永祚","正暦","長徳","長保","寛弘","長和","寛仁","治安","万寿","長元","長暦","長久","寛徳","永承","天喜","康平","治暦","延久","承保","承暦","永保","応徳","寛治","嘉保","永長","承徳","康和","長治","嘉承","天仁","天永","永久","元永","保安","天治","大治","天承","長承","保延","永治","康治","天養","久安","仁平","久寿","保元","平治","永暦","応保","長寛","永万","仁安","嘉応","承安","安元","治承","養和","寿永","元暦","文治","建久","正治","建仁","元久","建永","承元","建暦","建保","承久","貞応","元仁","嘉禄","安貞","寛喜","貞永","天福","文暦","嘉禎","暦仁","延応","仁治","寛元","宝治","建長","康元","正嘉","正元","文応","弘長","文永","建治","弘安","正応","永仁","正安","乾元","嘉元","徳治","延慶","応長","正和","文保","元応","元亨","正中","嘉暦","元徳","元弘","建武","延元","興国","正平","建徳","文中","天授","康暦","弘和","元中","至徳","嘉慶","康応","明徳","応永","正長","永享","嘉吉","文安","宝徳","享徳","康正","長禄","寛正","文正","応仁","文明","長享","延徳","明応","文亀","永正","大永","享禄","天文","弘治","永禄","元亀","天正","文禄","慶長","元和","寛永","正保","慶安","承応","明暦","万治","寛文","延宝","天和","貞享","元禄","宝永","正徳","享保","元文","寛保","延享","寛延","宝暦","明和","安永","天明","寛政","享和","文化","文政","天保","弘化","嘉永","安政","万延","文久","元治","慶応","M","T","S","H"],short:["大化","白雉","白鳯","朱鳥","大宝","慶雲","和銅","霊亀","養老","神亀","天平","天平感宝","天平勝宝","天平宝字","天平神護","神護景雲","宝亀","天応","延暦","大同","弘仁","天長","承和","嘉祥","仁寿","斉衡","天安","貞観","元慶","仁和","寛平","昌泰","延喜","延長","承平","天慶","天暦","天徳","応和","康保","安和","天禄","天延","貞元","天元","永観","寛和","永延","永祚","正暦","長徳","長保","寛弘","長和","寛仁","治安","万寿","長元","長暦","長久","寛徳","永承","天喜","康平","治暦","延久","承保","承暦","永保","応徳","寛治","嘉保","永長","承徳","康和","長治","嘉承","天仁","天永","永久","元永","保安","天治","大治","天承","長承","保延","永治","康治","天養","久安","仁平","久寿","保元","平治","永暦","応保","長寛","永万","仁安","嘉応","承安","安元","治承","養和","寿永","元暦","文治","建久","正治","建仁","元久","建永","承元","建暦","建保","承久","貞応","元仁","嘉禄","安貞","寛喜","貞永","天福","文暦","嘉禎","暦仁","延応","仁治","寛元","宝治","建長","康元","正嘉","正元","文応","弘長","文永","建治","弘安","正応","永仁","正安","乾元","嘉元","徳治","延慶","応長","正和","文保","元応","元亨","正中","嘉暦","元徳","元弘","建武","延元","興国","正平","建徳","文中","天授","康暦","弘和","元中","至徳","嘉慶","康応","明徳","応永","正長","永享","嘉吉","文安","宝徳","享徳","康正","長禄","寛正","文正","応仁","文明","長享","延徳","明応","文亀","永正","大永","享禄","天文","弘治","永禄","元亀","天正","文禄","慶長","元和","寛永","正保","慶安","承応","明暦","万治","寛文","延宝","天和","貞享","元禄","宝永","正徳","享保","元文","寛保","延享","寛延","宝暦","明和","安永","天明","寛政","享和","文化","文政","天保","弘化","嘉永","安政","万延","文久","元治","慶応","明治","大正","昭和","平成"],long:["大化","白雉","白鳯","朱鳥","大宝","慶雲","和銅","霊亀","養老","神亀","天平","天平感宝","天平勝宝","天平宝字","天平神護","神護景雲","宝亀","天応","延暦","大同","弘仁","天長","承和","嘉祥","仁寿","斉衡","天安","貞観","元慶","仁和","寛平","昌泰","延喜","延長","承平","天慶","天暦","天徳","応和","康保","安和","天禄","天延","貞元","天元","永観","寛和","永延","永祚","正暦","長徳","長保","寛弘","長和","寛仁","治安","万寿","長元","長暦","長久","寛徳","永承","天喜","康平","治暦","延久","承保","承暦","永保","応徳","寛治","嘉保","永長","承徳","康和","長治","嘉承","天仁","天永","永久","元永","保安","天治","大治","天承","長承","保延","永治","康治","天養","久安","仁平","久寿","保元","平治","永暦","応保","長寛","永万","仁安","嘉応","承安","安元","治承","養和","寿永","元暦","文治","建久","正治","建仁","元久","建永","承元","建暦","建保","承久","貞応","元仁","嘉禄","安貞","寛喜","貞永","天福","文暦","嘉禎","暦仁","延応","仁治","寛元","宝治","建長","康元","正嘉","正元","文応","弘長","文永","建治","弘安","正応","永仁","正安","乾元","嘉元","徳治","延慶","応長","正和","文保","元応","元亨","正中","嘉暦","元徳","元弘","建武","延元","興国","正平","建徳","文中","天授","康暦","弘和","元中","至徳","嘉慶","康応","明徳","応永","正長","永享","嘉吉","文安","宝徳","享徳","康正","長禄","寛正","文正","応仁","文明","長享","延徳","明応","文亀","永正","大永","享禄","天文","弘治","永禄","元亀","天正","文禄","慶長","元和","寛永","正保","慶安","承応","明暦","万治","寛文","延宝","天和","貞享","元禄","宝永","正徳","享保","元文","寛保","延享","寛延","宝暦","明和","安永","天明","寛政","享和","文化","文政","天保","弘化","嘉永","安政","万延","文久","元治","慶応","明治","大正","昭和","平成"]},dayPeriods:{am:"午前",pm:"午後"}},persian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["ファルヴァルディーン","オルディーベヘシュト","ホルダード","ティール","モルダード","シャハリーヴァル","メフル","アーバーン","アーザル","デイ","バフマン","エスファンド"],long:["ファルヴァルディーン","オルディーベヘシュト","ホルダード","ティール","モルダード","シャハリーヴァル","メフル","アーバーン","アーザル","デイ","バフマン","エスファンド"]},days:{narrow:["日","月","火","水","木","金","土"],short:["日","月","火","水","木","金","土"],long:["日曜日","月曜日","火曜日","水曜日","木曜日","金曜日","土曜日"]},eras:{narrow:["AP"],short:["AP"],long:["AP"]},dayPeriods:{am:"午前",pm:"午後"}},roc:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"],long:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"]},days:{narrow:["日","月","火","水","木","金","土"],short:["日","月","火","水","木","金","土"],long:["日曜日","月曜日","火曜日","水曜日","木曜日","金曜日","土曜日"]},eras:{narrow:["民国前","民国"],short:["民国前","民国"],long:["民国前","民国"]},dayPeriods:{am:"午前",pm:"午後"}}}},number:{nu:["latn"],patterns:{decimal:{positivePattern:"{number}",negativePattern:"{minusSign}{number}"},currency:{positivePattern:"{currency}{number}",negativePattern:"{minusSign}{currency}{number}"},percent:{positivePattern:"{number}{percentSign}",negativePattern:"{minusSign}{number}{percentSign}"}},symbols:{latn:{decimal:".",group:",",nan:"NaN",plusSign:"+",minusSign:"-",percentSign:"%",infinity:"∞"}},currencies:{AUD:"AU$",BRL:"R$",CAD:"CA$",CNY:"元",EUR:"€",GBP:"£",HKD:"HK$",ILS:"₪",INR:"₹",JPY:"￥",KRW:"₩",MXN:"MX$",NZD:"NZ$",THB:"฿",TWD:"NT$",USD:"$",VND:"₫",XAF:"FCFA",XCD:"EC$",XOF:"CFA",XPF:"CFPF"}}});

/***/ }),

/***/ "./node_modules/intl/locale-data/jsonp/nl.js":
/*!***************************************************!*\
  !*** ./node_modules/intl/locale-data/jsonp/nl.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

IntlPolyfill.__addLocaleData({locale:"nl",date:{ca:["gregory","buddhist","chinese","coptic","dangi","ethioaa","ethiopic","generic","hebrew","indian","islamic","islamicc","japanese","persian","roc"],hourNo0:true,hour12:false,formats:{short:"{1} {0}",medium:"{1} {0}",full:"{1} {0}",long:"{1} {0}",availableFormats:{"d":"d","E":"ccc",Ed:"E d",Ehm:"E h:mm a",EHm:"E HH:mm",Ehms:"E h:mm:ss a",EHms:"E HH:mm:ss",Gy:"y G",GyMMM:"MMM y G",GyMMMd:"d MMM y G",GyMMMEd:"E d MMM y G","h":"h a","H":"HH",hm:"h:mm a",Hm:"HH:mm",hms:"h:mm:ss a",Hms:"HH:mm:ss",hmsv:"h:mm:ss a v",Hmsv:"HH:mm:ss v",hmv:"h:mm a v",Hmv:"HH:mm v","M":"L",Md:"d-M",MEd:"E d-M",MMM:"LLL",MMMd:"d MMM",MMMEd:"E d MMM",MMMMd:"d MMMM",ms:"mm:ss","y":"y",yM:"M-y",yMd:"d-M-y",yMEd:"E d-M-y",yMMM:"MMM y",yMMMd:"d MMM y",yMMMEd:"E d MMM y",yMMMM:"MMMM y",yQQQ:"QQQ y",yQQQQ:"QQQQ y"},dateFormats:{yMMMMEEEEd:"EEEE d MMMM y",yMMMMd:"d MMMM y",yMMMd:"d MMM y",yMd:"dd-MM-yy"},timeFormats:{hmmsszzzz:"HH:mm:ss zzzz",hmsz:"HH:mm:ss z",hms:"HH:mm:ss",hm:"HH:mm"}},calendars:{buddhist:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["jan.","feb.","mrt.","apr.","mei","jun.","jul.","aug.","sep.","okt.","nov.","dec."],long:["januari","februari","maart","april","mei","juni","juli","augustus","september","oktober","november","december"]},days:{narrow:["Z","M","D","W","D","V","Z"],short:["zo","ma","di","wo","do","vr","za"],long:["zondag","maandag","dinsdag","woensdag","donderdag","vrijdag","zaterdag"]},eras:{narrow:["BE"],short:["BE"],long:["BE"]},dayPeriods:{am:"a.m.",pm:"p.m."}},chinese:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["mnd 1","mnd 2","mnd 3","mnd 4","mnd 5","mnd 6","mnd 7","mnd 8","mnd 9","mnd 10","mnd 11","mnd 12"],long:["maand 1","maand 2","maand 3","maand 4","maand 5","maand 6","maand 7","maand 8","maand 9","maand 10","maand 11","maand 12"]},days:{narrow:["Z","M","D","W","D","V","Z"],short:["zo","ma","di","wo","do","vr","za"],long:["zondag","maandag","dinsdag","woensdag","donderdag","vrijdag","zaterdag"]},dayPeriods:{am:"a.m.",pm:"p.m."}},coptic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Tut","Babah","Hatur","Kiyahk","Tubah","Amshir","Baramhat","Baramundah","Bashans","Ba’unah","Abib","Misra","Nasi"],long:["Tut","Babah","Hatur","Kiyahk","Tubah","Amshir","Baramhat","Baramundah","Bashans","Ba’unah","Abib","Misra","Nasi"]},days:{narrow:["Z","M","D","W","D","V","Z"],short:["zo","ma","di","wo","do","vr","za"],long:["zondag","maandag","dinsdag","woensdag","donderdag","vrijdag","zaterdag"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"a.m.",pm:"p.m."}},dangi:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["mnd 1","mnd 2","mnd 3","mnd 4","mnd 5","mnd 6","mnd 7","mnd 8","mnd 9","mnd 10","mnd 11","mnd 12"],long:["maand 1","maand 2","maand 3","maand 4","maand 5","maand 6","maand 7","maand 8","maand 9","maand 10","maand 11","maand 12"]},days:{narrow:["Z","M","D","W","D","V","Z"],short:["zo","ma","di","wo","do","vr","za"],long:["zondag","maandag","dinsdag","woensdag","donderdag","vrijdag","zaterdag"]},dayPeriods:{am:"a.m.",pm:"p.m."}},ethiopic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Mäskäräm","Teqemt","Hedar","Tahsas","T’er","Yäkatit","Mägabit","Miyazya","Genbot","Säne","Hamle","Nähase","Pagumän"],long:["Mäskäräm","Teqemt","Hedar","Tahsas","T’er","Yäkatit","Mägabit","Miyazya","Genbot","Säne","Hamle","Nähase","Pagumän"]},days:{narrow:["Z","M","D","W","D","V","Z"],short:["zo","ma","di","wo","do","vr","za"],long:["zondag","maandag","dinsdag","woensdag","donderdag","vrijdag","zaterdag"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"a.m.",pm:"p.m."}},ethioaa:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Mäskäräm","Teqemt","Hedar","Tahsas","T’er","Yäkatit","Mägabit","Miyazya","Genbot","Säne","Hamle","Nähase","Pagumän"],long:["Mäskäräm","Teqemt","Hedar","Tahsas","T’er","Yäkatit","Mägabit","Miyazya","Genbot","Säne","Hamle","Nähase","Pagumän"]},days:{narrow:["Z","M","D","W","D","V","Z"],short:["zo","ma","di","wo","do","vr","za"],long:["zondag","maandag","dinsdag","woensdag","donderdag","vrijdag","zaterdag"]},eras:{narrow:["ERA0"],short:["ERA0"],long:["ERA0"]},dayPeriods:{am:"a.m.",pm:"p.m."}},generic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"],long:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"]},days:{narrow:["Z","M","D","W","D","V","Z"],short:["zo","ma","di","wo","do","vr","za"],long:["zondag","maandag","dinsdag","woensdag","donderdag","vrijdag","zaterdag"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"a.m.",pm:"p.m."}},gregory:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["jan.","feb.","mrt.","apr.","mei","jun.","jul.","aug.","sep.","okt.","nov.","dec."],long:["januari","februari","maart","april","mei","juni","juli","augustus","september","oktober","november","december"]},days:{narrow:["Z","M","D","W","D","V","Z"],short:["zo","ma","di","wo","do","vr","za"],long:["zondag","maandag","dinsdag","woensdag","donderdag","vrijdag","zaterdag"]},eras:{narrow:["v.C.","n.C.","vgj","gj"],short:["v.Chr.","n.Chr.","v.g.j.","g.j."],long:["voor Christus","na Christus","vóór gewone jaartelling","gewone jaartelling"]},dayPeriods:{am:"a.m.",pm:"p.m."}},hebrew:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13","7"],short:["Tisjrie","Chesjwan","Kislev","Tevet","Sjevat","Adar A","Adar","Nisan","Ijar","Sivan","Tammoez","Av","Elloel","Adar B"],long:["Tisjrie","Chesjwan","Kislev","Tevet","Sjevat","Adar A","Adar","Nisan","Ijar","Sivan","Tammoez","Av","Elloel","Adar B"]},days:{narrow:["Z","M","D","W","D","V","Z"],short:["zo","ma","di","wo","do","vr","za"],long:["zondag","maandag","dinsdag","woensdag","donderdag","vrijdag","zaterdag"]},eras:{narrow:["AM"],short:["AM"],long:["AM"]},dayPeriods:{am:"a.m.",pm:"p.m."}},indian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Chaitra","Vaishakha","Jyeshtha","Aashaadha","Shraavana","Bhaadrapada","Ashvina","Kaartika","Agrahayana","Pausha","Maagha","Phaalguna"],long:["Chaitra","Vaishakha","Jyeshtha","Aashaadha","Shraavana","Bhaadrapada","Ashvina","Kaartika","Agrahayana","Pausha","Maagha","Phaalguna"]},days:{narrow:["Z","M","D","W","D","V","Z"],short:["zo","ma","di","wo","do","vr","za"],long:["zondag","maandag","dinsdag","woensdag","donderdag","vrijdag","zaterdag"]},eras:{narrow:["SAKA"],short:["SAKA"],long:["SAKA"]},dayPeriods:{am:"a.m.",pm:"p.m."}},islamic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Moeh.","Saf.","Rab. I","Rab. II","Joem. I","Joem. II","Raj.","Sja.","Ram.","Sjaw.","Doe al k.","Doe al h."],long:["Moeharram","Safar","Rabiʻa al awal","Rabiʻa al thani","Joemadʻal awal","Joemadʻal thani","Rajab","Sjaʻaban","Ramadan","Sjawal","Doe al kaʻaba","Doe al hizja"]},days:{narrow:["Z","M","D","W","D","V","Z"],short:["zo","ma","di","wo","do","vr","za"],long:["zondag","maandag","dinsdag","woensdag","donderdag","vrijdag","zaterdag"]},eras:{narrow:["Saʻna Hizjria"],short:["Saʻna Hizjria"],long:["Saʻna Hizjria"]},dayPeriods:{am:"a.m.",pm:"p.m."}},islamicc:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Moeh.","Saf.","Rab. I","Rab. II","Joem. I","Joem. II","Raj.","Sja.","Ram.","Sjaw.","Doe al k.","Doe al h."],long:["Moeharram","Safar","Rabiʻa al awal","Rabiʻa al thani","Joemadʻal awal","Joemadʻal thani","Rajab","Sjaʻaban","Ramadan","Sjawal","Doe al kaʻaba","Doe al hizja"]},days:{narrow:["Z","M","D","W","D","V","Z"],short:["zo","ma","di","wo","do","vr","za"],long:["zondag","maandag","dinsdag","woensdag","donderdag","vrijdag","zaterdag"]},eras:{narrow:["Saʻna Hizjria"],short:["Saʻna Hizjria"],long:["Saʻna Hizjria"]},dayPeriods:{am:"a.m.",pm:"p.m."}},japanese:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["jan.","feb.","mrt.","apr.","mei","jun.","jul.","aug.","sep.","okt.","nov.","dec."],long:["januari","februari","maart","april","mei","juni","juli","augustus","september","oktober","november","december"]},days:{narrow:["Z","M","D","W","D","V","Z"],short:["zo","ma","di","wo","do","vr","za"],long:["zondag","maandag","dinsdag","woensdag","donderdag","vrijdag","zaterdag"]},eras:{narrow:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","M","T","S","H"],short:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kaho (1094–1096)","Eichō (1096–1097)","Shōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen-ei (1118-1120)","Hoan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hoen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hogen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken-ei (1206-1207)","Shōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Shōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tempuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En-ō (1239-1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun-ō (1260-1261)","Kōchō (1261–1264)","Bun-ei (1264-1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkei (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkyō (1321–1324)","Shōchū (1324–1326)","Kareki (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kemmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun-an (1444-1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenmon (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genwa (1615–1624)","Kan-ei (1624-1644)","Shōho (1644–1648)","Keian (1648–1652)","Shōō (1652–1655)","Meiryaku (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenwa (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan-en (1748-1751)","Hōryaku (1751–1764)","Meiwa (1764–1772)","An-ei (1772-1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man-en (1860-1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","Meiji","Taishō","Shōwa","Heisei"],long:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kaho (1094–1096)","Eichō (1096–1097)","Shōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen-ei (1118-1120)","Hoan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hoen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hogen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken-ei (1206-1207)","Shōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Shōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tempuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En-ō (1239-1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun-ō (1260-1261)","Kōchō (1261–1264)","Bun-ei (1264-1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkei (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkyō (1321–1324)","Shōchū (1324–1326)","Kareki (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kemmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun-an (1444-1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenmon (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genwa (1615–1624)","Kan-ei (1624-1644)","Shōho (1644–1648)","Keian (1648–1652)","Shōō (1652–1655)","Meiryaku (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenwa (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan-en (1748-1751)","Hōryaku (1751–1764)","Meiwa (1764–1772)","An-ei (1772-1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man-en (1860-1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","Meiji","Taishō","Shōwa","Heisei"]},dayPeriods:{am:"a.m.",pm:"p.m."}},persian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Farvardin","Ordibehesht","Khordad","Tir","Mordad","Shahrivar","Mehr","Aban","Azar","Dey","Bahman","Esfand"],long:["Farvardin","Ordibehesht","Khordad","Tir","Mordad","Shahrivar","Mehr","Aban","Azar","Dey","Bahman","Esfand"]},days:{narrow:["Z","M","D","W","D","V","Z"],short:["zo","ma","di","wo","do","vr","za"],long:["zondag","maandag","dinsdag","woensdag","donderdag","vrijdag","zaterdag"]},eras:{narrow:["AP"],short:["AP"],long:["AP"]},dayPeriods:{am:"a.m.",pm:"p.m."}},roc:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["jan.","feb.","mrt.","apr.","mei","jun.","jul.","aug.","sep.","okt.","nov.","dec."],long:["januari","februari","maart","april","mei","juni","juli","augustus","september","oktober","november","december"]},days:{narrow:["Z","M","D","W","D","V","Z"],short:["zo","ma","di","wo","do","vr","za"],long:["zondag","maandag","dinsdag","woensdag","donderdag","vrijdag","zaterdag"]},eras:{narrow:["voor R.O.C.","Minguo"],short:["voor R.O.C.","Minguo"],long:["voor R.O.C.","Minguo"]},dayPeriods:{am:"a.m.",pm:"p.m."}}}},number:{nu:["latn"],patterns:{decimal:{positivePattern:"{number}",negativePattern:"{minusSign}{number}"},currency:{positivePattern:"{currency} {number}",negativePattern:"{currency} {minusSign}{number}"},percent:{positivePattern:"{number}{percentSign}",negativePattern:"{minusSign}{number}{percentSign}"}},symbols:{latn:{decimal:",",group:".",nan:"NaN",plusSign:"+",minusSign:"-",percentSign:"%",infinity:"∞"}},currencies:{AUD:"AU$",BRL:"R$",CAD:"C$",CNY:"CN¥",EUR:"€",FJD:"FJ$",GBP:"£",HKD:"HK$",ILS:"₪",INR:"₹",JPY:"JP¥",KRW:"₩",MXN:"MX$",NZD:"NZ$",SBD:"SI$",THB:"฿",TWD:"NT$",USD:"US$",VND:"₫",XAF:"FCFA",XCD:"EC$",XOF:"CFA"}}});

/***/ }),

/***/ "./node_modules/intl/locale-data/jsonp/pt.js":
/*!***************************************************!*\
  !*** ./node_modules/intl/locale-data/jsonp/pt.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

IntlPolyfill.__addLocaleData({locale:"pt",date:{ca:["gregory","buddhist","chinese","coptic","dangi","ethioaa","ethiopic","generic","hebrew","indian","islamic","islamicc","japanese","persian","roc"],hourNo0:true,hour12:false,formats:{short:"{1} {0}",medium:"{1} {0}",full:"{1} {0}",long:"{1} {0}",availableFormats:{"d":"d","E":"ccc",Ed:"E, d",Ehm:"E, h:mm a",EHm:"E, HH:mm",Ehms:"E, h:mm:ss a",EHms:"E, HH:mm:ss",Gy:"y G",GyMMM:"MMM 'de' y G",GyMMMd:"d 'de' MMM 'de' y G",GyMMMEd:"E, d 'de' MMM 'de' y G","h":"h a","H":"HH",hm:"h:mm a",Hm:"HH:mm",hms:"h:mm:ss a",Hms:"HH:mm:ss",hmsv:"h:mm:ss a v",Hmsv:"HH:mm:ss v",hmv:"h:mm a v",Hmv:"HH:mm v","M":"L",Md:"d/M",MEd:"E, dd/MM",MMdd:"dd/MM",MMM:"LLL",MMMd:"d 'de' MMM",MMMEd:"E, d 'de' MMM",MMMMd:"d 'de' MMMM",MMMMEd:"E, d 'de' MMMM",ms:"mm:ss","y":"y",yM:"MM/y",yMd:"dd/MM/y",yMEd:"E, dd/MM/y",yMM:"MM/y",yMMM:"MMM 'de' y",yMMMd:"d 'de' MMM 'de' y",yMMMEd:"E, d 'de' MMM 'de' y",yMMMM:"MMMM 'de' y",yMMMMd:"d 'de' MMMM 'de' y",yMMMMEd:"E, d 'de' MMMM 'de' y",yQQQ:"y QQQ",yQQQQ:"y QQQQ"},dateFormats:{yMMMMEEEEd:"EEEE, d 'de' MMMM 'de' y",yMMMMd:"d 'de' MMMM 'de' y",yMMMd:"d 'de' MMM 'de' y",yMd:"dd/MM/yy"},timeFormats:{hmmsszzzz:"HH:mm:ss zzzz",hmsz:"HH:mm:ss z",hms:"HH:mm:ss",hm:"HH:mm"}},calendars:{buddhist:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["jan","fev","mar","abr","mai","jun","jul","ago","set","out","nov","dez"],long:["janeiro","fevereiro","março","abril","maio","junho","julho","agosto","setembro","outubro","novembro","dezembro"]},days:{narrow:["D","S","T","Q","Q","S","S"],short:["dom","seg","ter","qua","qui","sex","sáb"],long:["domingo","segunda-feira","terça-feira","quarta-feira","quinta-feira","sexta-feira","sábado"]},eras:{narrow:["BE"],short:["BE"],long:["BE"]},dayPeriods:{am:"AM",pm:"PM"}},chinese:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Mês 1","Mês 2","Mês 3","Mês 4","Mês 5","Mês 6","Mês 7","Mês 8","Mês 9","Mês 10","Mês 11","Mês 12"],long:["Mês 1","Mês 2","Mês 3","Mês 4","Mês 5","Mês 6","Mês 7","Mês 8","Mês 9","Mês 10","Mês 11","Mês 12"]},days:{narrow:["D","S","T","Q","Q","S","S"],short:["dom","seg","ter","qua","qui","sex","sáb"],long:["domingo","segunda-feira","terça-feira","quarta-feira","quinta-feira","sexta-feira","sábado"]},dayPeriods:{am:"AM",pm:"PM"}},coptic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Tout","Baba","Hator","Kiahk","Toba","Amshir","Baramhat","Baramouda","Bashans","Paona","Epep","Mesra","Nasie"],long:["Tout","Baba","Hator","Kiahk","Toba","Amshir","Baramhat","Baramouda","Bashans","Paona","Epep","Mesra","Nasie"]},days:{narrow:["D","S","T","Q","Q","S","S"],short:["dom","seg","ter","qua","qui","sex","sáb"],long:["domingo","segunda-feira","terça-feira","quarta-feira","quinta-feira","sexta-feira","sábado"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"AM",pm:"PM"}},dangi:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Mês 1","Mês 2","Mês 3","Mês 4","Mês 5","Mês 6","Mês 7","Mês 8","Mês 9","Mês 10","Mês 11","Mês 12"],long:["Mês 1","Mês 2","Mês 3","Mês 4","Mês 5","Mês 6","Mês 7","Mês 8","Mês 9","Mês 10","Mês 11","Mês 12"]},days:{narrow:["D","S","T","Q","Q","S","S"],short:["dom","seg","ter","qua","qui","sex","sáb"],long:["domingo","segunda-feira","terça-feira","quarta-feira","quinta-feira","sexta-feira","sábado"]},dayPeriods:{am:"AM",pm:"PM"}},ethiopic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"],long:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"]},days:{narrow:["D","S","T","Q","Q","S","S"],short:["dom","seg","ter","qua","qui","sex","sáb"],long:["domingo","segunda-feira","terça-feira","quarta-feira","quinta-feira","sexta-feira","sábado"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"AM",pm:"PM"}},ethioaa:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"],long:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"]},days:{narrow:["D","S","T","Q","Q","S","S"],short:["dom","seg","ter","qua","qui","sex","sáb"],long:["domingo","segunda-feira","terça-feira","quarta-feira","quinta-feira","sexta-feira","sábado"]},eras:{narrow:["ERA0"],short:["ERA0"],long:["ERA0"]},dayPeriods:{am:"AM",pm:"PM"}},generic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"],long:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"]},days:{narrow:["D","S","T","Q","Q","S","S"],short:["dom","seg","ter","qua","qui","sex","sáb"],long:["domingo","segunda-feira","terça-feira","quarta-feira","quinta-feira","sexta-feira","sábado"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"AM",pm:"PM"}},gregory:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["jan","fev","mar","abr","mai","jun","jul","ago","set","out","nov","dez"],long:["janeiro","fevereiro","março","abril","maio","junho","julho","agosto","setembro","outubro","novembro","dezembro"]},days:{narrow:["D","S","T","Q","Q","S","S"],short:["dom","seg","ter","qua","qui","sex","sáb"],long:["domingo","segunda-feira","terça-feira","quarta-feira","quinta-feira","sexta-feira","sábado"]},eras:{narrow:["a.C.","d.C.","AEC","EC"],short:["a.C.","d.C.","AEC","EC"],long:["antes de Cristo","depois de Cristo","antes da Era Comum","Era Comum"]},dayPeriods:{am:"AM",pm:"PM"}},hebrew:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13","7"],short:["Tishri","Heshvan","Kislev","Tevet","Shevat","Adar I","Adar","Nisan","Iyar","Sivan","Tamuz","Av","Elul","Adar II"],long:["Tishri","Heshvan","Kislev","Tevet","Shevat","Adar I","Adar","Nisan","Iyar","Sivan","Tamuz","Av","Elul","Adar II"]},days:{narrow:["D","S","T","Q","Q","S","S"],short:["dom","seg","ter","qua","qui","sex","sáb"],long:["domingo","segunda-feira","terça-feira","quarta-feira","quinta-feira","sexta-feira","sábado"]},eras:{narrow:["AM"],short:["AM"],long:["AM"]},dayPeriods:{am:"AM",pm:"PM"}},indian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Chaitra","Vaisakha","Jyaistha","Asadha","Sravana","Bhadra","Asvina","Kartika","Agrahayana","Pausa","Magha","Phalguna"],long:["Chaitra","Vaisakha","Jyaistha","Asadha","Sravana","Bhadra","Asvina","Kartika","Agrahayana","Pausa","Magha","Phalguna"]},days:{narrow:["D","S","T","Q","Q","S","S"],short:["dom","seg","ter","qua","qui","sex","sáb"],long:["domingo","segunda-feira","terça-feira","quarta-feira","quinta-feira","sexta-feira","sábado"]},eras:{narrow:["Saka"],short:["Saka"],long:["Saka"]},dayPeriods:{am:"AM",pm:"PM"}},islamic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Muh.","Saf.","Rab. I","Rab. II","Jum. I","Jum. II","Raj.","Sha.","Ram.","Shaw.","Dhuʻl-Q.","Dhuʻl-H."],long:["Muharram","Safar","Rabiʻ I","Rabiʻ II","Jumada I","Jumada II","Rajab","Shaʻban","Ramadan","Shawwal","Dhuʻl-Qiʻdah","Dhuʻl-Hijjah"]},days:{narrow:["D","S","T","Q","Q","S","S"],short:["dom","seg","ter","qua","qui","sex","sáb"],long:["domingo","segunda-feira","terça-feira","quarta-feira","quinta-feira","sexta-feira","sábado"]},eras:{narrow:["AH"],short:["AH"],long:["AH"]},dayPeriods:{am:"AM",pm:"PM"}},islamicc:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Muh.","Saf.","Rab. I","Rab. II","Jum. I","Jum. II","Raj.","Sha.","Ram.","Shaw.","Dhuʻl-Q.","Dhuʻl-H."],long:["Muharram","Safar","Rabiʻ I","Rabiʻ II","Jumada I","Jumada II","Rajab","Shaʻban","Ramadan","Shawwal","Dhuʻl-Qiʻdah","Dhuʻl-Hijjah"]},days:{narrow:["D","S","T","Q","Q","S","S"],short:["dom","seg","ter","qua","qui","sex","sáb"],long:["domingo","segunda-feira","terça-feira","quarta-feira","quinta-feira","sexta-feira","sábado"]},eras:{narrow:["AH"],short:["AH"],long:["AH"]},dayPeriods:{am:"AM",pm:"PM"}},japanese:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["jan","fev","mar","abr","mai","jun","jul","ago","set","out","nov","dez"],long:["janeiro","fevereiro","março","abril","maio","junho","julho","agosto","setembro","outubro","novembro","dezembro"]},days:{narrow:["D","S","T","Q","Q","S","S"],short:["dom","seg","ter","qua","qui","sex","sáb"],long:["domingo","segunda-feira","terça-feira","quarta-feira","quinta-feira","sexta-feira","sábado"]},eras:{narrow:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","M","T","S","H"],short:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","Meiji","Taishō","Shōwa","Heisei"],long:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","Meiji","Taishō","Shōwa","Heisei"]},dayPeriods:{am:"AM",pm:"PM"}},persian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Farvardin","Ordibehesht","Khordad","Tir","Mordad","Shahrivar","Mehr","Aban","Azar","Dey","Bahman","Esfand"],long:["Farvardin","Ordibehesht","Khordad","Tir","Mordad","Shahrivar","Mehr","Aban","Azar","Dey","Bahman","Esfand"]},days:{narrow:["D","S","T","Q","Q","S","S"],short:["dom","seg","ter","qua","qui","sex","sáb"],long:["domingo","segunda-feira","terça-feira","quarta-feira","quinta-feira","sexta-feira","sábado"]},eras:{narrow:["AP"],short:["AP"],long:["AP"]},dayPeriods:{am:"AM",pm:"PM"}},roc:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["jan","fev","mar","abr","mai","jun","jul","ago","set","out","nov","dez"],long:["janeiro","fevereiro","março","abril","maio","junho","julho","agosto","setembro","outubro","novembro","dezembro"]},days:{narrow:["D","S","T","Q","Q","S","S"],short:["dom","seg","ter","qua","qui","sex","sáb"],long:["domingo","segunda-feira","terça-feira","quarta-feira","quinta-feira","sexta-feira","sábado"]},eras:{narrow:["Antes de R.O.C.","R.O.C."],short:["Antes de R.O.C.","R.O.C."],long:["Antes de R.O.C.","R.O.C."]},dayPeriods:{am:"AM",pm:"PM"}}}},number:{nu:["latn"],patterns:{decimal:{positivePattern:"{number}",negativePattern:"{minusSign}{number}"},currency:{positivePattern:"{currency}{number}",negativePattern:"{minusSign}{currency}{number}"},percent:{positivePattern:"{number}{percentSign}",negativePattern:"{minusSign}{number}{percentSign}"}},symbols:{latn:{decimal:",",group:".",nan:"NaN",plusSign:"+",minusSign:"-",percentSign:"%",infinity:"∞"}},currencies:{AUD:"AU$",BRL:"R$",CAD:"CA$",CNY:"CN¥",EUR:"€",GBP:"£",HKD:"HK$",ILS:"₪",INR:"₹",JPY:"JP¥",KRW:"₩",MXN:"MX$",NZD:"NZ$",PTE:"Esc.",THB:"฿",TWD:"NT$",USD:"US$",VND:"₫",XAF:"FCFA",XCD:"EC$",XOF:"CFA",XPF:"CFPF"}}});

/***/ }),

/***/ "./node_modules/intl/locale-data/jsonp/sv.js":
/*!***************************************************!*\
  !*** ./node_modules/intl/locale-data/jsonp/sv.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

IntlPolyfill.__addLocaleData({locale:"sv",date:{ca:["gregory","buddhist","chinese","coptic","dangi","ethioaa","ethiopic","generic","hebrew","indian","islamic","islamicc","japanese","persian","roc"],hourNo0:true,hour12:false,formats:{short:"{1} {0}",medium:"{1} {0}",full:"{1} {0}",long:"{1} {0}",availableFormats:{"d":"d","E":"ccc",Ed:"E d",Ehm:"E h:mm a",EHm:"E HH:mm",Ehms:"E h:mm:ss a",EHms:"E HH:mm:ss",Gy:"y G",GyMMM:"MMM y G",GyMMMd:"d MMM y G",GyMMMEd:"E d MMM y G","h":"h a","H":"HH",hm:"h:mm a",Hm:"HH:mm",hms:"h:mm:ss a",Hms:"HH:mm:ss",hmsv:"h:mm:ss a v",Hmsv:"HH:mm:ss v",hmv:"h:mm a v",Hmv:"HH:mm v","M":"L",Md:"d/M",MEd:"E d/M",MMd:"d/M",MMdd:"dd/MM",MMM:"LLL",MMMd:"d MMM",MMMEd:"E d MMM",MMMMd:"d MMMM",MMMMEd:"E d MMMM",ms:"mm:ss","y":"y",yM:"y-MM",yMd:"y-MM-dd",yMEd:"E, y-MM-dd",yMM:"y-MM",yMMM:"MMM y",yMMMd:"d MMM y",yMMMEd:"E d MMM y",yMMMM:"MMMM y",yQQQ:"QQQ y",yQQQQ:"QQQQ y"},dateFormats:{yMMMMEEEEd:"EEEE d MMMM y",yMMMMd:"d MMMM y",yMMMd:"d MMM y",yMd:"y-MM-dd"},timeFormats:{hmmsszzzz:"'kl'. HH:mm:ss zzzz",hmsz:"HH:mm:ss z",hms:"HH:mm:ss",hm:"HH:mm"}},calendars:{buddhist:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["jan.","feb.","mars","apr.","maj","juni","juli","aug.","sep.","okt.","nov.","dec."],long:["januari","februari","mars","april","maj","juni","juli","augusti","september","oktober","november","december"]},days:{narrow:["S","M","T","O","T","F","L"],short:["sön","mån","tis","ons","tors","fre","lör"],long:["söndag","måndag","tisdag","onsdag","torsdag","fredag","lördag"]},eras:{narrow:["BE"],short:["BE"],long:["BE"]},dayPeriods:{am:"fm",pm:"em"}},chinese:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"],long:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"]},days:{narrow:["S","M","T","O","T","F","L"],short:["sön","mån","tis","ons","tors","fre","lör"],long:["söndag","måndag","tisdag","onsdag","torsdag","fredag","lördag"]},dayPeriods:{am:"fm",pm:"em"}},coptic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["tout","bâbâ","hâtour","kiahk","toubah","amshîr","barmahât","barmoudah","bashans","ba’ounah","abîb","misra","al-nasi"],long:["tout","bâbâ","hâtour","kiahk","toubah","amshîr","barmahât","barmoudah","bashans","ba’ounah","abîb","misra","al-nasi"]},days:{narrow:["S","M","T","O","T","F","L"],short:["sön","mån","tis","ons","tors","fre","lör"],long:["söndag","måndag","tisdag","onsdag","torsdag","fredag","lördag"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"fm",pm:"em"}},dangi:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"],long:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"]},days:{narrow:["S","M","T","O","T","F","L"],short:["sön","mån","tis","ons","tors","fre","lör"],long:["söndag","måndag","tisdag","onsdag","torsdag","fredag","lördag"]},dayPeriods:{am:"fm",pm:"em"}},ethiopic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["mäskäräm","teqemt","hedar","tahesas","ter","yäkatit","mägabit","miyazya","guenbot","säné","hamlé","nähasé","pagumén"],long:["mäskäräm","teqemt","hedar","tahesas","ter","yäkatit","mägabit","miyazya","guenbot","säné","hamlé","nähasé","pagumén"]},days:{narrow:["S","M","T","O","T","F","L"],short:["sön","mån","tis","ons","tors","fre","lör"],long:["söndag","måndag","tisdag","onsdag","torsdag","fredag","lördag"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"fm",pm:"em"}},ethioaa:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["mäskäräm","teqemt","hedar","tahesas","ter","yäkatit","mägabit","miyazya","guenbot","säné","hamlé","nähasé","pagumén"],long:["mäskäräm","teqemt","hedar","tahesas","ter","yäkatit","mägabit","miyazya","guenbot","säné","hamlé","nähasé","pagumén"]},days:{narrow:["S","M","T","O","T","F","L"],short:["sön","mån","tis","ons","tors","fre","lör"],long:["söndag","måndag","tisdag","onsdag","torsdag","fredag","lördag"]},eras:{narrow:["ERA0"],short:["ERA0"],long:["ERA0"]},dayPeriods:{am:"fm",pm:"em"}},generic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"],long:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"]},days:{narrow:["S","M","T","O","T","F","L"],short:["sön","mån","tis","ons","tors","fre","lör"],long:["söndag","måndag","tisdag","onsdag","torsdag","fredag","lördag"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"fm",pm:"em"}},gregory:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["jan.","feb.","mars","apr.","maj","juni","juli","aug.","sep.","okt.","nov.","dec."],long:["januari","februari","mars","april","maj","juni","juli","augusti","september","oktober","november","december"]},days:{narrow:["S","M","T","O","T","F","L"],short:["sön","mån","tis","ons","tors","fre","lör"],long:["söndag","måndag","tisdag","onsdag","torsdag","fredag","lördag"]},eras:{narrow:["f.Kr.","e.Kr.","fvt","vt"],short:["f.Kr.","e.Kr.","f.v.t.","v.t."],long:["före Kristus","efter Kristus","före västerländsk tideräkning","västerländsk tideräkning"]},dayPeriods:{am:"fm",pm:"em"}},hebrew:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13","7"],short:["tishrí","heshván","kislév","tevét","shevát","adár I","adár","nisán","ijjár","siván","tammúz","ab","elúl","adár II"],long:["tishrí","heshván","kislév","tevét","shevát","adár I","adár","nisán","ijjár","siván","tammúz","ab","elúl","adár II"]},days:{narrow:["S","M","T","O","T","F","L"],short:["sön","mån","tis","ons","tors","fre","lör"],long:["söndag","måndag","tisdag","onsdag","torsdag","fredag","lördag"]},eras:{narrow:["AM"],short:["AM"],long:["AM"]},dayPeriods:{am:"fm",pm:"em"}},indian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["chaitra","vaishākh","jyaishtha","āshādha","shrāvana","bhādrapad","āshwin","kārtik","mārgashīrsha","paush","māgh","phālgun"],long:["chaitra","vaishākh","jyaishtha","āshādha","shrāvana","bhādrapad","āshwin","kārtik","mārgashīrsha","paush","māgh","phālgun"]},days:{narrow:["S","M","T","O","T","F","L"],short:["sön","mån","tis","ons","tors","fre","lör"],long:["söndag","måndag","tisdag","onsdag","torsdag","fredag","lördag"]},eras:{narrow:["SAKA"],short:["SAKA"],long:["Saka-eran"]},dayPeriods:{am:"fm",pm:"em"}},islamic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Muh.","Saf.","Rab. I","Rab. II","Jum. I","Jum. II","Raj.","Sha.","Ram.","Shaw.","Dhuʻl-Q.","Dhuʻl-H."],long:["muharram","safar","rabi’ al-awwal","rabi’ al-akhir","jumada-l-ula","jumada-l-akhira","rajab","sha’ban","ramadan","shawwal","dhu-l-ga’da","dhu-l-hijja"]},days:{narrow:["S","M","T","O","T","F","L"],short:["sön","mån","tis","ons","tors","fre","lör"],long:["söndag","måndag","tisdag","onsdag","torsdag","fredag","lördag"]},eras:{narrow:["AH"],short:["AH"],long:["AH"]},dayPeriods:{am:"fm",pm:"em"}},islamicc:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Muh.","Saf.","Rab. I","Rab. II","Jum. I","Jum. II","Raj.","Sha.","Ram.","Shaw.","Dhuʻl-Q.","Dhuʻl-H."],long:["muharram","safar","rabi’ al-awwal","rabi’ al-akhir","jumada-l-ula","jumada-l-akhira","rajab","sha’ban","ramadan","shawwal","dhu-l-ga’da","dhu-l-hijja"]},days:{narrow:["S","M","T","O","T","F","L"],short:["sön","mån","tis","ons","tors","fre","lör"],long:["söndag","måndag","tisdag","onsdag","torsdag","fredag","lördag"]},eras:{narrow:["AH"],short:["AH"],long:["AH"]},dayPeriods:{am:"fm",pm:"em"}},japanese:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["jan.","feb.","mars","apr.","maj","juni","juli","aug.","sep.","okt.","nov.","dec."],long:["januari","februari","mars","april","maj","juni","juli","augusti","september","oktober","november","december"]},days:{narrow:["S","M","T","O","T","F","L"],short:["sön","mån","tis","ons","tors","fre","lör"],long:["söndag","måndag","tisdag","onsdag","torsdag","fredag","lördag"]},eras:{narrow:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","M","T","S","H"],short:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tempyō (729–749)","Tempyō-kampō (749–749)","Tempyō-shōhō (749–757)","Tempyō-hōji (757–765)","Temphō-jingo (765–767)","Jingo-keiun (767–770)","Hōki (770–780)","Ten-ō (781–782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saiko (854–857)","Tennan (857–859)","Jōgan (859–877)","Genkei (877–885)","Ninna (885–889)","Kampyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Shōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten-en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Ei-en (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eiho (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kaho (1094–1096)","Eichō (1096–1097)","Shōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110–1113)","Eikyū (1113–1118)","Gen-ei (1118–1120)","Hoan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hoen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Tenyō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hogen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin-an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryuku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken-ei (1206–1207)","Shōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Shōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tempuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En-ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun-ō (1260–1261)","Kōchō (1261–1264)","Bun-ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkei (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkyō (1321–1324)","Shōchū (1324–1326)","Kareki (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kemmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun-an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenmon (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genwa (1615–1624)","Kan-ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Shōō (1652–1655)","Meiryaku (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenwa (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan-en (1748–1751)","Hōryaku (1751–1764)","Meiwa (1764–1772)","An-ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man-en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","Meiji","Taishō","Shōwa","Heisei"],long:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tempyō (729–749)","Tempyō-kampō (749–749)","Tempyō-shōhō (749–757)","Tempyō-hōji (757–765)","Temphō-jingo (765–767)","Jingo-keiun (767–770)","Hōki (770–780)","Ten-ō (781–782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saiko (854–857)","Tennan (857–859)","Jōgan (859–877)","Genkei (877–885)","Ninna (885–889)","Kampyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Shōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten-en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Ei-en (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eiho (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kaho (1094–1096)","Eichō (1096–1097)","Shōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110–1113)","Eikyū (1113–1118)","Gen-ei (1118–1120)","Hoan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hoen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Tenyō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hogen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin-an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryuku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken-ei (1206–1207)","Shōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Shōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tempuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En-ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun-ō (1260–1261)","Kōchō (1261–1264)","Bun-ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkei (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkyō (1321–1324)","Shōchū (1324–1326)","Kareki (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kemmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun-an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenmon (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genwa (1615–1624)","Kan-ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Shōō (1652–1655)","Meiryaku (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenwa (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan-en (1748–1751)","Hōryaku (1751–1764)","Meiwa (1764–1772)","An-ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man-en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","Meiji","Taishō","Shōwa","Heisei"]},dayPeriods:{am:"fm",pm:"em"}},persian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["farvardin","ordibehesht","khordād","tir","mordād","shahrivar","mehr","ābān","āzar","dey","bahman","esfand"],long:["farvardin","ordibehesht","khordād","tir","mordād","shahrivar","mehr","ābān","āzar","dey","bahman","esfand"]},days:{narrow:["S","M","T","O","T","F","L"],short:["sön","mån","tis","ons","tors","fre","lör"],long:["söndag","måndag","tisdag","onsdag","torsdag","fredag","lördag"]},eras:{narrow:["AP"],short:["AP"],long:["AP"]},dayPeriods:{am:"fm",pm:"em"}},roc:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["jan.","feb.","mars","apr.","maj","juni","juli","aug.","sep.","okt.","nov.","dec."],long:["januari","februari","mars","april","maj","juni","juli","augusti","september","oktober","november","december"]},days:{narrow:["S","M","T","O","T","F","L"],short:["sön","mån","tis","ons","tors","fre","lör"],long:["söndag","måndag","tisdag","onsdag","torsdag","fredag","lördag"]},eras:{narrow:["före R.K.","R.K."],short:["före R.K.","R.K."],long:["före R.K.","R.K."]},dayPeriods:{am:"fm",pm:"em"}}}},number:{nu:["latn"],patterns:{decimal:{positivePattern:"{number}",negativePattern:"{minusSign}{number}"},currency:{positivePattern:"{number} {currency}",negativePattern:"{minusSign}{number} {currency}"},percent:{positivePattern:"{number} {percentSign}",negativePattern:"{minusSign}{number} {percentSign}"}},symbols:{latn:{decimal:",",group:" ",nan:"¤¤¤",plusSign:"+",minusSign:"−",percentSign:"%",infinity:"∞"}},currencies:{BBD:"Bds$",BMD:"BM$",BRL:"BR$",BSD:"BS$",BZD:"BZ$",CAD:"CA$",DKK:"Dkr",DOP:"RD$",EEK:"Ekr",EGP:"EG£",EUR:"€",ILS:"₪",ISK:"Ikr",JMD:"JM$",MXN:"MX$",NOK:"Nkr",SEK:"kr",USD:"US$",XAF:"FCFA",XCD:"EC$",XOF:"CFA",XPF:"CFPF"}}});

/***/ }),

/***/ "./node_modules/intl/locale-data/jsonp/th.js":
/*!***************************************************!*\
  !*** ./node_modules/intl/locale-data/jsonp/th.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

IntlPolyfill.__addLocaleData({locale:"th",date:{ca:["gregory","buddhist","chinese","coptic","dangi","ethioaa","ethiopic","generic","hebrew","indian","islamic","islamicc","japanese","persian","roc"],hourNo0:true,hour12:false,formats:{short:"{1} {0}",medium:"{1} {0}",full:"{1} {0}",long:"{1} {0}",availableFormats:{"d":"d","E":"ccc",Ed:"E d",Ehm:"E h:mm a",EHm:"E HH:mm น.",Ehms:"E h:mm:ss a",EHms:"E HH:mm:ss",Gy:"G y",GyMMM:"MMM G y",GyMMMd:"d MMM G y",GyMMMEd:"E d MMM G y",GyMMMEEEEd:"EEEEที่ d MMM G y","h":"h a","H":"HH",hm:"h:mm a",Hm:"HH:mm น.",hms:"h:mm:ss a",Hms:"HH:mm:ss",hmsv:"h:mm:ss a v",Hmsv:"HH:mm:ss v",hmv:"h:mm a v",Hmv:"HH:mm v","M":"L",Md:"d/M",MEd:"E d/M",MMM:"LLL",MMMd:"d MMM",MMMEd:"E d MMM",MMMEEEEd:"EEEEที่ d MMM",MMMMd:"d MMMM",MMMMEd:"E d MMMM",MMMMEEEEd:"EEEEที่ d MMMM",mmss:"mm:ss",ms:"mm:ss","y":"y",yM:"M/y",yMd:"d/M/y",yMEd:"E d/M/y",yMMM:"MMM y",yMMMd:"d MMM y",yMMMEd:"E d MMM y",yMMMEEEEd:"EEEEที่ d MMM y",yMMMM:"MMMM G y",yMMMMd:"d MMMM G y",yMMMMEd:"E d MMMM G y",yMMMMEEEEd:"EEEEที่ d MMMM G y",yQQQ:"QQQ y",yQQQQ:"QQQQ G y"},dateFormats:{yMMMMEEEEd:"EEEEที่ d MMMM G y",yMMMMd:"d MMMM G y",yMMMd:"d MMM y",yMd:"d/M/yy"},timeFormats:{hmmsszzzz:"H นาฬิกา mm นาที ss วินาที zzzz",hmsz:"H นาฬิกา mm นาที ss วินาที z",hms:"HH:mm:ss",hm:"HH:mm"}},calendars:{buddhist:{months:{narrow:["ม.ค.","ก.พ.","มี.ค.","เม.ย.","พ.ค.","มิ.ย.","ก.ค.","ส.ค.","ก.ย.","ต.ค.","พ.ย.","ธ.ค."],short:["ม.ค.","ก.พ.","มี.ค.","เม.ย.","พ.ค.","มิ.ย.","ก.ค.","ส.ค.","ก.ย.","ต.ค.","พ.ย.","ธ.ค."],long:["มกราคม","กุมภาพันธ์","มีนาคม","เมษายน","พฤษภาคม","มิถุนายน","กรกฎาคม","สิงหาคม","กันยายน","ตุลาคม","พฤศจิกายน","ธันวาคม"]},days:{narrow:["อา","จ","อ","พ","พฤ","ศ","ส"],short:["อา.","จ.","อ.","พ.","พฤ.","ศ.","ส."],long:["วันอาทิตย์","วันจันทร์","วันอังคาร","วันพุธ","วันพฤหัสบดี","วันศุกร์","วันเสาร์"]},eras:{narrow:["พ.ศ."],short:["พ.ศ."],long:["พุทธศักราช"]},dayPeriods:{am:"ก่อนเที่ยง",pm:"หลังเที่ยง"}},chinese:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["1","2","3","4","5","6","7","8","9","10","11","12"],long:["1","2","3","4","5","6","7","8","9","10","11","12"]},days:{narrow:["อา","จ","อ","พ","พฤ","ศ","ส"],short:["อา.","จ.","อ.","พ.","พฤ.","ศ.","ส."],long:["วันอาทิตย์","วันจันทร์","วันอังคาร","วันพุธ","วันพฤหัสบดี","วันศุกร์","วันเสาร์"]},dayPeriods:{am:"ก่อนเที่ยง",pm:"หลังเที่ยง"}},coptic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["เทาท์","บาบา","ฮาเทอร์","เคียฟ","โทบา","อัมเชอร์","บารัมฮัท","บาราเมาดา","บาชันส์","พาโอนา","อีเปป","เมสรา","นาซี"],long:["เทาท์","บาบา","ฮาเทอร์","เคียฟ","โทบา","อัมเชอร์","บารัมฮัท","บาราเมาดา","บาชันส์","พาโอนา","อีเปป","เมสรา","นาซี"]},days:{narrow:["อา","จ","อ","พ","พฤ","ศ","ส"],short:["อา.","จ.","อ.","พ.","พฤ.","ศ.","ส."],long:["วันอาทิตย์","วันจันทร์","วันอังคาร","วันพุธ","วันพฤหัสบดี","วันศุกร์","วันเสาร์"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"ก่อนเที่ยง",pm:"หลังเที่ยง"}},dangi:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["1","2","3","4","5","6","7","8","9","10","11","12"],long:["1","2","3","4","5","6","7","8","9","10","11","12"]},days:{narrow:["อา","จ","อ","พ","พฤ","ศ","ส"],short:["อา.","จ.","อ.","พ.","พฤ.","ศ.","ส."],long:["วันอาทิตย์","วันจันทร์","วันอังคาร","วันพุธ","วันพฤหัสบดี","วันศุกร์","วันเสาร์"]},dayPeriods:{am:"ก่อนเที่ยง",pm:"หลังเที่ยง"}},ethiopic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["เมสเคอเรม","เตเกมท","เฮดาร์","ทาฮ์ซัส","เทอร์","เยคาทิท","เมกาบิต","เมียเซีย","เจนบอต","เซเน","ฮัมเล","เนแฮซ","พากูเมน"],long:["เมสเคอเรม","เตเกมท","เฮดาร์","ทาฮ์ซัส","เทอร์","เยคาทิท","เมกาบิต","เมียเซีย","เจนบอต","เซเน","ฮัมเล","เนแฮซ","พากูเมน"]},days:{narrow:["อา","จ","อ","พ","พฤ","ศ","ส"],short:["อา.","จ.","อ.","พ.","พฤ.","ศ.","ส."],long:["วันอาทิตย์","วันจันทร์","วันอังคาร","วันพุธ","วันพฤหัสบดี","วันศุกร์","วันเสาร์"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"ก่อนเที่ยง",pm:"หลังเที่ยง"}},ethioaa:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["เมสเคอเรม","เตเกมท","เฮดาร์","ทาฮ์ซัส","เทอร์","เยคาทิท","เมกาบิต","เมียเซีย","เจนบอต","เซเน","ฮัมเล","เนแฮซ","พากูเมน"],long:["เมสเคอเรม","เตเกมท","เฮดาร์","ทาฮ์ซัส","เทอร์","เยคาทิท","เมกาบิต","เมียเซีย","เจนบอต","เซเน","ฮัมเล","เนแฮซ","พากูเมน"]},days:{narrow:["อา","จ","อ","พ","พฤ","ศ","ส"],short:["อา.","จ.","อ.","พ.","พฤ.","ศ.","ส."],long:["วันอาทิตย์","วันจันทร์","วันอังคาร","วันพุธ","วันพฤหัสบดี","วันศุกร์","วันเสาร์"]},eras:{narrow:["ERA0"],short:["ERA0"],long:["ERA0"]},dayPeriods:{am:"ก่อนเที่ยง",pm:"หลังเที่ยง"}},generic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"],long:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"]},days:{narrow:["อา","จ","อ","พ","พฤ","ศ","ส"],short:["อา.","จ.","อ.","พ.","พฤ.","ศ.","ส."],long:["วันอาทิตย์","วันจันทร์","วันอังคาร","วันพุธ","วันพฤหัสบดี","วันศุกร์","วันเสาร์"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"ก่อนเที่ยง",pm:"หลังเที่ยง"}},gregory:{months:{narrow:["ม.ค.","ก.พ.","มี.ค.","เม.ย.","พ.ค.","มิ.ย.","ก.ค.","ส.ค.","ก.ย.","ต.ค.","พ.ย.","ธ.ค."],short:["ม.ค.","ก.พ.","มี.ค.","เม.ย.","พ.ค.","มิ.ย.","ก.ค.","ส.ค.","ก.ย.","ต.ค.","พ.ย.","ธ.ค."],long:["มกราคม","กุมภาพันธ์","มีนาคม","เมษายน","พฤษภาคม","มิถุนายน","กรกฎาคม","สิงหาคม","กันยายน","ตุลาคม","พฤศจิกายน","ธันวาคม"]},days:{narrow:["อา","จ","อ","พ","พฤ","ศ","ส"],short:["อา.","จ.","อ.","พ.","พฤ.","ศ.","ส."],long:["วันอาทิตย์","วันจันทร์","วันอังคาร","วันพุธ","วันพฤหัสบดี","วันศุกร์","วันเสาร์"]},eras:{narrow:["ก่อน ค.ศ.","ค.ศ.","ก.ส.ศ.","ส.ศ."],short:["ปีก่อน ค.ศ.","ค.ศ.","ก.ส.ศ.","ส.ศ."],long:["ปีก่อนคริสต์ศักราช","คริสต์ศักราช","ก่อนสามัญศักราช","สามัญศักราช"]},dayPeriods:{am:"ก่อนเที่ยง",pm:"หลังเที่ยง"}},hebrew:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13","7"],short:["ทิชรี","เฮวาน","กีสเลฟ","เตเวต","เชวัต","อาดาร์ I","อาดาร์","นิสซาน","อิยาร์","สีวัน","ตามูซ","อัฟ","เอลอุล","อาดาร์ II"],long:["ทิชรี","เฮวาน","กีสเลฟ","เตเวต","เชวัต","อาดาร์ I","อาดาร์","นิสซาน","อิยาร์","สีวัน","ตามูซ","อัฟ","เอลอุล","อาดาร์ II"]},days:{narrow:["อา","จ","อ","พ","พฤ","ศ","ส"],short:["อา.","จ.","อ.","พ.","พฤ.","ศ.","ส."],long:["วันอาทิตย์","วันจันทร์","วันอังคาร","วันพุธ","วันพฤหัสบดี","วันศุกร์","วันเสาร์"]},eras:{narrow:["ย.ศ."],short:["ย.ศ."],long:["ย.ศ."]},dayPeriods:{am:"ก่อนเที่ยง",pm:"หลังเที่ยง"}},indian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["จิตรา","วิสาขา","เชษฐา","อัษฎา","ศรวณา","พัตรา","อัศวิชา","การติกา","มฤคศิรา","ปุษยา","มาฆะ","ผลคุณี"],long:["จิตรา","วิสาขา","เชษฐา","อัษฎา","ศรวณา","พัตรา","อัศวิชา","การติกา","มฤคศิรา","ปุษยา","มาฆะ","ผลคุณี"]},days:{narrow:["อา","จ","อ","พ","พฤ","ศ","ส"],short:["อา.","จ.","อ.","พ.","พฤ.","ศ.","ส."],long:["วันอาทิตย์","วันจันทร์","วันอังคาร","วันพุธ","วันพฤหัสบดี","วันศุกร์","วันเสาร์"]},eras:{narrow:["ม.ศ."],short:["ม.ศ."],long:["ม.ศ."]},dayPeriods:{am:"ก่อนเที่ยง",pm:"หลังเที่ยง"}},islamic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["มุฮัร.","เศาะ.","รอบี I","รอบี II","จุมาดา I","จุมาดา II","เราะ.","ชะอ์.","เราะมะ.","เชาว.","ซุลกิอฺ.","ซุลหิจ."],long:["มุฮะร์รอม","ซอฟาร์","รอบี I","รอบี II","จุมาดา I","จุมาดา II","รอจับ","ชะอะบาน","รอมะดอน","เชาวัล","ซุลกิอฺดะฮฺ","ซุลหิจญะฮฺ"]},days:{narrow:["อา","จ","อ","พ","พฤ","ศ","ส"],short:["อา.","จ.","อ.","พ.","พฤ.","ศ.","ส."],long:["วันอาทิตย์","วันจันทร์","วันอังคาร","วันพุธ","วันพฤหัสบดี","วันศุกร์","วันเสาร์"]},eras:{narrow:["ฮ.ศ."],short:["ฮ.ศ."],long:["ฮิจเราะห์ศักราช"]},dayPeriods:{am:"ก่อนเที่ยง",pm:"หลังเที่ยง"}},islamicc:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["มุฮัร.","เศาะ.","รอบี I","รอบี II","จุมาดา I","จุมาดา II","เราะ.","ชะอ์.","เราะมะ.","เชาว.","ซุลกิอฺ.","ซุลหิจ."],long:["มุฮะร์รอม","ซอฟาร์","รอบี I","รอบี II","จุมาดา I","จุมาดา II","รอจับ","ชะอะบาน","รอมะดอน","เชาวัล","ซุลกิอฺดะฮฺ","ซุลหิจญะฮฺ"]},days:{narrow:["อา","จ","อ","พ","พฤ","ศ","ส"],short:["อา.","จ.","อ.","พ.","พฤ.","ศ.","ส."],long:["วันอาทิตย์","วันจันทร์","วันอังคาร","วันพุธ","วันพฤหัสบดี","วันศุกร์","วันเสาร์"]},eras:{narrow:["ฮ.ศ."],short:["ฮ.ศ."],long:["ฮิจเราะห์ศักราช"]},dayPeriods:{am:"ก่อนเที่ยง",pm:"หลังเที่ยง"}},japanese:{months:{narrow:["ม.ค.","ก.พ.","มี.ค.","เม.ย.","พ.ค.","มิ.ย.","ก.ค.","ส.ค.","ก.ย.","ต.ค.","พ.ย.","ธ.ค."],short:["ม.ค.","ก.พ.","มี.ค.","เม.ย.","พ.ค.","มิ.ย.","ก.ค.","ส.ค.","ก.ย.","ต.ค.","พ.ย.","ธ.ค."],long:["มกราคม","กุมภาพันธ์","มีนาคม","เมษายน","พฤษภาคม","มิถุนายน","กรกฎาคม","สิงหาคม","กันยายน","ตุลาคม","พฤศจิกายน","ธันวาคม"]},days:{narrow:["อา","จ","อ","พ","พฤ","ศ","ส"],short:["อา.","จ.","อ.","พ.","พฤ.","ศ.","ส."],long:["วันอาทิตย์","วันจันทร์","วันอังคาร","วันพุธ","วันพฤหัสบดี","วันศุกร์","วันเสาร์"]},eras:{narrow:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","M","T","S","H"],short:["ทะอิกะ (645–650)","ฮะกุชิ (650–671)","ฮากุโฮ (672–686)","ชุโช (686–701)","ทะอิโฮ (701–704)","เคอุง (704–708)","วะโด (708–715)","เรกิ (715–717)","โยโร (717–724)","จิงกิ (724–729)","เท็มเพียว (729–749)","เท็มเพียว-คัมโป (749-749)","เท็มเพียว-โชโฮ (749-757)","เท็มเพียว-โฮจิ (757-765)","เท็มเพียว-จิงโงะ (765-767)","จิงโงะ-เคอุง (767-770)","โฮกิ (770–780)","เท็นโอ (781–782)","เอ็นเรียะกุ (782–806)","ดะอิโด (806–810)","โคนิง (810–824)","เท็นโช (824–834)","โชวะ (834–848)","คะโจ (848–851)","นินจุ (851–854)","ซะอิโกะ (854–857)","เท็นนัง (857–859)","โจงัง (859–877)","เก็งเก (877–885)","นินนะ (885–889)","คัมเพียว (889–898)","โชตะอิ (898–901)","เอ็งงิ (901–923)","เอ็นโช (923–931)","โชเฮ (931–938)","เท็งเงียว (938–947)","เท็นเรียะกุ (947–957)","เท็นโตะกุ (957–961)","โอวะ (961–964)","โคโฮ (964–968)","อันนะ (968–970)","เท็นโระกุ (970–973)","เท็นเอ็ง (973–976)","โจเง็ง (976–978)","เท็งเง็ง (978–983)","เอกัง (983–985)","คันนะ (985–987)","เอเอ็ง (987–989)","เอโซ (989–990)","โชเรียะกุ (990–995)","โชโตะกุ (995–999)","โชโฮ (999–1004)","คันโก (1004–1012)","โชวะ (1012–1017)","คันนิง (1017–1021)","จิอัง (1021–1024)","มันจุ (1024–1028)","โชเง็ง (1028–1037)","โชเรียะกุ (1037–1040)","โชคีว (1040–1044)","คันโตะกุ (1044–1046)","เอโช (1046–1053)","เท็งงิ (1053–1058)","โคเฮ (1058–1065)","จิเรียะกุ (1065–1069)","เอ็งคีว (1069–1074)","โชโฮ (1074–1077)","โชเรียะกุ (1077–1081)","เอโฮะ (1081–1084)","โอโตะกุ (1084–1087)","คันจิ (1087–1094)","คะโฮะ (1094–1096)","เอโช (1096–1097)","โชโตะกุ (1097–1099)","โควะ (1099–1104)","โชจิ (1104–1106)","คะโช (1106–1108)","เท็นนิง (1108–1110)","เท็นเอ (1110–1113)","เอกีว (1113–1118)","เก็นเอ (1118–1120)","โฮะอัง (1120–1124)","เท็นจิ (1124–1126)","ดะอิจิ (1126–1131)","เท็นโช (1131–1132)","โชโช (1132–1135)","โฮะเอ็ง (1135–1141)","เอจิ (1141–1142)","โคจิ (1142–1144)","เท็นโย (1144–1145)","คีวอัง (1145–1151)","นิมเป (1151–1154)","คีวจุ (1154–1156)","โฮะเง็ง (1156–1159)","เฮจิ (1159–1160)","เอเรียะกุ (1160–1161)","โอโฮ (1161–1163)","โชกัง (1163–1165)","เอมัง (1165–1166)","นินอัง (1166–1169)","คะโอ (1169–1171)","โชอัง (1171–1175)","อังเง็ง (1175–1177)","จิโช (1177–1181)","โยวะ (1181–1182)","จุเอ (1182–1184)","เก็นเรียะกุ (1184–1185)","บุนจิ (1185–1190)","เค็งกีว (1190–1199)","โชจิ (1199–1201)","เค็นนิง (1201–1204)","เก็งกีว (1204–1206)","เค็นเอ (1206–1207)","โชเก็ง (1207–1211)","เค็นเรียะกุ (1211–1213)","เค็มโป (1213–1219)","โชกีว (1219–1222)","โจโอ (1222–1224)","เก็นนิง (1224–1225)","คะโระกุ (1225–1227)","อันเต (1227–1229)","คังกิ (1229–1232)","โจเอ (1232–1233)","เท็มปุกุ (1233–1234)","บุนเรียะกุ (1234–1235)","คะเต (1235–1238)","เรียะกุนิง (1238–1239)","เอ็นโอ (1239–1240)","นินจิ (1240–1243)","คังเง็ง (1243–1247)","โฮจิ (1247–1249)","เค็นโช (1249–1256)","โคเง็ง (1256–1257)","โชกะ (1257–1259)","โชเง็ง (1259–1260)","บุนโอ (1260–1261)","โคโช (1261–1264)","บุนเอ (1264–1275)","เค็นจิ (1275–1278)","โคอัง (1278–1288)","โชโอ (1288–1293)","เอนิง (1293–1299)","โชอัง (1299–1302)","เค็งเง็ง (1302–1303)","คะเง็ง (1303–1306)","โทะกุจิ (1306–1308)","เอ็งเก (1308–1311)","โอโช (1311–1312)","โชวะ (1312–1317)","บุมโป (1317–1319)","เก็นโอ (1319–1321)","เก็งเกียว (1321–1324)","โชชู (1324–1326)","คะเระกิ (1326–1329)","เก็นโตะกุ (1329–1331)","เก็งโก (1331–1334)","เค็มมุ (1334–1336)","เอ็งเง็ง (1336–1340)","โคโกะกุ (1340–1346)","โชเฮ (1346–1370)","เค็นโตะกุ (1370–1372)","บุนชู (1372–1375)","เท็นจุ (1375–1379)","โคเรียะกุ (1379–1381)","โควะ (1381–1384)","เก็นชู (1384–1392)","เมโตะกุ (1384–1387)","คะเค (1387–1389)","โคโอ (1389–1390)","เมโตะกุ (1390–1394)","โอเอ (1394–1428)","โชโช (1428–1429)","เอเกียว (1429–1441)","คะกิสึ (1441–1444)","บุนอัง (1444–1449)","โฮโตะกุ (1449–1452)","เคียวโตะกุ (1452–1455)","โคโช (1455–1457)","โชโระกุ (1457–1460)","คันโช (1460–1466)","บุนโช (1466–1467)","โอนิง (1467–1469)","บุมเม (1469–1487)","โชเกียว (1487–1489)","เอ็นโตะกุ (1489–1492)","เมโอ (1492–1501)","บุงกิ (1501–1504)","เอโช (1504–1521)","ทะอิเอ (1521–1528)","เคียวโระกุ (1528–1532)","เท็มมน (1532–1555)","โคจิ (1555–1558)","เอโระกุ (1558–1570)","เก็งกิ (1570–1573)","เท็นโช (1573–1592)","บุนโระกุ (1592–1596)","เคโช (1596–1615)","เก็งวะ (1615–1624)","คันเอ (1624–1644)","โชโฮ (1644–1648)","เคอัง (1648–1652)","โชโอ (1652–1655)","เมเรียะกุ (1655–1658)","มันจิ (1658–1661)","คัมบุง (1661–1673)","เอ็มโป (1673–1681)","เท็นวะ (1681–1684)","โจเกียว (1684–1688)","เก็นโระกุ (1688–1704)","โฮเอ (1704–1711)","โชโตะกุ (1711–1716)","เคียวโฮ (1716–1736)","เก็มบุง (1736–1741)","คัมโป (1741–1744)","เอ็งเกียว (1744–1748)","คันเอ็ง (1748–1751)","โฮเรียะกุ (1751–1764)","เมวะ (1764–1772)","อันเอ (1772–1781)","เท็มเม (1781–1789)","คันเซ (1789–1801)","เคียววะ (1801–1804)","บุงกะ (1804–1818)","บุนเซ (1818–1830)","เท็มโป (1830–1844)","โคกะ (1844–1848)","คะเอ (1848–1854)","อันเซ (1854–1860)","มันเอ็ง (1860–1861)","บุงกีว (1861–1864)","เก็นจิ (1864–1865)","เคโอ (1865–1868)","เมจิ","ทะอิโช","โชวะ","เฮเซ"],long:["ทะอิกะ (645–650)","ฮะกุชิ (650–671)","ฮากุโฮ (672–686)","ชุโช (686–701)","ทะอิโฮ (701–704)","เคอุง (704–708)","วะโด (708–715)","เรกิ (715–717)","โยโร (717–724)","จิงกิ (724–729)","เท็มเพียว (729–749)","เท็มเพียว-คัมโป (749-749)","เท็มเพียว-โชโฮ (749-757)","เท็มเพียว-โฮจิ (757-765)","เท็มเพียว-จิงโงะ (765-767)","จิงโงะ-เคอุง (767-770)","โฮกิ (770–780)","เท็นโอ (781–782)","เอ็นเรียะกุ (782–806)","ดะอิโด (806–810)","โคนิง (810–824)","เท็นโช (824–834)","โชวะ (834–848)","คะโจ (848–851)","นินจุ (851–854)","ซะอิโกะ (854–857)","เท็นนัง (857–859)","โจงัง (859–877)","เก็งเก (877–885)","นินนะ (885–889)","คัมเพียว (889–898)","โชตะอิ (898–901)","เอ็งงิ (901–923)","เอ็นโช (923–931)","โชเฮ (931–938)","เท็งเงียว (938–947)","เท็นเรียะกุ (947–957)","เท็นโตะกุ (957–961)","โอวะ (961–964)","โคโฮ (964–968)","อันนะ (968–970)","เท็นโระกุ (970–973)","เท็นเอ็ง (973–976)","โจเง็ง (976–978)","เท็งเง็ง (978–983)","เอกัง (983–985)","คันนะ (985–987)","เอเอ็ง (987–989)","เอโซ (989–990)","โชเรียะกุ (990–995)","โชโตะกุ (995–999)","โชโฮ (999–1004)","คันโก (1004–1012)","โชวะ (1012–1017)","คันนิง (1017–1021)","จิอัง (1021–1024)","มันจุ (1024–1028)","โชเง็ง (1028–1037)","โชเรียะกุ (1037–1040)","โชคีว (1040–1044)","คันโตะกุ (1044–1046)","เอโช (1046–1053)","เท็งงิ (1053–1058)","โคเฮ (1058–1065)","จิเรียะกุ (1065–1069)","เอ็งคีว (1069–1074)","โชโฮ (1074–1077)","โชเรียะกุ (1077–1081)","เอโฮะ (1081–1084)","โอโตะกุ (1084–1087)","คันจิ (1087–1094)","คะโฮะ (1094–1096)","เอโช (1096–1097)","โชโตะกุ (1097–1099)","โควะ (1099–1104)","โชจิ (1104–1106)","คะโช (1106–1108)","เท็นนิง (1108–1110)","เท็นเอ (1110–1113)","เอกีว (1113–1118)","เก็นเอ (1118–1120)","โฮะอัง (1120–1124)","เท็นจิ (1124–1126)","ดะอิจิ (1126–1131)","เท็นโช (1131–1132)","โชโช (1132–1135)","โฮะเอ็ง (1135–1141)","เอจิ (1141–1142)","โคจิ (1142–1144)","เท็นโย (1144–1145)","คีวอัง (1145–1151)","นิมเป (1151–1154)","คีวจุ (1154–1156)","โฮะเง็ง (1156–1159)","เฮจิ (1159–1160)","เอเรียะกุ (1160–1161)","โอโฮ (1161–1163)","โชกัง (1163–1165)","เอมัง (1165–1166)","นินอัง (1166–1169)","คะโอ (1169–1171)","โชอัง (1171–1175)","อังเง็ง (1175–1177)","จิโช (1177–1181)","โยวะ (1181–1182)","จุเอ (1182–1184)","เก็นเรียะกุ (1184–1185)","บุนจิ (1185–1190)","เค็งกีว (1190–1199)","โชจิ (1199–1201)","เค็นนิง (1201–1204)","เก็งกีว (1204–1206)","เค็นเอ (1206–1207)","โชเก็ง (1207–1211)","เค็นเรียะกุ (1211–1213)","เค็มโป (1213–1219)","โชกีว (1219–1222)","โจโอ (1222–1224)","เก็นนิง (1224–1225)","คะโระกุ (1225–1227)","อันเต (1227–1229)","คังกิ (1229–1232)","โจเอ (1232–1233)","เท็มปุกุ (1233–1234)","บุนเรียะกุ (1234–1235)","คะเต (1235–1238)","เรียะกุนิง (1238–1239)","เอ็นโอ (1239–1240)","นินจิ (1240–1243)","คังเง็ง (1243–1247)","โฮจิ (1247–1249)","เค็นโช (1249–1256)","โคเง็ง (1256–1257)","โชกะ (1257–1259)","โชเง็ง (1259–1260)","บุนโอ (1260–1261)","โคโช (1261–1264)","บุนเอ (1264–1275)","เค็นจิ (1275–1278)","โคอัง (1278–1288)","โชโอ (1288–1293)","เอนิง (1293–1299)","โชอัง (1299–1302)","เค็งเง็ง (1302–1303)","คะเง็ง (1303–1306)","โทะกุจิ (1306–1308)","เอ็งเก (1308–1311)","โอโช (1311–1312)","โชวะ (1312–1317)","บุมโป (1317–1319)","เก็นโอ (1319–1321)","เก็งเกียว (1321–1324)","โชชู (1324–1326)","คะเระกิ (1326–1329)","เก็นโตะกุ (1329–1331)","เก็งโก (1331–1334)","เค็มมุ (1334–1336)","เอ็งเง็ง (1336–1340)","โคโกะกุ (1340–1346)","โชเฮ (1346–1370)","เค็นโตะกุ (1370–1372)","บุนชู (1372–1375)","เท็นจุ (1375–1379)","โคเรียะกุ (1379–1381)","โควะ (1381–1384)","เก็นชู (1384–1392)","เมโตะกุ (1384–1387)","คะเค (1387–1389)","โคโอ (1389–1390)","เมโตะกุ (1390–1394)","โอเอ (1394–1428)","โชโช (1428–1429)","เอเกียว (1429–1441)","คะกิสึ (1441–1444)","บุนอัง (1444–1449)","โฮโตะกุ (1449–1452)","เคียวโตะกุ (1452–1455)","โคโช (1455–1457)","โชโระกุ (1457–1460)","คันโช (1460–1466)","บุนโช (1466–1467)","โอนิง (1467–1469)","บุมเม (1469–1487)","โชเกียว (1487–1489)","เอ็นโตะกุ (1489–1492)","เมโอ (1492–1501)","บุงกิ (1501–1504)","เอโช (1504–1521)","ทะอิเอ (1521–1528)","เคียวโระกุ (1528–1532)","เท็มมน (1532–1555)","โคจิ (1555–1558)","เอโระกุ (1558–1570)","เก็งกิ (1570–1573)","เท็นโช (1573–1592)","บุนโระกุ (1592–1596)","เคโช (1596–1615)","เก็งวะ (1615–1624)","คันเอ (1624–1644)","โชโฮ (1644–1648)","เคอัง (1648–1652)","โชโอ (1652–1655)","เมเรียะกุ (1655–1658)","มันจิ (1658–1661)","คัมบุง (1661–1673)","เอ็มโป (1673–1681)","เท็นวะ (1681–1684)","โจเกียว (1684–1688)","เก็นโระกุ (1688–1704)","โฮเอ (1704–1711)","โชโตะกุ (1711–1716)","เคียวโฮ (1716–1736)","เก็มบุง (1736–1741)","คัมโป (1741–1744)","เอ็งเกียว (1744–1748)","คันเอ็ง (1748–1751)","โฮเรียะกุ (1751–1764)","เมวะ (1764–1772)","อันเอ (1772–1781)","เท็มเม (1781–1789)","คันเซ (1789–1801)","เคียววะ (1801–1804)","บุงกะ (1804–1818)","บุนเซ (1818–1830)","เท็มโป (1830–1844)","โคกะ (1844–1848)","คะเอ (1848–1854)","อันเซ (1854–1860)","มันเอ็ง (1860–1861)","บุงกีว (1861–1864)","เก็นจิ (1864–1865)","เคโอ (1865–1868)","เมจิ","ทะอิโช","โชวะ","เฮเซ"]},dayPeriods:{am:"ก่อนเที่ยง",pm:"หลังเที่ยง"}},persian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["ฟาร์วาร์ดิน","ออร์ดิเบเฮชต์","คอร์แดด","เตอร์","มอร์แดด","ชาหริวาร์","เมฮร์","อะบาน","อะซาร์","เดย์","บาฮ์มาน","เอสฟานด์"],long:["ฟาร์วาร์ดิน","ออร์ดิเบเฮชต์","คอร์แดด","เตอร์","มอร์แดด","ชาหริวาร์","เมฮร์","อะบาน","อะซาร์","เดย์","บาฮ์มาน","เอสฟานด์"]},days:{narrow:["อา","จ","อ","พ","พฤ","ศ","ส"],short:["อา.","จ.","อ.","พ.","พฤ.","ศ.","ส."],long:["วันอาทิตย์","วันจันทร์","วันอังคาร","วันพุธ","วันพฤหัสบดี","วันศุกร์","วันเสาร์"]},eras:{narrow:["ปีเปอร์เซีย"],short:["ปีเปอร์เซีย"],long:["ปีเปอร์เซีย"]},dayPeriods:{am:"ก่อนเที่ยง",pm:"หลังเที่ยง"}},roc:{months:{narrow:["ม.ค.","ก.พ.","มี.ค.","เม.ย.","พ.ค.","มิ.ย.","ก.ค.","ส.ค.","ก.ย.","ต.ค.","พ.ย.","ธ.ค."],short:["ม.ค.","ก.พ.","มี.ค.","เม.ย.","พ.ค.","มิ.ย.","ก.ค.","ส.ค.","ก.ย.","ต.ค.","พ.ย.","ธ.ค."],long:["มกราคม","กุมภาพันธ์","มีนาคม","เมษายน","พฤษภาคม","มิถุนายน","กรกฎาคม","สิงหาคม","กันยายน","ตุลาคม","พฤศจิกายน","ธันวาคม"]},days:{narrow:["อา","จ","อ","พ","พฤ","ศ","ส"],short:["อา.","จ.","อ.","พ.","พฤ.","ศ.","ส."],long:["วันอาทิตย์","วันจันทร์","วันอังคาร","วันพุธ","วันพฤหัสบดี","วันศุกร์","วันเสาร์"]},eras:{narrow:["ปีก่อนไต้หวัน","ไต้หวัน"],short:["ปีก่อนไต้หวัน","ไต้หวัน"],long:["ปีก่อนไต้หวัน","ไต้หวัน"]},dayPeriods:{am:"ก่อนเที่ยง",pm:"หลังเที่ยง"}}}},number:{nu:["latn"],patterns:{decimal:{positivePattern:"{number}",negativePattern:"{minusSign}{number}"},currency:{positivePattern:"{currency}{number}",negativePattern:"{minusSign}{currency}{number}"},percent:{positivePattern:"{number}{percentSign}",negativePattern:"{minusSign}{number}{percentSign}"}},symbols:{latn:{decimal:".",group:",",nan:"NaN",plusSign:"+",minusSign:"-",percentSign:"%",infinity:"∞"},thai:{decimal:".",group:",",nan:"NaN",plusSign:"+",minusSign:"-",percentSign:"%",infinity:"∞"}},currencies:{AUD:"AU$",BRL:"R$",CAD:"CA$",CNY:"CN¥",EUR:"€",GBP:"£",HKD:"HK$",ILS:"₪",INR:"₹",JPY:"¥",KRW:"₩",MXN:"MX$",NZD:"NZ$",TWD:"NT$",USD:"US$",VND:"₫",XAF:"FCFA",XCD:"EC$",XOF:"CFA",XPF:"CFPF"}}});

/***/ }),

/***/ "./node_modules/intl/locale-data/jsonp/zh.js":
/*!***************************************************!*\
  !*** ./node_modules/intl/locale-data/jsonp/zh.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

IntlPolyfill.__addLocaleData({locale:"zh",date:{ca:["gregory","buddhist","chinese","coptic","dangi","ethioaa","ethiopic","generic","hebrew","indian","islamic","islamicc","japanese","persian","roc"],hourNo0:true,hour12:true,formats:{short:"{1} {0}",medium:"{1} {0}",full:"{1} {0}",long:"{1} {0}",availableFormats:{"d":"d日","E":"ccc",Ed:"d日E",Ehm:"E ah:mm",EHm:"EHH:mm",Ehms:"E ah:mm:ss",EHms:"EHH:mm:ss",Gy:"Gy年",GyMMM:"Gy年M月",GyMMMd:"Gy年M月d日",GyMMMEd:"Gy年M月d日E","h":"ah时","H":"H时",hm:"ah:mm",Hm:"HH:mm",hms:"ah:mm:ss",Hms:"HH:mm:ss",hmsv:"v ah:mm:ss",Hmsv:"v HH:mm:ss",hmv:"v ah:mm",Hmv:"v HH:mm","M":"M月",Md:"M/d",MEd:"M/dE",MMdd:"MM/dd",MMM:"LLL",MMMd:"M月d日",MMMEd:"M月d日E",MMMMd:"M月d日",ms:"mm:ss","y":"y年",yM:"y年M月",yMd:"y/M/d",yMEd:"y/M/dE",yMM:"y年M月",yMMM:"y年M月",yMMMd:"y年M月d日",yMMMEd:"y年M月d日E",yMMMM:"y年M月",yQQQ:"y年第Q季度",yQQQQ:"y年第Q季度"},dateFormats:{yMMMMEEEEd:"y年M月d日EEEE",yMMMMd:"y年M月d日",yMMMd:"y年M月d日",yMd:"y/M/d"},timeFormats:{hmmsszzzz:"zzzz ah:mm:ss",hmsz:"z ah:mm:ss",hms:"ah:mm:ss",hm:"ah:mm"}},calendars:{buddhist:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"],long:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]},days:{narrow:["日","一","二","三","四","五","六"],short:["周日","周一","周二","周三","周四","周五","周六"],long:["星期日","星期一","星期二","星期三","星期四","星期五","星期六"]},eras:{narrow:["佛历"],short:["佛历"],long:["佛历"]},dayPeriods:{am:"上午",pm:"下午"}},chinese:{months:{narrow:["正","二","三","四","五","六","七","八","九","十","冬","腊"],short:["正月","二月","三月","四月","五月","六月","七月","八月","九月","十月","冬月","腊月"],long:["正月","二月","三月","四月","五月","六月","七月","八月","九月","十月","冬月","腊月"]},days:{narrow:["日","一","二","三","四","五","六"],short:["周日","周一","周二","周三","周四","周五","周六"],long:["星期日","星期一","星期二","星期三","星期四","星期五","星期六"]},dayPeriods:{am:"上午",pm:"下午"}},coptic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月","13月"],long:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月","十三月"]},days:{narrow:["日","一","二","三","四","五","六"],short:["周日","周一","周二","周三","周四","周五","周六"],long:["星期日","星期一","星期二","星期三","星期四","星期五","星期六"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"上午",pm:"下午"}},dangi:{months:{narrow:["正","二","三","四","五","六","七","八","九","十","冬","腊"],short:["正月","二月","三月","四月","五月","六月","七月","八月","九月","十月","冬月","腊月"],long:["正月","二月","三月","四月","五月","六月","七月","八月","九月","十月","冬月","腊月"]},days:{narrow:["日","一","二","三","四","五","六"],short:["周日","周一","周二","周三","周四","周五","周六"],long:["星期日","星期一","星期二","星期三","星期四","星期五","星期六"]},dayPeriods:{am:"上午",pm:"下午"}},ethiopic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月","13月"],long:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月","十三月"]},days:{narrow:["日","一","二","三","四","五","六"],short:["周日","周一","周二","周三","周四","周五","周六"],long:["星期日","星期一","星期二","星期三","星期四","星期五","星期六"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"上午",pm:"下午"}},ethioaa:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月","13月"],long:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月","十三月"]},days:{narrow:["日","一","二","三","四","五","六"],short:["周日","周一","周二","周三","周四","周五","周六"],long:["星期日","星期一","星期二","星期三","星期四","星期五","星期六"]},eras:{narrow:["ERA0"],short:["ERA0"],long:["ERA0"]},dayPeriods:{am:"上午",pm:"下午"}},generic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"],long:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"]},days:{narrow:["日","一","二","三","四","五","六"],short:["周日","周一","周二","周三","周四","周五","周六"],long:["星期日","星期一","星期二","星期三","星期四","星期五","星期六"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"上午",pm:"下午"}},gregory:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"],long:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]},days:{narrow:["日","一","二","三","四","五","六"],short:["周日","周一","周二","周三","周四","周五","周六"],long:["星期日","星期一","星期二","星期三","星期四","星期五","星期六"]},eras:{narrow:["公元前","公元","西元前","西元"],short:["公元前","公元","西元前","西元"],long:["公元前","公元","西元前","西元"]},dayPeriods:{am:"上午",pm:"下午"}},hebrew:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13","7"],short:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月","13月","闰7月"],long:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月","十三月","闰七月"]},days:{narrow:["日","一","二","三","四","五","六"],short:["周日","周一","周二","周三","周四","周五","周六"],long:["星期日","星期一","星期二","星期三","星期四","星期五","星期六"]},eras:{narrow:["希伯来历"],short:["希伯来历"],long:["希伯来历"]},dayPeriods:{am:"上午",pm:"下午"}},indian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"],long:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]},days:{narrow:["日","一","二","三","四","五","六"],short:["周日","周一","周二","周三","周四","周五","周六"],long:["星期日","星期一","星期二","星期三","星期四","星期五","星期六"]},eras:{narrow:["印度历"],short:["印度历"],long:["印度历"]},dayPeriods:{am:"上午",pm:"下午"}},islamic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"],long:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]},days:{narrow:["日","一","二","三","四","五","六"],short:["周日","周一","周二","周三","周四","周五","周六"],long:["星期日","星期一","星期二","星期三","星期四","星期五","星期六"]},eras:{narrow:["伊斯兰历"],short:["伊斯兰历"],long:["伊斯兰历"]},dayPeriods:{am:"上午",pm:"下午"}},islamicc:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"],long:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]},days:{narrow:["日","一","二","三","四","五","六"],short:["周日","周一","周二","周三","周四","周五","周六"],long:["星期日","星期一","星期二","星期三","星期四","星期五","星期六"]},eras:{narrow:["伊斯兰历"],short:["伊斯兰历"],long:["伊斯兰历"]},dayPeriods:{am:"上午",pm:"下午"}},japanese:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"],long:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]},days:{narrow:["日","一","二","三","四","五","六"],short:["周日","周一","周二","周三","周四","周五","周六"],long:["星期日","星期一","星期二","星期三","星期四","星期五","星期六"]},eras:{narrow:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","M","T","S","H"],short:["大化 (645–650)","白雉 (650–671)","白凤 (672–686)","朱鸟 (686–701)","大宝 (701–704)","庆云 (704–708)","和铜 (708–715)","灵龟 (715–717)","养老 (717–724)","神龟 (724–729)","天平 (729–749)","天平感宝 (749–749)","天平胜宝 (749–757)","天平宝字 (757–765)","天平神护 (765–767)","神护景云 (767–770)","宝龟 (770–780)","天应 (781–782)","延历 (782–806)","大同 (806–810)","弘仁 (810–824)","天长 (824–834)","承和 (834–848)","嘉祥 (848–851)","仁寿 (851–854)","齐衡 (854–857)","天安 (857–859)","贞观 (859–877)","元庆 (877–885)","仁和 (885–889)","宽平 (889–898)","昌泰 (898–901)","延喜 (901–923)","延长 (923–931)","承平 (931–938)","天庆 (938–947)","天历 (947–957)","天德 (957–961)","应和 (961–964)","康保 (964–968)","安和 (968–970)","天禄 (970–973)","天延 (973–976)","贞元 (976–978)","天元 (978–983)","永观 (983–985)","宽和 (985–987)","永延 (987–989)","永祚 (989–990)","正历 (990–995)","长德 (995–999)","长保 (999–1004)","宽弘 (1004–1012)","长和 (1012–1017)","宽仁 (1017–1021)","治安 (1021–1024)","万寿 (1024–1028)","长元 (1028–1037)","长历 (1037–1040)","长久 (1040–1044)","宽德 (1044–1046)","永承 (1046–1053)","天喜 (1053–1058)","康平 (1058–1065)","治历 (1065–1069)","延久 (1069–1074)","承保 (1074–1077)","正历 (1077–1081)","永保 (1081–1084)","应德 (1084–1087)","宽治 (1087–1094)","嘉保 (1094–1096)","永长 (1096–1097)","承德 (1097–1099)","康和 (1099–1104)","长治 (1104–1106)","嘉承 (1106–1108)","天仁 (1108–1110)","天永 (1110–1113)","永久 (1113–1118)","元永 (1118–1120)","保安 (1120–1124)","天治 (1124–1126)","大治 (1126–1131)","天承 (1131–1132)","长承 (1132–1135)","保延 (1135–1141)","永治 (1141–1142)","康治 (1142–1144)","天养 (1144–1145)","久安 (1145–1151)","仁平 (1151–1154)","久寿 (1154–1156)","保元 (1156–1159)","平治 (1159–1160)","永历 (1160–1161)","应保 (1161–1163)","长宽 (1163–1165)","永万 (1165–1166)","仁安 (1166–1169)","嘉应 (1169–1171)","承安 (1171–1175)","安元 (1175–1177)","治承 (1177–1181)","养和 (1181–1182)","寿永 (1182–1184)","元历 (1184–1185)","文治 (1185–1190)","建久 (1190–1199)","正治 (1199–1201)","建仁 (1201–1204)","元久 (1204–1206)","建永 (1206–1207)","承元 (1207–1211)","建历 (1211–1213)","建保 (1213–1219)","承久 (1219–1222)","贞应 (1222–1224)","元仁 (1224–1225)","嘉禄 (1225–1227)","安贞 (1227–1229)","宽喜 (1229–1232)","贞永 (1232–1233)","天福 (1233–1234)","文历 (1234–1235)","嘉祯 (1235–1238)","历仁 (1238–1239)","延应 (1239–1240)","仁治 (1240–1243)","宽元 (1243–1247)","宝治 (1247–1249)","建长 (1249–1256)","康元 (1256–1257)","正嘉 (1257–1259)","正元 (1259–1260)","文应 (1260–1261)","弘长 (1261–1264)","文永 (1264–1275)","建治 (1275–1278)","弘安 (1278–1288)","正应 (1288–1293)","永仁 (1293–1299)","正安 (1299–1302)","干元 (1302–1303)","嘉元 (1303–1306)","德治 (1306–1308)","延庆 (1308–1311)","应长 (1311–1312)","正和 (1312–1317)","文保 (1317–1319)","元应 (1319–1321)","元亨 (1321–1324)","正中 (1324–1326)","嘉历 (1326–1329)","元德 (1329–1331)","元弘 (1331–1334)","建武 (1334–1336)","延元 (1336–1340)","兴国 (1340–1346)","正平 (1346–1370)","建德 (1370–1372)","文中 (1372–1375)","天授 (1375–1379)","康历 (1379–1381)","弘和 (1381–1384)","元中 (1384–1392)","至德 (1384–1387)","嘉庆 (1387–1389)","康应 (1389–1390)","明德 (1390–1394)","应永 (1394–1428)","正长 (1428–1429)","永享 (1429–1441)","嘉吉 (1441–1444)","文安 (1444–1449)","宝德 (1449–1452)","享德 (1452–1455)","康正 (1455–1457)","长禄 (1457–1460)","宽正 (1460–1466)","文正 (1466–1467)","应仁 (1467–1469)","文明 (1469–1487)","长享 (1487–1489)","延德 (1489–1492)","明应 (1492–1501)","文龟 (1501–1504)","永正 (1504–1521)","大永 (1521–1528)","享禄 (1528–1532)","天文 (1532–1555)","弘治 (1555–1558)","永禄 (1558–1570)","元龟 (1570–1573)","天正 (1573–1592)","文禄 (1592–1596)","庆长 (1596–1615)","元和 (1615–1624)","宽永 (1624–1644)","正保 (1644–1648)","庆安 (1648–1652)","承应 (1652–1655)","明历 (1655–1658)","万治 (1658–1661)","宽文 (1661–1673)","延宝 (1673–1681)","天和 (1681–1684)","贞享 (1684–1688)","元禄 (1688–1704)","宝永 (1704–1711)","正德 (1711–1716)","享保 (1716–1736)","元文 (1736–1741)","宽保 (1741–1744)","延享 (1744–1748)","宽延 (1748–1751)","宝历 (1751–1764)","明和 (1764–1772)","安永 (1772–1781)","天明 (1781–1789)","宽政 (1789–1801)","享和 (1801–1804)","文化 (1804–1818)","文政 (1818–1830)","天保 (1830–1844)","弘化 (1844–1848)","嘉永 (1848–1854)","安政 (1854–1860)","万延 (1860–1861)","文久 (1861–1864)","元治 (1864–1865)","庆应 (1865–1868)","明治","大正","昭和","平成"],long:["大化 (645–650)","白雉 (650–671)","白凤 (672–686)","朱鸟 (686–701)","大宝 (701–704)","庆云 (704–708)","和铜 (708–715)","灵龟 (715–717)","养老 (717–724)","神龟 (724–729)","天平 (729–749)","天平感宝 (749–749)","天平胜宝 (749–757)","天平宝字 (757–765)","天平神护 (765–767)","神护景云 (767–770)","宝龟 (770–780)","天应 (781–782)","延历 (782–806)","大同 (806–810)","弘仁 (810–824)","天长 (824–834)","承和 (834–848)","嘉祥 (848–851)","仁寿 (851–854)","齐衡 (854–857)","天安 (857–859)","贞观 (859–877)","元庆 (877–885)","仁和 (885–889)","宽平 (889–898)","昌泰 (898–901)","延喜 (901–923)","延长 (923–931)","承平 (931–938)","天庆 (938–947)","天历 (947–957)","天德 (957–961)","应和 (961–964)","康保 (964–968)","安和 (968–970)","天禄 (970–973)","天延 (973–976)","贞元 (976–978)","天元 (978–983)","永观 (983–985)","宽和 (985–987)","永延 (987–989)","永祚 (989–990)","正历 (990–995)","长德 (995–999)","长保 (999–1004)","宽弘 (1004–1012)","长和 (1012–1017)","宽仁 (1017–1021)","治安 (1021–1024)","万寿 (1024–1028)","长元 (1028–1037)","长历 (1037–1040)","长久 (1040–1044)","宽德 (1044–1046)","永承 (1046–1053)","天喜 (1053–1058)","康平 (1058–1065)","治历 (1065–1069)","延久 (1069–1074)","承保 (1074–1077)","正历 (1077–1081)","永保 (1081–1084)","应德 (1084–1087)","宽治 (1087–1094)","嘉保 (1094–1096)","永长 (1096–1097)","承德 (1097–1099)","康和 (1099–1104)","长治 (1104–1106)","嘉承 (1106–1108)","天仁 (1108–1110)","天永 (1110–1113)","永久 (1113–1118)","元永 (1118–1120)","保安 (1120–1124)","天治 (1124–1126)","大治 (1126–1131)","天承 (1131–1132)","长承 (1132–1135)","保延 (1135–1141)","永治 (1141–1142)","康治 (1142–1144)","天养 (1144–1145)","久安 (1145–1151)","仁平 (1151–1154)","久寿 (1154–1156)","保元 (1156–1159)","平治 (1159–1160)","永历 (1160–1161)","应保 (1161–1163)","长宽 (1163–1165)","永万 (1165–1166)","仁安 (1166–1169)","嘉应 (1169–1171)","承安 (1171–1175)","安元 (1175–1177)","治承 (1177–1181)","养和 (1181–1182)","寿永 (1182–1184)","元历 (1184–1185)","文治 (1185–1190)","建久 (1190–1199)","正治 (1199–1201)","建仁 (1201–1204)","元久 (1204–1206)","建永 (1206–1207)","承元 (1207–1211)","建历 (1211–1213)","建保 (1213–1219)","承久 (1219–1222)","贞应 (1222–1224)","元仁 (1224–1225)","嘉禄 (1225–1227)","安贞 (1227–1229)","宽喜 (1229–1232)","贞永 (1232–1233)","天福 (1233–1234)","文历 (1234–1235)","嘉祯 (1235–1238)","历仁 (1238–1239)","延应 (1239–1240)","仁治 (1240–1243)","宽元 (1243–1247)","宝治 (1247–1249)","建长 (1249–1256)","康元 (1256–1257)","正嘉 (1257–1259)","正元 (1259–1260)","文应 (1260–1261)","弘长 (1261–1264)","文永 (1264–1275)","建治 (1275–1278)","弘安 (1278–1288)","正应 (1288–1293)","永仁 (1293–1299)","正安 (1299–1302)","干元 (1302–1303)","嘉元 (1303–1306)","德治 (1306–1308)","延庆 (1308–1311)","应长 (1311–1312)","正和 (1312–1317)","文保 (1317–1319)","元应 (1319–1321)","元亨 (1321–1324)","正中 (1324–1326)","嘉历 (1326–1329)","元德 (1329–1331)","元弘 (1331–1334)","建武 (1334–1336)","延元 (1336–1340)","兴国 (1340–1346)","正平 (1346–1370)","建德 (1370–1372)","文中 (1372–1375)","天授 (1375–1379)","康历 (1379–1381)","弘和 (1381–1384)","元中 (1384–1392)","至德 (1384–1387)","嘉庆 (1387–1389)","康应 (1389–1390)","明德 (1390–1394)","应永 (1394–1428)","正长 (1428–1429)","永享 (1429–1441)","嘉吉 (1441–1444)","文安 (1444–1449)","宝德 (1449–1452)","享德 (1452–1455)","康正 (1455–1457)","长禄 (1457–1460)","宽正 (1460–1466)","文正 (1466–1467)","应仁 (1467–1469)","文明 (1469–1487)","长享 (1487–1489)","延德 (1489–1492)","明应 (1492–1501)","文龟 (1501–1504)","永正 (1504–1521)","大永 (1521–1528)","享禄 (1528–1532)","天文 (1532–1555)","弘治 (1555–1558)","永禄 (1558–1570)","元龟 (1570–1573)","天正 (1573–1592)","文禄 (1592–1596)","庆长 (1596–1615)","元和 (1615–1624)","宽永 (1624–1644)","正保 (1644–1648)","庆安 (1648–1652)","承应 (1652–1655)","明历 (1655–1658)","万治 (1658–1661)","宽文 (1661–1673)","延宝 (1673–1681)","天和 (1681–1684)","贞享 (1684–1688)","元禄 (1688–1704)","宝永 (1704–1711)","正德 (1711–1716)","享保 (1716–1736)","元文 (1736–1741)","宽保 (1741–1744)","延享 (1744–1748)","宽延 (1748–1751)","宝历 (1751–1764)","明和 (1764–1772)","安永 (1772–1781)","天明 (1781–1789)","宽政 (1789–1801)","享和 (1801–1804)","文化 (1804–1818)","文政 (1818–1830)","天保 (1830–1844)","弘化 (1844–1848)","嘉永 (1848–1854)","安政 (1854–1860)","万延 (1860–1861)","文久 (1861–1864)","元治 (1864–1865)","庆应 (1865–1868)","明治","大正","昭和","平成"]},dayPeriods:{am:"上午",pm:"下午"}},persian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"],long:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]},days:{narrow:["日","一","二","三","四","五","六"],short:["周日","周一","周二","周三","周四","周五","周六"],long:["星期日","星期一","星期二","星期三","星期四","星期五","星期六"]},eras:{narrow:["波斯历"],short:["波斯历"],long:["波斯历"]},dayPeriods:{am:"上午",pm:"下午"}},roc:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"],long:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]},days:{narrow:["日","一","二","三","四","五","六"],short:["周日","周一","周二","周三","周四","周五","周六"],long:["星期日","星期一","星期二","星期三","星期四","星期五","星期六"]},eras:{narrow:["民国前","民国"],short:["民国前","民国"],long:["民国前","民国"]},dayPeriods:{am:"上午",pm:"下午"}}}},number:{nu:["latn"],patterns:{decimal:{positivePattern:"{number}",negativePattern:"{minusSign}{number}"},currency:{positivePattern:"{currency}{number}",negativePattern:"{minusSign}{currency}{number}"},percent:{positivePattern:"{number}{percentSign}",negativePattern:"{minusSign}{number}{percentSign}"}},symbols:{hanidec:{decimal:".",group:",",nan:"NaN",plusSign:"+",minusSign:"-",percentSign:"%",infinity:"∞"},latn:{decimal:".",group:",",nan:"NaN",plusSign:"+",minusSign:"-",percentSign:"%",infinity:"∞"}},currencies:{AUD:"AU$",BRL:"R$",CAD:"CA$",CNY:"￥",EUR:"€",GBP:"£",HKD:"HK$",ILR:"ILS",ILS:"₪",INR:"₹",JPY:"JP¥",KRW:"￦",MXN:"MX$",NZD:"NZ$",TWD:"NT$",USD:"US$",VND:"₫",XAF:"FCFA",XCD:"EC$",XOF:"CFA",XPF:"CFPF"}}});

/***/ }),

/***/ "./node_modules/snapsvg/Gruntfile.js":
/*!*******************************************!*\
  !*** ./node_modules/snapsvg/Gruntfile.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(grunt) {

    var pkg = grunt.file.readJSON("package.json");

    // Project configuration.
    grunt.initConfig({
        // Metadata.
        pkg: pkg,
        banner: grunt.file.read("./src/copy.js")
            .replace(/@VERSION/, pkg.version)
            .replace(/@DATE/, grunt.template.today("yyyy-mm-dd")) + "\n",
        // Task configuration.
        uglify: {
            options: {
                banner: "<%= banner %>",
                report: "min"
            },
            dist: {
                src: "<%= concat.target.dest %>",
                dest: "dist/snap.svg-min.js"
            }
        },
        concat: {
            options: {
                banner: "<%= banner %>"
            },
            target: {
                dest: "dist/snap.svg.js",
                src: [
                    "./node_modules/eve/eve.js",
                    "./src/amd-banner.js",
                    "./src/mina.js",
                    "./src/svg.js",
                    "./src/matrix.js",
                    "./src/attr.js",
                    "./src/attradd.js",
                    "./src/paper.js",
                    "./src/path.js",
                    "./src/set.js",
                    "./src/equal.js",
                    "./src/mouse.js",
                    "./src/filter.js",
                    "./src/amd-footer.js"
                ]
            }
        },
        exec: {
            dr: {
              command: "node node_modules/dr.js/dr dr.json"
            }
        }
    });

    grunt.loadNpmTasks("grunt-contrib-concat");
    grunt.loadNpmTasks("grunt-contrib-uglify");
    grunt.loadNpmTasks("grunt-exec");

    grunt.registerTask("default", ["concat", "uglify", "exec"]);
};

/***/ }),

/***/ "./node_modules/strip-sourcemap-loader/index.js!./node_modules/intl-messageformat/index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/strip-sourcemap-loader!./node_modules/intl-messageformat/index.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* jshint node:true */



var IntlMessageFormat = __webpack_require__(/*! ./lib/main */ "./node_modules/intl-messageformat/lib/main.js")['default'];

// Add all locale data to `IntlMessageFormat`. This module will be ignored when
// bundling for the browser with Browserify/Webpack.
__webpack_require__(/*! ./lib/locales */ 1);

// Re-export `IntlMessageFormat` as the CommonJS default exports with all the
// locale data registered, and with English set as the default locale. Define
// the `default` prop for use with other compiled ES6 Modules.
exports = module.exports = IntlMessageFormat;
exports['default'] = exports;


/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "./src/editor/ScratchJr.js":
/*!*********************************!*\
  !*** ./src/editor/ScratchJr.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Project = __webpack_require__(/*! ./ui/Project */ "./src/editor/ui/Project.js");

var _Project2 = _interopRequireDefault(_Project);

var _ScratchAudio = __webpack_require__(/*! ../utils/ScratchAudio */ "./src/utils/ScratchAudio.js");

var _ScratchAudio2 = _interopRequireDefault(_ScratchAudio);

var _Paint = __webpack_require__(/*! ../painteditor/Paint */ "./src/painteditor/Paint.js");

var _Paint2 = _interopRequireDefault(_Paint);

var _Prims = __webpack_require__(/*! ./engine/Prims */ "./src/editor/engine/Prims.js");

var _Prims2 = _interopRequireDefault(_Prims);

var _Undo = __webpack_require__(/*! ./ui/Undo */ "./src/editor/ui/Undo.js");

var _Undo2 = _interopRequireDefault(_Undo);

var _Alert = __webpack_require__(/*! ./ui/Alert */ "./src/editor/ui/Alert.js");

var _Alert2 = _interopRequireDefault(_Alert);

var _Palette = __webpack_require__(/*! ./ui/Palette */ "./src/editor/ui/Palette.js");

var _Palette2 = _interopRequireDefault(_Palette);

var _Record = __webpack_require__(/*! ./ui/Record */ "./src/editor/ui/Record.js");

var _Record2 = _interopRequireDefault(_Record);

var _IO = __webpack_require__(/*! ../tablet/IO */ "./src/tablet/IO.js");

var _IO2 = _interopRequireDefault(_IO);

var _OS = __webpack_require__(/*! ../tablet/OS */ "./src/tablet/OS.js");

var _OS2 = _interopRequireDefault(_OS);

var _UI = __webpack_require__(/*! ./ui/UI */ "./src/editor/ui/UI.js");

var _UI2 = _interopRequireDefault(_UI);

var _Menu = __webpack_require__(/*! ./blocks/Menu */ "./src/editor/blocks/Menu.js");

var _Menu2 = _interopRequireDefault(_Menu);

var _Library = __webpack_require__(/*! ./ui/Library */ "./src/editor/ui/Library.js");

var _Library2 = _interopRequireDefault(_Library);

var _Grid = __webpack_require__(/*! ./ui/Grid */ "./src/editor/ui/Grid.js");

var _Grid2 = _interopRequireDefault(_Grid);

var _ScriptsPane = __webpack_require__(/*! ./ui/ScriptsPane */ "./src/editor/ui/ScriptsPane.js");

var _ScriptsPane2 = _interopRequireDefault(_ScriptsPane);

var _Events = __webpack_require__(/*! ../utils/Events */ "./src/utils/Events.js");

var _Events2 = _interopRequireDefault(_Events);

var _BlockSpecs = __webpack_require__(/*! ./blocks/BlockSpecs */ "./src/editor/blocks/BlockSpecs.js");

var _BlockSpecs2 = _interopRequireDefault(_BlockSpecs);

var _Runtime = __webpack_require__(/*! ./engine/Runtime */ "./src/editor/engine/Runtime.js");

var _Runtime2 = _interopRequireDefault(_Runtime);

var _Localization = __webpack_require__(/*! ../utils/Localization */ "./src/utils/Localization.js");

var _Localization2 = _interopRequireDefault(_Localization);

var _lib = __webpack_require__(/*! ../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var workingCanvas = document.createElement('canvas');
var workingCanvas2 = document.createElement('canvas');
var activeFocus = undefined;
var changed = false;
// Our behavior for story-starters are slightly different from changed
// e.g. moving a script around doesn't "start a story" while we would want it
// to save a normal user project.
var storyStarted = false;
var runtime = undefined;
var stage = undefined;
var inFullscreen = false;
var keypad = undefined;
var textForm = undefined;
var editfirst = false;
var stagecolor = void 0;
var defaultSprite = void 0;

///////////////////////////////////////////
//Layers definitions for the whole site
///////////////////////////////////////////

//layaring variables
var layerTop = 10;
var layerAboveBottom = 4;
var dragginLayer = 7000;

var currentProject = undefined;
var editmode = void 0;

var isDebugging = true;
var time = void 0;
var userStart = false;
var onHold = false;
var shaking = undefined;
var stopShaking = undefined;
var version = undefined;

var autoSaveEnabled = true;
var autoSaveSetInterval = null;

var onBackButtonCallback = [];

var ScratchJr = function () {
    function ScratchJr() {
        _classCallCheck(this, ScratchJr);
    }

    _createClass(ScratchJr, null, [{
        key: 'appinit',
        value: function appinit(v) {
            stagecolor = window.Settings.stageColor;
            defaultSprite = window.Settings.defaultSprite;
            version = v;
            document.body.scrollTop = 0;
            time = new Date() - 0;
            var urlvars = (0, _lib.getUrlVars)();
            _OS2.default.hascamera();
            ScratchJr.log('starting the app');
            _BlockSpecs2.default.initBlocks();
            _Project2.default.loadIcon = document.createElement('img');
            _Project2.default.loadIcon.src = 'assets/loading.png';
            ScratchJr.log('blocks init', ScratchJr.getTime(), 'sec', _BlockSpecs2.default.loadCount);
            currentProject = urlvars.pmd5;
            editmode = urlvars.mode;
            (0, _lib.libInit)();
            _Project2.default.init();
            ScratchJr.log('Start ui init', ScratchJr.getTime(), 'sec');
            _Project2.default.setProgress(10);
            _ScratchAudio2.default.init();
            _Library2.default.init();
            _Paint2.default.init();
            _Record2.default.init();
            _Prims2.default.init();
            runtime = new _Runtime2.default();
            _Undo2.default.init();
            ScratchJr.editorEvents();
            _Project2.default.load(currentProject);
            _Events2.default.init();
            if (window.Settings.autoSaveInterval > 0) {
                autoSaveSetInterval = window.setInterval(function () {
                    if (autoSaveEnabled && !onHold && !_Project2.default.saving && !_UI2.default.infoBoxOpen) {
                        ScratchJr.saveProject(null, function () {
                            _Alert2.default.close();
                        });
                    }
                }, window.Settings.autoSaveInterval);
            }
        }

        // Event handler for when a story is started
        // When called and enabled, this will trigger sample projects to save copies
        // Here for debugging, run-time filtering, etc.

    }, {
        key: 'storyStart',
        value: function storyStart() /*eventName*/{
            // console.log("Story started: " + eventName);
            storyStarted = true;
        }
    }, {
        key: 'editorEvents',
        value: function editorEvents() {
            document.ongesturestart = undefined;
            window.ontouchstart = ScratchJr.unfocus;
            window.onmousedown = ScratchJr.unfocus;
            window.ontouchend = undefined;
            window.onmouseup = undefined;
        }
    }, {
        key: 'unfocus',
        value: function unfocus(evt) {
            if (_Palette2.default.helpballoon) {
                _Palette2.default.helpballoon.parentNode.removeChild(_Palette2.default.helpballoon);
                _Palette2.default.helpballoon = undefined;
            }
            if (document.forms.editable) {
                if (evt && evt.target == document.forms.editable.field) {
                    return;
                } // block is being edit
            }
            if (document.forms.activetextbox) {
                if (evt && evt.target == document.forms.activetextbox.typing) {
                    return;
                } // stage text box
            }
            if (document.forms.projectname) {
                if (evt && evt.target == document.forms.projectname.myproject) {
                    return;
                } // infobox text box
            }
            if (document.activeElement.tagName.toLowerCase() == 'input') {
                document.activeElement.blur();
            }
            ScratchJr.clearSelection();
            ScratchJr.blur();
        }
    }, {
        key: 'clearSelection',
        value: function clearSelection() {
            if (shaking) {
                stopShaking(shaking);
            }
        }
    }, {
        key: 'blur',
        value: function blur() {
            if (_ScratchAudio2.default.firstTime) {
                _ScratchAudio2.default.firstClick();
            }
            ScratchJr.editDone();
            _Menu2.default.closeMyOpenMenu();
        }
    }, {
        key: 'getSprite',
        value: function getSprite() {
            if (!stage.currentPage.currentSpriteName) {
                return undefined;
            }
            if (!(0, _lib.gn)(stage.currentPage.currentSpriteName)) {
                return undefined;
            }
            return (0, _lib.gn)(stage.currentPage.currentSpriteName).owner;
        }
    }, {
        key: 'gestureStart',
        value: function gestureStart(e) {
            e.preventDefault();
            if (_ScratchAudio2.default.firstTime) {
                _ScratchAudio2.default.firstClick();
            }
        }
    }, {
        key: 'log',
        value: function log() {
            if (!isDebugging) {
                return;
            }
            var len = arguments.length;
            var res = '';
            for (var i = 0; i < len - 1; i++) {
                res = res + arguments[i] + ' ';
            }
            res += arguments[len - 1];
            console.log(res); //eslint-disable-line no-console
        }
    }, {
        key: 'getTime',
        value: function getTime() {
            return (new Date() - time) / 1000;
        }
    }, {
        key: 'isSampleOrStarter',
        value: function isSampleOrStarter() {
            return editmode == 'look' || editmode == 'storyStarter';
        }
    }, {
        key: 'isEditable',
        value: function isEditable() {
            return editmode != 'look';
        }

        // Called when ScratchJr is brought back to focus
        // Here, we fix up some UI elements that may not have been properly shut down when the app was paused.
        // Note that on Android Lollipop and up we have much more limited
        // opportunity to save progress, etc. before the app is
        // paused, and so we just suspend the whole webview and then restore it here.

    }, {
        key: 'onResume',
        value: function onResume() {
            // no nothing special, for now.
            if (_Record2.default.dialogOpen) {
                _Record2.default.recordError();
            }

            // Re-enable autosaves
            autoSaveEnabled = true;
            autoSaveSetInterval = window.setInterval(function () {
                if (autoSaveEnabled && !onHold && !_Project2.default.saving && !_UI2.default.infoBoxOpen) {
                    ScratchJr.saveProject(null, function () {
                        _Alert2.default.close();
                    });
                }
            }, window.Settings.autoSaveInterval);
        }
    }, {
        key: 'onPause',
        value: function onPause() {
            autoSaveEnabled = false;
            window.clearInterval(autoSaveSetInterval);
        }
    }, {
        key: 'saveProject',
        value: function saveProject(e, onDone) {
            if (ScratchJr.isEditable() && !_Project2.default.error && changed) {
                if (editmode != 'storyStarter') {
                    if (currentProject) {
                        _Project2.default.prepareToSave(currentProject, onDone);
                        return;
                    }
                } else if (storyStarted) {
                    ScratchJr.saveStory(onDone);
                    return;
                }
            }
            if (onDone) {
                onDone();
            }
        }

        /**
         * Save the story as a new project so that the user can
         * continue to edit or share it in the future.
         */

    }, {
        key: 'saveStory',
        value: function saveStory(onDone) {
            _OS2.default.analyticsEvent('samples', 'story_starter_edited', _Project2.default.metadata.name);
            // Localize sample project names
            var sampleName = _Localization2.default.localizeSampleName(_Project2.default.metadata.name);
            // Get the new project name
            _IO2.default.uniqueProjectName({
                name: sampleName
            }, function (jsonData) {
                var newName = jsonData.name;
                _Project2.default.metadata.name = newName;
                // Create the new project
                _IO2.default.createProject({
                    name: newName,
                    version: version,
                    mtime: new Date().getTime().toString()
                }, function (md5) {
                    // Save project data
                    currentProject = md5;
                    // Switch out of story-starter mode to avoid creating new projects
                    editmode = 'edit';
                    _Project2.default.prepareToSave(currentProject, onDone);
                });
            }, true);
        }
    }, {
        key: 'saveAndFlip',
        value: function saveAndFlip(e) {
            onHold = true;
            ScratchJr.stopStripsFromTop(e);
            ScratchJr.unfocus(e);
            ScratchJr.saveProject(e, ScratchJr.flippage);
            _OS2.default.analyticsEvent('editor', 'project_editor_close');
        }
    }, {
        key: 'flippage',
        value: function flippage() {
            _Alert2.default.close();
            _OS2.default.cleanassets('wav', doNext);
            function doNext() {
                _OS2.default.cleanassets('svg', ScratchJr.switchPage);
            }
        }
    }, {
        key: 'switchPage',
        value: function switchPage() {
            window.location.href = ScratchJr.getGotoLink();
        }
    }, {
        key: 'getGotoLink',
        value: function getGotoLink() {
            if (editmode == 'storyStarter') {
                if (!storyStarted) {
                    return 'home.html?place=help';
                } else {
                    return 'home.html?place=home';
                }
            }

            if (!currentProject) {
                return 'home.html?place=home';
            }

            if (_Project2.default.metadata.gallery == 'samples') {
                return 'home.html?place=help';
            } else {
                return 'home.html?place=home&timestamp=' + new Date().getTime();
            }
        }
    }, {
        key: 'updateRunStopButtons',
        value: function updateRunStopButtons() {
            var isOff = runtime.inactive();
            if (inFullscreen) {
                (0, _lib.gn)('go').className = isOff ? 'go on presentationmode' : 'go off presentationmode';
                _UI2.default.updatePageControls();
            } else {
                (0, _lib.gn)('go').className = isOff ? 'go on' : 'go off';
                _Grid2.default.updateCursor();
            }
            if (ScratchJr.getSprite()) {
                if (isOff && !inFullscreen) {
                    ScratchJr.getSprite().select();
                } else {
                    ScratchJr.getSprite().unselect();
                }
            }
            if (isOff && userStart) {
                stage.currentPage.updateThumb();
                //	ScratchJr.log ('total time', ScratchJr.getTime(), 'sec');
                userStart = false;
            }
        }
    }, {
        key: 'runStrips',
        value: function runStrips(e) {
            ScratchJr.stopStripsFromTop(e);
            ScratchJr.unfocus(e);
            ScratchJr.startGreenFlagThreads();
            userStart = true;
            //  time = (new Date()) - 0;
        }
    }, {
        key: 'startGreenFlagThreads',
        value: function startGreenFlagThreads() {
            ScratchJr.resetSprites();
            ScratchJr.startCurrentPageStrips(['onflag', 'ontouch']);
        }
    }, {
        key: 'startCurrentPageStrips',
        value: function startCurrentPageStrips(list) {
            var page = stage.currentPage.div;
            for (var i = 0; i < page.childElementCount; i++) {
                var spr = page.childNodes[i].owner;
                if (!spr) {
                    continue;
                }
                if (!(0, _lib.gn)(spr.id + '_scripts')) {
                    continue;
                } // text case
                ScratchJr.startScriptsFor(spr, list);
            }
        }
    }, {
        key: 'startScriptsFor',
        value: function startScriptsFor(spr, list) {
            var sc = (0, _lib.gn)(spr.id + '_scripts');
            var topblocks = sc.owner.getBlocksType(list);
            for (var j = 0; j < topblocks.length; j++) {
                var b = topblocks[j];
                runtime.addRunScript(spr, b);
            }
        }
    }, {
        key: 'stopStripsFromTop',
        value: function stopStripsFromTop(e) {
            e.preventDefault();
            e.stopPropagation();
            ScratchJr.unfocus(e);
            ScratchJr.stopStrips();
            userStart = false;
        }
    }, {
        key: 'stopStrips',
        value: function stopStrips() {
            runtime.stopThreads();
            stage.currentPage.updateThumb();
        }
    }, {
        key: 'resetSprites',
        value: function resetSprites() {
            stage.resetPage(stage.currentPage);
        }
    }, {
        key: 'fullScreen',
        value: function fullScreen(e) {
            if ((0, _lib.gn)('full').className == 'fullscreen') {
                onBackButtonCallback.push(function () {
                    var fakeEvent = document.createEvent('TouchEvent');
                    fakeEvent.initTouchEvent();
                    ScratchJr.quitFullScreen(fakeEvent);
                });

                ScratchJr.enterFullScreen(e);
            } else {
                ScratchJr.quitFullScreen(e);
            }
        }
    }, {
        key: 'displayStatus',
        value: function displayStatus(type) {
            var ids = ['topsection', 'blockspalette', 'scripts', 'flip', 'projectinfo'];
            for (var i = 0; i < ids.length; i++) {
                if ((0, _lib.gn)(ids[i])) {
                    (0, _lib.gn)(ids[i]).style.display = type;
                }
            }
        }
    }, {
        key: 'enterFullScreen',
        value: function enterFullScreen(e) {
            if (onHold) {
                return;
            }
            // e.preventDefault();
            // e.stopPropagation();
            ScratchJr.unfocus(e);
            ScratchJr.displayStatus('none');
            inFullscreen = true;
            _UI2.default.enterFullScreen();
            _OS2.default.analyticsEvent('editor', 'full_screen_entered');
            document.body.style.background = 'black';
        }
    }, {
        key: 'quitFullScreen',
        value: function quitFullScreen(e) {
            //  time = (new Date()) - 0;
            e.preventDefault();
            e.stopPropagation();
            ScratchJr.displayStatus('block');
            inFullscreen = false;
            _UI2.default.quitFullScreen();
            onBackButtonCallback.pop();
            _OS2.default.analyticsEvent('editor', 'full_screen_exited');
            document.body.style.background = 'white';
        }

        /////////////////////////////////////////
        //UI calls
        /////////////////////////////////////////

    }, {
        key: 'getActiveScript',
        value: function getActiveScript() {
            var str = stage.currentPage.currentSpriteName + '_scripts';
            return (0, _lib.gn)(str);
        }
    }, {
        key: 'getBlocks',
        value: function getBlocks() {
            return ScratchJr.getActiveScript().owner.getBlocks();
        }

        /////////////////////////////////////////////////
        //Setup editable field


    }, {
        key: 'setupEditableField',
        value: function setupEditableField() {
            textForm = (0, _lib.newHTML)('form', 'textform', _lib.frame);
            textForm.name = 'editable';
            var ti = (0, _lib.newHTML)('input', 'textinput', textForm);
            ti.name = 'field';
            ti.onkeypress = function (evt) {
                handleKeyPress(evt);
            };
            textForm.onsubmit = function (evt) {
                submitOverride(evt);
            };
            function handleKeyPress(e) {
                var key = e.keyCode || e.which;
                if (key == 13) {
                    submitOverride(e);
                }
            }
            function submitOverride(e) {
                e.preventDefault();
                e.stopPropagation();
                var input = e.target;
                input.blur();

                // Hitting enter does not trigger editDone()
                // so you need to pop the queue here.
                onBackButtonCallback.pop();
            }
            ti.maxLength = 50;
            ti.onfocus = ScratchJr.handleTextFieldFocus;
            ti.onblur = ScratchJr.handleTextFieldBlur;
        }

        /////////////////////////////////////////////////
        //Argument Clicked


    }, {
        key: 'editArg',
        value: function editArg(e, ti) {
            e.preventDefault();
            e.stopPropagation();
            if (ti && ti.owner.isText()) {
                ScratchJr.textClicked(e, ti);
            } else {
                ScratchJr.numberClicked(e, ti);
            }

            onBackButtonCallback.push(function () {
                ScratchJr.editDone();
            });
        }
    }, {
        key: 'textClicked',
        value: function textClicked(e, div) {
            var b = div.owner; // b is a BlockArg
            activeFocus = b;
            var pt = b.getScreenPt();
            var sc = ScratchJr.getActiveScript();
            div = sc.parentNode;
            var w = div.offsetWidth;
            var h = div.offsetHeight;
            var dx = pt.x + 480 * _lib.scaleMultiplier > w ? w - 486 * _lib.scaleMultiplier : pt.x - 6 * _lib.scaleMultiplier;
            var ti = document.forms.editable.field;
            ti.style.textAlign = 'center';
            document.forms.editable.style.left = dx + 'px';
            var top = pt.y + 55 * _lib.scaleMultiplier;
            document.forms.editable.style.top = top + 'px';
            if (_lib.isAndroid) {
                AndroidInterface.scratchjr_setsoftkeyboardscrolllocation(top * window.devicePixelRatio, (top + h) * window.devicePixelRatio);
            }
            document.forms.editable.className = 'textform on';
            ti.value = b.argValue;
            if (_lib.isAndroid) {
                AndroidInterface.scratchjr_forceShowKeyboard();
            }
            ti.focus();
        }
    }, {
        key: 'handleTextFieldFocus',
        value: function handleTextFieldFocus(e) {
            e.preventDefault();
            e.stopPropagation();
            activeFocus.oldvalue = activeFocus.input.textContent;
        }
    }, {
        key: 'handleTextFieldBlur',
        value: function handleTextFieldBlur(e) {
            onBackButtonCallback.pop();
            e.preventDefault();
            e.stopPropagation();
            var ti = document.forms.editable.field;
            var str = ti.value.substring(0, ti.maxLength);
            activeFocus.argValue = str;
            activeFocus.setValue(str);
            document.forms.editable.className = 'textform off';
            if (activeFocus.daddy.div.parentNode) {
                var spr = activeFocus.daddy.div.parentNode.owner.spr;
                var action = {
                    action: 'scripts',
                    where: spr.div.parentNode.owner.id,
                    who: spr.id
                };
                if (activeFocus.input.textContent != activeFocus.oldvalue) {
                    _Undo2.default.record(action);
                    ScratchJr.storyStart('ScratchJr.handleTextFieldBlur');
                }
            }
            activeFocus = undefined;
            document.body.scrollTop = 0;
            document.body.scrollLeft = 0;
            if (_lib.isAndroid) {
                AndroidInterface.scratchjr_forceHideKeyboard();
            }
        }

        /////////////////////////////////////////
        //Numeric keyboard
        /////////////////////////////////////////

    }, {
        key: 'setupKeypad',
        value: function setupKeypad() {
            keypad = (0, _lib.newHTML)('div', 'picokeyboard', _lib.frame);
            keypad.ontouchstart = ScratchJr.eatEvent;
            keypad.onmousedown = ScratchJr.eatEvent;
            var pad = (0, _lib.newHTML)('div', 'insidekeyboard', keypad);
            for (var i = 1; i < 10; i++) {
                ScratchJr.keyboardAddKey(pad, i, 'onekey');
            }
            ScratchJr.keyboardAddKey(pad, '-', 'onekey minus');
            //  ScratchJr.keyboardAddKey (pad, undefined, 'onekey space');
            ScratchJr.keyboardAddKey(pad, '0', 'onekey');
            ScratchJr.keyboardAddKey(pad, undefined, 'onekey delete');
            //  var keym = newHTML("div", 'onkey' ,pad);
        }
    }, {
        key: 'eatEvent',
        value: function eatEvent(e) {
            e.preventDefault();
            e.stopPropagation();
        }
    }, {
        key: 'keyboardAddKey',
        value: function keyboardAddKey(p, str, c) {
            var keym = (0, _lib.newHTML)('div', c, p);
            var mk = (0, _lib.newHTML)('span', undefined, keym);
            mk.textContent = str ? str : '';
            keym.ontouchstart = ScratchJr.numEditKey;
            keym.onmousedown = ScratchJr.numEditKey;
        }

        /////////////////////////////////////////////////
        //Number Clicked


    }, {
        key: 'numberClicked',
        value: function numberClicked(e, ti) {
            var delta = activeFocus ? activeFocus.delta : 0;
            if (activeFocus && activeFocus.type == 'blockarg') {
                activeFocus.div.className = 'numfield off';
                ScratchJr.numEditDone();
            }
            var b = ti.owner; // b is a BlockArg
            activeFocus = b;
            activeFocus.delta = delta;
            b.oldvalue = ti.textContent;
            activeFocus.div.className = 'numfield on';
            keypad.className = 'picokeyboard on';
            editfirst = true;
            var p = ti.parentNode.parentNode.owner;
            if (Number(p.min) < 0) {
                ScratchJr.setMinusKey();
            } else {
                ScratchJr.setSpaceKey();
            }
            if (delta == 0) {
                ScratchJr.needsToScroll(b);
            }
            // accept keyboard input
            // `keypress` will not catch `Backspace`,
            // so we listen to `keydown`
            window.onkeydown = ScratchJr.handleKeyDown;
        }
    }, {
        key: 'needsToScroll',
        value: function needsToScroll(b) {
            // needs scroll
            var look = ScratchJr.getActiveScript(); // look canvas
            var dx = b.daddy.div.left + b.daddy.div.offsetWidth + look.left;
            var w = window.innerWidth - keypad.offsetWidth - 10;
            var delta = dx > w ? w - dx : 0;
            if (delta < 0) {
                var transition = {
                    duration: 0.5,
                    transition: 'ease-out',
                    style: {
                        left: look.left + delta + 'px'
                    },
                    onComplete: function onComplete() {
                        _ScriptsPane2.default.scroll.refresh();
                    }
                };
                (0, _lib.CSSTransition3D)(look, transition);
            }
            activeFocus.delta = delta;
        }
    }, {
        key: 'handleKeyDown',
        value: function handleKeyDown(evt) {
            // 48 is the keyCode for 0
            // 57 is the keyCode for 9
            // For the detail of keyCode of keyboard event
            // please refer to https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode#value_of_keycode
            if (evt.keyCode >= 48 && evt.keyCode <= 57 || evt.key == '-') {
                // if the user input numbers or negative sign
                ScratchJr.fillValueWithKey(evt.key);
                return;
            }
            if (evt.key == 'Backspace') {
                ScratchJr.numEditDelete();
            }
        }
    }, {
        key: 'numEditKey',
        value: function numEditKey(e) {
            e.preventDefault();
            e.stopPropagation();
            var t = e.target;
            if (!t) {
                return;
            }
            if (t.className == '') {
                t = t.parentNode;
            }
            if (t.className != 'onekey space') {
                _ScratchAudio2.default.sndFX('keydown.wav');
            }
            var c = t.textContent;
            if (!c) {
                if (t.parentNode.className == 'onekey delete' || t.className == 'onekey delete') {
                    ScratchJr.numEditDelete();
                }
                return;
            }
            ScratchJr.fillValueWithKey(c);
        }

        /**
         * Fill active focus with value `c`
         * @param c The input char, should be 0...9 or `-`
         */

    }, {
        key: 'fillValueWithKey',
        value: function fillValueWithKey(c) {
            var input = activeFocus.input;
            var val = input.textContent;
            if (editfirst) {
                editfirst = false;
                val = '0';
            }
            if (c == '-' && val != '0') {
                _ScratchAudio2.default.sndFX('boing.wav');
                return;
            }
            if (val == '0') {
                val = c;
            } else {
                val += c;
            }
            if (Number(val).toString() != 'NaN' && (Number(val) > 99 || Number(val) < -99)) {
                _ScratchAudio2.default.sndFX('boing.wav');
            } else {
                activeFocus.setValue(val);
            }
        }
    }, {
        key: 'setSpaceKey',
        value: function setSpaceKey() {
            keypad.childNodes[0].childNodes[9].className = 'onekey space';
            keypad.childNodes[0].childNodes[9].childNodes[0].textContent = '';
        }
    }, {
        key: 'setMinusKey',
        value: function setMinusKey() {
            keypad.childNodes[0].childNodes[9].className = 'onekey minus';
            keypad.childNodes[0].childNodes[9].childNodes[0].textContent = '-';
        }
    }, {
        key: 'validateNumber',
        value: function validateNumber(val) {
            return Number(val);
        }
    }, {
        key: 'revokeInput',
        value: function revokeInput(val) {
            return val;
        }
    }, {
        key: 'numEditDelete',
        value: function numEditDelete() {
            var val = activeFocus.input.textContent;
            if (val.length != 0) {
                val = val.substring(0, val.length - 1);
            }
            if (val.length == 0) {
                val = '0';
            }
            activeFocus.setValue(val);
        }
    }, {
        key: 'editDone',
        value: function editDone() {
            if (document.activeElement.tagName === 'INPUT') {
                document.activeElement.blur();
            }
            if (activeFocus == undefined) {
                return;
            }
            if (activeFocus.type != 'blockarg') {
                return;
            }
            if (activeFocus.isText()) {
                document.forms.editable.field.blur();
            } else {
                ScratchJr.closeNumberEdit();
                onBackButtonCallback.pop();
            }
        }
    }, {
        key: 'closeNumberEdit',
        value: function closeNumberEdit() {
            ScratchJr.numEditDone();
            ScratchJr.resetScroll();
            keypad.className = 'picokeyboard off';
            activeFocus.div.className = 'numfield off';
            activeFocus = undefined;
            // stop accepting keyboard events
            window.onkeydown = undefined;
        }
    }, {
        key: 'numEditDone',
        value: function numEditDone() {
            var val = activeFocus.input.textContent;
            if (val == '-') {
                val = 0;
            }
            if (val == '-0') {
                val = 0;
            }
            val = ScratchJr.validateNumber(val);
            var ba = activeFocus;
            activeFocus.setValue(parseFloat(val));
            ba.argValue = val;
            if (ba.daddy && ba.daddy.div.parentNode.owner) {
                var spr = ba.daddy.div.parentNode.owner.spr;
                if (spr && spr.div.parentNode) {
                    var action = {
                        action: 'scripts',
                        where: spr.div.parentNode.owner.id,
                        who: spr.id
                    };
                    if (ba.argValue != ba.oldvalue) {
                        ScratchJr.storyStart('ScratchJr.numEditDone');
                        _Undo2.default.record(action);
                    }
                }
            }
        }
    }, {
        key: 'resetScroll',
        value: function resetScroll() {
            var delta = activeFocus.delta;
            if (delta < 0) {
                var look = ScratchJr.getActiveScript(); // look canvas
                var transition = {
                    duration: 0.5,
                    transition: 'ease-out',
                    style: {
                        left: look.left - delta + 'px'
                    },
                    onComplete: function onComplete() {
                        _ScriptsPane2.default.scroll.refresh();
                    }
                };
                (0, _lib.CSSTransition3D)(look, transition);
            }
        }
    }, {
        key: 'validate',
        value: function validate(str, name) {
            var str2 = str.replace(/\s*/g, '');
            if (str2.length == 0) {
                return name;
            }
            return str;
        }
    }, {
        key: 'makeThumb',
        value: function makeThumb(svgName, width, height) {
            _IO2.default.getAsset(svgName, function (svgDataUrl) {
                var svgBase64 = svgDataUrl.split(',')[1];
                var dataurl = _IO2.default.getThumbnail(atob(svgBase64), width, height, 120, 90);
                var pngBase64 = dataurl.split(',')[1];
                var name = svgName.split('.')[0];
                _OS2.default.setmedianame(pngBase64, name, 'png');
            });
        }

        /////////////////
        //Application on the background

        /**
         * The functions that are invokved when the Android back button is clicked.
         * Methods are called from the rear and popped off after each invocation.
         */

        /**
         * Handles updating the UI when the Android back button is clicked.  This
         * method invokes the methods defined at {@link onBackButtonCallback}
         * if not empty, otherwise it invokes {@link ScratchJr.saveAndFlip}.  The
         * back button callback is set by UI components when they initialize a modal
         * or popup, so it is the responsibility of popup components to correctly cleanup
         * the onBackButtonCallback.
         */

    }, {
        key: 'goBack',
        value: function goBack() {
            if (onBackButtonCallback.length === 0) {
                var e = document.createEvent('TouchEvent');
                e.initTouchEvent();
                e.preventDefault();
                e.stopPropagation();
                ScratchJr.saveAndFlip(e);
            } else {
                var callbackReference = onBackButtonCallback[onBackButtonCallback.length - 1];
                callbackReference();
            }
        }
    }, {
        key: 'workingCanvas',
        get: function get() {
            return workingCanvas;
        }
    }, {
        key: 'workingCanvas2',
        get: function get() {
            return workingCanvas2;
        }
    }, {
        key: 'activeFocus',
        get: function get() {
            return activeFocus;
        },
        set: function set(newActiveFocus) {
            activeFocus = newActiveFocus;
        }
    }, {
        key: 'changed',
        set: function set(newChanged) {
            changed = newChanged;
        },
        get: function get() {
            return changed;
        }
    }, {
        key: 'storyStarted',
        set: function set(newStoryStarted) {
            storyStarted = newStoryStarted;
        }
    }, {
        key: 'runtime',
        get: function get() {
            return runtime;
        }
    }, {
        key: 'stage',
        get: function get() {
            return stage;
        },
        set: function set(newStage) {
            stage = newStage;
        }
    }, {
        key: 'inFullscreen',
        get: function get() {
            return inFullscreen;
        }
    }, {
        key: 'stagecolor',
        get: function get() {
            return stagecolor;
        }
    }, {
        key: 'defaultSprite',
        get: function get() {
            return defaultSprite;
        }
    }, {
        key: 'layerTop',
        get: function get() {
            return layerTop;
        }
    }, {
        key: 'layerAboveBottom',
        get: function get() {
            return layerAboveBottom;
        }
    }, {
        key: 'dragginLayer',
        get: function get() {
            return dragginLayer;
        }
    }, {
        key: 'currentProject',
        get: function get() {
            return currentProject;
        },
        set: function set(md5) {
            currentProject = md5;
        }
    }, {
        key: 'editmode',
        get: function get() {
            return editmode;
        },
        set: function set(newEditmode) {
            editmode = newEditmode;
        }
    }, {
        key: 'time',
        set: function set(newTime) {
            time = newTime;
        }
    }, {
        key: 'userStart',
        set: function set(newUserStart) {
            userStart = newUserStart;
        }
    }, {
        key: 'onHold',
        get: function get() {
            return onHold;
        },
        set: function set(newOnHold) {
            onHold = newOnHold;
        }
    }, {
        key: 'shaking',
        get: function get() {
            return shaking;
        },
        set: function set(newShaking) {
            shaking = newShaking;
        }
    }, {
        key: 'stopShaking',
        get: function get() {
            return stopShaking;
        },
        set: function set(newStopShaking) {
            stopShaking = newStopShaking;
        }
    }, {
        key: 'version',
        get: function get() {
            return version;
        }
    }, {
        key: 'onBackButtonCallback',
        get: function get() {
            return onBackButtonCallback;
        }
    }]);

    return ScratchJr;
}();

// Expose ScratchJr to global


exports.default = ScratchJr;
window.ScratchJr = ScratchJr;

/***/ }),

/***/ "./src/editor/blocks/Block.js":
/*!************************************!*\
  !*** ./src/editor/blocks/Block.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _BlockSpecs = __webpack_require__(/*! ./BlockSpecs */ "./src/editor/blocks/BlockSpecs.js");

var _BlockSpecs2 = _interopRequireDefault(_BlockSpecs);

var _BlockArg = __webpack_require__(/*! ./BlockArg */ "./src/editor/blocks/BlockArg.js");

var _BlockArg2 = _interopRequireDefault(_BlockArg);

var _ScratchJr = __webpack_require__(/*! ../ScratchJr */ "./src/editor/ScratchJr.js");

var _ScratchJr2 = _interopRequireDefault(_ScratchJr);

var _lib = __webpack_require__(/*! ../../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Block = function () {
    function Block(spec, isPalette, scale) {
        _classCallCheck(this, Block);

        this.div = document.createElement('div');

        // Top-level block parent shouldn't accept pointer events
        (0, _lib.setProps)(this.div.style, {
            pointerEvents: 'none'
        });

        this.setBlockshapeFromSpecs(spec, isPalette, scale);
        this.blockshape = document.createElement('canvas');
        (0, _lib.setCanvasSize)(this.div, this.getWidth() * this.scale, this.getHeight() * this.scale);
        (0, _lib.setCanvasSize)(this.blockshape, this.getWidth() * this.scale * window.devicePixelRatio, this.getHeight() * this.scale * window.devicePixelRatio);
        this.addShadow();
        this.div.appendChild(this.blockshape);
        (0, _lib.setProps)(this.blockshape.style, {
            position: 'absolute',
            left: '0px',
            top: '0px',
            webkitTransform: 'translate(' + -this.blockshape.width / 2 + 'px, ' + -this.blockshape.height / 2 + 'px) ' + 'scale(' + 1 / window.devicePixelRatio + ') ' + 'translate(' + this.blockshape.width / 2 + 'px, ' + this.blockshape.height / 2 + 'px)',
            pointerEvents: 'all'
        });
        this.addHighlight();
        this.drawBlock();
        (0, _lib.setCanvasSize)(this.div, this.blockshape.width / window.devicePixelRatio, this.blockshape.height / window.devicePixelRatio);
        if (this.isCaret) {
            return;
        }
        this.createArgument();
        this.div.owner = this;
    }

    _createClass(Block, [{
        key: 'getWidth',
        value: function getWidth() {
            if (this.blocktype == 'repeat') {
                return 176;
            }
            if (this.blocktype == 'gotopage') {
                return 86;
            }
            if (this.aStart || this.anEnd) {
                return 84;
            }
            return 76;
        }
    }, {
        key: 'getHeight',
        value: function getHeight() {
            if (this.blocktype == 'repeat') {
                return 82;
            }
            return 66;
        }
    }, {
        key: 'setBlockshapeFromSpecs',
        value: function setBlockshapeFromSpecs(spec, isPalette, scale) {
            this.spec = spec;
            this.isReporter = spec[1] == 'reporter';
            this.blocktype = spec[0];
            this.icon = spec[1];
            this.image = spec[2];
            this.aStart = this.blocktype == 'caretstart' || this.image == _BlockSpecs2.default.yellowStart;
            this.anEnd = this.blocktype == 'caretend' || this.image == _BlockSpecs2.default.redEnd || this.image == _BlockSpecs2.default.redEndLong;
            this.cShape = this.blocktype == 'repeat' || this.blocktype == 'caretrepeat';
            this.prev = null;
            this.next = null;
            this.inside = null;
            this.isCaret = this.blocktype.indexOf('caret') > -1;
            this.type = 'block';
            this.arg = null;
            this.daddy = null;
            this.scale = scale ? scale : 1;
            this.repeatCounter = -1;
            this.originalCount = -1;
            this.threads = [];
            this.inpalette = isPalette;
            this.min = spec[6];
            this.max = spec[7];
            this.shadowimg = this.spec.length < 9 ? null : spec[8];
            this.hrubberband = 0;
            this.vrubberband = 0;
            this.done = false;
        }
    }, {
        key: 'addShadow',
        value: function addShadow() {
            this.shadow = document.createElement('canvas');
            this.div.appendChild(this.shadow);
            (0, _lib.setProps)(this.shadow.style, {
                position: 'absolute',
                left: '1px',
                top: '4px',
                opacity: this.inpalette ? window.Settings.paletteBlockShadowOpacity : 1,
                visibility: 'hidden',
                webkitTransform: 'translate(' + -this.blockshape.width / 2 + 'px, ' + -this.blockshape.height / 2 + 'px) ' + 'scale(' + 1 / window.devicePixelRatio + ') ' + 'translate(' + this.blockshape.width / 2 + 'px, ' + this.blockshape.height / 2 + 'px)',
                pointerEvents: 'all'
            });
            (0, _lib.setCanvasSize)(this.shadow, this.blockshape.width, this.blockshape.height);
            if (!this.shadowimg) {
                return;
            }
            var ctx = this.shadow.getContext('2d');
            var img = this.shadowimg;
            if (!img.complete) {
                img.onload = function () {
                    ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, img.width * this.scale * window.devicePixelRatio, img.height * this.scale * window.devicePixelRatio);
                };
            } else {
                ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, img.width * this.scale * window.devicePixelRatio, img.height * this.scale * window.devicePixelRatio);
            }
        }
    }, {
        key: 'lift',
        value: function lift() {
            this.shadow.style.visibility = 'visible';
        }
    }, {
        key: 'drop',
        value: function drop() {
            this.shadow.style.visibility = 'hidden';
        }
    }, {
        key: 'addHighlight',
        value: function addHighlight() {
            var img = this.spec[5];
            if (!img) {
                return;
            }
            this.shine = document.createElement('canvas');
            this.div.appendChild(this.shine);
            (0, _lib.setCanvasSize)(this.shine, this.blockshape.width, this.blockshape.height);
            (0, _lib.setProps)(this.shine.style, {
                position: 'absolute',
                left: '0px',
                top: '0px',
                visibility: 'hidden',
                webkitTransform: 'translate(' + -this.blockshape.width / 2 + 'px, ' + -this.blockshape.height / 2 + 'px) ' + 'scale(' + 1 / window.devicePixelRatio + ') ' + 'translate(' + this.blockshape.width / 2 + 'px, ' + this.blockshape.height / 2 + 'px)',
                pointerEvents: 'all'
            });
            var ctx = this.shine.getContext('2d');
            if (!img.complete) {
                img.onload = function () {
                    ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, img.width * this.scale * window.devicePixelRatio, img.height * this.scale * window.devicePixelRatio);
                };
            } else {
                ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, img.width * this.scale * window.devicePixelRatio, img.height * this.scale * window.devicePixelRatio);
            }
        }
    }, {
        key: 'drawBlock',
        value: function drawBlock() {
            var cnv = this.blockshape;
            var ctx = this.blockshape.getContext('2d');
            ctx.clearRect(0, 0, cnv.width, cnv.height);
            var me = this;
            if (!this.image.complete) {
                this.image.onload = function () {
                    me.drawBlockType();
                };
            } else {
                this.drawBlockType();
            }
        }
    }, {
        key: 'drawBlockType',
        value: function drawBlockType() {
            var ctx = this.blockshape.getContext('2d');
            ctx.drawImage(this.image, 0, 0, this.image.width, this.image.height, 0, 0, this.image.width * this.scale * window.devicePixelRatio, this.image.height * this.scale * window.devicePixelRatio);
            var icnv = document.createElement('canvas');
            this.blockicon = icnv;
            this.div.appendChild(icnv);
            (0, _lib.setCanvasSize)(icnv, this.blockshape.width, this.blockshape.height);
            (0, _lib.setProps)(icnv.style, {
                position: 'absolute',
                left: '0px',
                top: '0px',
                webkitTransform: 'translate(' + -this.blockshape.width / 2 + 'px, ' + -this.blockshape.height / 2 + 'px) ' + 'scale(' + 1 / window.devicePixelRatio + ') ' + 'translate(' + this.blockshape.width / 2 + 'px, ' + this.blockshape.height / 2 + 'px)',
                pointerEvents: 'all'
            });
            if (this.icon && this.icon.tagName) {
                this.drawIcon();
            }
            this.done = true;
        }
    }, {
        key: 'updateBlock',
        value: function updateBlock() {
            if (this.arg && this.arg.argType == 'p') {
                this.arg.updateIcon();
            }
        }
    }, {
        key: 'highlight',
        value: function highlight() {
            if (this.blocktype.indexOf('caret') > -1) {
                return;
            }
            if (!this.div.parentNode) {
                return;
            } // deleted block
            if (this.div.parentNode.id != 'palette' && this.div.parentNode != _ScratchJr2.default.getActiveScript()) {
                return;
            }
            this.shine.style.visibility = 'visible';
        }
    }, {
        key: 'unhighlight',
        value: function unhighlight() {
            if (this.blocktype.indexOf('caret') > -1) {
                return;
            }
            this.shine.style.visibility = 'hidden';
        }
    }, {
        key: 'drawIcon',
        value: function drawIcon() {
            var dx = 0;
            var dy = 0;
            var ctx = this.blockicon.getContext('2d');
            switch (this.blocktype) {
                case 'repeat':
                    var w = Math.round(74 * this.scale * window.devicePixelRatio);
                    var h = Math.round(65 * this.scale * window.devicePixelRatio);
                    (0, _lib.setCanvasSize)(this.blockicon, w, h);
                    dx = 0;
                    this.blockicon.style.left = this.shine.width / window.devicePixelRatio - Math.round(this.scale * 77) + 'px';
                    dy = Math.round(this.scale * 14 * window.devicePixelRatio);
                    (0, _lib.setProps)(this.blockicon.style, {
                        position: 'absolute',
                        webkitTransform: 'translate(' + -w / 2 + 'px, ' + -h / 2 + 'px) ' + 'scale(' + 1 / window.devicePixelRatio + ') ' + 'translate(' + w / 2 + 'px, ' + h / 2 + 'px)'
                    });
                    break;
            }
            this.drawMyIcon(ctx, dx, dy);
        }
    }, {
        key: 'drawMyIcon',
        value: function drawMyIcon(ctx, dx, dy) {
            var me = this;
            var icon = this.icon;
            if (!icon.complete) {
                icon.onload = function () {
                    ctx.drawImage(icon, 0, 0, icon.width, icon.height, dx, dy, icon.width * me.scale * window.devicePixelRatio, icon.height * me.scale * window.devicePixelRatio);
                };
            } else {
                ctx.drawImage(icon, 0, 0, icon.width, icon.height, dx, dy, icon.width * me.scale * window.devicePixelRatio, icon.height * me.scale * window.devicePixelRatio);
            }
        }
    }, {
        key: 'createArgument',
        value: function createArgument() {
            if (this.spec[4] == null) {
                return;
            }
            this.arg = new _BlockArg2.default(this);
        }
    }, {
        key: 'getArgValue',
        value: function getArgValue() {
            if (this.arg == null) {
                return null;
            }
            return this.arg.argValue;
        }
    }, {
        key: 'getSoundName',
        value: function getSoundName(list) {
            var val = this.arg.argValue;
            if (Number(val).toString() == 'NaN') {
                return val;
            }
            if (list.length <= val) {
                return list[0];
            }
            return list[val];
        }
    }, {
        key: 'update',
        value: function update(spr) {
            if (this.arg) {
                this.arg.update(spr);
            }
        }
    }, {
        key: 'setSound',
        value: function setSound(bt) {
            var p = this.arg.div;
            p.parentNode.removeChild(p);
            var icon = this.blockicon;
            icon.parentNode.removeChild(icon);
            var op = bt;
            var specs = _BlockSpecs2.default.defs[op];
            this.setBlockshapeFromSpecs(specs);
            this.drawBlock();
            this.createArgument();
        }
    }, {
        key: 'duplicateBlock',
        value: function duplicateBlock(dx, dy, spr) {
            var op = this.blocktype;
            var specs = _BlockSpecs2.default.defs[op];
            specs[4] = this.getArgValue();
            var bbx = new Block(specs, false, _lib.scaleMultiplier);
            (0, _lib.setProps)(bbx.div.style, {
                position: 'absolute',
                left: '0px',
                top: '0px'
            });
            bbx.moveBlock(dx, dy);
            bbx.update(spr);
            return bbx;
        }
    }, {
        key: 'resolveDocks',
        value: function resolveDocks() {
            var w = this.getWidth();
            var h = this.getHeight();
            if (this.aStart) {
                return [['start', true, 0, h / 2], ['flow', false, w - this.notchSize(), h / 2]];
            }
            if (this.anEnd) {
                return [['flow', true, 0, h / 2], ['changestate', false, w - 3, h / 2]];
            }
            if (this.isReporter) {
                return [['input', true, 0, 0], ['input', false, w - this.notchSize(), h / 2]];
            }
            if (this.cShape) {
                return [['flow', true, 0, this.blockshape.height / this.scale / window.devicePixelRatio - 33], ['flow', false, 35, this.blockshape.height / this.scale / window.devicePixelRatio - 33], ['flow', false, this.blockshape.width / this.scale / window.devicePixelRatio - this.notchSize() - 1, this.blockshape.height / this.scale / window.devicePixelRatio - 33]];
            } else {
                return [['flow', true, 0, h / 2], ['flow', false, w - this.notchSize(), h / 2]];
            }
        }
    }, {
        key: 'notchSize',
        value: function notchSize() {
            return 11;
        }

        //////////////////////////////////////////
        // Connect / Disconnect
        /////////////////////////////////////////

    }, {
        key: 'connectBlock',
        value: function connectBlock(myn, you, yourn) {
            if (this.isConnectedAfterFirst(myn, you, yourn)) {
                return;
            }
            this.connectLast(myn, you, yourn);
            this.setMyDock(myn, you);
            you.setMyDock(yourn, this);
            if (this.cShape && myn == 1 && this.inside.findLast().anEnd) {
                var theend = this.inside.findLast();
                theend.prev.next = null;
                var last = this.findLast();
                last.next = theend;
                theend.prev = last;
            }
        }
    }, {
        key: 'getMyDock',
        value: function getMyDock(dockn) {
            var myprops = this.cShape ? ['prev', 'inside', 'next'] : ['prev', 'next'];
            return this[myprops[dockn]];
        }
    }, {
        key: 'setMyDock',
        value: function setMyDock(dockn, you) {
            var myprops = this.cShape ? ['prev', 'inside', 'next'] : ['prev', 'next'];
            this[myprops[dockn]] = you;
        }
    }, {
        key: 'getMyDockNum',
        value: function getMyDockNum(you) {
            var connections = this.cShape ? [this.prev, this.inside, this.next] : [this.prev, this.next];
            return connections.indexOf(you);
        }
    }, {
        key: 'isConnectedAfterFirst',
        value: function isConnectedAfterFirst(myn, you) {
            if (myn == 0) {
                return false;
            }
            var prev = you.prev;
            if (prev == null) {
                return false;
            }
            if (this == prev) {
                return false;
            }
            var n = prev.getMyDockNum(you);
            var thefirst = this.findFirst();
            thefirst.connectBlock(0, prev, n);
            return true;
        }
    }, {
        key: 'findLast',
        value: function findLast() {
            if (this.next == null) {
                return this;
            }
            return this.next.findLast();
        }
    }, {
        key: 'findFirst',
        value: function findFirst() {
            if (this.prev == null) {
                return this;
            }
            return this.prev.findFirst();
        }
    }, {
        key: 'connectLast',
        value: function connectLast(myn, you, yourn) {
            if (myn != 0) {
                return;
            }
            var yourtail = you.getMyDock(yourn);
            var mylast = this.findLast();
            if (yourtail == mylast) {
                return;
            }
            if (this.cShape && this.inside == null && yourtail != null && !yourtail.anEnd) {
                var lastone = yourtail.findLast();
                this.inside = yourtail;
                yourtail.prev = this;
                if (lastone.anEnd) {
                    mylast.next = lastone;
                    var striplast = lastone.prev;
                    if (striplast) {
                        striplast.next = null;
                    }
                    lastone.prev = mylast;
                }
            } else {
                mylast.next = yourtail;
                if (yourtail == null) {
                    return;
                }
                yourtail.prev = mylast;
            }
        }
    }, {
        key: 'detachBlock',
        value: function detachBlock() {
            var you = this.prev;
            if (you == null) {
                return;
            }
            this.prev = null;
            if (you.cShape && you.inside == this) {
                you.inside = null;
            } else {
                you.next = null;
            }
        }

        //////////////////////////////////////////
        // Move
        /////////////////////////////////////////

    }, {
        key: 'moveBlock',
        value: function moveBlock(dx, dy) {
            this.div.top = dy;
            this.div.left = dx;
            this.div.style.webkitTransform = 'translate3d(' + this.div.left + 'px,' + this.div.top + 'px, 0)';
        }

        /////////////////////////////////
        // Forever and Repeat
        ////////////////////////////////

        // Repeat size 176 by 82

    }, {
        key: 'redrawRepeat',
        value: function redrawRepeat() {
            this.redrawShape(this.blockshape, this.image);
            if (this.blocktype.indexOf('caret') < 0) {
                this.redrawShape(this.shadow, this.shadowimg);
            }

            if (this.blocktype.indexOf('caret') > -1) {
                return;
            }
            var dx = this.blockshape.width / window.devicePixelRatio - 78 * this.scale;
            var dy = this.blockshape.height / window.devicePixelRatio - 82 * this.scale;
            this.blockicon.style.left = dx + 'px';
            this.arg.div.style.left = this.blockshape.width / window.devicePixelRatio - 66 * this.scale + 'px';
            this.blockicon.style.top = dy + 'px';
            this.arg.div.style.top = this.blockshape.height / window.devicePixelRatio - 11 * this.scale + 'px';
        }
    }, {
        key: 'redrawShape',
        value: function redrawShape(cnv, img) {
            (0, _lib.setCanvasSize)(this.div, (92 + this.hrubberband + 84) * this.scale, (100 + this.vrubberband) * this.scale);
            var scaleAndRatio = this.scale * window.devicePixelRatio;
            (0, _lib.setCanvasSize)(cnv, (92 + this.hrubberband + 84) * scaleAndRatio, (82 + this.vrubberband) * scaleAndRatio);
            (0, _lib.setProps)(cnv.style, {
                webkitTransform: 'translate(' + -cnv.width / 2 + 'px, ' + -cnv.height / 2 + 'px) ' + 'scale(' + 1 / window.devicePixelRatio + ') ' + 'translate(' + cnv.width / 2 + 'px, ' + cnv.height / 2 + 'px)'
            });
            var ctx = cnv.getContext('2d');
            // top line
            ctx.drawImage(img, 0, 0, 92, 29, 0, 0, 92 * scaleAndRatio, 29 * scaleAndRatio);
            ctx.drawImage(img, 92, 0, 1, 29, 92 * scaleAndRatio, 0, this.hrubberband * scaleAndRatio, 29 * scaleAndRatio);
            ctx.drawImage(img, 93, 0, img.width - 93, 29, 92 * scaleAndRatio + this.hrubberband * scaleAndRatio, 0, 83 * scaleAndRatio, 29 * scaleAndRatio);

            // height streach
            ctx.drawImage(img, 0, 29, 92, 1, 0, 29 * scaleAndRatio, 92 * scaleAndRatio, this.vrubberband * scaleAndRatio);
            ctx.drawImage(img, 93, 29, img.width - 93, 1, 92 * scaleAndRatio + this.hrubberband * scaleAndRatio, 29 * scaleAndRatio, 83 * scaleAndRatio, this.vrubberband * scaleAndRatio);

            // bottom
            ctx.drawImage(img, 0, 29, 45, 53, 0, 29 * scaleAndRatio + this.vrubberband * scaleAndRatio, 45 * scaleAndRatio, 53 * scaleAndRatio);
            ctx.drawImage(img, 93, 29, img.width - 93, 53, 92 * scaleAndRatio + this.hrubberband * scaleAndRatio, 29 * scaleAndRatio + this.vrubberband * scaleAndRatio, 83 * scaleAndRatio, 53 * scaleAndRatio);
        }
    }]);

    return Block;
}();

exports.default = Block;

/***/ }),

/***/ "./src/editor/blocks/BlockArg.js":
/*!***************************************!*\
  !*** ./src/editor/blocks/BlockArg.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ScratchJr = __webpack_require__(/*! ../ScratchJr */ "./src/editor/ScratchJr.js");

var _ScratchJr2 = _interopRequireDefault(_ScratchJr);

var _BlockSpecs = __webpack_require__(/*! ./BlockSpecs */ "./src/editor/blocks/BlockSpecs.js");

var _BlockSpecs2 = _interopRequireDefault(_BlockSpecs);

var _Menu = __webpack_require__(/*! ./Menu */ "./src/editor/blocks/Menu.js");

var _Menu2 = _interopRequireDefault(_Menu);

var _Undo = __webpack_require__(/*! ../ui/Undo */ "./src/editor/ui/Undo.js");

var _Undo2 = _interopRequireDefault(_Undo);

var _lib = __webpack_require__(/*! ../../utils/lib */ "./src/utils/lib.js");

var _Localization = __webpack_require__(/*! ../../utils/Localization */ "./src/utils/Localization.js");

var _Localization2 = _interopRequireDefault(_Localization);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/*
Argument types

n: numbers
t: text
m: regular menu with icons
s: text for soundblock
r: number for recorded sound block
p: page icons

*/
var BlockArg = function () {
    function BlockArg(block) {
        _classCallCheck(this, BlockArg);

        this.daddy = block;
        this.type = 'blockarg';
        this.argType = block.spec[3];
        switch (this.argType) {
            case 'n':
                this.argValue = block.spec[4];
                this.div = this.addNumArg();
                break;
            case 't':
                this.argValue = block.spec[4];
                if (_Localization2.default.isSampleLocalizedKey(this.argValue) && _ScratchJr2.default.isSampleOrStarter()) {
                    this.argValue = _Localization2.default.localize('SAMPLE_TEXT_' + this.argValue);
                }
                this.div = this.addTextArg();
                break;
            case 'm':
                this.argValue = block.spec[4];
                this.list = JSON.stringify(block.spec[1]);
                this.numperrow = 3;
                this.icon = this.getIconFrom(block.spec[4], block.spec[1]);
                this.div = this.addImageMenu(this.closePictureMenu);
                break;
            case 'd':
                this.argValue = block.spec[4];
                this.list = JSON.stringify(block.spec[1]);
                this.numperrow = 3;
                this.icon = _BlockSpecs2.default.speeds[this.argValue];
                this.div = this.addImageMenu(this.menuCloseSpeeds);
                break;
            case 'p':
                this.argValue = block.spec[4];
                this.div = this.pageIcon(this.argValue);
                var ctx = block.blockshape.getContext('2d');
                ctx.drawImage(this.div, 0, 0, this.div.width, this.div.height, 0, 0, this.div.width * block.scale, this.div.height * block.scale);
                break;
            case 's':
                this.argValue = block.spec[4];
                this.div = (0, _lib.newDiv)(block.div, 2, 46, 60, 20, {
                    position: 'absolute',
                    zoom: block.scale * 100 + '%'
                });
                var p = (0, _lib.newP)(this.div, this.argValue.split('.')[0], {
                    width: '60px'
                });
                p.setAttribute('class', 'soundname');
                break;
            case 'r':
                this.argValue = block.spec[4];
                this.div = (0, _lib.newHTML)('div', 'recordedCircle', block.div);
                (0, _lib.setProps)(this.div.style, {
                    zoom: block.scale * 100 + '%'
                });
                var num = (0, _lib.newHTML)('p', 'recordedNumber', this.div);
                num.textContent = this.daddy.inpalette ? this.argValue : '?';
                break;
            default:
                break;
        }
    }

    _createClass(BlockArg, [{
        key: 'update',
        value: function update() {
            if (this.argType == 'r') {
                this.div.childNodes[0].textContent = this.argValue;
            }
            if (this.arg && this.argType == 'p') {
                this.arg.updateIcon();
            }
        }
    }, {
        key: 'getScreenPt',
        value: function getScreenPt() {
            return {
                x: (0, _lib.globalx)(this.daddy.div),
                y: (0, _lib.globaly)(this.daddy.div)
            };
        }
    }, {
        key: 'addNumArg',
        value: function addNumArg() {
            var str = this.argValue.toString();
            if (this.daddy.inpalette) {
                return this.addLabel(str, false);
            } else {
                return this.addNumArgument(str);
            }
        }
    }, {
        key: 'addTextArg',
        value: function addTextArg() {
            var str = this.argValue.toString();
            if (this.daddy.inpalette) {
                return this.addLabel(str, true);
            } else {
                return this.addTextArgument(str, true);
            }
        }
    }, {
        key: 'addLabel',
        value: function addLabel(str, isText) {
            var scale = this.daddy.scale;
            var dx = isText ? 8 : 16;
            var dy = 57;
            if (this.daddy.blocktype == 'repeat') {
                dx = Math.round(this.daddy.blockshape.width / window.devicePixelRatio / scale) - 60;
                dy = Math.round(this.daddy.blockshape.height / window.devicePixelRatio / scale) - 10;
            }
            var img = isText ? _BlockSpecs2.default.textfieldimg : _BlockSpecs2.default.numfieldimg;
            var w = isText ? 53 : 36;
            var h = 17;
            var field = (0, _lib.newCanvas)(this.daddy.div, 0, 0, w * window.devicePixelRatio, h * window.devicePixelRatio, {
                position: 'absolute',
                webkitTransform: 'translate(' + -w * window.devicePixelRatio / 2 + 'px, ' + -h * window.devicePixelRatio / 2 + 'px) ' + 'scale(' + scale / window.devicePixelRatio + ') ' + 'translate(' + (dx * window.devicePixelRatio + w * window.devicePixelRatio / 2) + 'px, ' + (dy * window.devicePixelRatio + h * window.devicePixelRatio / 2) + 'px)',
                pointerEvents: 'all'

            });
            var ctx = field.getContext('2d');
            if (!img.complete) {
                img.onload = function () {
                    ctx.drawImage(img, 0, 0, w, h, 0, 0, w * window.devicePixelRatio, h * window.devicePixelRatio);
                };
            } else {
                ctx.drawImage(img, 0, 0, w, h, 0, 0, w * window.devicePixelRatio, h * window.devicePixelRatio);
            }
            var div = (0, _lib.newDiv)(this.daddy.div, dx, dy, w, h, {
                position: 'absolute',
                zoom: scale * 100 + '%',
                margin: '0px',
                padding: '0px'
            });
            var cnv = (0, _lib.newCanvas)(div, 0, 0, w * window.devicePixelRatio, h * window.devicePixelRatio, {
                position: 'absolute',
                webkitTransform: 'translate(' + -w * window.devicePixelRatio / 2 + 'px, ' + -h * window.devicePixelRatio / 2 + 'px) ' + 'scale(' + 1 / window.devicePixelRatio + ') ' + 'translate(' + w * window.devicePixelRatio / 2 + 'px, ' + h * window.devicePixelRatio / 2 + 'px)'
            });
            ctx = cnv.getContext('2d');
            var font = 12 * window.devicePixelRatio + 'px ' + window.Settings.blockArgFont;
            var lsize = (0, _lib.getStringSize)(ctx, font, str).width;
            (0, _lib.writeText)(ctx, font, '#77787b', str, h * window.devicePixelRatio - 3, Math.round((w * window.devicePixelRatio - lsize) / 2));
            return div;
        }
    }, {
        key: 'addNumArgument',
        value: function addNumArgument(str) {
            var div = (0, _lib.newHTML)('div', 'numfield', this.daddy.div);
            if (this.daddy.blocktype == 'repeat') {
                (0, _lib.setProps)(div.style, {
                    left: this.daddy.blockshape.width / window.devicePixelRatio - 62 * this.daddy.scale + 'px',
                    top: this.daddy.blockshape.height / window.devicePixelRatio - 11 * this.daddy.scale + 'px'
                });
            }
            var ti = (0, _lib.newHTML)('h3', undefined, div);
            this.input = ti;
            ti.owner = this;
            ti.textContent = str;
            this.arg = div;
            // Expand the parent div to incorporate the size of the button,
            // else on Android 4.2 the bottom part of the button
            // will not be clickable.
            div.parentNode.height += 10 * window.devicePixelRatio;
            (0, _lib.setCanvasSize)(div.parentNode, div.parentNode.width, div.parentNode.height);
            return div;
        }
    }, {
        key: 'addTextArgument',
        value: function addTextArgument(str) {
            var div = (0, _lib.newHTML)('div', 'textfield', this.daddy.div);
            var ti = (0, _lib.newHTML)('h3', undefined, div);
            this.input = ti;
            ti.owner = this;
            ti.textContent = str;
            this.arg = div;
            // Expand the parent div to incorporate the size of the button,
            // else on Android 4.2 the bottom part of the button
            // will not be clickable.
            div.parentNode.height += 10 * window.devicePixelRatio;
            (0, _lib.setCanvasSize)(div.parentNode, div.parentNode.width, div.parentNode.height);
            return div;
        }
    }, {
        key: 'setValue',
        value: function setValue(val) {
            if (!this.input) {
                return;
            }
            this.argValue = val;
            if (this.argType == 'n' && isNaN(Number(val))) {
                this.argValue = 0;
            }
            this.input.textContent = val;
        }
    }, {
        key: 'isText',
        value: function isText() {
            return this.argType != 'n';
        }

        /////////////////////////////////
        // Menu drop downs
        //////////////////////////////

    }, {
        key: 'getIconFrom',
        value: function getIconFrom(key, list) {
            for (var i = 0; i < list.length; i++) {
                if (list[i].indexOf(key) > -1) {
                    return list[i];
                }
            }
            return list[0];
        }
    }, {
        key: 'addImageMenu',
        value: function addImageMenu(fcn) {
            this.drawChoice(this.daddy.blockicon);
            this.button = this.addPressButton();
            if (!this.daddy.inpalette) {
                var ba = this;
                ba.button.ontouchstart = function (evt) {
                    ba.pressDropDown(evt, fcn);
                };
                ba.button.onmousedown = function (evt) {
                    ba.pressDropDown(evt, fcn);
                };
                // Expand the parent div to incorporate the size of the button,
                // else on Android 4.2 the bottom part of the button
                // will not be clickable.
                this.button.parentNode.height += this.button.height / 2;
                (0, _lib.setCanvasSize)(this.button.parentNode, this.button.parentNode.width, this.button.parentNode.height);
            }
            return this.daddy.blockicon;
        }
    }, {
        key: 'drawChoice',
        value: function drawChoice(cnv) {
            var ctx = cnv.getContext('2d');
            ctx.clearRect(0, 0, cnv.width, cnv.height);
            var icon = _BlockSpecs2.default.getImageFrom('assets/blockicons/' + this.icon, 'svg');
            var scale = this.daddy.scale;
            if (!icon.complete) {
                icon.onload = function () {
                    ctx.drawImage(icon, 0, 0, icon.width, icon.height, 0, 0, icon.width * scale * window.devicePixelRatio, icon.height * scale * window.devicePixelRatio);
                };
            } else {
                ctx.drawImage(icon, 0, 0, icon.width, icon.height, 0, 0, icon.width * scale * window.devicePixelRatio, icon.height * scale * window.devicePixelRatio);
            }
            return cnv;
        }
    }, {
        key: 'addPressButton',
        value: function addPressButton() {
            var scale = this.daddy.scale;
            var dx;
            if (this.daddy.inpalette) {
                dx = this.daddy.aStart ? 26 : 16;
            } else {
                dx = this.daddy.aStart ? 20 : 10;
            }
            var dy = 56;
            var w = this.daddy.inpalette ? 36 : 48;
            var h = this.daddy.inpalette ? 20 : 27;
            var img = this.daddy.inpalette ? _BlockSpecs2.default.pressbuttonSmall : _BlockSpecs2.default.pressbutton;
            var field = (0, _lib.newCanvas)(this.daddy.div, dx, dy, w, h, {
                position: 'absolute',
                zoom: scale * 100 + '%',
                pointerEvents: 'all',
                webkitTransform: 'translateZ(0)'
            });
            var ctx = field.getContext('2d');
            if (!img.complete) {
                img.onload = function () {
                    ctx.drawImage(img, 0, 0);
                };
            } else {
                ctx.drawImage(img, 0, 0);
            }
            return field;
        }
    }, {
        key: 'pressDropDown',
        value: function pressDropDown(e, fcn) {
            if (_lib.isTablet && e.touches && e.touches.length > 1) {
                return;
            }
            if (_ScratchJr2.default.onHold) {
                return;
            }
            e.preventDefault();
            e.stopPropagation();
            _ScratchJr2.default.unfocus(e);
            if (!this.daddy) {
                return;
            }
            _Menu2.default.openDropDown(this.daddy.div, fcn);
        }
    }, {
        key: 'closePictureMenu',
        value: function closePictureMenu(e, mu, b, c) {
            e.preventDefault();
            var value = b.owner.arg.argValue;
            b.owner.arg.argValue = c.substring(c.indexOf('_') + 1, c.length);
            var ctx = b.owner.blockicon.getContext('2d');
            b.icon = _BlockSpecs2.default.getImageFrom('assets/blockicons/' + c, 'svg');
            ctx.clearRect(0, 0, 85 * _lib.scaleMultiplier * window.devicePixelRatio, 66 * _lib.scaleMultiplier * window.devicePixelRatio);
            if (!b.icon.complete) {
                b.icon.onload = function () {
                    var w = b.icon.width;
                    var h = b.icon.height;
                    ctx.drawImage(b.icon, 0, 0, w, h, 0, 0, w * _lib.scaleMultiplier * window.devicePixelRatio, h * _lib.scaleMultiplier * window.devicePixelRatio);
                };
            } else {
                var w = b.icon.width;
                var h = b.icon.height;
                ctx.drawImage(b.icon, 0, 0, w, h, 0, 0, w * _lib.scaleMultiplier * window.devicePixelRatio, h * _lib.scaleMultiplier * window.devicePixelRatio);
            }
            if (_Menu2.default.openMenu) {
                _Menu2.default.openMenu.parentNode.removeChild(_Menu2.default.openMenu);
            }
            if (b.owner.arg.argValue != value) {
                var spr = b.parentNode.owner.spr;
                var action = {
                    action: 'scripts',
                    where: spr.div.parentNode.owner.id,
                    who: spr.id
                };
                _Undo2.default.record(action);
                _ScratchJr2.default.storyStart('BlockArg.prototype.closePictureMenu');
            }
            _Menu2.default.openMenu = undefined;
        }
    }, {
        key: 'menuCloseSpeeds',
        value: function menuCloseSpeeds(e, mu, b, c) {
            e.preventDefault();
            var value = b.owner.arg.argValue;
            b.owner.arg.argValue = _BlockSpecs2.default.speeds.indexOf(c);
            var ctx = b.owner.blockicon.getContext('2d');
            b.icon = _BlockSpecs2.default.getImageFrom('assets/blockicons/' + c, 'svg');
            ctx.clearRect(0, 0, 64 * _lib.scaleMultiplier * window.devicePixelRatio, 64 * _lib.scaleMultiplier * window.devicePixelRatio);
            // On Android 4.2, clearRect does not work right away. Need to tickle the DOM
            b.owner.blockicon.style.display = 'none';
            b.owner.blockicon.offsetHeight;
            b.owner.blockicon.style.display = 'inherit';
            if (!b.icon.complete) {
                b.icon.onload = function () {
                    var w = b.icon.width;
                    var h = b.icon.height;
                    ctx.drawImage(b.icon, 0, 0, w, h, 0, 0, w * _lib.scaleMultiplier * window.devicePixelRatio, h * _lib.scaleMultiplier * window.devicePixelRatio);
                };
            } else {
                var w = b.icon.width;
                var h = b.icon.height;
                ctx.drawImage(b.icon, 0, 0, w, h, 0, 0, w * _lib.scaleMultiplier * window.devicePixelRatio, h * _lib.scaleMultiplier * window.devicePixelRatio);
            }
            if (_Menu2.default.openMenu) {
                _Menu2.default.openMenu.parentNode.removeChild(_Menu2.default.openMenu);
            }
            if (b.owner.arg.argValue != value) {
                var spr = b.parentNode.owner.spr;
                var action = {
                    action: 'scripts',
                    where: spr.div.parentNode.owner.id,
                    who: spr.id
                };
                _Undo2.default.record(action);
                _ScratchJr2.default.storyStart('BlockArg.prototype.menuCloseSpeeds');
            }
            _Menu2.default.openMenu = undefined;
        }

        //////////////////////////
        // Page Icon
        //////////////////////////

    }, {
        key: 'pageIcon',
        value: function pageIcon(num) {
            var dpr = window.devicePixelRatio;
            var page = _ScratchJr2.default.stage.pages[num - 1];
            var icon = document.createElement('canvas');
            (0, _lib.setCanvasSize)(icon, 86 * dpr, 66 * dpr);
            if (!page) {
                return icon;
            }
            var canvas = document.createElement('canvas');
            (0, _lib.setCanvasSize)(canvas, 52 * dpr, 42 * dpr);
            var mainctx = canvas.getContext('2d');
            mainctx.fillStyle = '#AE1F24';
            mainctx.fillRect(0, 0, canvas.width, canvas.height);
            mainctx.fillStyle = '#28A5DA';
            mainctx.fillRect(1 * dpr, 1 * dpr, 50 * dpr, 40 * dpr);
            var c = document.createElement('canvas');
            var w = (52 - 6) * dpr;
            var h = (42 - 6) * dpr;
            (0, _lib.setCanvasSize)(c, w, h);
            var ctx = c.getContext('2d');
            ctx.fillStyle = 'white';
            ctx.fillRect(0, 0, c.width, c.height);
            if (page.bkg.childElementCount > 0) {
                var img = page.bkg.childNodes[0];
                var imgw = img.naturalWidth ? img.naturalWidth : img.width;
                var imgh = img.naturalHeight ? img.naturalHeight : img.height;
                ctx.drawImage(img, 0, 0, imgw, imgh, 0, 0, w, h);
            }
            var scale = w / 480;
            for (var i = 0; i < page.div.childElementCount; i++) {
                var spr = page.div.childNodes[i].owner;
                if (!spr) {
                    continue;
                }
                page.stampSpriteAt(ctx, spr, scale);
            }
            mainctx.drawImage(c, 3 * dpr, 3 * dpr);
            var ictx = icon.getContext('2d');
            ictx.fillStyle = '#AE1F24';
            ictx.beginPath();
            ictx.arc(63 * dpr, 19 * dpr, 10 * dpr, 0 * dpr, Math.PI * 2, true);
            ictx.closePath();
            ictx.fill();
            ictx.drawImage(canvas, 14 * dpr, 16 * dpr);
            ictx.beginPath();
            ictx.fillStyle = '#28A5DA';
            ictx.strokeStyle = '#355E7C';
            ictx.arc(63 * dpr, 19 * dpr, 8 * dpr, 0 * dpr, Math.PI * 2, true);
            ictx.closePath();
            ictx.stroke();
            ictx.fill();
            (0, _lib.writeText)(ictx, 'bold ' + 12 * dpr + 'px ' + window.Settings.blockArgFont, 'white', page.num, 26 * dpr, 58 * dpr);
            return icon;
        }
    }, {
        key: 'updateIcon',
        value: function updateIcon() {
            var num = this.argValue;
            var page = _ScratchJr2.default.stage.pages[num - 1];
            page.num = num;
            this.div = this.pageIcon(num);
            var block = this.daddy;
            var ctx = block.blockshape.getContext('2d');
            ctx.drawImage(this.div, 0, 0, this.div.width, this.div.height, 0, 0, this.div.width * block.scale, this.div.height * block.scale);
        }
    }]);

    return BlockArg;
}();

exports.default = BlockArg;

/***/ }),

/***/ "./src/editor/blocks/BlockSpecs.js":
/*!*****************************************!*\
  !*** ./src/editor/blocks/BlockSpecs.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Localization = __webpack_require__(/*! ../../utils/Localization */ "./src/utils/Localization.js");

var _Localization2 = _interopRequireDefault(_Localization);

var _IO = __webpack_require__(/*! ../../tablet/IO */ "./src/tablet/IO.js");

var _IO2 = _interopRequireDefault(_IO);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var loadCount = 0;

var loadassets = {};
var fontwhite = '#f2f3f2';
var fontpink = '#ff8ae9';
var fontdarkgray = '#6d6e6c';
var fontblack = '#1b2a34';
var fontyellow = '#ffdd33';
var fontdarkgreen = '#287f46';
var fontpurple = '#8f56e3';
var fontblue = '#0d50ab';
var fontred = '#c4281b';
var fontorange = '#da8540';

var fontcolors = [fontred, fontorange, fontyellow, fontdarkgreen, fontblue, fontpink, fontpurple, fontwhite, fontdarkgray, fontblack];

var fontsizes = [16, 24, 36, 48, 56, 72];

var getshapes = ['LetterGet_Orange', 'LetterGet_Red', 'LetterGet_Yellow', 'LetterGet_Green', 'LetterGet_Blue', 'LetterGet_Purple'];
var sendshapes = ['LetterSend_Orange', 'LetterSend_Red', 'LetterSend_Yellow', 'LetterSend_Green', 'LetterSend_Blue', 'LetterSend_Purple'];

var speeds = ['speed0', 'speed1', 'speed2'];

var BlockSpecs = function () {
    function BlockSpecs() {
        _classCallCheck(this, BlockSpecs);
    }

    _createClass(BlockSpecs, null, [{
        key: 'initBlocks',
        value: function initBlocks() {
            loadassets = new Object();
            BlockSpecs.loadGraphics();
            BlockSpecs.defs = BlockSpecs.setupBlocksSpecs();
            BlockSpecs.palettes = BlockSpecs.setupPalettesDef();
            BlockSpecs.categories = BlockSpecs.setupCategories();
            if (window.Settings.edition == 'PBS') {
                BlockSpecs.canvasMask = BlockSpecs.getImageFrom('assets/ui/canvasmask', 'svg');
            } else {
                BlockSpecs.canvasMask = BlockSpecs.getImageFrom('assets/ui/canvasmask');
            }
            if (window.Settings.edition != 'PBS') {
                BlockSpecs.projectThumb = BlockSpecs.getImageFrom('assets/lobby/pmask');
            }
            _IO2.default.requestFromServer('assets/balloon.svg', BlockSpecs.setBalloon);
            loadCount++;
        }
    }, {
        key: 'setBalloon',
        value: function setBalloon(str) {
            loadCount--;
            BlockSpecs.balloon = str;
        }
    }, {
        key: 'loadGraphics',
        value: function loadGraphics() {
            BlockSpecs.mic = BlockSpecs.getImageFrom('assets/ui/recordslot', 'svg');
            BlockSpecs.yellowStart = BlockSpecs.getImageFrom('assets/blocks/start', 'svg');
            BlockSpecs.yellowStartH = BlockSpecs.getImageFrom('assets/blocks/eh/startH');

            BlockSpecs.yellowCmd = BlockSpecs.getImageFrom('assets/blocks/yellowCmd', 'svg');
            BlockSpecs.yellowCmdH = BlockSpecs.getImageFrom('assets/blocks/eh/yellowCmdH');

            BlockSpecs.redEnd = BlockSpecs.getImageFrom('assets/blocks/endshort', 'svg');
            BlockSpecs.redEndH = BlockSpecs.getImageFrom('assets/blocks/eh/stopH');

            BlockSpecs.orangeCmd = BlockSpecs.getImageFrom('assets/blocks/flow', 'svg');
            BlockSpecs.orangeCmdH = BlockSpecs.getImageFrom('assets/blocks/eh/flowH');

            BlockSpecs.limeCmd = BlockSpecs.getImageFrom('assets/blocks/sounds', 'svg');
            BlockSpecs.limeCmdH = BlockSpecs.getImageFrom('assets/blocks/eh/soundsH');

            BlockSpecs.pinkCmd = BlockSpecs.getImageFrom('assets/blocks/looks', 'svg');
            BlockSpecs.pinkCmdH = BlockSpecs.getImageFrom('assets/blocks/eh/looksH');

            BlockSpecs.redEndLong = BlockSpecs.getImageFrom('assets/blocks/endlong', 'svg');
            BlockSpecs.redEndLongH = BlockSpecs.getImageFrom('assets/blocks/eh/stoplongH');

            BlockSpecs.cShape = BlockSpecs.getImageFrom('assets/blocks/repeat');
            BlockSpecs.cShapeH = BlockSpecs.getImageFrom('assets/blocks/eh/repeatH');

            BlockSpecs.blueCmd = BlockSpecs.getImageFrom('assets/blocks/blueCmd', 'svg');
            BlockSpecs.blueCmdH = BlockSpecs.getImageFrom('assets/blocks/eh/blueCmdH');

            BlockSpecs.textfieldimg = BlockSpecs.getImageFrom('assets/misc/Text-01');
            BlockSpecs.numfieldimg = BlockSpecs.getImageFrom('assets/misc/Number-01');
            BlockSpecs.pressbutton = BlockSpecs.getImageFrom('assets/misc/pushbutton-01', 'svg');
            BlockSpecs.pressbuttonSmall = BlockSpecs.getImageFrom('assets/misc/pushbutton', 'svg');
            BlockSpecs.caretrepeat = BlockSpecs.getImageFrom('assets/blocks/caretrepeat');
            BlockSpecs.cmdS = BlockSpecs.getImageFrom('assets/blocks/shadowCmd', 'svg');
            BlockSpecs.startS = BlockSpecs.getImageFrom('assets/blocks/shadowStart', 'svg');
            BlockSpecs.endS = BlockSpecs.getImageFrom('assets/blocks/shadowEndShort', 'svg');
            BlockSpecs.endLongS = BlockSpecs.getImageFrom('assets/blocks/shadowEndLong', 'svg');
            BlockSpecs.repeatS = BlockSpecs.getImageFrom('assets/blocks/shadowRepeat');
        }
    }, {
        key: 'getImageFrom',
        value: function getImageFrom(url, ext) {
            var img = document.createElement('img');
            img.src = url + (ext ? '.' + ext : '.png');
            if (!img.complete) {
                loadassets[img.src] = img;
                loadCount++;
                img.onload = function () {
                    delete loadassets[img.src];
                    loadCount--;
                };
            }
            return img;
        }
    }, {
        key: 'refreshLoading',
        value: function refreshLoading() {
            for (var key in loadassets) {
                if (loadassets[key].complete) {
                    loadCount--;
                }
            }
        }
    }, {
        key: 'setupCategories',
        value: function setupCategories() {
            return new Array([BlockSpecs.getImageFrom('assets/categories/StartOn', 'svg'), BlockSpecs.getImageFrom('assets/categories/StartOff', 'svg'), window.Settings.categoryStartColor], [BlockSpecs.getImageFrom('assets/categories/MotionOn', 'svg'), BlockSpecs.getImageFrom('assets/categories/MotionOff', 'svg'), window.Settings.categoryMotionColor], [BlockSpecs.getImageFrom('assets/categories/LooksOn', 'svg'), BlockSpecs.getImageFrom('assets/categories/LooksOff', 'svg'), window.Settings.categoryLooksColor], [BlockSpecs.getImageFrom('assets/categories/SoundOn', 'svg'), BlockSpecs.getImageFrom('assets/categories/SoundOff', 'svg'), window.Settings.categorySoundColor], [BlockSpecs.getImageFrom('assets/categories/FlowOn', 'svg'), BlockSpecs.getImageFrom('assets/categories/FlowOff', 'svg'), window.Settings.categoryFlowColor], [BlockSpecs.getImageFrom('assets/categories/StopOn', 'svg'), BlockSpecs.getImageFrom('assets/categories/StopOff', 'svg'), window.Settings.categoryStopColor]);
        }
    }, {
        key: 'setupPalettesDef',
        value: function setupPalettesDef() {
            return [['onflag', 'onclick', 'ontouch', 'onmessage', 'message'], ['forward', 'back', 'up', 'down', 'right', 'left', 'hop', 'home'], ['say', 'space', 'grow', 'shrink', 'same', 'space', 'hide', 'show'], [], ['wait', 'stopmine', 'setspeed', 'repeat'], ['endstack', 'forever']];
        }

        ///////////////////////////////
        // Data Structure
        //
        // name - blocktype, icon or datastructure, blockshape, argtype, initial value, highlight, min, max, shadow
        //
        // arg types:
        // null
        // n -> number field;
        // t -> text field
        // m  --> image menu with argvalue equal to name;
        // d --> image menu with argvalue equal to number;
        // c -- > color drop down
        // s --> sound name
        // p --> page icon
        //
        ////////////////////////////////

    }, {
        key: 'setupBlocksSpecs',
        value: function setupBlocksSpecs() {
            return {
                'onflag': ['onflag', BlockSpecs.getImageFrom('assets/blockicons/greenFlag', 'svg'), BlockSpecs.yellowStart, null, null, BlockSpecs.yellowStartH, null, null, BlockSpecs.startS],
                'onmessage': ['onmessage', getshapes, BlockSpecs.yellowStart, 'm', 'Orange', BlockSpecs.yellowStartH, null, null, BlockSpecs.startS],
                'onclick': ['onclick', BlockSpecs.getImageFrom('assets/blockicons/OnTouch', 'svg'), BlockSpecs.yellowStart, null, null, BlockSpecs.yellowStartH, null, null, BlockSpecs.startS],
                'ontouch': ['ontouch', BlockSpecs.getImageFrom('assets/blockicons/Bump', 'svg'), BlockSpecs.yellowStart, null, null, BlockSpecs.yellowStartH, null, null, BlockSpecs.startS],
                'message': ['message', sendshapes, BlockSpecs.yellowCmd, 'm', 'Orange', BlockSpecs.yellowCmdH, null, null, BlockSpecs.cmdS],

                'repeat': ['repeat', BlockSpecs.getImageFrom('assets/blockicons/Repeat', 'svg'), BlockSpecs.cShape, 'n', 4, BlockSpecs.cShapeH, 0, 24, BlockSpecs.repeatS],

                'forward': ['forward', BlockSpecs.getImageFrom('assets/blockicons/Foward', 'svg'), BlockSpecs.blueCmd, 'n', 1, BlockSpecs.blueCmdH, -20, 20, BlockSpecs.cmdS],
                'back': ['back', BlockSpecs.getImageFrom('assets/blockicons/Back', 'svg'), BlockSpecs.blueCmd, 'n', 1, BlockSpecs.blueCmdH, -20, 20, BlockSpecs.cmdS],
                'up': ['up', BlockSpecs.getImageFrom('assets/blockicons/Up', 'svg'), BlockSpecs.blueCmd, 'n', 1, BlockSpecs.blueCmdH, -15, 15, BlockSpecs.cmdS],
                'down': ['down', BlockSpecs.getImageFrom('assets/blockicons/Down', 'svg'), BlockSpecs.blueCmd, 'n', 1, BlockSpecs.blueCmdH, -15, 15, BlockSpecs.cmdS],
                'right': ['right', BlockSpecs.getImageFrom('assets/blockicons/Right', 'svg'), BlockSpecs.blueCmd, 'n', 1, BlockSpecs.blueCmdH, -12, 12, BlockSpecs.cmdS],
                'left': ['left', BlockSpecs.getImageFrom('assets/blockicons/Left', 'svg'), BlockSpecs.blueCmd, 'n', 1, BlockSpecs.blueCmdH, -12, 12, BlockSpecs.cmdS],
                'home': ['home', BlockSpecs.getImageFrom('assets/blockicons/Home', 'svg'), BlockSpecs.blueCmd, null, null, BlockSpecs.blueCmdH, null, null, BlockSpecs.cmdS],
                'hop': ['hop', BlockSpecs.getImageFrom('assets/blockicons/Hop', 'svg'), BlockSpecs.blueCmd, 'n', 2, BlockSpecs.blueCmdH, -15, 15, BlockSpecs.cmdS],

                'wait': ['wait', BlockSpecs.getImageFrom('assets/blockicons/Wait', 'svg'), BlockSpecs.orangeCmd, 'n', 10, BlockSpecs.orangeCmdH, 0, 50, BlockSpecs.cmdS],
                'setspeed': ['setspeed', speeds, BlockSpecs.orangeCmd, 'd', 1, BlockSpecs.orangeCmdH, null, null, BlockSpecs.cmdS],
                'stopmine': ['stopmine', BlockSpecs.getImageFrom('assets/blockicons/Stop', 'svg'), BlockSpecs.orangeCmd, null, null, BlockSpecs.orangeCmdH, null, null, BlockSpecs.cmdS],

                'say': ['say', BlockSpecs.getImageFrom('assets/blockicons/Say', 'svg'), BlockSpecs.pinkCmd, 't', _Localization2.default.localize('SAY_BLOCK_DEFAULT_ARGUMENT'), BlockSpecs.pinkCmdH, null, null, BlockSpecs.cmdS],
                'show': ['show', BlockSpecs.getImageFrom('assets/blockicons/Appear', 'svg'), BlockSpecs.pinkCmd, null, null, BlockSpecs.pinkCmdH, null, null, BlockSpecs.cmdS],
                'hide': ['hide', BlockSpecs.getImageFrom('assets/blockicons/Disappear', 'svg'), BlockSpecs.pinkCmd, null, null, BlockSpecs.pinkCmdH, null, null, BlockSpecs.cmdS],
                'grow': ['grow', BlockSpecs.getImageFrom('assets/blockicons/Grow', 'svg'), BlockSpecs.pinkCmd, 'n', 2, BlockSpecs.pinkCmdH, -10, 10, BlockSpecs.cmdS],
                'shrink': ['shrink', BlockSpecs.getImageFrom('assets/blockicons/Shrink', 'svg'), BlockSpecs.pinkCmd, 'n', 2, BlockSpecs.pinkCmdH, -10, 10, BlockSpecs.cmdS],
                'same': ['same', BlockSpecs.getImageFrom('assets/blockicons/Reset', 'svg'), BlockSpecs.pinkCmd, null, null, BlockSpecs.pinkCmdH, null, null, BlockSpecs.cmdS],

                'playsnd': ['playsnd', BlockSpecs.getImageFrom('assets/blockicons/Speaker', 'svg'), BlockSpecs.limeCmd, 's', 'pop.mp3', BlockSpecs.limeCmdH, null, null, BlockSpecs.cmdS],
                'playusersnd': ['playusersnd', BlockSpecs.getImageFrom('assets/blockicons/Microphone', 'svg'), BlockSpecs.limeCmd, 'r', '1', BlockSpecs.limeCmdH, null, null, BlockSpecs.cmdS],
                'endstack': ['endstack', null, BlockSpecs.redEnd, null, null, BlockSpecs.redEndH, null, null, BlockSpecs.endS],
                'forever': ['forever', BlockSpecs.getImageFrom('assets/blockicons/Forever', 'svg'), BlockSpecs.redEnd, null, null, BlockSpecs.redEndH, null, null, BlockSpecs.endS],
                'gotopage': ['gotopage', null, BlockSpecs.redEndLong, 'p', '2', BlockSpecs.redEndLongH, null, null, BlockSpecs.endLongS],
                'caretstart': ['caretstart', null, BlockSpecs.getImageFrom('assets/blocks/caretstart', 'svg'), null, null, null, null, null],
                'caretend': ['caretend', null, BlockSpecs.getImageFrom('assets/blocks/caretend', 'svg'), null, null, null, null, null],
                'caretrepeat': ['caretrepeat', null, BlockSpecs.getImageFrom('assets/blocks/caretrepeat'), null, null, null, null, null],
                'caretcmd': ['caretcmd', null, BlockSpecs.getImageFrom('assets/blocks/caretcmd', 'svg'), null, null, null, null, null]

            };
        }
    }, {
        key: 'blockDesc',
        value: function blockDesc(b, spr) {
            var str = b.getArgValue() ? b.getArgValue().toString() : b.blocktype == 'playsnd' ? 'SOUND' : '';

            return {
                'onflag': _Localization2.default.localize('BLOCK_DESC_GREEN_FLAG'),
                'onclick': _Localization2.default.localize('BLOCK_DESC_ON_TAP', {
                    CHARACTER_NAME: spr.name
                }),
                'ontouch': _Localization2.default.localize('BLOCK_DESC_ON_BUMP', {
                    CHARACTER_NAME: spr.name ? spr.name : ''
                }),
                'onmessage': _Localization2.default.localize('BLOCK_DESC_ON_MESSAGE', {
                    COLOR: _Localization2.default.localize('BLOCK_DESC_MESSAGE_COLOR_ORANGE')
                }),
                'repeat': _Localization2.default.localize('BLOCK_DESC_REPEAT'),
                'forward': _Localization2.default.localize('BLOCK_DESC_MOVE_RIGHT'),
                'back': _Localization2.default.localize('BLOCK_DESC_MOVE_LEFT'),
                'up': _Localization2.default.localize('BLOCK_DESC_MOVE_UP'),
                'down': _Localization2.default.localize('BLOCK_DESC_MOVE_DOWN'),
                'home': _Localization2.default.localize('BLOCK_DESC_GO_HOME'),
                'left': _Localization2.default.localize('BLOCK_DESC_TURN_LEFT'),
                'right': _Localization2.default.localize('BLOCK_DESC_TURN_RIGHT'),
                'hop': _Localization2.default.localize('BLOCK_DESC_HOP'),
                'wait': _Localization2.default.localize('BLOCK_DESC_WAIT'),
                'setspeed': _Localization2.default.localize('BLOCK_DESC_SET_SPEED'),
                'stopmine': _Localization2.default.localize('BLOCK_DESC_STOP', {
                    CHARACTER_NAME: spr.name ? spr.name : spr.str
                }),
                'say': _Localization2.default.localize('BLOCK_DESC_SAY'),
                'show': _Localization2.default.localize('BLOCK_DESC_SHOW'),
                'hide': _Localization2.default.localize('BLOCK_DESC_HIDE'),
                'grow': _Localization2.default.localize('BLOCK_DESC_GROW'),
                'shrink': _Localization2.default.localize('BLOCK_DESC_SHRINK'),
                'same': _Localization2.default.localize('BLOCK_DESC_RESET_SIZE'),
                'playsnd': _Localization2.default.localize('BLOCK_DESC_PLAY_SOUND', {
                    SOUND_NAME: _Localization2.default.localize('BLOCK_DESC_PLAY_SOUND_POP')
                }),
                'playusersnd': _Localization2.default.localize('BLOCK_DESC_PLAY_RECORDED_SOUND'),
                'endstack': _Localization2.default.localize('BLOCK_DESC_END'),
                'stopall': _Localization2.default.localize('BLOCK_DESC_STOP', {
                    CHARACTER_NAME: spr.name ? spr.name : ''
                }),
                'forever': _Localization2.default.localize('BLOCK_DESC_REPEAT_FOREVER'),
                'gotopage': _Localization2.default.localize('BLOCK_DESC_GO_TO_PAGE', {
                    PAGE: str
                }),
                'message': _Localization2.default.localize('BLOCK_DESC_SEND_MESSAGE', {
                    COLOR: _Localization2.default.localize('BLOCK_DESC_MESSAGE_COLOR_ORANGE')
                })
            };
        }
    }, {
        key: 'loadCount',
        get: function get() {
            return loadCount;
        },
        set: function set(newLoadCount) {
            loadCount = newLoadCount;
        }
    }, {
        key: 'fontcolors',
        get: function get() {
            return fontcolors;
        }
    }, {
        key: 'fontsizes',
        get: function get() {
            return fontsizes;
        }
    }, {
        key: 'speeds',
        get: function get() {
            return speeds;
        }
    }]);

    return BlockSpecs;
}();

exports.default = BlockSpecs;

/***/ }),

/***/ "./src/editor/blocks/Menu.js":
/*!***********************************!*\
  !*** ./src/editor/blocks/Menu.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _BlockSpecs = __webpack_require__(/*! ./BlockSpecs */ "./src/editor/blocks/BlockSpecs.js");

var _BlockSpecs2 = _interopRequireDefault(_BlockSpecs);

var _lib = __webpack_require__(/*! ../../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var openMenu = undefined;

var Menu = function () {
    function Menu() {
        _classCallCheck(this, Menu);
    }

    _createClass(Menu, null, [{
        key: 'openDropDown',
        value: function openDropDown(b, fcn) {
            var size = 50;
            var color = b.owner.blocktype == 'setspeed' ? 'orange' : 'yellow';
            var list = JSON.parse(b.owner.arg.list);
            var num = b.owner.arg.numperrow;
            var p = b.parentNode;
            var dh = size * Math.round(list.length / num);
            var rows = list.length / num;
            var w = size * list.length / rows;
            var scaledWidth = w * _lib.scaleMultiplier;
            var dx = b.left + (b.offsetWidth - scaledWidth) / 2;
            if (dx + scaledWidth > p.width) {
                dx -= dx + scaledWidth - p.width;
            }
            if (dx < 5) {
                dx = 5;
            }
            dx += (0, _lib.globalx)(p, 0);
            var dy = b.top + b.offsetHeight - (10 + 18) * _lib.scaleMultiplier + (0, _lib.globaly)(p, 0);
            if (dy + (10 + dh) * _lib.scaleMultiplier > (0, _lib.getDocumentHeight)()) {
                dy = (0, _lib.getDocumentHeight)() - (15 + dh) * _lib.scaleMultiplier;
            }
            var mu = (0, _lib.newDiv)(_lib.frame, dx, dy, w, dh, {
                position: 'absolute',
                zIndex: 100000,
                webkitTransform: 'translate(' + -w / 2 + 'px,' + -dh / 2 + 'px) ' + 'scale(' + _lib.scaleMultiplier + ', ' + _lib.scaleMultiplier + ') ' + 'translate(' + w / 2 + 'px, ' + dh / 2 + 'px)'
            });
            mu.setAttribute('class', 'menustyle ' + color);
            mu.active = b;
            for (var i = 0; i < list.length; i++) {
                Menu.addImageToDropDown(mu, list[i], b, fcn);
            }
            openMenu = mu;
        }
    }, {
        key: 'addImageToDropDown',
        value: function addImageToDropDown(mu, c, block, fcn) {
            var img = _BlockSpecs2.default.getImageFrom('assets/blockicons/' + c, 'svg');
            var cs = (0, _lib.newHTML)('div', 'ddchoice', mu);
            var micon = (0, _lib.newHTML)('canvas', undefined, cs);
            var iconSize = 42;
            var scaledIconSize = iconSize * window.devicePixelRatio;
            (0, _lib.setCanvasSize)(micon, scaledIconSize, scaledIconSize);
            (0, _lib.setProps)(micon.style, {
                webkitTransform: 'translate(' + -scaledIconSize / 2 + 'px, ' + -scaledIconSize / 2 + 'px) ' + 'scale(' + 1 / window.devicePixelRatio + ', ' + 1 / window.devicePixelRatio + ') ' + 'translate(' + scaledIconSize / 2 + 'px, ' + scaledIconSize / 2 + 'px)'
            });
            if (!img.complete) {
                img.onload = function () {
                    (0, _lib.drawThumbnail)(img, micon);
                };
            } else {
                (0, _lib.drawThumbnail)(img, micon);
            }
            cs.ontouchstart = function (evt) {
                handleTouchStart(evt);
            };
            cs.onmouseover = function (evt) {
                Menu.highlightdot(evt);
            };
            cs.onmouseout = function (evt) {
                Menu.unhighlightdot(evt);
            };
            cs.onmousedown = function (evt) {
                fcn(evt, mu, block, c);
            };
            function handleTouchStart(e) {
                if (_lib.isTablet && e.touches && e.touches.length > 1) {
                    return;
                }
                e.preventDefault();
                e.stopPropagation();
                fcn(e, mu, block, c);
            }
        }
    }, {
        key: 'closeMyOpenMenu',
        value: function closeMyOpenMenu() {
            if (!openMenu) {
                return;
            }
            openMenu.parentNode.removeChild(openMenu);
            openMenu = undefined;
        }
    }, {
        key: 'openMenu',
        get: function get() {
            return openMenu;
        },
        set: function set(newOpenMenu) {
            openMenu = newOpenMenu;
        }
    }]);

    return Menu;
}();

exports.default = Menu;

/***/ }),

/***/ "./src/editor/engine/Page.js":
/*!***********************************!*\
  !*** ./src/editor/engine/Page.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ScratchJr = __webpack_require__(/*! ../ScratchJr */ "./src/editor/ScratchJr.js");

var _ScratchJr2 = _interopRequireDefault(_ScratchJr);

var _Project = __webpack_require__(/*! ../ui/Project */ "./src/editor/ui/Project.js");

var _Project2 = _interopRequireDefault(_Project);

var _Thumbs = __webpack_require__(/*! ../ui/Thumbs */ "./src/editor/ui/Thumbs.js");

var _Thumbs2 = _interopRequireDefault(_Thumbs);

var _UI = __webpack_require__(/*! ../ui/UI */ "./src/editor/ui/UI.js");

var _UI2 = _interopRequireDefault(_UI);

var _Sprite = __webpack_require__(/*! ./Sprite */ "./src/editor/engine/Sprite.js");

var _Sprite2 = _interopRequireDefault(_Sprite);

var _Palette = __webpack_require__(/*! ../ui/Palette */ "./src/editor/ui/Palette.js");

var _Palette2 = _interopRequireDefault(_Palette);

var _BlockSpecs = __webpack_require__(/*! ../blocks/BlockSpecs */ "./src/editor/blocks/BlockSpecs.js");

var _BlockSpecs2 = _interopRequireDefault(_BlockSpecs);

var _OS = __webpack_require__(/*! ../../tablet/OS */ "./src/tablet/OS.js");

var _OS2 = _interopRequireDefault(_OS);

var _IO = __webpack_require__(/*! ../../tablet/IO */ "./src/tablet/IO.js");

var _IO2 = _interopRequireDefault(_IO);

var _MediaLib = __webpack_require__(/*! ../../tablet/MediaLib */ "./src/tablet/MediaLib.js");

var _MediaLib2 = _interopRequireDefault(_MediaLib);

var _Undo = __webpack_require__(/*! ../ui/Undo */ "./src/editor/ui/Undo.js");

var _Undo2 = _interopRequireDefault(_Undo);

var _Matrix = __webpack_require__(/*! ../../geom/Matrix */ "./src/geom/Matrix.js");

var _Matrix2 = _interopRequireDefault(_Matrix);

var _Vector = __webpack_require__(/*! ../../geom/Vector */ "./src/geom/Vector.js");

var _Vector2 = _interopRequireDefault(_Vector);

var _lib = __webpack_require__(/*! ../../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Page = function () {
    function Page(id, data, fcn) {
        _classCallCheck(this, Page);

        var container = _ScratchJr2.default.stage.pagesdiv;
        this.div = (0, _lib.newHTML)('div', 'stagepage', container); // newDiv(container,0,0, 480, 360, {position: 'absolute'});
        this.div.owner = this;
        this.id = id;
        this.textstartat = 36;
        this.div.setAttribute('id', this.id);
        _ScratchJr2.default.stage.currentPage = this;
        this.num = data ? data.num : _ScratchJr2.default.stage.pages.length + 1;
        this.sprites = JSON.stringify([]);
        this.bkg = (0, _lib.newDiv)(this.div, 0, 0, 480, 360, {
            position: 'absolute',
            zIndex: '-10',
            background: _ScratchJr2.default.stagecolor
        });
        this.bkg.type = 'background';
        _ScratchJr2.default.stage.pages.push(this);
        if (!data) {
            this.emptyPage();
        } else {
            this.loadPageData(data, fcn);
        }
    }

    _createClass(Page, [{
        key: 'loadPageData',
        value: function loadPageData(data, fcn) {
            this.currentSpriteName = data.lastSprite;
            if (data.textstartat) {
                this.textstartat = Number(data.textstartat);
            }
            if (data.md5 && data.md5 != 'undefined') {
                _Project2.default.mediaCount++;
                this.setBackground(data.md5, checkBkgDone);
            } else {
                this.clearBackground();
            }
            var list = data.sprites;
            for (var j = 0; j < list.length; j++) {
                _Project2.default.recreateObject(this, list[j], data[list[j]], checkCount);
            }
            for (var i = 0; i < data.layers.length; i++) {
                var obj = (0, _lib.gn)(data.layers[i]);
                if (obj) {
                    this.div.appendChild(obj);
                }
            }
            function checkCount() {
                if (!fcn) {
                    return;
                }
                if (_Project2.default.mediaCount < 1) {
                    fcn();
                }
            }

            function checkBkgDone() {
                _Project2.default.substractCount();
                if (!fcn) {
                    return;
                }
                if (_Project2.default.mediaCount < 1) {
                    fcn();
                }
            }
        }
    }, {
        key: 'emptyPage',
        value: function emptyPage() {
            this.clearBackground();
            this.createCat();
        }
    }, {
        key: 'setCurrentSprite',
        value: function setCurrentSprite(spr) {
            // set the sprite and toggles UI if no sprite is available
            if (_ScratchJr2.default.getSprite()) {
                _ScratchJr2.default.getSprite().unselect();
            }
            if (spr) {
                this.currentSpriteName = spr.id;
                spr.div.style.visibility = 'visible';
                _Palette2.default.show();
                (0, _lib.gn)('scripts').style.display = _ScratchJr2.default.inFullscreen ? 'none' : 'block';
                spr.activate();
            } else {
                this.currentSpriteName = undefined;
                _Palette2.default.hide();
                (0, _lib.gn)('scripts').style.display = 'none';
            }
        }
    }, {
        key: 'clearBackground',
        value: function clearBackground() {
            while (this.bkg.childElementCount > 0) {
                this.bkg.removeChild(this.bkg.childNodes[0]);
            }
        }
    }, {
        key: 'setBackground',
        value: function setBackground(name, fcn) {
            if (name == 'undefined') {
                return;
            }
            this.clearBackground();
            this.md5 = undefined;
            if (name == 'none') {
                if (fcn) {
                    fcn();
                }
                return;
            }
            this.md5 = name;
            if (!name) {
                return;
            }
            var me = this;
            var url = _MediaLib2.default.keys[name] ? _MediaLib2.default.path + name : name.indexOf('/') < 0 ? _OS2.default.path + name : name;
            var md5 = _MediaLib2.default.keys[name] ? _MediaLib2.default.path + name : name;

            var duplicateBkg = function duplicateBkg() {
                var fileName = _IO2.default.getFilenameWithExt(md5);
                if (_MediaLib2.default.keys[name]) {
                    _OS2.default.duplicateAsset(md5, fileName);
                } else if (name.indexOf('/') > -1) {
                    _OS2.default.duplicateAsset(md5, fileName);
                    me.md5 = name;
                }
            };

            var isPng = md5.substr(md5.length - 3) == 'png';
            if (isPng && (_MediaLib2.default.keys[name] || name.indexOf('/') > -1)) {
                duplicateBkg();
                this.setBackgroundImage(url, fcn);
                this.svg = null;
                return;
            }

            if (md5.indexOf('/') > -1) {
                _IO2.default.requestFromServer(md5, doNext);
            } else {
                _OS2.default.getmedia(md5, nextStep);
            }
            function nextStep(base64) {
                if (isPng) {
                    var data = _IO2.default.getImageDataURL(name, base64);
                    me.setBackgroundImage(data, fcn);
                    me.svg = null;
                } else {
                    doNext(atob(base64));
                }
            }
            function doNext(str) {
                duplicateBkg();
                str = str.replace(/>\s*</g, '><');
                me.setSVG(str);
                _IO2.default.getImagesInSVG(str, function () {
                    var base64 = _IO2.default.getImageDataURL(me.md5, btoa(str));
                    me.setBackgroundImage(base64, fcn);
                });
            }
        }
    }, {
        key: 'setSVG',
        value: function setSVG(str) {
            var xmlDoc = new DOMParser().parseFromString(str, 'text/xml');
            var extxml = document.importNode(xmlDoc.documentElement, true);
            if (extxml.childNodes[0].nodeName == '#comment') {
                extxml.removeChild(extxml.childNodes[0]);
            }
            this.svg = extxml;
        }
    }, {
        key: 'setBackgroundImage',
        value: function setBackgroundImage(url, fcn) {
            var img = document.createElement('img');
            img.src = url;
            this.bkg.originalImg = img.cloneNode(false);
            this.bkg.appendChild(img);
            (0, _lib.setProps)(img.style, {
                position: 'absolute',
                left: '0px',
                top: '0px',
                width: '100%',
                height: '100%'
            });
            this.bkg.img = img;
            if (!img.complete) {
                img.onload = function () {
                    if ((0, _lib.gn)('backdrop').className == 'modal-backdrop fade in') {
                        _Project2.default.setProgress(_Project2.default.getMediaLoadRatio(70));
                    }
                    if (fcn) {
                        fcn();
                    }
                };
            } else {
                if ((0, _lib.gn)('backdrop').className == 'modal-backdrop fade in') {
                    _Project2.default.setProgress(_Project2.default.getMediaLoadRatio(70));
                }
                if (fcn) {
                    fcn();
                }
            }
        }
    }, {
        key: 'setPageSprites',
        value: function setPageSprites(showstate) {
            var list = JSON.parse(this.sprites);
            for (var i = 0; i < list.length; i++) {
                (0, _lib.gn)(list[i]).style.visibility = showstate;
            }
        }
    }, {
        key: 'redoChangeBkg',
        value: function redoChangeBkg(data) {
            var me = this;
            var md5 = data[this.id].md5 ? data[this.id].md5 : 'none';
            this.setBackground(md5, me.updateThumb);
        }

        //////////////////////////////////////
        // page thumbnail
        /////////////////////////////////////

    }, {
        key: 'updateThumb',
        value: function updateThumb(page) {
            var me = page ? page : _ScratchJr2.default.stage.currentPage;
            if (!me.thumbnail) {
                return;
            }
            var c = me.thumbnail.childNodes[0].childNodes[0];
            me.setPageThumb(c);
        }
    }, {
        key: 'pageThumbnail',
        value: function pageThumbnail(p) {
            var tb = (0, _lib.newHTML)('div', 'pagethumb', p);
            tb.setAttribute('id', (0, _lib.getIdFor)('pagethumb'));
            tb.owner = this.id;
            tb.type = 'pagethumb';
            var container = (0, _lib.newHTML)('div', 'pc-container', tb);
            var c = (0, _lib.newHTML)('canvas', 'pc', container);
            this.setPageThumb(c);
            var num = (0, _lib.newHTML)('div', 'pagenum', tb);
            var pq = (0, _lib.newHTML)('p', undefined, num);
            pq.textContent = this.num;
            (0, _lib.newHTML)('div', 'deletethumb', tb);
            tb.ontouchstart = function (evt) {
                _Thumbs2.default.pageMouseDown(evt);
            };
            tb.onmousedown = function (evt) {
                _Thumbs2.default.pageMouseDown(evt);
            };
            this.thumbnail = tb;
            return tb;
        }
    }, {
        key: 'setPageThumb',
        value: function setPageThumb(c) {
            var w0, h0;
            if (window.Settings.edition == 'PBS') {
                w0 = 136;
                h0 = 101;
            } else {
                w0 = 132;
                h0 = 99;
            }
            (0, _lib.setCanvasSizeScaledToWindowDocumentHeight)(c, w0, h0);
            var w = c.width;
            var h = c.height;
            var ctx = c.getContext('2d');

            if (window.Settings.edition == 'PBS') {

                ctx.rect(0, 0, w, h);
                ctx.fillStyle = '#fff';
                ctx.fill();
            } else {
                ctx.drawImage(_BlockSpecs2.default.canvasMask, 0, 0, w, h);
            }
            if (this.bkg.childElementCount > 0) {
                var img = this.bkg.originalImg;
                var imgw = img.naturalWidth ? img.naturalWidth : img.width;
                var imgh = img.naturalHeight ? img.naturalHeight : img.height;
                ctx.drawImage(img, 0, 0, imgw, imgh, 0, 0, w, h);
            }
            var scale = w / 480;
            for (var i = 0; i < this.div.childElementCount; i++) {
                var spr = this.div.childNodes[i].owner;
                if (!spr) {
                    continue;
                }
                this.stampSpriteAt(ctx, spr, scale);
            }
            if (window.Settings.edition != 'PBS') {
                ctx.save();
                ctx.globalCompositeOperation = 'destination-in';
                ctx.drawImage(_BlockSpecs2.default.canvasMask, 0, 0, w, h);
                ctx.restore();
            }
        }
    }, {
        key: 'stampSpriteAt',
        value: function stampSpriteAt(ctx, spr, scale) {
            if (!spr.shown) {
                return;
            }
            var img = spr.type == 'sprite' ? spr.originalImg : spr.outline;
            this.drawSpriteImage(ctx, img, spr, scale);
        }
    }, {
        key: 'drawSpriteImage',
        value: function drawSpriteImage(ctx, img, spr, scale) {
            if (!spr.shown) {
                return;
            }
            if (!img) {
                return;
            }
            var imgw = img.naturalWidth ? img.naturalWidth : img.width;
            var imgh = img.naturalHeight ? img.naturalHeight : img.height;
            var sw = imgw * spr.scale;
            var sh = imgh * spr.scale;
            ctx.save();
            var pt = {
                x: spr.cx * spr.scale * scale,
                y: spr.cy * spr.scale * scale
            };
            ctx.translate(pt.x, pt.y);
            ctx.rotate(spr.angle * _lib.DEGTOR);
            ctx.translate(-pt.x, -pt.y);
            if (spr.flip) {
                ctx.scale(-1, 1);
                ctx.translate(-img.width * scale * spr.scale, 0);
            }
            var mtx = this.getMatrixFor(spr, scale);
            var pos = _Vector2.default.floor(mtx.transformPoint({
                x: Math.floor(spr.screenLeft() * scale),
                y: Math.floor(spr.screenTop() * scale)
            }));
            ctx.drawImage(img, 0, 0, imgw, imgh, pos.x, pos.y, Math.floor(sw * scale), Math.floor(sh * scale));
            ctx.restore();
        }
    }, {
        key: 'getMatrixFor',
        value: function getMatrixFor(spr) {
            var sx = new _Matrix2.default();
            var angle = spr.angle ? -spr.angle : 0;
            if (spr.flip) {
                sx.a = -1;
                sx.d = 1;
            }
            var rx = new _Matrix2.default();
            rx.rotate(angle);
            return sx.multiply(rx);
        }

        /////////////////////
        // Saving
        /////////////////////

    }, {
        key: 'encodePage',
        value: function encodePage() {
            var p = this.div;
            var spritelist = JSON.parse(this.sprites);
            var data = {};
            data.textstartat = this.textstartat;
            data.sprites = spritelist;
            var md5 = this.md5;
            if (md5) {
                data.md5 = md5;
            }
            data.num = this.num;
            this.currentSpriteName = !this.currentSpriteName ? undefined : (0, _lib.gn)(this.currentSpriteName).owner.type == 'sprite' ? this.currentSpriteName : this.getSprites()[0];
            data.lastSprite = this.currentSpriteName;
            for (var j = 0; j < spritelist.length; j++) {
                data[spritelist[j]] = _Project2.default.encodeSprite(spritelist[j]);
            }
            var layers = [];
            for (var i = 1; i < p.childElementCount; i++) {
                var layerid = p.childNodes[i].id;
                if (layerid && layerid != '') {
                    layers.push(layerid);
                }
            }
            data.layers = layers;
            return data;
        }
    }, {
        key: 'getSprites',
        value: function getSprites() {
            var spritelist = JSON.parse(this.sprites);
            var res = [];
            for (var i = 0; i < spritelist.length; i++) {
                if ((0, _lib.gn)(spritelist[i]).owner.type == 'sprite') {
                    res.push(spritelist[i]);
                }
            }
            return res;
        }

        /////////////////////////////
        // Object creation
        /////////////////////////////

    }, {
        key: 'createText',
        value: function createText() {
            var textAttr = {
                shown: true,
                type: 'text',
                scale: 1,
                defaultScale: 1,
                speed: 2,
                dirx: 1,
                diry: 1,
                angle: 0,
                homex: 240,
                homey: this.textstartat,
                xcoor: 240,
                ycoor: this.textstartat,
                str: '',
                color: _BlockSpecs2.default.fontcolors[_BlockSpecs2.default.fontcolors.length - 1],
                fontsize: 36,
                cx: 0,
                cy: 32 * 1.35 / 2,
                w: 0,
                h: 36 * 1.35
            };
            textAttr.page = this;
            textAttr.id = (0, _lib.getIdFor)('Text');
            new _Sprite2.default(textAttr);
        }
    }, {
        key: 'createCat',
        value: function createCat() {
            var sprAttr = _UI2.default.mascotData(_ScratchJr2.default.stage.currentPage);
            _Project2.default.mediaCount++;
            var me = this;
            new _Sprite2.default(sprAttr, me.pageAdded);
        }
    }, {
        key: 'update',
        value: function update(spr) {
            if (spr) {
                _Undo2.default.record({
                    action: 'modify',
                    where: this.id,
                    who: spr.id
                });
            } else {
                _Undo2.default.record({
                    action: 'recreatepage',
                    where: this.id,
                    who: this.id
                });
            }
            if (spr) {
                _Thumbs2.default.updateSprite(spr);
            } else {
                _Thumbs2.default.updateSprites();
            }
            _Thumbs2.default.updatePages();
        }
    }, {
        key: 'updateBkg',
        value: function updateBkg() {
            var me = _ScratchJr2.default.stage.currentPage;
            _ScratchJr2.default.storyStart('Page.prototype.updateBkg');
            _Undo2.default.record({
                action: 'changebkg',
                where: me.id,
                who: me.id
            });
            _Thumbs2.default.updatePages();
        }
    }, {
        key: 'spriteAdded',
        value: function spriteAdded(spr) {
            var me = spr.div.parentNode.owner;
            me.setCurrentSprite(spr);
            me.update(spr);
            _UI2.default.spriteInView(spr);
            _ScratchJr2.default.onHold = false;
        }
    }, {
        key: 'pageAdded',
        value: function pageAdded(spr) {
            var me = spr.div.parentNode.owner;
            _Project2.default.mediaCount--;
            me.setCurrentSprite(spr);
            _ScratchJr2.default.storyStart('Page.prototype.pageAdded');
            if (_ScratchJr2.default.stage.pages.length > 1) {
                _Undo2.default.record({
                    action: 'addpage',
                    where: me.id,
                    who: me.id
                });
            }
            _Thumbs2.default.updateSprites();
            _Thumbs2.default.updatePages();
        }
    }, {
        key: 'addSprite',
        value: function addSprite(scale, md5, cname) {
            _ScratchJr2.default.onHold = true;
            var sprAttr = {
                flip: false,
                angle: 0,
                shown: true,
                type: 'sprite',
                scale: scale,
                defaultScale: scale,
                speed: 2,
                dirx: 1,
                diry: 1,
                sounds: ['pop.mp3'],
                homex: 240,
                homescale: scale,
                homey: 180,
                xcoor: 240,
                ycoor: 180,
                homeshown: true
            };
            sprAttr.page = _ScratchJr2.default.stage.currentPage;
            sprAttr.id = (0, _lib.getIdFor)(cname);
            sprAttr.name = cname;
            sprAttr.md5 = md5;
            new _Sprite2.default(sprAttr, this.spriteAdded);
        }
    }, {
        key: 'createSprite',
        value: function createSprite(data) {
            new _Sprite2.default(data, this.spriteAdded);
        }
    }, {
        key: 'modifySprite',
        value: function modifySprite(md5, cid, sid) {
            var sprite = (0, _lib.gn)(unescape(sid)).owner;
            if (!sprite) {
                sprite = _ScratchJr2.default.getSprite();
            }
            sprite.md5 = md5;
            sprite.name = cid;
            var me = this;
            sprite.getAsset(gotImage);
            function gotImage(dataurl) {
                sprite.setCostume(dataurl, me.spriteAdded);
            }
        }
    }, {
        key: 'modifySpriteName',
        value: function modifySpriteName(cid, sid) {
            var sprite = (0, _lib.gn)(unescape(sid)).owner;
            if (!sprite) {
                sprite = _ScratchJr2.default.getSprite();
            }
            sprite.name = cid;
            sprite.thumbnail.childNodes[1].textContent = cid;
            _Undo2.default.record({
                action: 'modify',
                where: this.id,
                who: sprite.id
            });
            _ScratchJr2.default.storyStart('Page.prototype.modifySpriteName');
        }
    }]);

    return Page;
}();

exports.default = Page;

/***/ }),

/***/ "./src/editor/engine/Prims.js":
/*!************************************!*\
  !*** ./src/editor/engine/Prims.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ScratchJr = __webpack_require__(/*! ../ScratchJr */ "./src/editor/ScratchJr.js");

var _ScratchJr2 = _interopRequireDefault(_ScratchJr);

var _ScratchAudio = __webpack_require__(/*! ../../utils/ScratchAudio */ "./src/utils/ScratchAudio.js");

var _ScratchAudio2 = _interopRequireDefault(_ScratchAudio);

var _Grid = __webpack_require__(/*! ../ui/Grid */ "./src/editor/ui/Grid.js");

var _Grid2 = _interopRequireDefault(_Grid);

var _Vector = __webpack_require__(/*! ../../geom/Vector */ "./src/geom/Vector.js");

var _Vector2 = _interopRequireDefault(_Vector);

var _lib = __webpack_require__(/*! ../../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var tinterval = 1;
var hopList = [-48, -30, -22, -14, -6, 0, 6, 14, 22, 30, 48];

var Prims = function () {
    function Prims() {
        _classCallCheck(this, Prims);
    }

    _createClass(Prims, null, [{
        key: 'init',
        value: function init() {
            Prims.table = {};
            Prims.table.done = Prims.Done;
            Prims.table.missing = Prims.Ignore;
            Prims.table.onflag = Prims.Ignore;
            Prims.table.onmessage = Prims.Ignore;
            Prims.table.onclick = Prims.Ignore;
            Prims.table.ontouch = Prims.OnTouch;
            Prims.table.onchat = Prims.Ignore;
            Prims.table.repeat = Prims.Repeat;
            Prims.table.forward = Prims.Forward;
            Prims.table.back = Prims.Back;
            Prims.table.up = Prims.Up;
            Prims.table.down = Prims.Down;
            Prims.table.left = Prims.Left;
            Prims.table.right = Prims.Right;
            Prims.table.home = Prims.Home;
            Prims.table.setspeed = Prims.SetSpeed;
            Prims.table.message = Prims.Message;
            Prims.table.setcolor = Prims.SetColor;
            Prims.table.bigger = Prims.Bigger;
            Prims.table.smaller = Prims.Smaller;
            Prims.table.wait = Prims.Wait;
            Prims.table.caretcmd = Prims.Ignore;
            Prims.table.caretstart = Prims.Ignore;
            Prims.table.caretend = Prims.Ignore;
            Prims.table.caretrepeat = Prims.Ignore;
            Prims.table.gotopage = Prims.GotoPage;
            Prims.table.endstack = Prims.DoNextBlock;
            Prims.table.stopall = Prims.StopAll;
            Prims.table.stopmine = Prims.StopMine;
            Prims.table.forever = Prims.Forever;
            Prims.table.hop = Prims.Hop;
            Prims.table.show = Prims.Show;
            Prims.table.hide = Prims.Hide;
            Prims.table.playsnd = Prims.playSound;
            Prims.table.playusersnd = Prims.playSound;
            Prims.table.grow = Prims.Grow;
            Prims.table.shrink = Prims.Shrink;
            Prims.table.same = Prims.Same;
            Prims.table.say = Prims.Say;
        }
    }, {
        key: 'Done',
        value: function Done(strip) {
            if (strip.oldblock != null) {
                strip.oldblock.unhighlight();
            }
            strip.oldblock = null;
            strip.isRunning = false;
        }
    }, {
        key: 'setTime',
        value: function setTime(strip) {
            strip.time = new Date() - 0;
        }
    }, {
        key: 'showTime',
        value: function showTime() {
            //var time = ((new Date()) - strip.time) / 1000;
            // 	ScratchJr.log (strip.thisblock.blocktype, time, "sec") ;
        }
    }, {
        key: 'DoNextBlock',
        value: function DoNextBlock(strip) {
            strip.waitTimer = tinterval * 10;
            strip.thisblock = strip.thisblock.next;
        }
    }, {
        key: 'StopAll',
        value: function StopAll() {
            _ScratchJr2.default.stopStrips();
        }
    }, {
        key: 'StopMine',
        value: function StopMine(strip) {
            var spr = strip.spr;
            for (var i = 0; i < _ScratchJr2.default.runtime.threadsRunning.length; i++) {
                if (_ScratchJr2.default.runtime.threadsRunning[i].spr == spr && _ScratchJr2.default.runtime.threadsRunning[i].thisblock != strip.thisblock) {
                    _ScratchJr2.default.runtime.threadsRunning[i].stop(true);
                }
            }
            strip.thisblock = strip.thisblock.next;
            _ScratchJr2.default.runtime.yield = true;
        }
    }, {
        key: 'playSound',
        value: function playSound(strip) {
            var b = strip.thisblock;
            var name = b.getSoundName(strip.spr.sounds);
            //	console.log ('playSound', name);
            if (!strip.audio) {
                var snd = _ScratchAudio2.default.projectSounds[name];
                if (!snd) {
                    strip.thisblock = strip.thisblock.next;
                    return;
                }
                strip.audio = snd;
                snd.play();
                //	console.log ("playSound", snd, strip.audio, snd.source.playbackState);
            }
            if (strip.audio && strip.audio.done()) {
                strip.audio.clear();
                strip.thisblock = strip.thisblock.next;
                strip.audio = undefined;
            }
            strip.waitTimer = tinterval * 4;
        }
    }, {
        key: 'Say',
        value: function Say(strip) {
            var b = strip.thisblock;
            var s = strip.spr;
            var str = b.getArgValue();
            if (strip.count < 0) {
                strip.count = Math.max(30, Math.round(str.length / 8) * 30); // 7 chars per seconds;
                s.openBalloon(str);
                Prims.setTime(strip);
            } else {
                var count = strip.count;
                count--;
                if (count < 0) {
                    strip.count = -1;
                    s.closeBalloon();
                    Prims.showTime(strip);
                    strip.thisblock = strip.thisblock.next;
                } else {
                    strip.waitTimer = tinterval;
                    strip.count = count;
                }
            }
        }
    }, {
        key: 'GotoPage',
        value: function GotoPage(strip) {
            var b = strip.thisblock;
            var n = Number(b.getArgValue());
            if (strip.count < 0) {
                strip.count = 2; // delay for a 10th of a second
                Prims.setTime(strip);
            } else {
                var count = strip.count;
                count--;
                if (count < 0) {
                    strip.count = -1;
                    Prims.showTime(strip);
                    _ScratchJr2.default.stage.gotoPage(n);
                } else {
                    strip.waitTimer = tinterval;
                    strip.count = count;
                }
            }
        }
    }, {
        key: 'Forever',
        value: function Forever(strip) {
            strip.thisblock = strip.firstBlock.aStart ? strip.firstBlock.next : strip.firstBlock;
            _ScratchJr2.default.runtime.yield = true;
        }
    }, {
        key: 'Repeat',
        value: function Repeat(strip) {
            var b = strip.thisblock;
            var n = Number(b.getArgValue());
            if (n < 1) {
                n = 1;
            }
            if (b.repeatCounter < 0) {
                b.repeatCounter = n;
            }
            if (b.repeatCounter == 0) {
                b.repeatCounter = -1;
                strip.thisblock = strip.thisblock.next;
                strip.waitTimer = tinterval;
            } else {
                strip.stack.push(strip.thisblock);
                b.repeatCounter--;
                strip.thisblock = strip.thisblock.inside;
                _ScratchJr2.default.runtime.yield = true;
            }
        }
    }, {
        key: 'Ignore',
        value: function Ignore(strip) {
            strip.thisblock = strip.thisblock.next;
        }
    }, {
        key: 'Wait',
        value: function Wait(strip) {
            var n = strip.thisblock.getArgValue();
            strip.waitTimer = Math.round(n * 3.125); // thenth of a second
            Prims.setTime(strip);
            strip.thisblock = strip.thisblock.next;
        }
    }, {
        key: 'Home',
        value: function Home(strip) {
            var spr = strip.spr;
            spr.goHome();
            strip.waitTimer = tinterval;
            strip.thisblock = strip.thisblock.next;
        }
    }, {
        key: 'SetSpeed',
        value: function SetSpeed(strip) {
            var s = strip.spr;
            var num = Number(strip.thisblock.getArgValue()); // 0 - 1 - 2
            s.speed = Math.pow(2, num);
            strip.waitTimer = tinterval;
            strip.thisblock = strip.thisblock.next;
        }
    }, {
        key: 'Hop',
        value: function Hop(strip) {
            if (strip.count < 0) {
                // setup the hop
                strip.count = hopList.length;
                Prims.setTime(strip);
            }
            Prims.hopTo(strip);
        }
    }, {
        key: 'hopTo',
        value: function hopTo(strip) {
            var s = strip.spr;
            var b = strip.thisblock;
            var n = Number(b.getArgValue());
            var count = strip.count;
            count--;
            if (count < 0) {
                strip.count = -1;
                strip.vector = {
                    x: 0,
                    y: 0
                };
                Prims.showTime(strip);
                strip.thisblock = strip.thisblock.next;
            } else {
                strip.vector = {
                    x: 0,
                    y: hopList[count]
                };
                var dy = s.ycoor - strip.vector.y / 5 * n;
                if (dy < 0) {
                    dy = 0;
                }
                if (dy >= 360 - _Grid2.default.size) {
                    dy = 360 - _Grid2.default.size;
                }
                s.setPos(s.xcoor + strip.vector.x, dy);
                strip.waitTimer = tinterval + Math.floor(Math.pow(2, 2 - Math.floor(s.speed / 2)) / 2);
                strip.count = count;
            }
        }
    }, {
        key: 'Down',
        value: function Down(strip) {
            var num = Number(strip.thisblock.getArgValue()) * 24;
            var distance = Math.abs(num);
            if (num == 0) {
                strip.thisblock = strip.thisblock.next;
                strip.waitTimer = tinterval;
                strip.distance = -1;
                strip.vector = {
                    x: 0,
                    y: 0
                };
                return;
            }
            if (num == 0) {
                strip.distance = 0;
            } else if (strip.distance < 0) {
                strip.distance = distance;
                strip.vector = {
                    x: 0,
                    y: 2
                };
                Prims.setTime(strip);
            }
            Prims.moveAtSpeed(strip);
        }
    }, {
        key: 'Up',
        value: function Up(strip) {
            var num = Number(strip.thisblock.getArgValue()) * 24;
            var distance = Math.abs(num);
            if (num == 0) {
                strip.thisblock = strip.thisblock.next;
                strip.waitTimer = tinterval;
                strip.distance = -1;
                strip.vector = {
                    x: 0,
                    y: 0
                };
                return;
            } else if (strip.distance < 0) {
                strip.distance = distance;
                strip.vector = {
                    x: 0,
                    y: -2
                };
                Prims.setTime(strip);
            }
            Prims.moveAtSpeed(strip);
        }
    }, {
        key: 'Forward',
        value: function Forward(strip) {
            var s = strip.spr;
            var num = Number(strip.thisblock.getArgValue()) * 24;
            var distance = Math.abs(num);
            if (s.flip) {
                s.flip = false;
                s.render();
            }
            if (num == 0) {
                strip.thisblock = strip.thisblock.next;
                strip.waitTimer = tinterval * Math.pow(2, 2 - Math.floor(s.speed / 2));
                strip.vector = {
                    x: 0,
                    y: 0
                };
                strip.distance = -1;
                return;
            } else if (strip.distance < 0) {
                strip.distance = distance;
                strip.vector = {
                    x: 2,
                    y: 0
                };
                Prims.setTime(strip);
            }
            Prims.moveAtSpeed(strip);
        }
    }, {
        key: 'Back',
        value: function Back(strip) {
            var s = strip.spr;
            var num = Number(strip.thisblock.getArgValue()) * 24;
            var distance = Math.abs(num);
            if (!s.flip) {
                s.flip = true;
                s.render();
            }
            if (num == 0) {
                strip.thisblock = strip.thisblock.next;
                strip.vector = {
                    x: 0,
                    y: 0
                };
                strip.waitTimer = tinterval * Math.pow(2, 2 - Math.floor(s.speed / 2));
                return;
            }
            if (num == 0) {
                strip.distance = 0;
            } else if (strip.distance < 0) {
                strip.distance = distance;
                strip.vector = {
                    x: -2,
                    y: 0
                };
                Prims.setTime(strip);
            }
            Prims.moveAtSpeed(strip);
        }
    }, {
        key: 'moveAtSpeed',
        value: function moveAtSpeed(strip) {
            var s = strip.spr;
            var distance = strip.distance;
            var num = Number(strip.thisblock.getArgValue()) * 12; // 1/2 cell size since vector is double
            var vector = _Vector2.default.scale(strip.vector, s.speed * Math.abs(num) / num);
            distance -= Math.abs(_Vector2.default.len(vector));
            if (distance < 0) {
                vector = _Vector2.default.scale(strip.vector, strip.distance);
                s.setPos(s.xcoor + vector.x, s.ycoor + vector.y);
                strip.distance = -1;
                strip.vector = {
                    x: 0,
                    y: 0
                };
                Prims.showTime(strip);
                strip.thisblock = strip.thisblock.next;
            } else {
                s.setPos(s.xcoor + vector.x, s.ycoor + vector.y);
                strip.waitTimer = tinterval;
                strip.distance = distance;
            }
        }
    }, {
        key: 'Right',
        value: function Right(strip) {
            var s = strip.spr;
            var num = Number(strip.thisblock.getArgValue()) * 30;
            if (strip.count < 0) {
                strip.count = Math.floor(Math.abs(num) / s.speed * 0.25);
                strip.angleStep = s.speed * 4 * Math.abs(num) / num;
                strip.finalAngle = s.angle + num;
                strip.finalAngle = strip.finalAngle % 360;
                if (strip.finalAngle < 0) {
                    strip.finalAngle += 360;
                }
                if (strip.finalAngle > 360) {
                    strip.finalAngle -= 360;
                }
                Prims.setTime(strip);
            }
            Prims.turning(strip);
        }
    }, {
        key: 'Left',
        value: function Left(strip) {
            var s = strip.spr;
            var num = Number(strip.thisblock.getArgValue()) * 30;
            if (strip.count < 0) {
                strip.count = Math.floor(Math.abs(num) / s.speed * 0.25);
                strip.angleStep = -s.speed * 4 * Math.abs(num) / num;
                strip.finalAngle = s.angle - num;
                strip.finalAngle = strip.finalAngle % 360;
                if (strip.finalAngle < 0) {
                    strip.finalAngle += 360;
                }
                if (strip.finalAngle > 360) {
                    strip.finalAngle -= 360;
                }
                Prims.setTime(strip);
            }
            Prims.turning(strip);
        }
    }, {
        key: 'turning',
        value: function turning(strip) {
            var s = strip.spr;
            var count = strip.count;
            count--;
            if (count < 0) {
                strip.count = -1;
                s.setHeading(strip.finalAngle);
                Prims.showTime(strip);
                strip.thisblock = strip.thisblock.next;
            } else {
                s.setHeading(s.angle + strip.angleStep);
                strip.waitTimer = tinterval;
                strip.count = count;
            }
        }
    }, {
        key: 'Same',
        value: function Same(strip) {
            var s = strip.spr;
            var n = (s.defaultScale - s.scale) / s.defaultScale * 10;
            if (n == 0) {
                strip.waitTimer = tinterval;
                strip.thisblock = strip.thisblock.next;
                strip.count = -1;
                strip.distance = -1;
                if (!strip.firstBlock.aStart) {
                    s.homescale = s.defaultScale;
                }
                return;
            }
            if (strip.count < 0) {
                strip.distance = s.defaultScale * Math.abs(n) / n * s.speed;
                strip.count = Math.floor(5 * Math.floor(Math.abs(n)) / s.speed);
                Prims.setTime(strip);
                if (!strip.firstBlock.aStart) {
                    s.homescale = s.defaultScale;
                }
            }
            if (strip.count == 0) {
                strip.count = -1;
                s.noScaleFor();
                strip.distance = -1;
                Prims.showTime(strip);
                strip.thisblock = strip.thisblock.next;
            } else {
                s.changeSizeBy(strip.distance * 2);
                strip.waitTimer = tinterval;
                strip.count = strip.count - 1;
            }
        }
    }, {
        key: 'Grow',
        value: function Grow(strip) {
            var s = strip.spr;
            var n = Number(strip.thisblock.getArgValue());
            if (strip.count < 0) {
                strip.distance = Number(s.scale) + 10 * n * s.defaultScale / 100;
                strip.distance = Math.round(strip.distance * 1000) / 1000;
                strip.count = Math.floor(5 * Math.abs(n) / s.speed);
                Prims.setTime(strip);
            }
            if (strip.count == 0) {
                strip.count = -1;
                s.setScaleTo(strip.distance);
                if (!strip.firstBlock.aStart) {
                    s.homescale = s.scale;
                }
                strip.distance = -1;
                Prims.showTime(strip);
                strip.thisblock = strip.thisblock.next;
            } else {
                s.changeSizeBy(s.defaultScale * 2 * s.speed * Math.abs(n) / n);
                strip.waitTimer = tinterval;
                strip.count = strip.count - 1;
            }
        }
    }, {
        key: 'Shrink',
        value: function Shrink(strip) {
            var s = strip.spr;
            var n = Number(strip.thisblock.getArgValue());
            if (strip.count < 0) {
                strip.distance = s.scale - 10 * n * s.defaultScale / 100;
                strip.distance = Math.round(strip.distance * 1000) / 1000;
                strip.count = Math.floor(5 * Math.abs(n) / s.speed);
                Prims.setTime(strip);
            }
            if (strip.count == 0) {
                strip.count = -1;
                s.setScaleTo(strip.distance);
                if (!strip.firstBlock.aStart) {
                    s.homescale = s.scale;
                }
                strip.distance = -1;
                Prims.showTime(strip);
                strip.thisblock = strip.thisblock.next;
            } else {
                s.changeSizeBy(-s.defaultScale * 2 * s.speed * Math.abs(n) / n);
                strip.waitTimer = tinterval;
                strip.count = strip.count - 1;
            }
        }
    }, {
        key: 'Show',
        value: function Show(strip) {
            var s = strip.spr;
            s.shown = true;
            if (strip.count < 0) {
                strip.count = s.speed == 4 ? 0 : Math.floor(15 / s.speed);
                Prims.setTime(strip);
            }
            if (strip.count == 0) {
                strip.count = -1;
                s.div.style.opacity = 1;
                Prims.showTime(strip);
                strip.thisblock = strip.thisblock.next;
                if (!strip.firstBlock.aStart) {
                    s.homeshown = true;
                }
            } else {
                s.div.style.opacity = Math.min(1, Number(s.div.style.opacity) + s.speed / 15);
                strip.waitTimer = tinterval * 2;
                strip.count = strip.count - 1;
            }
        }
    }, {
        key: 'Hide',
        value: function Hide(strip) {
            // same
            var s = strip.spr;
            s.shown = false;
            if (strip.count < 0) {
                strip.count = s.speed == 4 ? 0 : Math.floor(15 / s.speed);
                Prims.setTime(strip);
            }
            if (strip.count == 0) {
                strip.count = -1;
                s.div.style.opacity = 0;
                Prims.showTime(strip);
                strip.thisblock = strip.thisblock.next;
                if (!strip.firstBlock.aStart) {
                    s.homeshown = false;
                }
            } else {
                s.div.style.opacity = Math.max(0, Number(s.div.style.opacity) - s.speed / 15);
                strip.waitTimer = tinterval * 2;
                strip.count = strip.count - 1;
            }
        }
    }, {
        key: 'OnTouch',
        value: function OnTouch(strip) {
            var s = strip.spr;
            if (s.touchingAny()) {
                strip.stack.push(strip.firstBlock);
                strip.thisblock = strip.thisblock.next;
            }
            strip.waitTimer = tinterval;
        }
    }, {
        key: 'Message',
        value: function Message(strip) {
            var b = strip.thisblock;
            var pair;
            if (strip.firstTime) {
                var receivers = [];
                var msg = b.getArgValue();
                var findReceivers = function findReceivers(block, s) {
                    if (block.blocktype == 'onmessage' && block.getArgValue() == msg) {
                        receivers.push([s, block]);
                    }
                };
                Prims.applyToAllStrips(['onmessage'], findReceivers);
                var newthreads = [];
                for (var i in receivers) {
                    pair = receivers[i];
                    newthreads.push(_ScratchJr2.default.runtime.restartThread(pair[0], pair[1], true));
                }
                strip.firstTime = false;
                strip.called = newthreads;
            }

            // after first time
            var done = true;
            for (var j = 0; j < strip.called.length; j++) {
                if (strip.called[j].isRunning) {
                    done = false;
                }
            }

            if (done) {
                strip.called = null;
                strip.firstTime = true;
                strip.thisblock = strip.thisblock.next;
                strip.waitTimer = tinterval * 2;
            } else {
                _ScratchJr2.default.runtime.yield = true;
            }
        }
    }, {
        key: 'applyToAllStrips',
        value: function applyToAllStrips(list, fcn) {
            if (!_ScratchJr2.default.stage) {
                return;
            }
            var page = _ScratchJr2.default.stage.currentPage;
            if (!page) {
                return;
            }
            if (!page.div) {
                return;
            }
            for (var i = 0; i < page.div.childElementCount; i++) {
                var spr = page.div.childNodes[i].owner;
                if (!spr) {
                    continue;
                }
                var sc = (0, _lib.gn)(spr.id + '_scripts');
                if (!sc) {
                    continue;
                }
                var topblocks = sc.owner.getBlocksType(list);
                for (var j = 0; j < topblocks.length; j++) {
                    fcn(topblocks[j], spr);
                }
            }
        }
    }, {
        key: 'hopList',
        get: function get() {
            return hopList;
        }
    }]);

    return Prims;
}();

exports.default = Prims;

/***/ }),

/***/ "./src/editor/engine/Runtime.js":
/*!**************************************!*\
  !*** ./src/editor/engine/Runtime.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ScratchJr = __webpack_require__(/*! ../ScratchJr */ "./src/editor/ScratchJr.js");

var _ScratchJr2 = _interopRequireDefault(_ScratchJr);

var _Project = __webpack_require__(/*! ../ui/Project */ "./src/editor/ui/Project.js");

var _Project2 = _interopRequireDefault(_Project);

var _Prims = __webpack_require__(/*! ./Prims */ "./src/editor/engine/Prims.js");

var _Prims2 = _interopRequireDefault(_Prims);

var _Thread = __webpack_require__(/*! ./Thread */ "./src/editor/engine/Thread.js");

var _Thread2 = _interopRequireDefault(_Thread);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Runtime = function () {
    function Runtime() {
        _classCallCheck(this, Runtime);

        this.threadsRunning = [];
        this.thread = undefined;
        this.intervalId = undefined;
        this.yield = false;
    }

    _createClass(Runtime, [{
        key: 'beginTimer',
        value: function beginTimer() {
            if (this.intervalId != null) {
                window.clearInterval(this.intervalId);
            }
            var rt = this;
            this.intervalId = window.setInterval(function () {
                rt.tickTask();
            }, 32);
            _Project2.default.saving = false;
            // Prims.time = (new Date() - 0);
            this.threadsRunning = [];
        }
    }, {
        key: 'tickTask',
        value: function tickTask() {
            _ScratchJr2.default.updateRunStopButtons();
            if (this.threadsRunning.length < 1) {
                return;
            }
            var activeThreads = [];
            for (var i = 0; i < this.threadsRunning.length; i++) {
                if (this.threadsRunning[i].isRunning) {
                    activeThreads.push(this.threadsRunning[i]);
                }
            }
            this.threadsRunning = activeThreads;
            for (var j = 0; j < this.threadsRunning.length; j++) {
                this.step(j);
            }
        }
    }, {
        key: 'inactive',
        value: function inactive() {
            if (this.threadsRunning.length < 1) {
                return true;
            }
            var inactive = true;
            for (var i = 0; i < this.threadsRunning.length; i++) {
                var t = this.threadsRunning[i];
                if (!t) {
                    continue;
                }
                if (t.isRunning && t.firstBlock.blocktype != 'ontouch') {
                    inactive = false;
                }
                if (t.firstBlock.blocktype == 'ontouch' && t.thisblock != null && t.thisblock.blocktype != 'ontouch') {
                    inactive = false;
                }
            }
            return inactive;
        }
    }, {
        key: 'step',
        value: function step(n) {
            this.yield = false;
            this.thread = this.threadsRunning[n];
            while (true) {
                // eslint-disable-line no-constant-condition
                if (!this.thread.isRunning) {
                    return;
                }
                if (this.thread.waitTimer > 0) {
                    this.thread.waitTimer += -1;
                    return;
                }
                //  if (this.thread.spr.parentNode.id == "frame") return; // object is being dragged
                if (this.yield) {
                    return;
                }
                if (this.thread.thisblock == null) {
                    this.endCase();
                    this.yield = true;
                } else {
                    this.runPrim();
                }
            }
        }
    }, {
        key: 'addRunScript',
        value: function addRunScript(spr, b) {
            this.restartThread(spr, b);
        }
    }, {
        key: 'stopThreads',
        value: function stopThreads() {
            for (var i in this.threadsRunning) {
                this.threadsRunning[i].stop();
            }
            this.threadsRunning = [];
        }
    }, {
        key: 'stopThreadBlock',
        value: function stopThreadBlock(b) {
            for (var i in this.threadsRunning) {
                if (this.threadsRunning[i].firstBlock == b) {
                    this.threadsRunning[i].stop();
                }
            }
        }
    }, {
        key: 'stopThreadSprite',
        value: function stopThreadSprite(spr) {
            for (var i in this.threadsRunning) {
                if (this.threadsRunning[i].spr == spr) {
                    this.threadsRunning[i].stop();
                }
            }
        }
    }, {
        key: 'removeRunScript',
        value: function removeRunScript(spr) {
            var res = [];
            for (var i in this.threadsRunning) {
                if (this.threadsRunning[i].spr == spr) {
                    if (this.threadsRunning[i].isRunning) {
                        if (this.threadsRunning[i].thisblock != null) {
                            this.threadsRunning[i].endPrim();
                        }
                        res.push(this.threadsRunning[i].duplicate());
                    }
                    this.threadsRunning[i].isRunning = false;
                    if (this.threadsRunning[i].oldblock != null) {
                        this.threadsRunning[i].oldblock.unhighlight();
                    }
                }
            }
            return res;
        }
    }, {
        key: 'runPrim',
        value: function runPrim() {
            if (this.thread.oldblock != null) {
                this.thread.oldblock.unhighlight();
            }
            this.thread.oldblock = null;
            var token = _Prims2.default.table[this.thread.thisblock.blocktype];
            if (token == null) {
                token = _Prims2.default.table.missing;
            } else {
                var noh = ['repeat', 'gotopage'];
                if (noh.indexOf(this.thread.thisblock.blocktype) < 0) {
                    this.thread.thisblock.highlight();
                    this.thread.oldblock = this.thread.thisblock;
                }
                _Prims2.default.time = new Date() - 0;
                token(this.thread);
            }
        }
    }, {
        key: 'endCase',
        value: function endCase() {
            if (this.thread.oldblock != null) {
                this.thread.oldblock.unhighlight();
            }
            if (this.thread.stack.length == 0) {
                _Prims2.default.Done(this.thread);
            } else {
                var thing = this.thread.stack.pop();
                this.thread.thisblock = thing;
                this.runPrim();
            }
        }
    }, {
        key: 'restartThread',
        value: function restartThread(spr, b, active) {
            var newThread = new _Thread2.default(spr, b);
            var wasRunning = false;
            for (var i = 0; i < this.threadsRunning.length; i++) {
                if (this.threadsRunning[i].firstBlock == b) {
                    wasRunning = true;
                    if (b.blocktype != 'ontouch') {
                        // on touch demons are special - they are not interruptable
                        if (this.threadsRunning[i].oldblock != null) {
                            this.threadsRunning[i].oldblock.unhighlight();
                        }
                        this.threadsRunning[i].stopping(active);
                        newThread = this.threadsRunning[i];
                    }
                }
            }
            if (!wasRunning) {
                this.threadsRunning.push(newThread);
            }
            return newThread;
        }
    }]);

    return Runtime;
}();

exports.default = Runtime;

/***/ }),

/***/ "./src/editor/engine/Sprite.js":
/*!*************************************!*\
  !*** ./src/editor/engine/Sprite.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); ////////////////////////////////////////////////////////////
// Sprites
// Loading and Creation Strategy
//  a. Set data variables
//  b. Load SVG as IMG
//  c. Load SVG as text
//  d. Create Mask for pixel detection and cache it on the browser
////////////////////////////////////////////////////////////

var _ScratchJr = __webpack_require__(/*! ../ScratchJr */ "./src/editor/ScratchJr.js");

var _ScratchJr2 = _interopRequireDefault(_ScratchJr);

var _Project = __webpack_require__(/*! ../ui/Project */ "./src/editor/ui/Project.js");

var _Project2 = _interopRequireDefault(_Project);

var _Thumbs = __webpack_require__(/*! ../ui/Thumbs */ "./src/editor/ui/Thumbs.js");

var _Thumbs2 = _interopRequireDefault(_Thumbs);

var _UI = __webpack_require__(/*! ../ui/UI */ "./src/editor/ui/UI.js");

var _UI2 = _interopRequireDefault(_UI);

var _BlockSpecs = __webpack_require__(/*! ../blocks/BlockSpecs */ "./src/editor/blocks/BlockSpecs.js");

var _BlockSpecs2 = _interopRequireDefault(_BlockSpecs);

var _IO = __webpack_require__(/*! ../../tablet/IO */ "./src/tablet/IO.js");

var _IO2 = _interopRequireDefault(_IO);

var _OS = __webpack_require__(/*! ../../tablet/OS */ "./src/tablet/OS.js");

var _OS2 = _interopRequireDefault(_OS);

var _MediaLib = __webpack_require__(/*! ../../tablet/MediaLib */ "./src/tablet/MediaLib.js");

var _MediaLib2 = _interopRequireDefault(_MediaLib);

var _Undo = __webpack_require__(/*! ../ui/Undo */ "./src/editor/ui/Undo.js");

var _Undo2 = _interopRequireDefault(_Undo);

var _ScriptsPane = __webpack_require__(/*! ../ui/ScriptsPane */ "./src/editor/ui/ScriptsPane.js");

var _ScriptsPane2 = _interopRequireDefault(_ScriptsPane);

var _SVG2Canvas = __webpack_require__(/*! ../../utils/SVG2Canvas */ "./src/utils/SVG2Canvas.js");

var _SVG2Canvas2 = _interopRequireDefault(_SVG2Canvas);

var _SVGTools = __webpack_require__(/*! ../../painteditor/SVGTools */ "./src/painteditor/SVGTools.js");

var _SVGTools2 = _interopRequireDefault(_SVGTools);

var _Rectangle = __webpack_require__(/*! ../../geom/Rectangle */ "./src/geom/Rectangle.js");

var _Rectangle2 = _interopRequireDefault(_Rectangle);

var _Events = __webpack_require__(/*! ../../utils/Events */ "./src/utils/Events.js");

var _Events2 = _interopRequireDefault(_Events);

var _Localization = __webpack_require__(/*! ../../utils/Localization */ "./src/utils/Localization.js");

var _Localization2 = _interopRequireDefault(_Localization);

var _ScratchAudio = __webpack_require__(/*! ../../utils/ScratchAudio */ "./src/utils/ScratchAudio.js");

var _ScratchAudio2 = _interopRequireDefault(_ScratchAudio);

var _Scripts = __webpack_require__(/*! ../ui/Scripts */ "./src/editor/ui/Scripts.js");

var _Scripts2 = _interopRequireDefault(_Scripts);

var _lib = __webpack_require__(/*! ../../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Sprite = function () {
    function Sprite(attr, whenDone) {
        _classCallCheck(this, Sprite);

        if (attr.type == 'sprite') {
            this.createSprite(attr.page, attr.md5, attr.id, attr, whenDone);
        } else {
            this.createText(attr, whenDone);
        }
    }

    _createClass(Sprite, [{
        key: 'createSprite',
        value: function createSprite(page, md5, id, attr, fcn) {
            _ScratchJr2.default.storyStart('Sprite.prototype.createSprite');
            this.div = document.createElement('div');
            (0, _lib.setProps)(this.div.style, {
                position: 'absolute',
                zIndex: -1,
                left: '0px',
                top: '0px'
            });
            //document.createElement('img');
            this.div.owner = this;
            this.div.id = id;
            this.id = id;
            this.md5 = md5;
            this.borderOn = false;
            this.outline = document.createElement('canvas');
            this.code = new _Scripts2.default(this);
            (0, _lib.setProps)(this, attr);
            if (_Localization2.default.isSampleLocalizedKey(this.name) && _ScratchJr2.default.isSampleOrStarter()) {
                this.name = _Localization2.default.localize('SAMPLE_TEXT_' + this.name);
            }
            for (var i = 0; i < this.sounds.length; i++) {
                var sound = this.sounds[i];
                if (sound.indexOf('/') > -1) {
                    // duplicate sample sounds
                    var name = _IO2.default.getFilenameWithExt(sound);
                    _OS2.default.duplicateAsset(sound, name, function () {
                        _ScratchAudio2.default.loadProjectSound(name);
                    });
                    this.sounds[i] = name;
                } else {
                    _ScratchAudio2.default.loadProjectSound(sound);
                }
            }
            var sprites = JSON.parse(page.sprites);
            sprites.push(this.id);
            page.sprites = JSON.stringify(sprites);
            var me = this;
            page.div.appendChild(this.div);
            this.div.style.visibility = 'hidden';
            this.getAsset(gotImage); // sets the SVG and the image
            function gotImage(dataurl) {
                me.setCostume(dataurl, fcn);
            }
        }
    }, {
        key: 'getAsset',
        value: function getAsset(whenDone) {
            var md5 = this.md5;
            var spr = this;
            md5 = _MediaLib2.default.keys[md5] ? _MediaLib2.default.path + md5 : md5;
            if (md5.indexOf('/') > -1) {
                _IO2.default.requestFromServer(md5, doNext);
            } else {
                _OS2.default.getmedia(md5, nextStep);
            }
            function nextStep(base64) {
                doNext(atob(base64));
            }
            function doNext(str) {
                if (_MediaLib2.default.keys[spr.md5] || spr.md5.indexOf('/') > -1) {
                    // duplicate asset in library or sample
                    // in case this asset is removed from library or sample
                    // we can still use this asset and open the project in the future
                    var name = _IO2.default.getFilenameWithExt(spr.md5);
                    _OS2.default.duplicateAsset(md5, name);
                    // use the duplicated one next time.
                    spr.md5 = name;
                }
                str = str.replace(/>\s*</g, '><');
                spr.setSVG(str);
                _IO2.default.getImagesInSVG(str, function () {
                    var base64 = _IO2.default.getImageDataURL(spr.md5, btoa(str));
                    whenDone(base64);
                });
            }
        }
    }, {
        key: 'setSVG',
        value: function setSVG(str) {
            var xmlDoc = new DOMParser().parseFromString(str, 'text/xml');
            var extxml = document.importNode(xmlDoc.documentElement, true);
            if (extxml.childNodes[0].nodeName == '#comment') {
                extxml.removeChild(extxml.childNodes[0]);
            }
            this.svg = extxml;
        }
    }, {
        key: 'setCostume',
        value: function setCostume(dataurl, fcn) {
            var img = document.createElement('img');
            img.ondragstart = function () {
                return false;
            };
            img.src = dataurl;
            this.img = img;
            // Make a copy that is not affected by zoom transformation
            this.originalImg = img.cloneNode(false);
            (0, _lib.setProps)(this.img.style, {
                position: 'absolute',
                left: '0px',
                top: '0px'
            });
            this.div.appendChild(img);
            var sprite = this;
            if (!img.complete) {
                img.onload = function () {
                    sprite.displaySprite(fcn);
                };
            } else {
                sprite.displaySprite(fcn);
            }
        }
    }, {
        key: 'displaySprite',
        value: function displaySprite(whenDone) {
            var w = this.img.width;
            var h = this.img.height;
            this.div.style.width = this.img.width + 'px';
            this.div.style.height = this.img.height + 'px';
            this.cx = Math.floor(w / 2);
            this.cy = Math.floor(h / 2);
            this.w = w;
            this.h = h;
            this.setPos(this.xcoor, this.ycoor);
            this.doRender(whenDone);
        }
    }, {
        key: 'doRender',
        value: function doRender(whenDone) {
            this.drawBorder(); // canvas draw border
            this.render();
            _SVG2Canvas2.default.drawInCanvas(this); // canvas draws mask for pixel detection
            this.readOnly = _SVG2Canvas2.default.svgerror;
            this.watermark = _SVGTools2.default.getWatermark(this.svg, '#B3B3B3'); // svg for watermark
            if (whenDone) {
                whenDone(this);
            }
        }
    }, {
        key: 'drawBorder',
        value: function drawBorder() {
            // TODO: Merge these to get better thumbnail rendering on iOS
            var w, h, extxml;
            if (_lib.isAndroid) {
                this.border = document.createElement('canvas');
                w = this.originalImg.width;
                h = this.originalImg.height;
                extxml = this.svg;
                this.border.width = w;
                this.border.height = h;
                this.border.style.width = w * this.scale + 'px';
                this.border.style.height = h * this.scale + 'px';
                _SVG2Canvas2.default.drawBorder(extxml, this.border.getContext('2d'));
            } else {
                this.border = document.createElement('canvas');
                w = this.img.width;
                h = this.img.height;
                extxml = this.svg;
                (0, _lib.setCanvasSize)(this.border, w, h);
                _SVG2Canvas2.default.drawBorder(extxml, this.border.getContext('2d'));
            }
        }

        //////////////////////////////////////
        // sprite thumbnail
        /////////////////////////////////////

    }, {
        key: 'spriteThumbnail',
        value: function spriteThumbnail(p) {
            var tb = (0, _lib.newHTML)('div', 'spritethumb off', p);
            tb.setAttribute('id', (0, _lib.getIdFor)('spritethumb'));
            tb.type = 'spritethumb';
            tb.owner = this.id;
            var c = (0, _lib.newHTML)('canvas', 'thumbcanvas', tb);

            // TODO: Merge these to get better thumbnail rendering on iOS
            if (_lib.isAndroid) {
                (0, _lib.setCanvasSizeScaledToWindowDocumentHeight)(c, 64, 64);
            } else {
                (0, _lib.setCanvasSize)(c, 64, 64);
            }

            this.drawMyImage(c, c.width, c.height);
            p = (0, _lib.newHTML)('p', 'sname', tb);
            p.textContent = this.name;
            (0, _lib.newHTML)('div', 'brush', tb);
            this.thumbnail = tb;
            return tb;
        }
    }, {
        key: 'updateSpriteThumb',
        value: function updateSpriteThumb() {
            var tb = this.thumbnail;
            if (!tb) {
                return;
            }
            var cnv = tb.childNodes[0];
            this.drawMyImage(cnv, cnv.width, cnv.height);
            tb.childNodes[1].textContent = this.name;
        }
    }, {
        key: 'drawMyImage',
        value: function drawMyImage(cnv, w, h) {
            if (!this.img) {
                return;
            }
            (0, _lib.setCanvasSize)(cnv, w, h);

            // TODO: Merge these to get better thumbnail rendering on iOS
            var img;
            if (_lib.isAndroid) {
                img = this.originalImg;
            } else {
                img = this.img;
            }
            var imgw = img.naturalWidth ? img.naturalWidth : img.width;
            var imgh = img.naturalHeight ? img.naturalHeight : img.height;
            var scale = Math.min(w / imgw, h / imgh);
            var ctx = cnv.getContext('2d');
            var iw = Math.floor(scale * imgw);
            var ih = Math.floor(scale * imgh);
            var ix = Math.floor((w - scale * imgw) / 2);
            var iy = Math.floor((h - scale * imgh) / 2);
            ctx.drawImage(this.border, 0, 0, this.border.width, this.border.height, ix, iy, iw, ih);
            if (!img.complete) {
                img.onload = function () {
                    ctx.drawImage(img, 0, 0, imgw, imgh, ix, iy, iw, ih);
                };
            } else {
                ctx.drawImage(img, 0, 0, imgw, imgh, ix, iy, iw, ih);
            }
        }

        ///////////////////////////////////////////////////////////////////////////////
        // sprite Primitives
        //////////////////////////////////////////////////////////////////////////////

    }, {
        key: 'goHome',
        value: function goHome() {
            this.setPos(this.homex, this.homey);
            this.scale = this.homescale;
            this.shown = this.homeshown;
            //	this.flip = this.homeflip;  // kept here just in case we want it
            this.div.style.opacity = this.shown ? 1 : 0;
            this.setHeading(0);
            this.render();
        }
    }, {
        key: 'touchingAny',
        value: function touchingAny() {
            if (!this.shown) {
                return false;
            }
            (0, _lib.setCanvasSize)(_ScratchJr2.default.workingCanvas, 480, 360);
            (0, _lib.setCanvasSize)(_ScratchJr2.default.workingCanvas2, 480, 360);
            var page = this.div.parentNode;
            var box = this.getBoxWithEffects(); // box with effects is a scale  and 1.5 times to count for rotations
            for (var i = 0; i < page.childElementCount; i++) {
                var other = page.childNodes[i].owner;
                if (!other) {
                    continue;
                }
                if (other.type == 'text') {
                    continue;
                }
                if (!other.shown) {
                    continue;
                }
                if (other.id == this.id) {
                    continue;
                }
                if (_Events2.default.dragthumbnail && other == _Events2.default.dragthumbnail.owner) {
                    continue;
                }
                var box2 = other.getBoxWithEffects();
                if (!box.intersects(box2)) {
                    continue;
                }
                if (this.verifyHit(other)) {
                    return true;
                }
            }
            return false;
        }
    }, {
        key: 'verifyHit',
        value: function verifyHit(other) {
            var ctx = _ScratchJr2.default.workingCanvas.getContext('2d');
            var ctx2 = _ScratchJr2.default.workingCanvas2.getContext('2d');
            ctx.clearRect(0, 0, 480, 360);
            ctx2.clearRect(0, 0, 480, 360);
            var box = this.getBoxWithEffects();
            var box2 = other.getBoxWithEffects();
            var rect = box.intersection(box2);
            if (rect.width == 0) {
                return false;
            }
            if (rect.height == 0) {
                return false;
            }
            ctx.globalCompositeOperation = 'source-over';
            this.stamp(ctx);
            // Normally, we could do a source-over followed by a source-in to detect where the two images collide.
            // However, unfortunately, behavior on Android 4.2 and Android 4.4+ varies.
            // On Android 4.4+, we could potentially use this more efficient strategy,
            // but we opted for using a single strategy
            // that works on all platforms, despite it being less efficient.
            // A future optimization could detect the behavior and use
            // the right strategy.
            // On Android 4.2, source-in does not clear the full source image
            // - only the rectangle that the second image being drawn
            // occupies. Rotation, scaling, etc. makes this hard to isolate,
            // so we opted to just draw the transformed image to a second
            // canvas and do a source-in for the entire second canvas.
            ctx2.globalCompositeOperation = 'source-over';
            other.stamp(ctx2);
            ctx.globalCompositeOperation = 'source-in';
            ctx.drawImage(_ScratchJr2.default.workingCanvas2, 0, 0);
            var pixels = ctx.getImageData(rect.x, rect.y, rect.width, rect.height).data;
            var max = Math.floor(pixels.length / 4);
            for (var i = 0; i < max; i++) {
                var pt = {
                    x: i % rect.width,
                    y: Math.floor(i / rect.width)
                };
                if (this.getAlpha(pixels, pt, rect.width) > 0) {
                    return true;
                }
            }
            return false;
        }
    }, {
        key: 'getAlpha',
        value: function getAlpha(data, node, w) {
            return data[node.x * 4 + node.y * w * 4 + 3];
        }
    }, {
        key: 'setHeading',
        value: function setHeading(angle) {
            this.angle = angle % 360;
            this.render();
        }
    }, {
        key: 'setPos',
        value: function setPos(dx, dy) {
            this.dirx = dx - this.xcoor == 0 ? 1 : (dx - this.xcoor) / Math.abs(dx - this.xcoor);
            this.diry = dy - this.ycoor == 0 ? 1 : (dy - this.ycoor) / Math.abs(dy - this.ycoor);
            this.xcoor = dx;
            this.ycoor = dy;
            this.wrap();
            this.render();
            (0, _lib.setProps)(this.div.style, {
                position: 'absolute',
                left: '0px',
                top: '0px'
            });
            this.updateBubble();
        }
    }, {
        key: 'wrap',
        value: function wrap() {
            if (this.type == 'text') {
                this.wrapText();
            } else {
                this.wrapChar();
            }
        }
    }, {
        key: 'wrapChar',
        value: function wrapChar() {
            if (this.xcoor < 0) {
                this.xcoor = 480 + this.xcoor;
            }
            if (this.ycoor < 0) {
                this.ycoor = 360 + this.ycoor;
            }
            if (this.xcoor >= 480) {
                this.xcoor = this.xcoor - 480;
            }
            if (this.ycoor >= 360) {
                this.ycoor = this.ycoor - 360;
            }
        }
    }, {
        key: 'wrapText',
        value: function wrapText() {
            var max = this.cx > 480 ? this.cx : 480;
            var min = this.cx > 480 ? 480 - this.cx : 0;
            if (this.xcoor < min) {
                this.xcoor = max + this.xcoor;
            }
            if (this.ycoor < 0) {
                this.ycoor = 360 + this.ycoor;
            }
            if (this.xcoor >= max) {
                this.xcoor = this.xcoor - max;
            }
            if (this.ycoor >= 360) {
                this.ycoor = this.ycoor - 360;
            }
        }
    }, {
        key: 'render',
        value: function render() {
            // TODO: Merge these to get better thumbnail rendering on iOS
            var dx, dy, mtx;
            if (_lib.isAndroid) {
                mtx = '';
                if (this.img) {
                    dx = this.xcoor - this.cx * this.scale;
                    dy = this.ycoor - this.cy * this.scale;
                    mtx = 'translate3d(' + dx + 'px,' + dy + 'px, 0px)';
                    mtx += ' rotate(' + this.angle + 'deg)';
                    if (this.flip) {
                        mtx += ' scale(-1, 1)';
                    } else {
                        mtx += ' scale(1, 1)';
                    }
                    var w = this.originalImg.width * this.scale;
                    var h = this.originalImg.height * this.scale;
                    this.div.style.width = w + 'px';
                    this.div.style.height = h + 'px';
                    if (this.border) {
                        this.border.style.width = w + 'px';
                        this.border.style.height = h + 'px';
                    }
                    this.img.style.width = w + 'px';
                    this.img.style.height = h + 'px';
                } else {
                    dx = this.xcoor - this.cx;
                    dy = this.ycoor - this.cy;
                    mtx = 'translate3d(' + dx + 'px,' + dy + 'px, 0px)';
                }
                this.setTransform(mtx);
            } else {
                dx = this.xcoor - this.cx;
                dy = this.ycoor - this.cy;
                mtx = 'translate3d(' + dx + 'px,' + dy + 'px, 0px)';
                if (this.img) {
                    mtx += ' rotate(' + this.angle + 'deg)';
                    if (this.flip) {
                        mtx += 'scale(' + -this.scale + ', ' + this.scale + ')';
                    } else {
                        mtx += 'scale(' + this.scale + ', ' + this.scale + ')';
                    }
                }
                this.setTransform(mtx);
            }
        }
    }, {
        key: 'select',
        value: function select() {
            if (this.borderOn) {
                return;
            }
            if (!this.img) {
                return;
            }
            if (!this.border) {
                return;
            }
            this.div.appendChild(this.border);
            (0, _lib.setProps)(this.border.style, {
                position: 'absolute',
                zIndex: -2,
                left: '0px',
                top: '0px'
            });
            this.div.appendChild(this.img);
            (0, _lib.setProps)(this.img.style, {
                position: 'absolute',
                left: '0px',
                top: '0px'
            });
            this.borderOn = true;
            this.render();
        }
    }, {
        key: 'unselect',
        value: function unselect() {
            if (!this.borderOn) {
                return;
            }
            while (this.div.childElementCount > 0) {
                this.div.removeChild(this.div.childNodes[0]);
            }
            this.div.appendChild(this.img);
            this.borderOn = false;
        }
    }, {
        key: 'setTransform',
        value: function setTransform(transform) {
            this.div.style.webkitTransform = transform;
        }
    }, {
        key: 'screenLeft',
        value: function screenLeft() {
            return Math.round(this.xcoor - this.cx * this.scale);
        }
    }, {
        key: 'screenTop',
        value: function screenTop() {
            return Math.round(this.ycoor - this.cy * this.scale);
        }
    }, {
        key: 'noScaleFor',
        value: function noScaleFor() {
            this.setScaleTo(this.defaultScale);
        }
    }, {
        key: 'changeSizeBy',
        value: function changeSizeBy(num) {
            var n = Number(num) + Number(this.scale) * 100;
            this.scale = this.getScale(n / 100);
            this.setPos(this.xcoor, this.ycoor);
            this.render();
        }
    }, {
        key: 'setScaleTo',
        value: function setScaleTo(n) {
            n = this.getScale(n);
            if (n == this.scale) {
                return;
            }
            this.scale = n;
            this.setPos(this.xcoor, this.ycoor);
            this.render();
        }
    }, {
        key: 'getScale',
        value: function getScale(n) {
            var mins = Math.max(Math.max(this.w, this.h) * n, 36);
            var maxs = Math.min(Math.min(this.w, this.h) * n, 360);
            if (mins == 36) {
                return 36 / Math.max(this.w, this.h);
            }
            if (maxs == 360) {
                return 360 / Math.min(this.w, this.h);
            }
            return n;
        }
    }, {
        key: 'getBox',
        value: function getBox() {
            var box = {
                x: this.screenLeft(),
                y: this.screenTop(),
                width: this.w * this.scale,
                height: this.h * this.scale
            };
            return box;
        }
    }, {
        key: 'getBoxWithEffects',
        value: function getBoxWithEffects() {
            if (this.type == 'text') {
                return new _Rectangle2.default(this.screenLeft(), this.screenTop(), this.w * this.scale, this.h * this.scale);
            }
            var max = Math.max(this.outline.width, this.outline.height);
            var w = Math.floor(max * 1.5 * this.scale);
            var h = Math.floor(max * 1.5 * this.scale);
            return new _Rectangle2.default(Math.floor(this.xcoor - w / 2), Math.floor(this.ycoor - h / 2), Math.floor(w), Math.floor(h));
        }

        //////////////////////////////////////////////////
        // Balloon
        //////////////////////////////////////////////////

    }, {
        key: 'closeBalloon',
        value: function closeBalloon() {
            if (!this.balloon) {
                return;
            }
            this.balloon.parentNode.removeChild(this.balloon);
            this.balloon = undefined;
        }
    }, {
        key: 'openBalloon',
        value: function openBalloon(label) {
            if (this.balloon) {
                this.closeBalloon();
            }
            var w = 200;
            var h = 36;
            var curve = 6;
            var dy = this.screenTop();
            this.balloon = (0, _lib.newDiv)(_ScratchJr2.default.stage.currentPage.div, 0, 0, w, h, {
                position: 'absolute',
                zIndex: 2,
                visibility: 'hidden'
            });
            var bimg = document.createElement('img');
            (0, _lib.setProps)(bimg.style, {
                position: 'absolute',
                zIndex: 2
            });
            this.balloon.appendChild(bimg);
            var p = (0, _lib.newP)(this.balloon, label, {});
            p.setAttribute('class', 'balloon');
            w = p.offsetWidth;
            if (w < 36) {
                w = 36;
            }
            if (w > 200) {
                w = 200;
            }
            w += 10 * (0, _lib.gn)('stage').owner.currentZoom;
            (0, _lib.setProps)(p.style, {
                position: 'absolute',
                width: w + 'px'
            });
            w += 10;
            w = Math.round(w);
            var offset = this.screenLeft() + this.div.offsetWidth * this.scale / 2 - w / 2;
            var dx = offset < 0 ? 0 : offset + w > 480 ? 478 - w : offset;
            dx = Math.round(dx);
            h = p.offsetHeight + curve * 2 + 7;
            (0, _lib.setCanvasSize)(this.balloon, w, h);
            dy -= h;
            if (dy < 2) {
                dy = 2;
            }
            this.balloon.style.webkitTransform = 'translate3d(' + dx + 'px,' + dy + 'px, 0px)';
            this.balloon.left = dx;
            this.balloon.top = dy;
            (0, _lib.setProps)(this.balloon.style, {
                position: 'absolute',
                left: '0px',
                top: '0px',
                visibility: 'visible'
            });
            this.drawBalloon();
        }
    }, {
        key: 'updateBubble',
        value: function updateBubble() {
            if (this.balloon == null) {
                return;
            }
            var w = this.balloon.offsetWidth;
            var h = this.balloon.offsetHeight;
            var dy = this.screenTop();
            var offset = this.screenLeft() + this.div.offsetWidth * this.scale / 2 - w / 2;
            var dx = offset < 0 ? 0 : offset + w > 480 ? 478 - w : offset;
            dx = Math.round(dx);
            dy -= h;
            if (dy < 2) {
                dy = 2;
            }
            this.balloon.style.webkitTransform = 'translate3d(' + dx + 'px,' + dy + 'px, 0px)';
            this.balloon.left = dx;
            this.balloon.top = dy;
            this.drawBalloon();
        }
    }, {
        key: 'drawBalloon',
        value: function drawBalloon() {
            var img = this.balloon.childNodes[0];
            var w = this.balloon.offsetWidth;
            var h = this.balloon.offsetHeight;
            var curve = 6;
            var dx = this.balloon.left;
            var x = this.xcoor;
            var h2 = h - 8;
            var w2 = w - 1;
            var side2 = x - dx;
            var margin = 20;
            if (side2 < margin) {
                side2 = margin;
            }
            if (side2 > w2 - margin) {
                side2 = w2 - margin;
            }
            var side1 = w2 - side2;
            var str = _BlockSpecs2.default.balloon.concat();
            str = str.replace('width="30px"', 'width="' + w + 'px"');
            str = str.replace('height="44px"', 'height="' + h + 'px"');
            str = str.replace('viewBox="0 0 30 44"', 'viewBox="0 0 ' + w + ' ' + h + '"');
            str = str.replace('h17', 'h' + (w2 - curve * 2));
            str = str.replace('v24', 'v' + (h2 - curve * 2));
            var a = str.split('h-2');
            var b = a[1].split('h-1');
            str = a[0] + 'h' + (-side1 + 7 + curve) + b[0] + 'h' + (-side2 + 7 + curve) + b[1];
            img.src = 'data:image/svg+xml;base64,' + btoa(str);
        }

        /////////////////////////////////////
        // Sprite rendering
        ////////////////////////////////////

    }, {
        key: 'stamp',
        value: function stamp(ctx, deltax, deltay) {
            var w = this.outline.width * this.scale;
            var h = this.outline.height * this.scale;
            var dx = deltax ? deltax : 0;
            var dy = deltay ? deltay : 0;
            ctx.save();
            ctx.translate(this.xcoor + dx, this.ycoor + dy);
            ctx.rotate(this.angle * _lib.DEGTOR);
            if (this.flip) {
                ctx.scale(-1, 1);
            }
            ctx.drawImage(this.outline, -w / 2, -h / 2, w, h);
            ctx.restore();
        }

        /////////////////////////////////////
        // Text Creation
        /////////////////////////////////////

    }, {
        key: 'createText',
        value: function createText(attr, whenDone) {
            var page = attr.page;
            (0, _lib.setProps)(this, attr);
            this.div = (0, _lib.newHTML)('p', 'textsprite', page.div);
            (0, _lib.setProps)(this.div.style, {
                fontSize: this.fontsize + 'px',
                color: this.color,
                fontFamily: window.Settings.textSpriteFont
            });
            this.div.owner = this;
            this.div.id = this.id;
            this.scale = 1;
            this.homescale = 1;
            this.homeshown = true;
            this.homeflip = false;
            this.outline = document.createElement('canvas');
            var sprites = JSON.parse(page.sprites);
            sprites.push(this.id);
            page.sprites = JSON.stringify(sprites);
            _OS2.default.analyticsEvent('editor', 'text_sprite_create');
            if (this.str == '' && !whenDone) {
                this.setTextBox();
                this.activateInput();
                var delta = this.fontsize * 1.35;
                page.textstartat += delta;
                if (page.textstartat + delta > 360) {
                    page.textstartat = 42;
                }
            } else {
                if (_Localization2.default.isSampleLocalizedKey(this.str) && _ScratchJr2.default.isSampleOrStarter()) {
                    this.str = _Localization2.default.localize('SAMPLE_TEXT_' + this.str);
                }
                this.recalculateText();
                if (whenDone) {
                    whenDone(this);
                }
            }
        }
    }, {
        key: 'setTextBox',
        value: function setTextBox() {
            var sform = document.forms.activetextbox;
            sform.textsprite = this;
            var box = this.getBox();
            var ti = document.forms.activetextbox.typing;
            ti.value = this.str;

            // TODO: Merge these for iOS
            var styles;
            if (_lib.isAndroid) {
                styles = {
                    color: this.color,
                    fontSize: this.fontsize * _lib.scaleMultiplier + 'px'
                };
            } else {
                styles = {
                    color: this.color,
                    fontSize: this.fontsize + 'px'
                };
            }
            var ci = _BlockSpecs2.default.fontcolors.indexOf((0, _lib.rgbToHex)(this.color));
            _UI2.default.setMenuTextColor((0, _lib.gn)('textcolormenu').childNodes[ci < 0 ? 9 : ci]);
            (0, _lib.setProps)(ti.style, styles);

            // TODO: Merge these for iOS
            var dy;
            if (_lib.isAndroid) {
                dy = box.y * _lib.scaleMultiplier + (0, _lib.globaly)((0, _lib.gn)('stage')) - 10 * _lib.scaleMultiplier;
            } else {
                dy = box.y + (0, _lib.globaly)((0, _lib.gn)('stage'), (0, _lib.gn)('stage').offsetTop) - 10;
            }
            var formsize = 470;
            (0, _lib.gn)('textbox').className = 'pagetext on';

            // TODO: Merge these for iOS
            var dx;
            if (_lib.isAndroid) {
                AndroidInterface.scratchjr_setsoftkeyboardscrolllocation(dy * window.devicePixelRatio, (dy + ti.parentNode.parentNode.getBoundingClientRect().height * 1.7) * window.devicePixelRatio);
                dx = (-10 + 240 - Math.round(formsize / 2)) * _lib.scaleMultiplier + (0, _lib.globalx)((0, _lib.gn)('stage'));
                (0, _lib.setProps)((0, _lib.gn)('textbox').style, {
                    top: dy + 'px',
                    left: dx + 'px',
                    zIndex: 10
                });
                (0, _lib.setProps)(sform.style, {
                    height: (this.fontsize + 10) * _lib.scaleMultiplier + 'px'
                });
                setTimeout(function () {
                    AndroidInterface.scratchjr_forceShowKeyboard();
                }, 500);
            } else {
                dx = -10 + 240 - Math.round(formsize / 2) + (0, _lib.globalx)((0, _lib.gn)('stage'), (0, _lib.gn)('stage').offsetLeft);
                (0, _lib.setProps)((0, _lib.gn)('textbox').style, {
                    top: dy + 'px',
                    left: dx + 'px',
                    zIndex: 10
                });
                (0, _lib.setProps)(sform.style, {
                    height: this.fontsize + 10 + 'px'
                });
            }
        }
    }, {
        key: 'unfocusText',
        value: function unfocusText() {
            _ScratchJr2.default.blur();
            document.body.scrollTop = 0;
            document.body.scrollLeft = 0;
            var form = document.forms.activetextbox;
            var changed = this.oldvalue != form.typing.value;
            _OS2.default.analyticsEvent('editor', 'text_sprite_close');
            if (this.noChars(form.typing.value)) {
                this.deleteText(this.oldvalue != '');
            } else {
                this.contractText();
                this.div.style.visibility = 'visible';
                if (_lib.isAndroid) {
                    (0, _lib.gn)('textbox').style.visibility = 'hidden';
                }
                (0, _lib.gn)('textbox').className = 'pagetext off';
                (0, _lib.gn)('textcolormenu').className = 'textuicolormenu off';
                (0, _lib.gn)('textfontsizes').className = 'textuifont off';
                (0, _lib.gn)('fontsizebutton').className = 'fontsizeText off';
                (0, _lib.gn)('fontcolorbutton').className = 'changecolorText off';
                form.textsprite = null;
                this.deactivateInput();
                if (changed) {
                    _Undo2.default.record({
                        action: 'edittext',
                        where: this.div.parentNode.owner.id,
                        who: this.id
                    });
                    _ScratchJr2.default.storyStart('Sprite.prototype.unfocusText');
                }
            }
            _Thumbs2.default.updatePages();
            if (_lib.isAndroid) {
                _ScratchJr2.default.onBackButtonCallback.pop();
                AndroidInterface.scratchjr_forceHideKeyboard();
            }
        }
    }, {
        key: 'deleteText',
        value: function deleteText(record) {
            var id = this.id;
            var page = _ScratchJr2.default.stage.currentPage;
            page.textstartat = this.ycoor + this.fontsize * 1.35 > 360 ? 36 : this.ycoor;
            var list = JSON.parse(page.sprites);
            var n = list.indexOf(this.id);
            if (n < 0) {
                return;
            }
            list.splice(n, 1);
            this.div.parentNode.removeChild(this.div);
            page.sprites = JSON.stringify(list);
            var form = document.forms.activetextbox;
            (0, _lib.gn)('textbox').style.visibility = 'hidden';
            form.textsprite = null;
            if (record) {
                _Undo2.default.record({
                    action: 'deletesprite',
                    who: id,
                    where: _ScratchJr2.default.stage.currentPage.id
                });
                _ScratchJr2.default.storyStart('Sprite.prototype.deleteText');
            }
        }
    }, {
        key: 'noChars',
        value: function noChars(str) {
            for (var i = 0; i < str.length; i++) {
                if (str[i] != ' ') {
                    return false;
                }
            }
            return true;
        }
    }, {
        key: 'contractText',
        value: function contractText() {
            var form = document.forms.activetextbox;
            this.str = form.typing.value.substring(0, form.typing.maxLength);
            this.recalculateText();
        }
    }, {
        key: 'clickOnText',
        value: function clickOnText(e) {
            e.stopPropagation();
            this.setTextBox();
            (0, _lib.gn)('textbox').style.visibility = 'visible';
            this.div.style.visibility = 'hidden';
            this.activateInput();
        }
    }, {
        key: 'activateInput',
        value: function activateInput() {
            this.oldvalue = this.str;
            var ti = document.forms.activetextbox.typing;
            (0, _lib.gn)('textbox').style.visibility = 'visible';
            var me = this;
            _OS2.default.analyticsEvent('editor', 'text_sprite_open');
            ti.onblur = function () {
                me.unfocusText();
            };
            ti.onkeypress = function (evt) {
                me.handleWrite(evt);
            };
            ti.onkeyup = function (evt) {
                me.handleKeyUp(evt);
            };
            ti.onsubmit = function () {
                me.unfocusText();
            };
            if (_lib.isAndroid) {
                setTimeout(function () {
                    ti.focus();
                }, 500);

                _ScratchJr2.default.onBackButtonCallback.push(function () {
                    me.unfocusText();
                });
            } else {
                // On iOS if the bottom of the textbox is lower than half of the screen
                // the color and font size menu may be covered by the keyboard
                // 0.45 is a magic number and we should compare the bottom Y of the textbox VS
                // WINDOW_INNER_HEIGHT substract the keyboard height.
                if ((0, _lib.gn)('textbox').offsetTop + (0, _lib.gn)('textbox').offsetHeight > _lib.WINDOW_INNER_HEIGHT * 0.45) {
                    // scroll up a little more than the textbox height
                    // to show the color menu and font size menu.
                    window.scroll(0, (0, _lib.gn)('textbox').offsetHeight * 1.2);
                }
                if (_lib.isTablet) {
                    ti.focus();
                } else {
                    setTimeout(function () {
                        ti.focus();
                    }, 100);
                }
            }
        }
    }, {
        key: 'handleWrite',
        value: function handleWrite(e) {
            var key = e.keyCode || e.which;
            var ti = e.target;
            if (key == 13) {
                e.preventDefault();
                e.target.blur();
            } else {
                if (!ti.parentNode.textsprite) {
                    (0, _lib.gn)('textbox').style.visibility = 'hidden';
                    this.deactivateInput();
                }
            }
        }
    }, {
        key: 'handleKeyUp',
        value: function handleKeyUp(e) {
            var ti = e.target;
            if (!ti.parentNode.textsprite) {
                return;
            }
            ti.parentNode.textsprite.str = ti.value;
        }
    }, {
        key: 'deactivateInput',
        value: function deactivateInput() {
            var ti = document.forms.activetextbox.typing;
            ti.onblur = undefined;
            ti.onkeypress = undefined;
            ti.onsubmit = undefined;
        }
    }, {
        key: 'activate',
        value: function activate() {
            var list = (0, _lib.fitInRect)(this.w, this.h, _ScriptsPane2.default.watermark.offsetWidth, _ScriptsPane2.default.watermark.offsetHeight);
            var div = _ScriptsPane2.default.watermark;
            while (div.childElementCount > 0) {
                div.removeChild(div.childNodes[0]);
            }
            var img = this.getSVGimage(this.watermark);
            div.appendChild(img);
            var attr = {
                width: this.w + 'px',
                height: this.h + 'px',
                left: list[0] + 'px',
                top: list[1] + 'px',
                zoom: Math.floor(list[2] / this.w * 100) + '%'
            };
            (0, _lib.setProps)(img.style, attr);
        }
    }, {
        key: 'getSVGimage',
        value: function getSVGimage(svg) {
            var img = document.createElement('img');
            var str = new XMLSerializer().serializeToString(svg);
            str = str.replace(/ href="data:image/g, ' xlink:href="data:image');
            img.src = 'data:image/svg+xml;base64,' + btoa(str);
            return img;
        }

        /////////////////////////////////////////////////
        // Text fcn
        ////////////////////////////////////////////////

    }, {
        key: 'setColor',
        value: function setColor(c) {
            this.color = c;
            this.div.style.color = this.color;
        }
    }, {
        key: 'setFontSize',
        value: function setFontSize(n) {
            if (n < 12) {
                n = 12;
            }
            if (n > 72) {
                n = 72;
            }
            this.fontsize = n;
        }
    }, {
        key: 'recalculateText',
        value: function recalculateText() {
            this.div.style.color = this.color;
            this.div.style.fontSize = this.fontsize + 'px';
            this.div.textContent = this.str;
            var ctx = this.outline.getContext('2d');
            ctx.font = 'bold ' + this.fontsize + 'px ' + window.Settings.textSpriteFont;
            var w = ctx.measureText(this.str).width;
            this.w = Math.round(w) + 1;
            this.div.style.width = this.w * 2 + 'px';
            this.h = this.div.offsetHeight;
            this.cx = this.w / 2;
            this.cy = this.h / 2;
            (0, _lib.setCanvasSize)(this.outline, this.w, this.h);
            ctx.clearRect(0, 0, this.outline.width, this.outline.height);
            ctx.font = 'bold ' + this.fontsize + 'px ' + window.Settings.textSpriteFont;
            ctx.fillStyle = this.color;
            ctx.textAlign = 'left';
            ctx.textBaseline = 'top';
            ctx.fillText(this.str, 0, 0);
            this.setPos(this.xcoor, this.ycoor);
        }
    }, {
        key: 'startShaking',
        value: function startShaking() {
            var p = this.div.parentNode;
            var shake = (0, _lib.newHTML)('div', 'shakeme', p);
            shake.id = 'shakediv';

            // TODO: merge these for iOS
            if (_lib.isAndroid) {
                (0, _lib.setProps)(shake.style, {
                    position: 'absolute',
                    left: this.screenLeft() + 'px',
                    top: this.screenTop() + 'px',
                    width: this.w * this.scale + 'px',
                    height: this.h * this.scale + 'px'
                });
            } else {
                (0, _lib.setProps)(shake.style, {
                    position: 'absolute',
                    left: this.screenLeft() / this.scale + 'px',
                    top: this.screenTop() / this.scale + 'px',
                    width: this.w + 'px',
                    height: this.h + 'px',
                    zoom: Math.floor(this.scale * 100) + '%'
                });
            }
            var mtx = 'translate3d(0px, 0px, 0px)';
            if (this.img) {
                mtx += ' rotate(' + this.angle + 'deg)';
                if (this.flip) {
                    mtx += 'scale(' + -1 + ', ' + 1 + ')';
                } else {
                    mtx += 'scale(' + 1 + ', ' + 1 + ')';
                }
            }
            this.setTransform(mtx);
            shake.appendChild(this.div);
            var cb = (0, _lib.newHTML)('div', this.type == 'sprite' ? 'deletesprite' : 'deletetext', shake);
            if (_lib.isiOS && this.type == 'sprite') {
                cb.style.zoom = Math.floor(1 / this.scale * 100) + '%';
            }
            if ((0, _lib.globalx)(cb) - (0, _lib.globalx)(_ScratchJr2.default.stage.div) < 0) {
                cb.style.left = Math.abs((0, _lib.globalx)(cb) - (0, _lib.globalx)(_ScratchJr2.default.stage.div)) * this.scale + 'px';
            }
            if ((0, _lib.globaly)(cb) - (0, _lib.globaly)(_ScratchJr2.default.stage.div) < 0) {
                cb.style.top = Math.abs((0, _lib.globaly)(cb) - (0, _lib.globaly)(_ScratchJr2.default.stage.div)) * this.scale + 'px';
            }
            cb.id = 'deletesprite';
            this.div = shake;
            this.div.owner = this;
        }
    }, {
        key: 'stopShaking',
        value: function stopShaking() {
            if (this.div.id != 'shakediv') {
                return;
            }
            var p = this.div;
            this.div = this.div.childNodes[0];
            _ScratchJr2.default.stage.currentPage.div.appendChild(this.div);
            if (p.id == 'shakediv') {
                p.parentNode.removeChild(p);
            }

            // TODO: merge these for iOS
            if (_lib.isAndroid) {
                this.render();
            } else {
                var mtx = 'translate3d(' + (this.xcoor - this.cx) + 'px,' + (this.ycoor - this.cy) + 'px, 0px)';
                if (this.img) {
                    mtx += ' rotate(' + this.angle + 'deg)';
                    if (this.flip) {
                        mtx += 'scale(' + -this.scale + ', ' + this.scale + ')';
                    } else {
                        mtx += 'scale(' + this.scale + ', ' + this.scale + ')';
                    }
                }
                this.setTransform(mtx);
            }
        }
    }, {
        key: 'drawCloseButton',
        value: function drawCloseButton() {
            var ctx = this.div.getContext('2d');
            var img = document.createElement('img');
            img.src = 'assets/ui/closeit.svg';
            if (!img.complete) {
                img.onload = function () {
                    ctx.drawImage(0, 0);
                };
            } else {
                ctx.drawImage(img, 0, 0);
            }
        }

        //////////////////////////////////////////
        // Save data
        /////////////////////////////////////////

    }, {
        key: 'getData',
        value: function getData() {
            var data = this.type == 'sprite' ? this.getSpriteData() : this.getTextBoxData();
            if (this.type != 'sprite') {
                return data;
            }
            var sc = (0, _lib.gn)(this.id + '_scripts').owner;
            var res = [];
            var topblocks = sc.getEncodableBlocks();
            for (var i = 0; i < topblocks.length; i++) {
                res.push(_Project2.default.encodeStrip(topblocks[i]));
            }
            data.scripts = res;
            return data;
        }
    }, {
        key: 'getSpriteData',
        value: function getSpriteData() {
            var data = {};
            data.shown = this.shown;
            data.type = this.type;
            data.md5 = this.md5;
            data.id = this.id;
            data.flip = this.flip;
            data.name = this.name;
            data.angle = this.angle;
            data.scale = this.scale;
            data.speed = this.speed;
            data.defaultScale = this.defaultScale;
            data.sounds = this.sounds;
            data.xcoor = this.xcoor;
            data.ycoor = this.ycoor;
            data.cx = this.cx;
            data.cy = this.cy;
            data.w = this.w;
            data.h = this.h;
            data.homex = this.homex;
            data.homey = this.homey;
            data.homescale = this.homescale;
            data.homeshown = this.homeshown;
            data.homeflip = this.homeflip;
            return data;
        }
    }, {
        key: 'getTextBoxData',
        value: function getTextBoxData() {
            var data = {};
            data.shown = this.shown;
            data.type = this.type;
            data.id = this.id;
            data.speed = this.speed;
            data.cx = this.cx;
            data.cy = this.cy;
            data.w = Math.floor(this.w);
            data.h = Math.floor(this.h);
            data.xcoor = this.xcoor;
            data.ycoor = this.ycoor;
            data.homex = this.homex;
            data.homey = this.homey;
            data.str = this.str;
            data.color = this.color;
            data.fontsize = this.fontsize;
            return data;
        }
    }]);

    return Sprite;
}();

exports.default = Sprite;

/***/ }),

/***/ "./src/editor/engine/Stage.js":
/*!************************************!*\
  !*** ./src/editor/engine/Stage.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ScratchJr = __webpack_require__(/*! ../ScratchJr */ "./src/editor/ScratchJr.js");

var _ScratchJr2 = _interopRequireDefault(_ScratchJr);

var _Project = __webpack_require__(/*! ../ui/Project */ "./src/editor/ui/Project.js");

var _Project2 = _interopRequireDefault(_Project);

var _Thumbs = __webpack_require__(/*! ../ui/Thumbs */ "./src/editor/ui/Thumbs.js");

var _Thumbs2 = _interopRequireDefault(_Thumbs);

var _UI = __webpack_require__(/*! ../ui/UI */ "./src/editor/ui/UI.js");

var _UI2 = _interopRequireDefault(_UI);

var _Undo = __webpack_require__(/*! ../ui/Undo */ "./src/editor/ui/Undo.js");

var _Undo2 = _interopRequireDefault(_Undo);

var _ScriptsPane = __webpack_require__(/*! ../ui/ScriptsPane */ "./src/editor/ui/ScriptsPane.js");

var _ScriptsPane2 = _interopRequireDefault(_ScriptsPane);

var _Rectangle = __webpack_require__(/*! ../../geom/Rectangle */ "./src/geom/Rectangle.js");

var _Rectangle2 = _interopRequireDefault(_Rectangle);

var _Events = __webpack_require__(/*! ../../utils/Events */ "./src/utils/Events.js");

var _Events2 = _interopRequireDefault(_Events);

var _ScratchAudio = __webpack_require__(/*! ../../utils/ScratchAudio */ "./src/utils/ScratchAudio.js");

var _ScratchAudio2 = _interopRequireDefault(_ScratchAudio);

var _Vector = __webpack_require__(/*! ../../geom/Vector */ "./src/geom/Vector.js");

var _Vector2 = _interopRequireDefault(_Vector);

var _Page = __webpack_require__(/*! ./Page */ "./src/editor/engine/Page.js");

var _Page2 = _interopRequireDefault(_Page);

var _lib = __webpack_require__(/*! ../../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Stage = function () {
    function Stage(div) {
        _classCallCheck(this, Stage);

        this.currentPage = undefined;
        this.div = (0, _lib.newHTML)('div', 'stage', div);
        this.div.setAttribute('id', 'stage');
        this.div.style.webkitTextSizeAdjust = '100%';
        this.width = 480;
        this.height = 360;
        this.setStageScaleAndPosition(_lib.scaleMultiplier, 46, 74);
        this.pages = [];
        this.pagesdiv = (0, _lib.newDiv)(this.div, 0, 0, 480, 360, {
            position: 'absolute'
        });
        var me = this;
        this.div.ontouchstart = function (evt) {
            me.mouseDown(evt);
        };
        this.div.onmousedown = function (evt) {
            me.mouseDown(evt);
        };
        this.div.owner = this;
        this.currentZoom = 1;
        this.initialPoint = {
            x: 0,
            y: 0
        };
        this.deltaPoint = {
            x: 0,
            y: 0
        };
    }

    _createClass(Stage, [{
        key: 'setStageScaleAndPosition',
        value: function setStageScaleAndPosition(scale, x, y) {
            this.stageScale = scale;
            (0, _lib.setProps)((0, _lib.gn)('stage').style, {
                webkitTransform: 'translate(' + -this.width / 2 + 'px, ' + -this.height / 2 + 'px) ' + 'scale(' + scale + ') ' + 'translate(' + (this.width / 2 + x) + 'px, ' + (this.height / 2 + y) + 'px)'
            });
        }
    }, {
        key: 'getPagesID',
        value: function getPagesID() {
            var res = [];
            for (var i = 0; i < this.pages.length; i++) {
                res.push(this.pages[i].id);
            }
            return res;
        }
    }, {
        key: 'getPage',
        value: function getPage(id) {
            for (var i = 0; i < this.pages.length; i++) {
                if (this.pages[i].id == id) {
                    return this.pages[i];
                }
            }
            return this.pages[0];
        }
    }, {
        key: 'resetPage',
        value: function resetPage(obj) {
            var page = obj.div;
            for (var i = 0; i < page.childElementCount; i++) {
                var spr = page.childNodes[i].owner;
                if (!spr) {
                    continue;
                }
                if (spr.type == 'sprite') {
                    spr.goHome();
                }
            }
        }
    }, {
        key: 'resetPages',
        value: function resetPages() {
            for (var i = 0; i < _ScratchJr2.default.stage.pages.length; i++) {
                Stage.prototype.resetPage(_ScratchJr2.default.stage.pages[i]);
            }
        }

        //goto page


    }, {
        key: 'gotoPage',
        value: function gotoPage(n) {
            if (n < 1) {
                return;
            }
            if (n > this.pages.length) {
                return;
            }
            if (_Events2.default.dragthumbnail && _Events2.default.dragthumbnail.owner) {
                return;
            }
            this.setPage(this.pages[n - 1], true);
        }
    }, {
        key: 'setPage',
        value: function setPage(page, isOn) {
            _ScratchJr2.default.stopStrips();
            var sc = _ScratchJr2.default.getSprite() ? (0, _lib.gn)(_ScratchJr2.default.stage.currentPage.currentSpriteName + '_scripts') : undefined;
            if (sc) {
                sc.owner.deactivate();
            }
            this.currentPage.div.style.visibility = 'hidden';
            this.currentPage.setPageSprites('hidden');
            this.currentPage = page;
            this.currentPage.div.style.visibility = 'visible';
            this.currentPage.setPageSprites('visible');
            //  if (page == obj['currentPage'])	 this.currentPage.currentSpriteName = obj[page]["lastSprite"];
            _Thumbs2.default.updateSprites();
            _Thumbs2.default.updatePages();
            var spr = _ScratchJr2.default.getSprite();
            if (spr) {
                spr.activate();
            }
            if (isOn) {
                this.loadPageThreads();
            }
        }
    }, {
        key: 'loadPageThreads',
        value: function loadPageThreads() {
            _ScratchJr2.default.blur();
            var page = this.currentPage;
            for (var i = 0; i < page.div.childElementCount; i++) {
                var spr = page.div.childNodes[i].owner;
                if (!spr) {
                    continue;
                }
                spr.goHome();
                var sc = (0, _lib.gn)(spr.id + '_scripts');
                if (!sc) {
                    continue;
                }
                var topblocks = sc.owner.getBlocksType(['onflag', 'ontouch']);
                for (var j = 0; j < topblocks.length; j++) {
                    var b = topblocks[j];
                    _ScratchJr2.default.runtime.addRunScript(spr, b);
                }
            }
        }

        //Copy Sprite
        /////////////////////////////////'

    }, {
        key: 'copySprite',
        value: function copySprite(el, thumb) {
            _ScratchAudio2.default.sndFX('copy.wav');
            _Thumbs2.default.overpage(thumb);
            var data = _Project2.default.encodeSprite(el.owner);
            if ((0, _lib.gn)(thumb.owner).owner == this.currentPage) {
                data.xcoor += 10;
                data.ycoor += 10;
                data.homex = data.xcoor;
                data.homey = data.ycoor;
            }
            var a = data.id.split(' ');
            if (Number(a[a.length - 1]).toString() != 'NaN') {
                a.pop();
            }
            var page = (0, _lib.gn)(thumb.owner).owner;
            var name = (0, _lib.getIdFor)(a.join(' '));
            data.id = name;
            var stg = this;
            var whenDone = function whenDone(spr) {
                if (spr.page.id == _ScratchJr2.default.stage.currentPage.id) {
                    spr.div.style.visibility = 'visible';
                }
                if (!page.currentSpriteName) {
                    page.currentSpriteName = spr.id;
                }
                _Thumbs2.default.updateSprites();
                _Thumbs2.default.updatePages();
                _Undo2.default.record({
                    action: 'copy',
                    who: name,
                    where: (0, _lib.gn)(thumb.owner).owner.id
                });
                _ScratchJr2.default.storyStart('Stage.prototype.copySprite');
            };
            _Project2.default.recreateObject(page, name, data, whenDone, page.id == stg.currentPage.id);
        }

        //Delete page


    }, {
        key: 'deletePage',
        value: function deletePage(str, data) {
            //  reserve a next id to be able to Undo deleting the first page
            _ScratchJr2.default.storyStart('Stage.prototype.deletePage'); // Record a change for sample projects in story-starter mode
            var pageid = (0, _lib.getIdFor)('page');
            var sprAttr = _UI2.default.mascotData();
            var newp = new Object();
            var catid = sprAttr.id;
            newp.sprites = [catid];
            newp.num = 1;
            newp.lastSprite = catid;
            newp[catid] = sprAttr;
            newp.layers = [catid];
            var page = (0, _lib.gn)(str).owner;
            var indx = this.getPagesID().indexOf(str);
            if (indx < 0) {
                return;
            }
            var form = document.forms.activetextbox;
            var cnv = form.textsprite;
            if (cnv && (0, _lib.gn)(cnv.id)) {
                _ScratchJr2.default.blur();
            }
            this.removePageBlocks(str);
            this.pages.splice(indx, 1);
            if (!data) {
                _ScratchAudio2.default.sndFX('cut.wav');
            }
            this.removePage(page);
            if (this.pages.length == 0) {
                var p = new _Page2.default(pageid, newp, refreshPage);
                sprAttr.page = p;
            } else {
                if (str == this.currentPage.id) {
                    this.setViewPage(this.pages[0]);
                }
                _Thumbs2.default.updateSprites();
                _Thumbs2.default.updatePages();
                if (!data) {
                    _Undo2.default.record({
                        action: 'deletepage',
                        where: str,
                        who: str
                    });
                }
            }
            function refreshPage() {
                _ScratchJr2.default.stage.setViewPage(_ScratchJr2.default.stage.currentPage);
                _Thumbs2.default.updateSprites();
                _Thumbs2.default.updatePages();
                if (!data) {
                    _Undo2.default.record({
                        action: 'deletepage',
                        where: str,
                        who: str
                    });
                }
            }
        }
    }, {
        key: 'setViewPage',
        value: function setViewPage(page) {
            this.currentPage = page;
            this.currentPage.div.style.visibility = 'visible';
            this.currentPage.setPageSprites('visible');
        }
    }, {
        key: 'removePageBlocks',
        value: function removePageBlocks(str) {
            var indx = this.getPagesID().indexOf(str);
            for (var n = 0; n < this.pages.length; n++) {
                var page = this.pages[n];
                for (var i = 0; i < page.div.childElementCount; i++) {
                    var spr = page.div.childNodes[i].owner;
                    if (!spr) {
                        continue;
                    }
                    var sc = (0, _lib.gn)(spr.id + '_scripts');
                    if (!sc) {
                        continue;
                    }
                    var gotoblocks = sc.owner.getBlocksType(['gotopage']);
                    for (var j = 0; j < gotoblocks.length; j++) {
                        var b = gotoblocks[j];
                        var pageindex = b.getArgValue() - 1;
                        if (this.pages[pageindex].id == str) {
                            var prev = b.prev;
                            b.detachBlock();
                            b.div.parentNode.removeChild(b.div);
                            if (prev && prev.aStart) {
                                prev.div.parentNode.removeChild(prev.div);
                            }
                        } else if (b.getArgValue() - 1 > indx) {
                            b.arg.argValue -= 1;
                            this.pages[pageindex].num = b.arg.argValue;
                            b.arg.updateIcon();
                        }
                    }
                }
            }
        }

        //Events MouseDown


    }, {
        key: 'mouseDown',
        value: function mouseDown(e) {
            if (e.touches && e.touches.length > 1) {
                return;
            }
            if (_ScratchJr2.default.onHold) {
                return;
            }
            e.preventDefault();
            _ScratchJr2.default.blur();
            if (!this.currentPage) {
                return;
            }
            if (document.forms.activetextbox.textsprite) {
                return;
            }
            var pt = this.getStagePt(e);
            (0, _lib.setCanvasSize)(_ScratchJr2.default.workingCanvas, 480, 360);
            var ctx = _ScratchJr2.default.workingCanvas.getContext('2d');
            var target = e.target.nodeName == 'CANVAS' ? this.checkShaking(pt, e.target) : e.target;
            if (_ScratchJr2.default.shaking && target.id == 'deletesprite') {
                this.removeSprite(_ScratchJr2.default.shaking.owner);
                return;
            }
            ctx.clearRect(0, 0, 480, 360);
            var hitobj = this.whoIsIt(ctx, pt);
            if (_ScratchJr2.default.shaking && hitobj && hitobj.id == _ScratchJr2.default.shaking.id) {
                // check grid case
                var sprname = _ScratchJr2.default.shaking.id;
                if (pt.x - (0, _lib.gn)(sprname).owner.screenLeft() < 45 && pt.y - (0, _lib.gn)(sprname).owner.screenTop() < 45) {
                    this.removeSprite(_ScratchJr2.default.shaking.owner);
                    return;
                }
            }
            if (!hitobj) {
                _ScratchJr2.default.clearSelection();
                return;
            }
            if (_ScratchJr2.default.shaking) {
                _ScratchJr2.default.clearSelection();
            } else {
                this.mouseDownOnSprite(hitobj, pt);
            }
        }
    }, {
        key: 'checkShaking',
        value: function checkShaking(pt, target) {
            if (!_ScratchJr2.default.shaking) {
                return target;
            }
            var dx = (0, _lib.globalx)((0, _lib.gn)('deletesprite')) - (0, _lib.globalx)(_ScratchJr2.default.stage.pagesdiv);
            var dy = (0, _lib.globaly)((0, _lib.gn)('deletesprite')) - (0, _lib.globaly)(_ScratchJr2.default.stage.pagesdiv);
            var w = (0, _lib.gn)('deletesprite').offsetWidth;
            var h = (0, _lib.gn)('deletesprite').offsetHeight;
            var rect = new _Rectangle2.default(dx, dy, w, h);
            return rect.hitRect(pt) ? (0, _lib.gn)('deletesprite') : target;
        }
    }, {
        key: 'mouseDownOnSprite',
        value: function mouseDownOnSprite(spr, pt) {
            this.initialPoint = {
                x: pt.x,
                y: pt.y
            };
            _Events2.default.dragthumbnail = spr.div;
            _Events2.default.clearEvents();
            if (!_ScratchJr2.default.inFullscreen && _ScratchJr2.default.isEditable()) {
                _Events2.default.holdit(spr.div, this.startShaking);
            }
            this.setEvents();
        }
    }, {
        key: 'whoIsIt',
        value: function whoIsIt(ctx, pt) {
            var page = this.currentPage.div;
            var spr, pixel;
            for (var i = page.childElementCount - 1; i > -1; i--) {
                spr = page.childNodes[i].owner;
                if (!spr) {
                    continue;
                }
                if (!spr.shown) {
                    continue;
                }
                spr.stamp(ctx);
                pixel = ctx.getImageData(pt.x, pt.y, 1, 1).data;
                if (pixel[3] != 0) {
                    return spr;
                }
            }
            var fuzzy = 5;
            ctx.clearRect(0, 0, 480, 360);
            for (var j = page.childElementCount - 1; j > -1; j--) {
                spr = page.childNodes[j].owner;
                if (!spr) {
                    continue;
                }
                if (!spr.shown) {
                    continue;
                }
                spr.stamp(ctx);
                spr.stamp(ctx, fuzzy, 0);
                spr.stamp(ctx, 0, fuzzy);
                spr.stamp(ctx, -fuzzy, 0);
                spr.stamp(ctx, 0, -fuzzy);
                pixel = ctx.getImageData(pt.x, pt.y, 1, 1).data;
                if (pixel[3] != 0) {
                    return spr;
                }
            }
            return undefined;
        }
    }, {
        key: 'getStagePt',
        value: function getStagePt(evt) {
            var pt = _Events2.default.getTargetPoint(evt);
            var mc = this.div;
            var dx = (0, _lib.globalx)(mc);
            var dy = (0, _lib.globaly)(mc);
            pt.x -= dx;
            pt.y -= dy;
            pt.x /= this.stageScale;
            pt.y /= this.stageScale;
            return pt;
        }
    }, {
        key: 'setEvents',
        value: function setEvents() {
            var me = this;
            window.ontouchmove = function (evt) {
                me.mouseMove(evt);
            };
            window.ontouchend = function (evt) {
                me.mouseUp(evt);
            };
            window.onmousemove = function (evt) {
                me.mouseMove(evt);
            };
            window.onmouseup = function (evt) {
                me.mouseUp(evt);
            };
        }
    }, {
        key: 'startShaking',
        value: function startShaking(b) {
            if (!b.owner) {
                return;
            }
            _Events2.default.clearEvents();
            _ScratchJr2.default.shaking = b;
            _ScratchJr2.default.stopShaking = _ScratchJr2.default.stage.stopShaking;
            b.owner.startShaking();
        }
    }, {
        key: 'stopShaking',
        value: function stopShaking(b) {
            if (!b.owner) {
                return;
            }
            b.owner.stopShaking();
            _ScratchJr2.default.shaking = undefined;
            _ScratchJr2.default.stopShaking = undefined;
        }
    }, {
        key: 'startSpriteDrag',
        value: function startSpriteDrag() {
            var spr = _Events2.default.dragthumbnail.owner;
            spr.threads = _ScratchJr2.default.runtime.removeRunScript(spr);
            this.currentPage.div.appendChild(_Events2.default.dragthumbnail);
            this.deltaPoint = {
                x: this.initialPoint.x,
                y: this.initialPoint.y
            };
            _Events2.default.dragged = true;
            _ScratchJr2.default.changed = true;
        }
    }, {
        key: 'mouseMove',
        value: function mouseMove(e) {
            if (!_Events2.default.dragthumbnail) {
                return;
            }
            var pt = this.getStagePt(e);
            // if pointer is outside stage
            // cancel the dragging event
            var threshold = 15;
            if (pt.x < -threshold || pt.y < -threshold || pt.x > this.width + threshold || pt.y > this.height + threshold) {
                _Events2.default.clearEvents();
                _Events2.default.dragged = false;
                _Events2.default.dragthumbnail = undefined;
                return;
            }
            var delta = _Vector2.default.diff(pt, this.initialPoint);
            var dist = _ScratchJr2.default.inFullscreen ? 15 : 5;
            if (!_Events2.default.dragged && _Vector2.default.len(delta) > dist) {
                this.startSpriteDrag(e);
            }
            if (!_Events2.default.dragged) {
                return;
            }
            if (_Events2.default.timeoutEvent) {
                clearTimeout(_Events2.default.timeoutEvent);
            }
            _Events2.default.timeoutEvent = undefined;
            var spr = _Events2.default.dragthumbnail.owner;
            delta = this.wrapDelta(spr, _Vector2.default.diff(pt, this.deltaPoint));
            spr.xcoor += delta.x;
            spr.ycoor += delta.y;
            spr.render();
            this.deltaPoint = {
                x: pt.x,
                y: pt.y
            };
        }
    }, {
        key: 'wrapDelta',
        value: function wrapDelta(spr, delta) {
            if (spr.type == 'text') {
                return this.wrapText(spr, delta);
            } else {
                return this.wrapChar(spr, delta);
            }
        }
    }, {
        key: 'wrapChar',
        value: function wrapChar(spr, delta) {
            if (delta.x + spr.xcoor < 0) {
                delta.x -= spr.xcoor + delta.x;
            }
            if (delta.y + spr.ycoor < 0) {
                delta.y -= spr.ycoor + delta.y;
            }
            if (delta.x + spr.xcoor >= 480) {
                delta.x += 479 - (spr.xcoor + delta.x);
            }
            if (delta.y + spr.ycoor >= 360) {
                delta.y += 359 - (spr.ycoor + delta.y);
            }
            return delta;
        }
    }, {
        key: 'wrapText',
        value: function wrapText(spr, delta) {
            var max = spr.cx > 480 ? spr.cx : 480;
            var min = spr.cx > 480 ? 480 - spr.cx : 0;
            if (delta.x + spr.xcoor <= min) {
                delta.x -= spr.xcoor + delta.x - min;
            }
            if (delta.y + spr.ycoor < 0) {
                delta.y -= spr.ycoor + delta.y;
            }
            if (delta.x + spr.xcoor > max) {
                delta.x += max - 1 - (spr.xcoor + delta.x);
            }
            if (delta.y + spr.ycoor >= 360) {
                delta.y += 359 - (spr.ycoor + delta.y);
            }
            return delta;
        }
    }, {
        key: 'mouseUp',
        value: function mouseUp(e) {
            var spr = _Events2.default.dragthumbnail.owner;
            if (_Events2.default.timeoutEvent) {
                clearTimeout(_Events2.default.timeoutEvent);
            }
            _Events2.default.timeoutEvent = undefined;
            if (!_Events2.default.dragged) {
                this.clickOnElement(e, _Events2.default.dragthumbnail);
            } else {
                this.moveElementBy(spr);
                if (spr.type == 'sprite') {
                    _ScratchJr2.default.runtime.threadsRunning = _ScratchJr2.default.runtime.threadsRunning.concat(spr.threads);
                    _ScratchJr2.default.startCurrentPageStrips(['ontouch']);
                }
            }
            _Events2.default.clearEvents();
            _Events2.default.dragged = false;
            _Events2.default.dragthumbnail = undefined;
        }
    }, {
        key: 'moveElementBy',
        value: function moveElementBy(spr) {
            if (!_ScratchJr2.default.inFullscreen) {
                spr.homex = spr.xcoor;
                spr.homey = spr.ycoor;
                spr.homeflip = spr.flip;
            }
            _Thumbs2.default.updatePages();
        }
    }, {
        key: 'clickOnSprite',
        value: function clickOnSprite(e, spr) {
            e.preventDefault();
            _ScratchJr2.default.clearSelection();
            _ScratchJr2.default.startScriptsFor(spr, ['onclick']);
            _ScratchJr2.default.startCurrentPageStrips(['ontouch']);
        }

        //Delete Sprite
        /////////////////////////////////'

    }, {
        key: 'removeSprite',
        value: function removeSprite(sprite) {
            _ScratchJr2.default.shaking = undefined;
            _ScratchJr2.default.stopShaking = undefined;
            _ScratchAudio2.default.sndFX('cut.wav');
            if (sprite.type == 'text') {
                sprite.deleteText(true);
            } else {
                this.removeCharacter(sprite);
            }
            this.currentPage.updateThumb();
            this.updatePageBlocks();
        }
    }, {
        key: 'removeCharacter',
        value: function removeCharacter(spr) {
            _ScratchJr2.default.runtime.stopThreadSprite(spr);
            this.removeFromPage(spr);
            _Undo2.default.record({
                action: 'deletesprite',
                who: spr.id,
                where: _ScratchJr2.default.stage.currentPage.id
            });
            _ScratchJr2.default.storyStart('Stage.prototype.removeCharacter');
            _Thumbs2.default.updateSprites();
        }
    }, {
        key: 'updatePageBlocks',
        value: function updatePageBlocks() {
            for (var i = 0; i < _ScratchJr2.default.stage.pages.length; i++) {
                var page = _ScratchJr2.default.stage.pages[i];
                _ScriptsPane2.default.updateScriptsPageBlocks(JSON.parse(page.sprites));
            }
        }
    }, {
        key: 'removeFromPage',
        value: function removeFromPage(spr) {
            var id = spr.id;
            var sc = (0, _lib.gn)(id + '_scripts');
            var page = this.currentPage;
            var list = JSON.parse(page.sprites);
            var n = list.indexOf(id);
            if (n < 0) {
                return;
            }
            var th = spr.thumbnail;
            var sprite = _ScratchJr2.default.getSprite();
            _ScratchAudio2.default.sndFX('cut.wav');
            list.splice(n, 1);
            spr.div.parentNode.removeChild(spr.div);
            if (sc) {
                sc.parentNode.removeChild(sc);
            }
            page.sprites = JSON.stringify(list);
            th.parentNode.removeChild(th);
            if (sprite && sprite.id == spr.id) {
                var sprites = page.getSprites();
                page.setCurrentSprite(sprites.length > 0 ? (0, _lib.gn)(sprites[0]).owner : undefined);
            }
        }
    }, {
        key: 'renumberPageBlocks',
        value: function renumberPageBlocks(list) {
            var pages = this.getPagesID();
            for (var n = 0; n < this.pages.length; n++) {
                var page = this.pages[n];
                for (var i = 0; i < page.div.childElementCount; i++) {
                    var spr = page.div.childNodes[i].owner;
                    if (!spr) {
                        continue;
                    }
                    var sc = (0, _lib.gn)(spr.id + '_scripts');
                    if (!sc) {
                        continue;
                    }
                    var gotoblocks = sc.owner.getBlocksType(['gotopage']);
                    for (var j = 0; j < gotoblocks.length; j++) {
                        var b = gotoblocks[j];
                        var indx = b.getArgValue() - 1;
                        b.arg.argValue = pages.indexOf(list[indx]) + 1;
                        b.updateBlock();
                    }
                }
            }
        }
    }, {
        key: 'clickOnElement',
        value: function clickOnElement(e, spr) {
            if (spr.owner.type == 'text') {
                if (!_ScratchJr2.default.inFullscreen) {
                    spr.owner.clickOnText(e);
                }
            } else if (spr.owner.type == 'sprite') {
                this.clickOnSprite(e, spr.owner);
            }
        }

        //Stage clear
        ///////////////////////////////////////

    }, {
        key: 'clear',
        value: function clear() {
            for (var i = 0; i < this.pages.length; i++) {
                this.removePage(this.pages[i]);
            }
            this.pages = [];
            while (this.pagesdiv.childElementCount > 0) {
                this.pagesdiv.removeChild(this.pagesdiv.childNodes[0]);
            }
        }
    }, {
        key: 'removePage',
        value: function removePage(p) {
            var list = JSON.parse(p.sprites);
            for (var j = 0; j < list.length; j++) {
                var name = list[j];
                var sprite = (0, _lib.gn)(name);
                var sc = (0, _lib.gn)(name + '_scripts');
                if (sc) {
                    sc.parentNode.removeChild(sc);
                }
                sprite.parentNode.removeChild(sprite);
            }
            p.div.parentNode.removeChild(p.div);
        }

        //Debugging hit masks
        ///////////////////////////

    }, {
        key: 'sd',
        value: function sd() {
            var stg = (0, _lib.gn)('stage');
            var mask = (0, _lib.newDiv)((0, _lib.gn)('stageframe'), stg.offsetLeft + 1, stg.offsetTop + 1, 482, 362, {
                position: 'absolute',
                zIndex: _ScratchJr2.default.layerTop + 20,
                visibility: 'hidden'
            });
            mask.setAttribute('id', 'pagemask');
            mask.appendChild(_ScratchJr2.default.workingCanvas);
        }
    }, {
        key: 'on',
        value: function on() {
            (0, _lib.gn)('pagemask').style.visibility = 'visible';
        }
    }, {
        key: 'off',
        value: function off() {
            (0, _lib.gn)('pagemask').style.visibility = 'hidden';
        }
    }, {
        key: 'sm',
        value: function sm(spr) {
            var stg = (0, _lib.gn)('stage');
            var w = spr.outline.width;
            var h = spr.outline.height;
            var mask = (0, _lib.newDiv)((0, _lib.gn)('stageframe'), stg.offsetLeft + 1, stg.offsetTop + 1, w, h, {
                position: 'absolute',
                zIndex: _ScratchJr2.default.layerTop + 20,
                visibility: 'hidden'
            });
            mask.setAttribute('id', 'spritemask');
            mask.appendChild(spr.outline);
        }
    }, {
        key: 'son',
        value: function son() {
            (0, _lib.gn)('spritemask').style.visibility = 'visible';
        }
    }, {
        key: 'soff',
        value: function soff() {
            (0, _lib.gn)('spritemask').style.visibility = 'hidden';
        }
    }]);

    return Stage;
}();

exports.default = Stage;

/***/ }),

/***/ "./src/editor/engine/Thread.js":
/*!*************************************!*\
  !*** ./src/editor/engine/Thread.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Prims = __webpack_require__(/*! ./Prims */ "./src/editor/engine/Prims.js");

var _Prims2 = _interopRequireDefault(_Prims);

var _Grid = __webpack_require__(/*! ../ui/Grid */ "./src/editor/ui/Grid.js");

var _Grid2 = _interopRequireDefault(_Grid);

var _Vector = __webpack_require__(/*! ../../geom/Vector */ "./src/geom/Vector.js");

var _Vector2 = _interopRequireDefault(_Vector);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Thread = function () {
    function Thread(s, block) {
        _classCallCheck(this, Thread);

        this.firstBlock = block.findFirst();
        this.thisblock = block;
        this.oldblock = null;
        this.spr = s;
        this.audio = undefined;
        this.stack = [];
        this.firstTime = true;
        this.count = -1;
        this.waitTimer = 0;
        this.distance = -1;
        this.called = [];
        this.vector = {
            x: 0,
            y: 0
        };
        this.isRunning = true;
        this.time = 0; // for debugging purposes
        return this;
    }

    _createClass(Thread, [{
        key: 'clear',
        value: function clear() {
            this.stack = [];
            this.firstTime = true;
            this.count = -1;
            this.waitTimer = 0;
            this.vector = {
                x: 0,
                y: 0
            };
            this.distance = -1;
            this.called = [];
            this.thisblock = this.firstBlock;
        }
    }, {
        key: 'duplicate',
        value: function duplicate() {
            var thread = new Thread(this.spr, this.firstBlock);
            thread.count = -1;
            thread.firstBlock = this.firstBlock;
            thread.thisblock = this.thisblock;
            thread.oldblock = null;
            thread.spr = this.spr;
            thread.stack = this.stack;
            thread.firstTime = this.firstTime;
            thread.vector = {
                x: 0,
                y: 0
            };
            thread.waitTimer = 0;
            thread.distance = -1;
            thread.called = this.called;
            thread.isRunning = this.isRunning;
            return thread;
        }
    }, {
        key: 'deselect',
        value: function deselect(b) {
            while (b != null) {
                b.unhighlight();
                if (b.inside) {
                    b.repeatCounter = -1;
                    this.deselect(b.inside);
                }
                b = b.next;
            }
        }
    }, {
        key: 'stop',
        value: function stop(b) {
            this.stopping(b);
            this.isRunning = false;
        }
    }, {
        key: 'stopping',
        value: function stopping(b) {
            this.endPrim(b);
            this.deselect(this.firstBlock);
            this.clear();
            this.spr.closeBalloon();
        }
    }, {
        key: 'endPrim',
        value: function endPrim(stopMine) {
            if (!this.thisblock) {
                return;
            }
            var b = this.thisblock;
            var s = this.spr;
            switch (b.blocktype) {
                case 'down':
                case 'back':
                case 'forward':
                case 'up':
                    if (this.distance > -1 && !stopMine) {
                        var vector = _Vector2.default.scale(this.vector, this.distance % 24);
                        s.setPos(s.xcoor + vector.x, s.ycoor + vector.y);
                    }
                    break;
                case 'hop':
                    var count = this.count;
                    var n = Number(b.getArgValue());
                    count--;
                    if (count > 0) {
                        var delta = 0;
                        for (var i = count; i > -1; i--) {
                            delta += _Prims2.default.hopList[count];
                        }
                        this.vector = {
                            x: 0,
                            y: delta
                        };
                        var dy = s.ycoor - this.vector.y / 5 * n;
                        if (dy < 0) {
                            dy = 0;
                        }
                        if (dy >= 360 - _Grid2.default.size) {
                            dy = 360 - _Grid2.default.size;
                        }
                        s.setPos(s.xcoor + this.vector.x, dy);
                    }
                    break;
                case 'playsnd':
                    if (this.audio) {
                        this.audio.stop();
                        this.audio = undefined;
                    }
                    break;
                case 'playusersnd':
                    if (this.audio) {
                        this.audio.stop();
                        this.audio = undefined;
                    }
                    break;
                case 'hide':
                    s.div.style.opacity = 0;
                    if (!this.firstBlock.aStart && !stopMine) {
                        s.homeshown = false;
                    }
                    break;
                case 'show':
                    s.div.style.opacity = 1;
                    if (!this.firstBlock.aStart && !stopMine) {
                        s.homeshown = true;
                    }
                    break;
                case 'same':
                    s.noScaleFor();
                    break;
                case 'grow':
                case 'shrink':
                    if (!this.firstBlock.aStart && !stopMine) {
                        s.homescale = s.scale;
                    }
                    break;
                case 'right':
                case 'left':
                    var angle = s.angle;
                    if (angle % 30 != 0) {
                        angle = (Math.floor(angle / 30) + 1) * 30;
                    }
                    s.setHeading(angle);
                    break;
            }
        }
    }]);

    return Thread;
}();

exports.default = Thread;

/***/ }),

/***/ "./src/editor/ui/Alert.js":
/*!********************************!*\
  !*** ./src/editor/ui/Alert.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _DrawPath = __webpack_require__(/*! ../../utils/DrawPath */ "./src/utils/DrawPath.js");

var _DrawPath2 = _interopRequireDefault(_DrawPath);

var _lib = __webpack_require__(/*! ../../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var balloon = undefined;

var Alert = function () {
    function Alert() {
        _classCallCheck(this, Alert);
    }

    _createClass(Alert, null, [{
        key: 'close',
        value: function close() {
            if (!balloon) {
                return;
            }
            balloon.parentNode.removeChild(balloon);
            balloon = undefined;
        }
    }, {
        key: 'open',
        value: function open(p, obj, label, color) {
            if (balloon) {
                Alert.close();
            }
            var scale = _lib.scaleMultiplier;
            var w = 80;
            var h = 24;
            var dx = (0, _lib.globalx)(obj, obj.offsetLeft) + obj.offsetWidth / 2 - (w + 7 * 2 + 4) * scale / 2;
            var dy = (0, _lib.globaly)(obj, obj.offsetTop) - 24 * scale;
            if (dy < 5 * scale) {
                dy = 5 * scale;
            }

            balloon = (0, _lib.newCanvas)(p, dx, dy, w, h, {
                position: 'absolute',
                zIndex: 2
            });
            balloon.icon = obj;
            var ctx = balloon.getContext('2d');
            w = 16 + (0, _lib.getStringSize)(ctx, 'bold 14px Verdana', label).width;
            if (w < 36) {
                w = 36;
            }
            dx = (0, _lib.globalx)(obj, obj.offsetLeft) + obj.offsetWidth / 2 - (w + 7 * 2 + 4) * scale / 2;
            if (dx < 5 * scale) {
                dx = 5 * scale;
            }
            dx = Math.floor(dx);
            (0, _lib.setCanvasSize)(balloon, w, 36);
            (0, _lib.setProps)(balloon.style, {
                position: 'absolute',
                left: dx + 'px',
                zIndex: 1000,
                webkitTransform: 'translate(' + -w / 2 + 'px, ' + -h / 2 + 'px) ' + 'scale(' + scale + ', ' + scale + ') ' + 'translate(' + w / 2 + 'px, ' + h / 2 + 'px) '
            });
            Alert.draw(balloon.getContext('2d'), 6, w, h, color);
            (0, _lib.writeText)(ctx, 'bold 14px Verdana', 'white', label, 20, 8);
        }
    }, {
        key: 'draw',
        value: function draw(ctx, curve, w, h, color) {
            curve = 10;
            var path = new Array(['M', 0, curve], ['q', 0, -curve, curve, -curve], ['h', w - curve * 2], ['q', curve, 0, curve, curve], ['v', h - curve * 2], ['q', 0, curve, -curve, curve], ['h', -(w / 2) + 7 + curve], ['l', -7, 7], ['l', -7, -7], ['h', -(w / 2) + 7 + curve], ['q', -curve, 0, -curve, -curve], ['Z']);
            ctx.clearRect(0, 0, Math.max(ctx.canvas.width, w), Math.max(ctx.canvas.height, h));
            ctx.fillStyle = color;
            ctx.beginPath();
            _DrawPath2.default.render(ctx, path);
            ctx.fill();
        }
    }, {
        key: 'balloon',
        get: function get() {
            return balloon;
        }
    }]);

    return Alert;
}();

exports.default = Alert;

/***/ }),

/***/ "./src/editor/ui/Grid.js":
/*!*******************************!*\
  !*** ./src/editor/ui/Grid.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); ///////////////////////////////
// Stage grid
//////////////////////////////

var _ScratchJr = __webpack_require__(/*! ../ScratchJr */ "./src/editor/ScratchJr.js");

var _ScratchJr2 = _interopRequireDefault(_ScratchJr);

var _Events = __webpack_require__(/*! ../../utils/Events */ "./src/utils/Events.js");

var _Events2 = _interopRequireDefault(_Events);

var _Localization = __webpack_require__(/*! ../../utils/Localization */ "./src/utils/Localization.js");

var _Localization2 = _interopRequireDefault(_Localization);

var _lib = __webpack_require__(/*! ../../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var width = 482;
var height = 362;
var size = 24;
var hidden = true;

var Grid = function () {
    function Grid() {
        _classCallCheck(this, Grid);
    }

    _createClass(Grid, null, [{
        key: 'init',
        value: function init(div) {
            var w = div.offsetWidth;
            var h = div.offsetHeight;
            var grid = (0, _lib.newDiv)(div, 0, 0, width, height, {
                position: 'absolute',
                zIndex: _ScratchJr2.default.layerTop
            });
            Grid.setScaleAndPosition(grid, _lib.scaleMultiplier, 47, 75, width, height);
            grid.setAttribute('id', 'livegrid');
            Grid.drawLines(grid, width, height);
            Grid.createNumbering(w, h);
            Grid.createCursor();
            Grid.createYcursor();
            Grid.createXcursor();
        }
    }, {
        key: 'setScaleAndPosition',
        value: function setScaleAndPosition(grid, scale, x, y, w, h) {
            (0, _lib.setProps)(grid.style, {
                webkitTransform: 'translate(' + -w / 2 + 'px, ' + -h / 2 + 'px) ' + 'scale(' + scale + ') ' + 'translate(' + (w / 2 + x) + 'px, ' + (h / 2 + y) + 'px)'
            });
        }
    }, {
        key: 'drawLines',
        value: function drawLines(grid, w, h) {
            var cnv = (0, _lib.newCanvas)(grid, 0, 0, w, h, {
                position: 'absolute'
            });
            cnv.style.opacity = 0.5;
            var ctx = cnv.getContext('2d');
            ctx.strokeStyle = '#B3B3B3';
            ctx.lineWidth = 1;
            var dx = size;
            // vertical
            for (var i = 0; i < 480 / size; i++) {
                ctx.moveTo(dx, 0);
                ctx.lineTo(dx, 360);
                ctx.stroke();
                dx += size;
            }
            var dy = size;
            // horizontal
            for (i = 0; i < 360 / size; i++) {
                ctx.moveTo(0, dy);
                ctx.lineTo(480, dy);
                ctx.stroke();
                dy += size;
            }
            cnv.ontouchstart = function (evt) {
                _ScratchJr2.default.stage.mouseDown(evt);
            };
            cnv.onmousedown = function (evt) {
                _ScratchJr2.default.stage.mouseDown(evt);
            };
        }
    }, {
        key: 'createNumbering',
        value: function createNumbering(w, h) {
            var row = (0, _lib.newDiv)((0, _lib.gn)('stageframe'), 0, 0, w - 46 - 30, 24, {
                position: 'absolute',
                zIndex: _ScratchJr2.default.layerTop
            });
            row.setAttribute('id', 'rownum');
            Grid.setScaleAndPosition(row, _lib.scaleMultiplier, 46 - 24, 75 + height, w - 46 - 30, 24);
            var offset = size;
            var dx = offset;
            for (var i = 0; i < 480 / offset; i++) {
                var num = (0, _lib.newDiv)(row, dx, 0, size, size, {
                    position: 'absolute',
                    zIndex: 10
                });
                var p = (0, _lib.newP)(num, _Localization2.default.localize('GRID_NUMBER', {
                    N: i + 1
                }), {});
                p.setAttribute('class', 'stylelabel');
                dx += offset;
            }
            var column = (0, _lib.newDiv)((0, _lib.gn)('stageframe'), 0, 0, 24, h + 24, {
                position: 'absolute',
                zIndex: _ScratchJr2.default.layerTop
            });
            column.setAttribute('id', 'colnum');
            Grid.setScaleAndPosition(column, _lib.scaleMultiplier, 46 - 24, 74 + 1, 24, h + 24);
            var dy = 360 - offset;
            for (var j = 0; j < 360 / offset; j++) {
                var numj = (0, _lib.newDiv)(column, 0, dy, size, size, {
                    position: 'absolute',
                    zIndex: 10
                });
                var py = (0, _lib.newP)(numj, _Localization2.default.localize('GRID_NUMBER', {
                    N: j + 1
                }), {});
                py.setAttribute('class', 'stylelabel');
                dy -= offset;
            }
        }
    }, {
        key: 'createYcursor',
        value: function createYcursor() {
            var num = (0, _lib.newDiv)((0, _lib.gn)('colnum'), 0, 0, size, size, {
                position: 'absolute',
                zIndex: 20
            });
            num.setAttribute('class', 'circle');
            num.style.background = '#6a99c1';
            num.setAttribute('id', 'ycursor');
            var p = (0, _lib.newP)(num, 15, {});
            p.setAttribute('class', 'circlenum');
        }
    }, {
        key: 'createXcursor',
        value: function createXcursor() {
            var num = (0, _lib.newDiv)((0, _lib.gn)('rownum'), size, 0, size, size, {
                position: 'absolute',
                zIndex: 20
            });
            num.setAttribute('class', 'circle');
            num.style.background = '#6a99c1';
            num.setAttribute('id', 'xcursor');
            var p = (0, _lib.newP)(num, 1, {});
            p.setAttribute('class', 'circlenum');
        }
    }, {
        key: 'createCursor',
        value: function createCursor() {
            var gc = (0, _lib.newDiv)((0, _lib.gn)('livegrid'), 0, 0, size + 2, size + 2, {
                position: 'absolute',
                zIndex: _ScratchJr2.default.layerAboveBottom
            });
            gc.setAttribute('id', 'circlenum');
            var cnv = (0, _lib.newCanvas)(gc, 0, 0, size + 2, size + 2, {
                position: 'absolute'
            });
            cnv.ontouchstart = function (evt) {
                Grid.mouseDownOnCursor(evt);
            };
            cnv.onmousedown = function (evt) {
                Grid.mouseDownOnCursor(evt);
            };
            var ctx = cnv.getContext('2d');
            ctx.globalAlpha = 0.5;
            ctx.fillStyle = '#28A5DA';
            ctx.strokeStyle = '#656e73';
            ctx.lineWidth = 3;
            ctx.strokeRect(3, 3, size - 6, size - 6);
            ctx.fillRect(3, 3, size - 6, size - 6);
            gc.ontouchstart = Grid.mouseDownOnCursor;
            gc.onmousedown = Grid.mouseDownOnCursor;
        }
    }, {
        key: 'mouseDownOnCursor',
        value: function mouseDownOnCursor(e) {
            e.preventDefault();
            e.stopPropagation();
            var pt = _ScratchJr2.default.stage.getStagePt(e);
            var spr = _ScratchJr2.default.getSprite();
            _ScratchJr2.default.stage.initialPoint = {
                x: pt.x,
                y: pt.y
            };
            _Events2.default.dragthumbnail = spr.div;
            _Events2.default.clearEvents();
            if (!_ScratchJr2.default.inFullscreen && spr) {
                _Events2.default.holdit(spr.div, _ScratchJr2.default.stage.startShaking);
            }
            _ScratchJr2.default.stage.setEvents();
        }
    }, {
        key: 'updateCursor',
        value: function updateCursor() {
            if (hidden) {
                return;
            }
            if (_ScratchJr2.default.inFullscreen) {
                return;
            }
            if (!_ScratchJr2.default.stage.currentPage) {
                return;
            }
            if (!_ScratchJr2.default.getSprite()) {
                (0, _lib.gn)('circlenum').style.visibility = 'hidden';
                (0, _lib.gn)('xcursor').style.visibility = 'hidden';
                (0, _lib.gn)('ycursor').style.visibility = 'hidden';
                return;
            }
            var spr = (0, _lib.gn)(_ScratchJr2.default.stage.currentPage.currentSpriteName);
            if (!spr) {
                return;
            }
            var obj = spr.owner;
            var c = (0, _lib.gn)('circlenum');
            if (!c) {
                return;
            }
            var dx = obj.xcoor + size / 2;
            var dy = obj.ycoor - size / 2;
            (0, _lib.gn)('xcursor').style.visibility = 'visible';
            (0, _lib.gn)('ycursor').style.visibility = 'visible';
            (0, _lib.gn)('circlenum').style.visibility = 'visible';
            Grid.setCursorsValues(dx, dy);
        }
    }, {
        key: 'setCursorsValues',
        value: function setCursorsValues(dx, dy) {
            var c = (0, _lib.gn)('circlenum');
            var numX = Math.round(dx / size);
            var numY = Math.round(dy / size);
            if (c.offsetLeft != numX * 24) {
                var xc = (0, _lib.gn)('xcursor');
                var xstate = numX < 1 || numX > 20 ? 'hidden' : 'visible';
                (0, _lib.setProps)(xc.style, {
                    position: 'absolute',
                    left: numX * 24 + 'px',
                    visibility: xstate
                });
                xc.childNodes[0].textContent = _Localization2.default.localize('GRID_NUMBER', {
                    N: numX
                });
            }
            if (c.offsetTop != numY * 24) {
                var yc = (0, _lib.gn)('ycursor');
                var ystate = numY < 0 || numY > 14 ? 'hidden' : 'visible';
                (0, _lib.setProps)(yc.style, {
                    position: 'absolute',
                    top: numY * 24 + 'px',
                    visibility: ystate
                });
                yc.childNodes[0].textContent = _Localization2.default.localize('GRID_NUMBER', {
                    N: 15 - numY
                });
            }
            (0, _lib.setProps)(c.style, {
                position: 'absolute',
                top: numY * 24 + 'px',
                left: (numX - 1) * 24 + 'px'
            });
        }
    }, {
        key: 'hide',
        value: function hide(b) {
            hidden = b;
            var mystate = hidden ? 'hidden' : 'visible';
            (0, _lib.gn)('livegrid').style.visibility = mystate;
            (0, _lib.gn)('rownum').style.visibility = mystate;
            (0, _lib.gn)('colnum').style.visibility = mystate;
            if (_ScratchJr2.default.stage.currentPage) {
                mystate = !_ScratchJr2.default.getSprite() ? 'hidden' : mystate;
            }
            (0, _lib.gn)('circlenum').style.visibility = mystate;
            (0, _lib.gn)('xcursor').style.visibility = mystate;
            (0, _lib.gn)('ycursor').style.visibility = mystate;
        }
    }, {
        key: 'size',
        get: function get() {
            return size;
        }
    }, {
        key: 'hidden',
        get: function get() {
            return hidden;
        }
    }]);

    return Grid;
}();

exports.default = Grid;

/***/ }),

/***/ "./src/editor/ui/Library.js":
/*!**********************************!*\
  !*** ./src/editor/ui/Library.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ScratchJr = __webpack_require__(/*! ../ScratchJr */ "./src/editor/ScratchJr.js");

var _ScratchJr2 = _interopRequireDefault(_ScratchJr);

var _OS = __webpack_require__(/*! ../../tablet/OS */ "./src/tablet/OS.js");

var _OS2 = _interopRequireDefault(_OS);

var _IO = __webpack_require__(/*! ../../tablet/IO */ "./src/tablet/IO.js");

var _IO2 = _interopRequireDefault(_IO);

var _MediaLib = __webpack_require__(/*! ../../tablet/MediaLib */ "./src/tablet/MediaLib.js");

var _MediaLib2 = _interopRequireDefault(_MediaLib);

var _Paint = __webpack_require__(/*! ../../painteditor/Paint */ "./src/painteditor/Paint.js");

var _Paint2 = _interopRequireDefault(_Paint);

var _Events = __webpack_require__(/*! ../../utils/Events */ "./src/utils/Events.js");

var _Events2 = _interopRequireDefault(_Events);

var _Localization = __webpack_require__(/*! ../../utils/Localization */ "./src/utils/Localization.js");

var _Localization2 = _interopRequireDefault(_Localization);

var _ScratchAudio = __webpack_require__(/*! ../../utils/ScratchAudio */ "./src/utils/ScratchAudio.js");

var _ScratchAudio2 = _interopRequireDefault(_ScratchAudio);

var _lib = __webpack_require__(/*! ../../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var selectedOne = void 0;
var nativeJr = true;
var clickThumb = void 0;
var shaking = void 0;
var type = void 0;
var timeoutEvent = void 0;
var libFrame = void 0;

var Library = function () {
    function Library() {
        _classCallCheck(this, Library);
    }

    _createClass(Library, null, [{
        key: 'init',
        value: function init() {
            libFrame = document.getElementById('libframe');
            libFrame.style.minHeight = Math.max((0, _lib.getDocumentHeight)(), _lib.frame.offsetHeight) + 'px';
            var topbar = (0, _lib.newHTML)('div', 'topbar', libFrame);
            topbar.setAttribute('id', 'topbar');
            var actions = (0, _lib.newHTML)('div', 'actions', topbar);
            actions.setAttribute('id', 'libactions');
            var ascontainer = (0, _lib.newHTML)('div', 'assetname-container', topbar);
            var as = (0, _lib.newHTML)('div', 'assetname', ascontainer);
            var myname = (0, _lib.newHTML)('p', undefined, as);
            myname.setAttribute('id', 'assetname');
            myname.textContent = '';
            Library.layoutHeader();
        }
    }, {
        key: 'createScrollPanel',
        value: function createScrollPanel() {
            var inner = (0, _lib.newHTML)('div', 'innerlibrary', libFrame);
            inner.setAttribute('id', 'asssetsview');
            var div = (0, _lib.newHTML)('div', 'scrollarea', inner);
            div.setAttribute('id', 'scrollarea');
        }
    }, {
        key: 'open',
        value: function open(libType) {
            type = libType;
            (0, _lib.gn)('assetname').textContent = '';
            nativeJr = true;
            _lib.frame.style.display = 'none';
            libFrame.className = 'libframe appear';
            libFrame.focus();
            selectedOne = undefined;
            (0, _lib.gn)('okbut').onclick = type == 'costumes' ? Library.closeSpriteSelection : Library.closeBkgSelection;
            Library.clean();
            Library.createScrollPanel();
            Library.addThumbnails(type);
            window.ontouchstart = undefined;
            window.ontouchend = undefined;
            window.onmousedown = undefined;
            window.onmouseup = undefined;
            document.ontouchmove = undefined;
            document.onmousemove = undefined;
            window.onresize = undefined;

            (0, _lib.gn)('library_paintme').style.opacity = 1;
            (0, _lib.gn)('library_paintme').onclick = Library.editResource;

            // Set the back button callback
            _ScratchJr2.default.onBackButtonCallback.push(function () {
                var e = document.createEvent('TouchEvent');
                e.initTouchEvent();
                Library.cancelPick(e);
            });
        }
    }, {
        key: 'clean',
        value: function clean() {
            if ((0, _lib.gn)('scrollarea')) {
                var div = (0, _lib.gn)('scrollarea').parentNode;
                libFrame.removeChild(div);
            }
        }
    }, {
        key: 'close',
        value: function close(e) {
            e.preventDefault();
            e.stopPropagation();
            _ScratchAudio2.default.sndFX('tap.wav');
            _ScratchJr2.default.blur();
            libFrame.className = 'libframe disappear';
            document.body.scrollTop = 0;
            _lib.frame.style.display = 'block';
            _ScratchJr2.default.editorEvents();
            _ScratchJr2.default.onBackButtonCallback.pop();
        }
    }, {
        key: 'layoutHeader',
        value: function layoutHeader() {
            var buttons = (0, _lib.newHTML)('div', 'bkgbuttons', (0, _lib.gn)('libactions'));
            var paintme = (0, _lib.newHTML)('div', 'painticon', buttons);
            paintme.id = 'library_paintme';
            paintme.onclick = Library.editResource;
            var okbut = (0, _lib.newHTML)('div', 'okicon', buttons);
            okbut.setAttribute('id', 'okbut');
            var cancelbut = (0, _lib.newHTML)('div', 'cancelicon', buttons);
            cancelbut.onclick = Library.cancelPick;
        }
    }, {
        key: 'cancelPick',
        value: function cancelPick(e) {
            _ScratchJr2.default.onHold = true;
            Library.close(e);
            setTimeout(function () {
                _ScratchJr2.default.onHold = false;
            }, 1000);
        }
    }, {
        key: 'addThumbnails',
        value: function addThumbnails() {
            var div = (0, _lib.gn)('scrollarea');
            Library.addEmptyThumb(div, type == 'costumes' ? 118 * _lib.scaleMultiplier : 120 * _lib.scaleMultiplier, type == 'costumes' ? 90 * _lib.scaleMultiplier : 90 * _lib.scaleMultiplier);
            var key = type == 'costumes' ? 'usershapes' : 'userbkgs';
            // Student' assets
            var json = {};
            json.cond = 'ext = ? AND version = ?';
            json.items = type == 'costumes' ? ['md5', 'altmd5', 'name', 'scale', 'width', 'height'] : ['altmd5', 'md5', 'width', 'height'];
            json.values = ['svg', _ScratchJr2.default.version];
            json.order = 'ctime desc';
            _IO2.default.query(key, json, Library.displayAssets);
        }
    }, {
        key: 'skipUserAssets',
        value: function skipUserAssets() {
            var div = (0, _lib.gn)('scrollarea');
            Library.addEmptyThumb(div, type == 'costumes' ? 118 * _lib.scaleMultiplier : 120 * _lib.scaleMultiplier, type == 'costumes' ? 90 * _lib.scaleMultiplier : 90 * _lib.scaleMultiplier);
            Library.addHR(div);
            Library.displayLibAssets(type == 'costumes' ? _MediaLib2.default.sprites : _MediaLib2.default.backgrounds);
        }
    }, {
        key: 'getpadding',
        value: function getpadding(div) {
            var w = Math.min((0, _lib.getDocumentWidth)(), libFrame.offsetWidth);
            var dw = div.childNodes[1].offsetLeft - div.childNodes[0].offsetLeft;
            var qty = Math.floor(w / dw);
            var pad = Math.floor((w - qty * dw) / 2);
            if (pad < 10) {
                return Math.floor((w - (qty - 1) * dw) / 2);
            }
            return pad;
        }
    }, {
        key: 'displayAssets',
        value: function displayAssets(str) {
            nativeJr = true;
            var div = (0, _lib.gn)('scrollarea');
            var data = JSON.parse(str);
            if (data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    Library.addAssetThumbChoose(div, data[i], 120 * _lib.scaleMultiplier, 90 * _lib.scaleMultiplier, Library.selectAsset);
                }
            }
            Library.addHR(div);
            nativeJr = false;
            data = type == 'costumes' ? _MediaLib2.default.sprites : _MediaLib2.default.backgrounds;
            Library.displayLibAssets(data);
        }
    }, {
        key: 'displayLibAssets',
        value: function displayLibAssets(data) {
            var div = (0, _lib.gn)('scrollarea');
            if (data.length < 1) {
                return;
            }
            var order = data[0].order;
            var key = order ? order.split(',')[1] : '';
            for (var i = 0; i < data.length; i++) {
                order = data[i].order;
                var key2 = order ? order.split(',')[1] : '';
                if (key2 != key) {
                    Library.addHR(div);
                    key = key2;
                }
                if ('separator' in data[i]) {
                    Library.addHR(div);
                } else {
                    Library.addLocalThumbChoose(div, data[i], 120 * _lib.scaleMultiplier, 90 * _lib.scaleMultiplier, Library.selectAsset);
                }
            }
        }
    }, {
        key: 'addAssetThumbChoose',
        value: function addAssetThumbChoose(parent, aa, w, h, fcn) {
            var data = Library.parseAssetData(aa);
            var tb = document.createElement('div');
            parent.appendChild(tb);
            tb.byme = nativeJr ? 1 : 0;
            var md5 = data.md5;
            tb.setAttribute('class', 'assetbox off');
            tb.setAttribute('id', md5);
            tb.scale = !data.scale ? 0.5 : data.scale;
            tb.fieldname = data.name;
            tb.w = Number(data.width);
            tb.h = Number(data.height);
            var scale = Math.min(w / tb.w, h / tb.h);
            var img = (0, _lib.newHTML)('img', undefined, tb);
            img.style.left = 9 * _lib.scaleMultiplier + 'px';
            img.style.top = 7 * _lib.scaleMultiplier + 'px';
            img.style.position = 'relative';
            img.style.height = data.height * scale + 'px';
            img.ondragstart = function () {
                return false;
            };
            if (data.altmd5) {
                _IO2.default.getAsset(data.altmd5, drawMe);
            }
            function drawMe(dataurl) {
                img.src = dataurl;
            }
            tb.ontouchstart = function (evt) {
                fcn(evt, tb);
            };
            tb.onmousedown = function (evt) {
                fcn(evt, tb);
            };
            return tb;
        }
    }, {
        key: 'addLocalThumbChoose',
        value: function addLocalThumbChoose(parent, data, w, h, fcn) {
            var tb = (0, _lib.newHTML)('div', 'assetbox off', parent);
            var md5 = data.md5;
            tb.byme = nativeJr ? 1 : 0;
            tb.setAttribute('id', md5);
            tb.scale = !data.scale ? 0.5 : data.scale;
            tb.fieldname = data.name;
            tb.w = Number(data.width);
            tb.h = Number(data.height);

            var img = (0, _lib.newHTML)('img', undefined, tb);
            var scale = Math.min(w / tb.w, h / tb.h);
            img.style.height = tb.h * scale + 'px';
            img.style.width = tb.w * scale + 'px';

            img.style.left = Math.floor((w - scale * tb.w) / 2 + 9 * _lib.scaleMultiplier) + 'px';
            img.style.top = Math.floor((h - scale * tb.h) / 2 + 9 * _lib.scaleMultiplier) + 'px';
            img.style.position = 'relative';

            // Cached downsized-thumbnails are in pnglibrary
            var pngPath = _MediaLib2.default.path.replace('svg', 'png');
            img.src = pngPath + _IO2.default.getFilename(md5) + '.png';

            tb.ontouchstart = function (evt) {
                fcn(evt, tb);
            };
            tb.onmousedown = function (evt) {
                fcn(evt, tb);
            };
            return tb;
        }
    }, {
        key: 'userAssetThumbnail',
        value: function userAssetThumbnail(img, cnv, sizew, sizeh) {
            var scale = Math.min(sizew / img.width, sizeh / img.height);
            var currentCtx = cnv.getContext('2d');
            var iw = Math.floor(scale * img.width);
            var ih = Math.floor(scale * img.height);
            var ix = Math.floor((sizew - scale * img.width) / 2);
            var iy = Math.floor((sizeh - scale * img.height) / 2);
            currentCtx.drawImage(img, 0, 0, img.width, img.height, ix, iy, iw, ih);
        }
    }, {
        key: 'addEmptyThumb',
        value: function addEmptyThumb(parent, w, h) {
            var tb = document.createElement('div');
            tb.setAttribute('class', 'assetbox off');
            tb.setAttribute('id', 'none');
            tb.fieldname = type == 'costumes' ? _Localization2.default.localize('LIBRARY_CHARACTER') : _Localization2.default.localize('LIBRARY_BACKGROUND');
            tb.byme = 1;
            var cnv = (0, _lib.newCanvas)(tb, 9 * _lib.scaleMultiplier, 7 * _lib.scaleMultiplier, w, h, {
                position: 'relative'
            });
            var ctx = cnv.getContext('2d');
            ctx.fillStyle = _ScratchJr2.default.stagecolor;
            ctx.fillRect(0, 0, w, h);
            parent.appendChild(tb);
            tb.ontouchstart = function (evt) {
                Library.selectAsset(evt, tb);
            };
            tb.onmousedown = function (evt) {
                Library.selectAsset(evt, tb);
            };
        }
    }, {
        key: 'addHR',
        value: function addHR(div) {
            var hr = document.createElement('hr');
            div.appendChild(hr);
            hr.setAttribute('class', 'bigdivide');
        }

        ///////////////////////////
        //selection


    }, {
        key: 'selectAsset',
        value: function selectAsset(e, tb) {
            tb.pt = JSON.stringify(_Events2.default.getTargetPoint(e));
            if (shaking && e.target.className == 'deleteasset') {
                Library.removeFromAssetList();
                return;
            } else if (shaking) {
                Library.stopShaking();
            }
            if (tb.byme && tb.id != 'none') {
                holdit(tb);
            }
            tb.ontouchend = function (evt) {
                clickMe(evt, tb);
            };
            window.onmouseup = function (evt) {
                clickMe(evt, tb);
            };
            window.onmousemove = function (evt) {
                clearEvents(evt, tb);
            };
            function holdit() {
                var repeat = function repeat() {
                    tb.ontouchend = undefined;
                    window.onmouseup = undefined;
                    window.onmousemove = undefined;
                    timeoutEvent = undefined;
                    Library.stopShaking();
                    shaking = tb;
                    Library.clearAllSelections();
                    Library.startShaking(tb);
                };
                timeoutEvent = setTimeout(repeat, 500);
            }
            function clearEvents(e, tb) {
                var pt = _Events2.default.getTargetPoint(e);
                var pt2 = JSON.parse(tb.pt);
                if (Library.distance(pt, pt2) < 30) {
                    return;
                }
                e.preventDefault();
                if (timeoutEvent) {
                    clearTimeout(timeoutEvent);
                }
                if (clickThumb) {
                    Library.unSelect(clickThumb);
                }
                timeoutEvent = undefined;
                tb.ontouchend = undefined;
                window.onmousemove = undefined;
                window.onmouseup = undefined;
            }
            function clickMe(e, tb) {
                if (timeoutEvent) {
                    clearTimeout(timeoutEvent);
                }
                Library.selectThisAsset(e, tb);
                timeoutEvent = undefined;
                tb.ontouchend = undefined;
                tb.onmouseup = undefined;
                window.onmousemove = undefined;
                window.onmouseup = undefined;
            }
        }
    }, {
        key: 'startShaking',
        value: function startShaking(b) {
            b.className = b.className + ' shakeme';
            (0, _lib.newHTML)('div', 'deleteasset', b);
            shaking = b;
        }
    }, {
        key: 'stopShaking',
        value: function stopShaking() {
            if (!shaking) {
                return;
            }
            var b = shaking;
            b.setAttribute('class', 'assetbox off');
            var ic = b.childNodes[b.childElementCount - 1];
            if (ic.getAttribute('class') == 'deleteasset') {
                b.removeChild(ic);
            }
            shaking = undefined;
        }
    }, {
        key: 'removeFromAssetList',
        value: function removeFromAssetList() {
            _ScratchAudio2.default.sndFX('cut.wav');
            var b = shaking;
            b.parentNode.removeChild(b);
            var key = type == 'costumes' ? 'usershapes' : 'userbkgs';
            var json = {};
            json.cond = 'md5 = ?';
            json.items = ['*'];
            json.values = [b.id];
            _IO2.default.query(key, json, Library.removeAssetFromLib);
            clickThumb = undefined;
            selectedOne = undefined;
            return true;
        }

        // Determine if an asset thumbnail is unique
        // md5: thumbnail md5 to determine uniqueness
        // type: "costumes" or "backgrounds"
        // callback: called with true if unique, false if duplicate exists

    }, {
        key: 'assetThumbnailUnique',
        value: function assetThumbnailUnique(md5, type, callback) {
            var key = type == 'costumes' ? 'usershapes' : 'userbkgs';
            var json = {};
            json.cond = 'ext = ? AND altmd5 = ?';
            json.items = ['md5', 'altmd5'];
            json.values = ['svg', md5];
            json.order = 'ctime desc';
            _IO2.default.query(key, json, function (results) {
                results = JSON.parse(results);
                callback(results.length <= 1);
            });
        }
    }, {
        key: 'removeAssetFromLib',
        value: function removeAssetFromLib(str) {
            var key = type == 'costumes' ? 'usershapes' : 'userbkgs';
            var aa = JSON.parse(str)[0];
            var data = Library.parseAssetData(aa);

            if (data.altmd5) {
                // Removes the thumbnail for the asset.
                // First ensure that there aren't other characters/bgs using the same thumb
                // (this is possible if we receive a duplicate project, for example)
                Library.assetThumbnailUnique(data.altmd5, type, function (isUnique) {
                    if (isUnique) {
                        _OS2.default.remove(data.altmd5, _OS2.default.trace);
                    }
                });
            }

            _IO2.default.deleteobject(key, data.id, _OS2.default.trace);
        }
    }, {
        key: 'parseAssetData',
        value: function parseAssetData(data) {
            var res = new Object();
            for (var key in data) {
                res[key.toLowerCase()] = data[key];
            }
            return res;
        }
    }, {
        key: 'selectThisAsset',
        value: function selectThisAsset(e, tb) {
            if (tb.id == selectedOne) {
                if (type == 'costumes') {
                    Library.closeSpriteSelection(e);
                } else {
                    Library.closeBkgSelection(e);
                }
            } else {
                Library.clearAllSelections();

                // Disable paint editor for PNG sprites
                var thumbID = tb.id;
                var thumbType = thumbID.substr(thumbID.length - 3);
                if (thumbType == 'png') {
                    (0, _lib.gn)('library_paintme').style.opacity = 0;
                    (0, _lib.gn)('library_paintme').onclick = null;
                } else {
                    (0, _lib.gn)('library_paintme').style.opacity = 1;
                    (0, _lib.gn)('library_paintme').onclick = Library.editResource;
                }

                tb.className = 'assetbox on';
                // to avoid double click
                setTimeout(function () {
                    selectedOne = tb.id;
                }, 200);
                clickThumb = tb;
                if (tb.fieldname) {
                    (0, _lib.gn)('assetname').textContent = tb.fieldname;
                }
            }
        }
    }, {
        key: 'clearAllSelections',
        value: function clearAllSelections() {
            var div = (0, _lib.gn)('scrollarea');
            for (var i = 0; i < div.childElementCount; i++) {
                if (div.childNodes[i].nodeName == 'DIV') {
                    div.childNodes[i].className = 'assetbox off';
                }
            }
        }
    }, {
        key: 'unSelect',
        value: function unSelect(tb) {
            (0, _lib.gn)('assetname').textContent = '';
            tb.className = 'assetbox off';
            selectedOne = undefined;
            if (clickThumb) {
                if (tb.byme && clickThumb.childElementCount > 1) {
                    clickThumb.childNodes[clickThumb.childElementCount - 1].style.visibility = 'hidden';
                }
                clickThumb = undefined;
            }
        }
    }, {
        key: 'resizeScroll',
        value: function resizeScroll() {
            var w = Math.min((0, _lib.getDocumentWidth)(), _lib.frame.offsetWidth);
            var h = Math.max((0, _lib.getDocumentHeight)(), _lib.frame.offsetHeight);
            var dx = w - 20 * _lib.scaleMultiplier;
            (0, _lib.setProps)((0, _lib.gn)('scrollarea').style, {
                width: dx + 'px',
                height: h - 120 * _lib.scaleMultiplier + 'px'
            });
        }

        ///////////////////////////////////////////
        // Object actions
        //////////////////////////////////////////

    }, {
        key: 'editResource',
        value: function editResource(e) {
            Library.close(e);
            if (type != 'costumes') {
                Library.editBackground(e);
            } else {
                Library.editCostume(e);
            }
        }
    }, {
        key: 'editBackground',
        value: function editBackground() {
            var md5 = selectedOne && selectedOne != 'none' ? selectedOne : undefined;
            _Paint2.default.open(true, md5);
        }
    }, {
        key: 'editCostume',
        value: function editCostume() {
            var sname = undefined;
            var cname = selectedOne ? clickThumb.fieldname : _Localization2.default.localize('LIBRARY_CHARACTER');
            var scale = selectedOne && selectedOne != 'none' ? clickThumb.scale : 0.5;
            var md5 = selectedOne && selectedOne != 'none' ? selectedOne : undefined;
            var w = selectedOne && selectedOne != 'none' ? Math.round(clickThumb.w) : undefined;
            var h = selectedOne && selectedOne != 'none' ? Math.round(clickThumb.h) : undefined;
            _Paint2.default.open(false, md5, sname, cname, scale, w, h);
        }
    }, {
        key: 'closeSpriteSelection',
        value: function closeSpriteSelection(e) {
            e.preventDefault();
            e.stopPropagation();
            var id = selectedOne ? clickThumb.fieldname : _Localization2.default.localize('LIBRARY_CHARACTER');
            if (selectedOne && selectedOne != 'none') {
                _ScratchJr2.default.stage.currentPage.addSprite(clickThumb.scale, selectedOne, id);
            }

            // Prevent reporting user asset names
            if (clickThumb) {
                var analyticsName = clickThumb.id;
                if (!(selectedOne in _MediaLib2.default.keys)) {
                    analyticsName = 'user_asset';
                }
                _OS2.default.analyticsEvent('editor', 'new_character', analyticsName);
            }
            Library.close(e);
        }
    }, {
        key: 'closeBkgSelection',
        value: function closeBkgSelection(e) {
            e.preventDefault();
            e.stopPropagation();
            if (selectedOne) {
                _ScratchJr2.default.stage.currentPage.setBackground(selectedOne, _ScratchJr2.default.stage.currentPage.updateBkg);
            }

            if (clickThumb) {
                var analyticsName = clickThumb.id;
                if (!(selectedOne in _MediaLib2.default.keys)) {
                    analyticsName = 'user_background';
                }
                _OS2.default.analyticsEvent('editor', 'choose_background', analyticsName);
            }
            Library.close(e);
        }

        /////////////////////////////////////////
        //Key Handeling Top Level prevention
        /////////////////////////////////////////

    }, {
        key: 'distance',
        value: function distance(pt1, pt2) {
            var dx = pt1.x - pt2.x;
            var dy = pt1.y - pt2.y;
            return Math.round(Math.sqrt(dx * dx + dy * dy));
        }
    }]);

    return Library;
}();

exports.default = Library;

/***/ }),

/***/ "./src/editor/ui/Palette.js":
/*!**********************************!*\
  !*** ./src/editor/ui/Palette.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); ///////////////////////////////////
//  Blocks Categories Palettes
///////////////////////////////////

var _ScratchJr = __webpack_require__(/*! ../ScratchJr */ "./src/editor/ScratchJr.js");

var _ScratchJr2 = _interopRequireDefault(_ScratchJr);

var _Block = __webpack_require__(/*! ../blocks/Block */ "./src/editor/blocks/Block.js");

var _Block2 = _interopRequireDefault(_Block);

var _BlockSpecs = __webpack_require__(/*! ../blocks/BlockSpecs */ "./src/editor/blocks/BlockSpecs.js");

var _BlockSpecs2 = _interopRequireDefault(_BlockSpecs);

var _ScriptsPane = __webpack_require__(/*! ./ScriptsPane */ "./src/editor/ui/ScriptsPane.js");

var _ScriptsPane2 = _interopRequireDefault(_ScriptsPane);

var _Undo = __webpack_require__(/*! ./Undo */ "./src/editor/ui/Undo.js");

var _Undo2 = _interopRequireDefault(_Undo);

var _OS = __webpack_require__(/*! ../../tablet/OS */ "./src/tablet/OS.js");

var _OS2 = _interopRequireDefault(_OS);

var _MediaLib = __webpack_require__(/*! ../../tablet/MediaLib */ "./src/tablet/MediaLib.js");

var _MediaLib2 = _interopRequireDefault(_MediaLib);

var _Events = __webpack_require__(/*! ../../utils/Events */ "./src/utils/Events.js");

var _Events2 = _interopRequireDefault(_Events);

var _Rectangle = __webpack_require__(/*! ../../geom/Rectangle */ "./src/geom/Rectangle.js");

var _Rectangle2 = _interopRequireDefault(_Rectangle);

var _DrawPath = __webpack_require__(/*! ../../utils/DrawPath */ "./src/utils/DrawPath.js");

var _DrawPath2 = _interopRequireDefault(_DrawPath);

var _ScratchAudio = __webpack_require__(/*! ../../utils/ScratchAudio */ "./src/utils/ScratchAudio.js");

var _ScratchAudio2 = _interopRequireDefault(_ScratchAudio);

var _Record = __webpack_require__(/*! ./Record */ "./src/editor/ui/Record.js");

var _Record2 = _interopRequireDefault(_Record);

var _lib = __webpack_require__(/*! ../../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var blockscale = 0.75;
var numcat = 0; // getter
var betweenblocks = undefined; // Set in setup()
var blockdy = 5;
var timeoutid = undefined;
var helpballoon = undefined;
var dxblocks = 10;

var Palette = function () {
    function Palette() {
        _classCallCheck(this, Palette);
    }

    _createClass(Palette, null, [{
        key: 'setup',
        value: function setup(parent) {
            blockscale *= _lib.scaleMultiplier;
            blockdy *= _lib.scaleMultiplier;
            Palette.blockdx *= _lib.scaleMultiplier; // XXX
            betweenblocks = 90 * blockscale;
            Palette.createCategorySelectors(parent);
            var div = (0, _lib.newHTML)('div', 'palette', parent);
            div.setAttribute('id', 'palette');
            div.ontouchstart = function (evt) {
                Palette.paletteMouseDown(evt);
            };
            div.onmousedown = function (evt) {
                Palette.paletteMouseDown(evt);
            };
            var pc = (0, _lib.newHTML)('div', 'papercut', parent);
            (0, _lib.newHTML)('div', 'withstyle', pc);
        }
    }, {
        key: 'createCategorySelectors',
        value: function createCategorySelectors(parent) {
            var sel = (0, _lib.newHTML)('div', 'categoryselector', parent);
            sel.setAttribute('id', 'selectors');
            var bkg = (0, _lib.newHTML)('div', 'catbkg', sel);
            (0, _lib.newHTML)('div', 'catimage', bkg);
            var leftPx = 15 * _lib.scaleMultiplier;
            var widthPx = 54 * _lib.scaleMultiplier;
            for (var i = 0; i < _BlockSpecs2.default.categories.length; i++) {
                Palette.createSelector(sel, i, leftPx + i * widthPx, 0, _BlockSpecs2.default.categories[i]);
            }
        }
    }, {
        key: 'paletteMouseDown',
        value: function paletteMouseDown(e) {
            if (_lib.isTablet && e.touches && e.touches.length > 1) {
                return;
            }
            if (_ScratchJr2.default.onHold) {
                return;
            }
            e.preventDefault();
            _ScratchJr2.default.blur();
            var pal = (0, _lib.gn)('palette');
            var spt = _Events2.default.getTargetPoint(e);
            var pt = {
                x: (0, _lib.localx)(pal, spt.x),
                y: (0, _lib.localy)(pal, spt.y)
            };
            for (var i = 0; i < pal.childElementCount; i++) {
                var ths = pal.childNodes[i];
                if (!(0, _lib.hitRect)(ths, pt)) {
                    continue;
                }
                if (_ScratchJr2.default.shaking && _ScratchJr2.default.shaking == ths) {
                    Palette.removeSound(ths);
                } else {
                    _Events2.default.startDrag(e, ths, Palette.prepareForDrag, Palette.dropBlockFromPalette, _ScriptsPane2.default.draggingBlock, Palette.showHelp, Palette.startShaking);
                }
            }
            _ScratchJr2.default.clearSelection();
        }
    }, {
        key: 'isRecorded',
        value: function isRecorded(ths) {
            var val = ths.owner.getArgValue();
            var list = _ScratchJr2.default.getActiveScript().owner.spr.sounds;
            return list.indexOf(val) > 0;
        }
    }, {
        key: 'removeSound',
        value: function removeSound(ths) {
            _ScratchAudio2.default.sndFX('cut.wav');
            var indx = ths.owner.getArgValue();
            var spr = _ScratchJr2.default.getSprite();
            if (!spr) {
                return;
            }
            var page = spr.div.parentNode.owner;
            var sounds = spr.sounds.concat();
            if (indx >= sounds.length) {
                return;
            }
            sounds.splice(indx, 1);
            spr.sounds = sounds;
            // recreate the sprite scripts to make sure deleted sound is properly treated
            var sprdata = spr.getData();
            var div = (0, _lib.gn)(spr.id + '_scripts');
            while (div.childElementCount > 0) {
                div.removeChild(div.childNodes[0]);
            }
            var sc = div.owner;
            var list = sprdata.scripts;
            for (var j = 0; j < list.length; j++) {
                sc.recreateStrip(list[j]);
            }
            _Undo2.default.record({
                action: 'deletesound',
                who: spr.id,
                where: page.id,
                sound: name
            });
            _ScratchJr2.default.storyStart('Palette.removeSound'); // Record a change for sample projects in story-starter mode

            Palette.selectCategory(3);
        }
    }, {
        key: 'showHelp',
        value: function showHelp(e, b) {
            var block = b.owner;
            var help = _BlockSpecs2.default.blockDesc(block, _ScratchJr2.default.getSprite());
            var str = help[block.blocktype];
            if (!str) {
                return;
            }
            Palette.openPaletteBalloon(b, str);
            timeoutid = setTimeout(Palette.closeHelpBalloon, 2000);
        }
    }, {
        key: 'startShaking',
        value: function startShaking(b) {
            if (!b.owner) {
                return;
            }
            if (b.owner.blocktype != 'playusersnd') {
                Palette.showHelp(null, b);return;
            }
            _ScratchJr2.default.shaking = b;
            _ScratchJr2.default.stopShaking = Palette.stopShaking;
            b.setAttribute('class', 'shakeme');
            (0, _lib.newHTML)('div', 'deletesound', b);
        }
    }, {
        key: 'clickBlock',
        value: function clickBlock(e, b) {
            if (_ScratchJr2.default.shaking && b == _ScratchJr2.default.shaking) {
                Palette.removeSound(b);
            } else {
                _ScratchJr2.default.clearSelection();
                Palette.showHelp(e, b);
            }
        }
    }, {
        key: 'stopShaking',
        value: function stopShaking(b) {
            if (!b.owner) {
                return;
            }
            _ScratchJr2.default.shaking = undefined;
            _ScratchJr2.default.stopShaking = undefined;
            b.setAttribute('class', '');
            var ic = b.childNodes[b.childElementCount - 1];
            if (ic.getAttribute('class') == 'deletesound') {
                b.removeChild(ic);
            }
        }
    }, {
        key: 'openPaletteBalloon',
        value: function openPaletteBalloon(obj, label) {
            if (helpballoon) {
                Palette.closeHelpBalloon();
            }
            var fontSize = Math.floor(14 * window.devicePixelRatio * _lib.scaleMultiplier);
            var w = window.devicePixelRatio * 80 * _lib.scaleMultiplier;
            var h = window.devicePixelRatio * 36 * _lib.scaleMultiplier;
            var dy = (0, _lib.globaly)(obj) - 36 * _lib.scaleMultiplier;
            helpballoon = (0, _lib.newCanvas)(_lib.frame, 0, dy, w, h, {
                position: 'absolute',
                zIndex: 1000
            });
            helpballoon.icon = obj;
            var ctx = helpballoon.getContext('2d');
            w = 16 * window.devicePixelRatio * _lib.scaleMultiplier + (0, _lib.getStringSize)(ctx, 'bold ' + fontSize + 'px ' + window.Settings.paletteBalloonFont, label).width;
            if (w < 36 * _lib.scaleMultiplier) {
                w = 36 * _lib.scaleMultiplier;
            }
            var dx = ((0, _lib.globalx)(obj) + obj.offsetWidth / 2) * window.devicePixelRatio - w / 2;
            (0, _lib.setCanvasSize)(helpballoon, w, h);
            (0, _lib.setProps)(helpballoon.style, {
                position: 'absolute',
                webkitTransform: 'translate(' + -w / 2 + 'px, ' + -h / 2 + 'px) ' + 'scale(' + 1 / window.devicePixelRatio + ') translate(' + (dx + w / 2) + 'px, ' + h / 2 + 'px)'
            });
            Palette.drawBalloon(helpballoon.getContext('2d'), w, h);
            (0, _lib.writeText)(ctx, 'bold ' + fontSize + 'px ' + window.Settings.paletteBalloonFont, 'white', label, 21 * window.devicePixelRatio * _lib.scaleMultiplier, 8 * window.devicePixelRatio * _lib.scaleMultiplier);
        }
    }, {
        key: 'hide',
        value: function hide() {
            (0, _lib.gn)('blockspalette').childNodes[0].style.display = 'none';
            (0, _lib.gn)('blockspalette').childNodes[1].style.display = 'none';
        }
    }, {
        key: 'show',
        value: function show() {
            (0, _lib.gn)('blockspalette').childNodes[0].style.display = 'inline-block';
            (0, _lib.gn)('blockspalette').childNodes[1].style.display = 'inline-block';
        }
    }, {
        key: 'closeHelpBalloon',
        value: function closeHelpBalloon() {
            if (timeoutid) {
                clearTimeout(timeoutid);
            }
            if (helpballoon) {
                helpballoon.parentNode.removeChild(helpballoon);
            }
            helpballoon = undefined;
            timeoutid = undefined;
        }
    }, {
        key: 'drawBalloon',
        value: function drawBalloon(ctx, w, h) {
            var curve = 4;
            var path = new Array(['M', 0, curve], ['q', 0, -curve, curve, -curve], ['h', w - curve * 2], ['q', curve, 0, curve, curve], ['v', h - 11 - curve * 2], ['q', 0, curve, -curve, curve], ['h', -(w / 2) + curve + 11], ['l', -11, 11], ['l', -11, -11], ['h', -(w / 2) + curve + 11], ['q', -curve, 0, -curve, -curve], ['z']);
            ctx.clearRect(0, 0, Math.max(ctx.canvas.width, w), Math.max(ctx.canvas.height, h));
            ctx.fillStyle = '#4682B5';
            ctx.lineWidth = 2;
            //ctx.strokeStyle = 'rgba(242,243,242,0.4)';
            ctx.beginPath();
            _DrawPath2.default.render(ctx, path);
            ctx.fill();
            //  ctx.stroke();
        }
    }, {
        key: 'prepareForDrag',
        value: function prepareForDrag(e) {
            e.preventDefault();
            _ScratchAudio2.default.sndFX('grab.wav');
            if (!_ScratchJr2.default.runtime.inactive()) {
                _ScratchJr2.default.stopStrips();
            }
            var sc = _ScratchJr2.default.getActiveScript().owner;
            sc.flowCaret = null;
            var pt = _Events2.default.getTargetPoint(e);
            _Events2.default.dragmousex = pt.x;
            _Events2.default.dragmousey = pt.y;
            if (!_Events2.default.dragthumbnail.parentNode) {
                // palette has been removed programatically
                _Events2.default.dragthumbnail = Palette.getBlockNamed(_Events2.default.dragthumbnail.owner.blocktype);
                if (!_Events2.default.dragthumbnail) {
                    _Events2.default.cancelAll();
                    return;
                }
            }
            var mx = _Events2.default.dragmousex - _lib.frame.offsetLeft - (0, _lib.localx)(_Events2.default.dragthumbnail, _Events2.default.dragmousex);
            var my = _Events2.default.dragmousey - _lib.frame.offsetTop - (0, _lib.localy)(_Events2.default.dragthumbnail, _Events2.default.dragmousey);
            _Events2.default.dragcanvas = _Events2.default.dragthumbnail.owner.duplicateBlock(mx, my, sc.spr).div;
            _Events2.default.dragcanvas.style.zIndex = _ScratchJr2.default.dragginLayer;
            _Events2.default.dragDiv.appendChild(_Events2.default.dragcanvas);
            // Events.dragcanvas.owner.lift();
            sc.dragList = [_Events2.default.dragcanvas.owner];
            sc.prepareCaret(_Events2.default.dragcanvas.owner);
        }
    }, {
        key: 'getBlockNamed',
        value: function getBlockNamed(str) {
            var pal = (0, _lib.gn)('palette');
            for (var i = 0; i < pal.childElementCount; i++) {
                if (pal.childNodes[i].owner.blocktype == str) {
                    return pal.childNodes[i];
                }
            }
            return null;
        }
    }, {
        key: 'createSelector',
        value: function createSelector(parent, n, dx, dy, spec) {
            var pxWidth = 51 * _lib.scaleMultiplier;
            var pxHeight = 57 * _lib.scaleMultiplier;
            var div = (0, _lib.newDiv)(parent, dx, dy, pxWidth, pxHeight, {
                position: 'absolute'
            });
            div.index = n;
            var officon = spec[1].cloneNode(true);
            officon.width = pxWidth;
            officon.height = pxHeight;
            div.appendChild(officon);
            (0, _lib.setProps)(officon.style, {
                position: 'absolute',
                zIndex: 6,
                visibility: 'visible'
            });
            var onicon = spec[0].cloneNode(true);
            onicon.width = pxWidth;
            onicon.height = pxHeight;
            div.appendChild(onicon);
            div.bkg = spec[2];
            (0, _lib.setProps)(onicon.style, {
                position: 'absolute',
                zIndex: 8,
                visibility: 'hidden'
            });
            div.ontouchstart = function (evt) {
                Palette.clickOnCategory(evt);
            };
            div.onmousedown = function (evt) {
                Palette.clickOnCategory(evt);
            };
        }
    }, {
        key: 'getPaletteSize',
        value: function getPaletteSize() {
            var first = (0, _lib.gn)('palette').childNodes[0];
            var last = (0, _lib.gn)('palette').childNodes[(0, _lib.gn)('palette').childElementCount - 1];
            return last.offsetLeft + last.offsetWidth - first.offsetLeft;
        }
    }, {
        key: 'clickOnCategory',
        value: function clickOnCategory(e) {
            if (!e) {
                return;
            }
            e.preventDefault();
            _ScratchJr2.default.unfocus(e);
            var t = e.target;
            _ScratchAudio2.default.sndFX('keydown.wav');
            var index = t.parentNode ? t.parentNode.index : 2;
            Palette.selectCategory(index);
        }
    }, {
        key: 'selectCategory',
        value: function selectCategory(n) {
            var div = (0, _lib.gn)('selectors');
            // set the icons for text or sprite
            numcat = n;
            var currentSel = div.childNodes[n + 1];
            for (var i = 1; i < div.childElementCount; i++) {
                var sel = div.childNodes[i];
                sel.childNodes[0].style.visibility = sel.index != n ? 'visible' : 'hidden';
                sel.childNodes[1].style.visibility = sel.index == n ? 'visible' : 'hidden';
            }
            var pal = (0, _lib.gn)('palette');
            (0, _lib.gn)('blockspalette').style.background = currentSel.bkg;
            while (pal.childElementCount > 0) {
                pal.removeChild(pal.childNodes[0]);
            }
            if (!_ScratchJr2.default.getSprite()) {
                return;
            }
            var list = _BlockSpecs2.default.palettes[n].concat();
            var dx = dxblocks;
            for (var k = 0; k < list.length; k++) {
                if (list[k] == 'space') {
                    dx += 30 * blockscale;
                } else {
                    var newb = Palette.newScaledBlock(pal, list[k], list[k] == 'repeat' ? 0.65 * _lib.scaleMultiplier : blockscale, dx, blockdy);
                    newb.lift();
                    dx += betweenblocks;
                }
            }
            dx += 30;
            if (n == _BlockSpecs2.default.categories.length - 1 && _ScratchJr2.default.stage.pages.length > 1) {
                Palette.addPagesBlocks(dx);
            }
            if (n == 3 && _ScratchJr2.default.getSprite().sounds.length > 0) {
                Palette.addSoundsBlocks(dxblocks);
            }
        }
    }, {
        key: 'reset',
        value: function reset() {
            if (numcat == _BlockSpecs2.default.categories.length - 1) {
                Palette.selectCategory(_BlockSpecs2.default.categories.length - 1);
            }
            if (numcat == 3) {
                Palette.selectCategory(3);
            }
        }
    }, {
        key: 'showSelectors',
        value: function showSelectors(b) {
            var n = numcat;
            var div = (0, _lib.gn)('selectors');
            for (var i = 0; i < div.childElementCount; i++) {
                var sel = div.childNodes[i];
                sel.childNodes[0].style.visibility = sel.index != n && b ? 'visible' : 'hidden';
                sel.childNodes[1].style.visibility = sel.index == n && b ? 'visible' : 'hidden';
                sel.childNodes[2].style.visibility = sel.index != n && b ? 'visible' : 'hidden';
                sel.childNodes[3].style.visibility = sel.index == n && b ? 'visible' : 'hidden';
            }
        }
    }, {
        key: 'addPagesBlocks',
        value: function addPagesBlocks(dx) {
            var pal = (0, _lib.gn)('palette');
            var spec = _BlockSpecs2.default.defs.gotopage;
            for (var i = 0; i < _ScratchJr2.default.stage.pages.length; i++) {
                if (_ScratchJr2.default.stage.pages[i].id == _ScratchJr2.default.stage.currentPage.id) {
                    continue;
                }
                spec[4] = i + 1;
                var newb = Palette.newScaledBlock(pal, 'gotopage', blockscale, dx, blockdy);
                newb.lift();
                dx += betweenblocks + 5;
            }
        }
    }, {
        key: 'addSoundsBlocks',
        value: function addSoundsBlocks(dx) {
            var pal = (0, _lib.gn)('palette');
            var spr = _ScratchJr2.default.getSprite();
            var list = spr ? spr.sounds : [];
            for (var i = 0; i < list.length; i++) {
                var op = _MediaLib2.default.sounds.indexOf(list[i]) < 0 ? 'playusersnd' : 'playsnd';
                var val = _MediaLib2.default.sounds.indexOf(list[i]) < 0 ? i : list[i];
                var newb = Palette.addBlockSound(pal, op, val, dx, blockdy);
                newb.lift();
                dx += betweenblocks;
            }
            if (list.length < 6 && _Record2.default.available) {
                Palette.drawRecordSound(newb.div.offsetWidth, newb.div.offsetHeight, dx);
            }
        }
    }, {
        key: 'addBlockSound',
        value: function addBlockSound(parent, op, val, dx, dy) {
            var spec = _BlockSpecs2.default.defs[op];
            var old = spec[4];
            spec[4] = val;
            var newb = Palette.newScaledBlock(parent, op, blockscale, dx, dy);
            spec[4] = old;
            return newb;
        }
    }, {
        key: 'drawRecordSound',
        value: function drawRecordSound(w, h, dx) {
            var pal = (0, _lib.gn)('palette');
            var div = (0, _lib.newDiv)(pal, dx, 0, w, h, {
                top: 6 * _lib.scaleMultiplier + 'px'
            });
            var cnv = (0, _lib.newCanvas)(div, 0, 0, div.offsetWidth * window.devicePixelRatio, div.offsetHeight * window.devicePixelRatio, {
                webkitTransform: 'translate(' + -div.offsetWidth * window.devicePixelRatio / 2 + 'px, ' + -div.offsetHeight * window.devicePixelRatio / 2 + 'px) ' + 'scale(' + 1 / window.devicePixelRatio + ') translate(' + div.offsetWidth * window.devicePixelRatio / 2 + 'px, ' + div.offsetHeight * window.devicePixelRatio / 2 + 'px)'
            });
            if (_BlockSpecs2.default.mic.complete) {
                (0, _lib.drawScaled)(_BlockSpecs2.default.mic, cnv);
            } else {
                _BlockSpecs2.default.mic.onload = function () {
                    (0, _lib.drawScaled)(_BlockSpecs2.default.mic, cnv);
                };
            }
            div.ontouchstart = Palette.recordSound;
            div.onmousedown = Palette.recordSound;
        }
    }, {
        key: 'recordSound',
        value: function recordSound(e) {
            e.preventDefault();
            e.stopPropagation();
            _ScratchJr2.default.clearSelection();
            _Record2.default.appear();
        }
    }, {
        key: 'inStatesPalette',
        value: function inStatesPalette() {
            var div = (0, _lib.gn)('selectors');
            var sel = div.childNodes[div.childElementCount - 1];
            return sel.childNodes[0].style.visibility == 'hidden';
        }

        // move to scratch jr app

    }, {
        key: 'getLandingPlace',
        value: function getLandingPlace(el, e, scale) {
            scale = typeof scale !== 'undefined' ? scale : 1;
            var sc = _ScratchJr2.default.getActiveScript().owner;
            var pt = e ? _Events2.default.getTargetPoint(e) : null;
            if (pt && !pt.x) {
                pt = null;
            }
            var box = new _Rectangle2.default(el.left / scale, el.top / scale, el.offsetWidth / scale, el.offsetHeight / scale);
            var box2 = new _Rectangle2.default((0, _lib.globalx)((0, _lib.gn)('palette')), (0, _lib.globaly)((0, _lib.gn)('palette')), (0, _lib.gn)('palette').offsetWidth, (0, _lib.gn)('palette').offsetHeight);
            if (sc.flowCaret != null && (sc.flowCaret.prev != null || sc.flowCaret.next != null || sc.flowCaret.inside != null)) {
                return 'scripts';
            }
            if (box2.overlapElemBy(box, 0.4) && box2.hitRect({ x: el.left / scale, y: el.top / scale })) {
                return 'palette';
            }
            if (pt && box2.hitRect(pt)) {
                return 'palette';
            }
            if (Palette.overlapsWith((0, _lib.gn)('scripts'), box)) {
                return 'scripts';
            }
            if (Palette.overlapsWith((0, _lib.gn)('palette'), box)) {
                return 'palette';
            }
            if (Palette.overlapsWith((0, _lib.gn)('library'), box)) {
                return 'library';
            }
            if (Palette.overlapsWith((0, _lib.gn)('pages'), box)) {
                return 'pages';
            }
            return null;
        }
    }, {
        key: 'overlapsWith',
        value: function overlapsWith(el, box) {
            var box2 = new _Rectangle2.default((0, _lib.globalx)(el), (0, _lib.globaly)(el), el.offsetWidth, el.offsetHeight);
            return box.intersects(box2);
        }
    }, {
        key: 'overlapsWith2',
        value: function overlapsWith2(el, box) {
            var box2 = new _Rectangle2.default(el.offsetLeft, el.offsetTop, el.offsetWidth, el.offsetHeight);
            return box.intersects(box2);
        }
    }, {
        key: 'getBlockfromChild',
        value: function getBlockfromChild(div) {
            while (div != null) {
                if (div.owner) {
                    return div;
                }
                div = div.parentNode;
            }
            return null;
        }
    }, {
        key: 'getHittedThumb',
        value: function getHittedThumb(el, div, scale) {
            scale = typeof scale !== 'undefined' ? scale : 1;
            var box1 = new _Rectangle2.default(el.left / scale, el.top / scale, el.offsetWidth / scale, el.offsetHeight / scale);
            var area = 0;
            var res = null;
            var dh = div.parentNode.scrollTop;
            for (var i = 0; i < div.childElementCount; i++) {
                var node = div.childNodes[i];
                if (node.nodeName == 'FORM') {
                    continue;
                }
                var box2 = new _Rectangle2.default((0, _lib.globalx)(node, node.offsetLeft), (0, _lib.globaly)(node, node.offsetTop) - dh, node.offsetWidth, node.offsetHeight);
                var boxi = box1.intersection(box2);
                var a = boxi.width * boxi.height;
                if (a > area) {
                    area = a;
                    res = node;
                }
            }
            return res;
        }

        //////////////////////////////////////
        //  Palette Block
        /////////////////////////////////////

    }, {
        key: 'newScaledBlock',
        value: function newScaledBlock(parent, op, scale, dx, dy) {
            var bbx = new _Block2.default(_BlockSpecs2.default.defs[op], true, scale);
            (0, _lib.setProps)(bbx.div.style, {
                position: 'absolute',
                left: dx + 'px',
                top: dy + 'px'
            });
            parent.appendChild(bbx.div);
            return bbx;
        }
    }, {
        key: 'dropBlockFromPalette',
        value: function dropBlockFromPalette(e, element) {
            e.preventDefault();
            switch (Palette.getLandingPlace(element, e)) {
                case 'scripts':
                    _OS2.default.analyticsEvent('editor', 'new_block_' + element.owner.blocktype);
                    var sc = _ScratchJr2.default.getActiveScript();
                    var dx = (0, _lib.localx)(sc, element.left);
                    var dy = (0, _lib.localy)(sc, element.top);
                    _ScriptsPane2.default.blockDropped(sc, dx, dy);
                    var spr = _ScratchJr2.default.getActiveScript().owner.spr;
                    _Undo2.default.record({
                        action: 'scripts',
                        where: spr.div.parentNode.owner.id,
                        who: spr.id
                    });
                    // Record a change for sample projects in story-starter mode
                    _ScratchJr2.default.storyStart('Palette.dropBlockFromPalette');
                    break;
                default:
                    _ScratchJr2.default.getActiveScript().owner.deleteBlocks();
                    break;
            }
            _ScratchJr2.default.getActiveScript().owner.dragList = [];
        }
    }, {
        key: 'numcat',
        get: function get() {
            return numcat;
        }
    }, {
        key: 'helpballoon',
        get: function get() {
            return helpballoon;
        },
        set: function set(newHelpballoon) {
            helpballoon = newHelpballoon;
        }
    }]);

    return Palette;
}();

exports.default = Palette;

/***/ }),

/***/ "./src/editor/ui/Project.js":
/*!**********************************!*\
  !*** ./src/editor/ui/Project.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ScratchJr = __webpack_require__(/*! ../ScratchJr */ "./src/editor/ScratchJr.js");

var _ScratchJr2 = _interopRequireDefault(_ScratchJr);

var _BlockSpecs = __webpack_require__(/*! ../blocks/BlockSpecs */ "./src/editor/blocks/BlockSpecs.js");

var _BlockSpecs2 = _interopRequireDefault(_BlockSpecs);

var _Alert = __webpack_require__(/*! ./Alert */ "./src/editor/ui/Alert.js");

var _Alert2 = _interopRequireDefault(_Alert);

var _Palette = __webpack_require__(/*! ./Palette */ "./src/editor/ui/Palette.js");

var _Palette2 = _interopRequireDefault(_Palette);

var _UI = __webpack_require__(/*! ./UI */ "./src/editor/ui/UI.js");

var _UI2 = _interopRequireDefault(_UI);

var _Page = __webpack_require__(/*! ../engine/Page */ "./src/editor/engine/Page.js");

var _Page2 = _interopRequireDefault(_Page);

var _Sprite = __webpack_require__(/*! ../engine/Sprite */ "./src/editor/engine/Sprite.js");

var _Sprite2 = _interopRequireDefault(_Sprite);

var _OS = __webpack_require__(/*! ../../tablet/OS */ "./src/tablet/OS.js");

var _OS2 = _interopRequireDefault(_OS);

var _IO = __webpack_require__(/*! ../../tablet/IO */ "./src/tablet/IO.js");

var _IO2 = _interopRequireDefault(_IO);

var _Paint = __webpack_require__(/*! ../../painteditor/Paint */ "./src/painteditor/Paint.js");

var _Paint2 = _interopRequireDefault(_Paint);

var _SVG2Canvas = __webpack_require__(/*! ../../utils/SVG2Canvas */ "./src/utils/SVG2Canvas.js");

var _SVG2Canvas2 = _interopRequireDefault(_SVG2Canvas);

var _lib = __webpack_require__(/*! ../../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var metadata = undefined;
var mediaCount = -1;
var saving = false;
var interval = undefined;
var pageid = void 0;
var loadIcon = undefined;
var error = false;
var projectbarsize = 66;
var mediaCountBase = 1;

var Project = function () {
    function Project() {
        _classCallCheck(this, Project);
    }

    _createClass(Project, null, [{
        key: 'clear',
        value: function clear() {
            _ScratchJr2.default.stage.clear();
            _UI2.default.clear();
        }
    }, {
        key: 'load',
        value: function load() {
            mediaCountBase = 1;
            _ScratchJr2.default.log('Project load status', _ScratchJr2.default.getTime(), 'sec', _BlockSpecs2.default.loadCount);
            if (_BlockSpecs2.default.loadCount > 0) {
                setTimeout(function () {
                    Project.delayLoad();
                }, 32);
            } else {
                Project.startLoad();
            }
        }
    }, {
        key: 'delayLoad',
        value: function delayLoad() {
            if (_BlockSpecs2.default.loadCount < 1) {
                Project.startLoad();
            } else {
                setTimeout(function () {
                    Project.delayLoad();
                }, 32);
            }
        }
    }, {
        key: 'startLoad',
        value: function startLoad() {
            _ScratchJr2.default.log('all UI assets recieved - procced to call server', _ScratchJr2.default.getTime(), 'sec');
            Project.setProgress(20);
            _UI2.default.layout();

            // var e = document.createEvent('TouchEvent');
            // e.initTouchEvent();
            _ScratchJr2.default.enterFullScreen();

            _IO2.default.getObject(_ScratchJr2.default.currentProject, Project.dataRecieved);
        }
    }, {
        key: 'dataRecieved',
        value: function dataRecieved(str) {
            _ScratchJr2.default.log('got project metadata', _ScratchJr2.default.getTime(), 'sec');
            var data = JSON.parse(str);
            metadata = _IO2.default.parseProjectData(data);
            mediaCount = -1;
            if (metadata.json) {
                Project.loadData(metadata.json, doneProjectLoad);
            } else {
                mediaCount = 0;
                new _Page2.default((0, _lib.getIdFor)('page'));
                _Palette2.default.selectCategory(1);
                // On Android 4.2, this comes up blank the first time, so try again in 100ms.
                setTimeout(function () {
                    _Palette2.default.selectCategory(1);
                }, 100);
                Project.loadwait(doneProjectLoad);
            }
            function doneProjectLoad() {
                // Clear gift flag
                if ('id' in metadata) {
                    metadata.isgift = '0';
                    _IO2.default.setProjectIsGift(metadata);
                }
                _Palette2.default.selectCategory(1);
                // On Android 4.2, this comes up blank the first time, so try again in 100ms.
                setTimeout(function () {
                    _Palette2.default.selectCategory(1);
                }, 100);
                _Paint2.default.layout();
                Project.setProgress(100);
                Project.liftCurtain();
                _ScratchJr2.default.stage.currentPage.update();
                _ScratchJr2.default.changed = false;
                _ScratchJr2.default.storyStarted = false;
                _UI2.default.needsScroll();
                _ScratchJr2.default.log('all thumbnails updated', _ScratchJr2.default.getTime(), 'sec');
                if (_lib.isAndroid) {
                    AndroidInterface.notifyEditorDoneLoading();
                }
            }
        }
    }, {
        key: 'init',
        value: function init() {
            _ScratchJr2.default.log('Project init', _ScratchJr2.default.getTime(), 'sec');
            var bd = (0, _lib.newHTML)('div', 'modal-backdrop fade', _lib.frame.parentNode);
            bd.setAttribute('id', 'backdrop');
            (0, _lib.setProps)((0, _lib.gn)('backdrop').style, {
                display: 'none'
            });
            var modalOuter = (0, _lib.newHTML)('div', 'modal-outer', _lib.frame.parentNode);
            var modalMiddle = (0, _lib.newHTML)('div', 'modal-middle', modalOuter);
            var modal = (0, _lib.newHTML)('div', 'modal hide fade', modalMiddle);
            modal.setAttribute('id', 'modaldialog');
            (0, _lib.setProps)((0, _lib.gn)('modaldialog').style, {});
            var body = (0, _lib.newHTML)('div', 'modal-body', modal);
            body.setAttribute('id', 'modalbody');
            (0, _lib.setProps)(body.style, {
                zoom: _lib.scaleMultiplier
            });
            if (loadIcon.complete) {
                Project.addFeedback();
            } else {
                loadIcon.onload = function () {
                    Project.addFeedback();
                };
            }
            Project.drawBlind();
        }
    }, {
        key: 'addFeedback',
        value: function addFeedback() {
            var body = (0, _lib.gn)('modalbody');
            (0, _lib.newHTML)('div', 'loadscreenfill', body);
            (0, _lib.newHTML)('div', 'topfill', body);
            var cover = (0, _lib.newHTML)('div', 'loadscreencover', body);
            cover.setAttribute('id', 'progressbar');
            var topcover = (0, _lib.newHTML)('div', 'topcover', body);
            topcover.setAttribute('id', 'topcover');
            var cover2 = (0, _lib.newHTML)('div', 'progressbar2', body);
            cover2.setAttribute('id', 'progressbar2');
            var li = (0, _lib.newHTML)('div', 'loadicon', body);
            li.appendChild(loadIcon);
        }
    }, {
        key: 'setProgress',
        value: function setProgress(perc) {
            if (!(0, _lib.gn)('progressbar')) {
                return;
            }
            var h = projectbarsize - Math.round(projectbarsize * perc / 100);
            _ScratchJr2.default.log('setProgress', perc, h, mediaCount, mediaCountBase);
            (0, _lib.gn)('progressbar').style.height = h + 'px';
            if (h == 0) {
                (0, _lib.gn)('progressbar2').style.height = '0px';
                (0, _lib.gn)('topcover').style.background = '#F9A737';
            }
        }
    }, {
        key: 'drawBlind',
        value: function drawBlind() {
            (0, _lib.gn)('backdrop').setAttribute('class', 'modal-backdrop fade in');
            (0, _lib.setProps)((0, _lib.gn)('backdrop').style, {
                display: 'block'
            });
            (0, _lib.setProps)((0, _lib.gn)('modaldialog').style, {
                display: 'block'
            });
            (0, _lib.gn)('modaldialog').setAttribute('class', 'modal fade in');
        }
    }, {
        key: 'loadwait',
        value: function loadwait(whenDone) {
            if (interval != null) {
                window.clearInterval(interval);
            }
            mediaCountBase = mediaCount;
            if (mediaCount <= 0) {
                Project.getStarted(whenDone);
            } else {
                interval = window.setInterval(function () {
                    Project.loadTask(whenDone);
                }, 32);
            }
        }
    }, {
        key: 'loadTask',
        value: function loadTask(whenDone) {
            if (mediaCount <= 0) {
                Project.getStarted(whenDone);
            } else {
                Project.setProgress(Project.getMediaLoadRatio(70));
            }
        }
    }, {
        key: 'getMediaLoadRatio',
        value: function getMediaLoadRatio(f) {
            if (mediaCount > mediaCountBase) {
                mediaCountBase = mediaCount;
            }
            return 20 + f - mediaCount / mediaCountBase * f;
        }
    }, {
        key: 'getStarted',
        value: function getStarted(whenDone) {
            Project.setProgress(90);
            if (interval) {
                window.clearInterval(interval);
            }
            interval = null;
            _ScratchJr2.default.log('Project images retrieved from server', _ScratchJr2.default.getTime(), 'sec');
            Project.setLoadPage(pageid, whenDone);
            _ScratchJr2.default.log('load done', _ScratchJr2.default.getTime(), 'sec', '-- media missing = ', mediaCount);
            _ScratchJr2.default.stage.resetPages();
            _ScratchJr2.default.runtime.beginTimer();
        }
    }, {
        key: 'liftCurtain',
        value: function liftCurtain() {
            (0, _lib.gn)('backdrop').setAttribute('class', 'modal-backdrop fade');
            (0, _lib.setProps)((0, _lib.gn)('backdrop').style, {
                display: 'none'
            });
            (0, _lib.gn)('modaldialog').setAttribute('class', 'modal fade');
            (0, _lib.setProps)((0, _lib.gn)('modaldialog').style, {
                display: 'none'
            });
        }
    }, {
        key: 'setLoadPage',
        value: function setLoadPage(pageid, whenDone) {
            _ScratchJr2.default.log('setLoadPage', _ScratchJr2.default.getTime(), 'sec');
            var pages = _ScratchJr2.default.stage.getPagesID();
            if (pages.indexOf(pageid) < 0) {
                _ScratchJr2.default.stage.currentPage = _ScratchJr2.default.stage.pages[0];
            } else {
                _ScratchJr2.default.stage.currentPage = _ScratchJr2.default.stage.getPage(pageid);
            }
            _ScratchJr2.default.stage.currentPage.div.style.visibility = 'visible';
            var list = _ScratchJr2.default.stage.pages;
            for (var i = 0; i < list.length; i++) {
                if (_ScratchJr2.default.stage.currentPage == list[i]) {
                    _ScratchJr2.default.stage.currentPage.setPageSprites('visible');
                } else {
                    list[i].setPageSprites('hidden');
                }
            }
            if (whenDone) {
                whenDone();
            }
        }
    }, {
        key: 'loadData',
        value: function loadData(data, fcn) {
            try {
                data = typeof data === 'string' ? JSON.parse(data) : data;
                mediaCount = 0;
                Project.loadme(data, fcn);
                error = false;
            } catch (e) {
                console.log(e); //eslint-disable-line no-console
                var errorMessage = 'Error -- project data corrupted.';

                if (window.reloadDebug) {
                    document.write(e.message + '\n' + metadata['json']);
                    return;
                }

                _Alert2.default.open(_lib.frame, (0, _lib.gn)('flip'), errorMessage, '#ff0000');
                if (interval) {
                    window.clearInterval(interval);
                }
                interval = null;
                _Palette2.default.selectCategory(1);
                // On Android 4.2, this comes up blank the first time, so try again in 100ms.
                setTimeout(function () {
                    _Palette2.default.selectCategory(1);
                }, 100);
                Project.liftCurtain();
                error = true;
            }
        }
    }, {
        key: 'loadme',
        value: function loadme(data, fcn) {
            Project.recreate(data);
            Project.loadwait(fcn);
        }
    }, {
        key: 'getLoadType',
        value: function getLoadType(bkgid, sid, cid) {
            if (bkgid != null) {
                return 'bkg';
            }
            if (!cid) {
                return 'none';
            }
            if (sid && cid) {
                return 'modify';
            }
            return 'add';
        }

        //////////////////////////////////////////////////
        // load project data
        //////////////////////////////////////////////////

    }, {
        key: 'recreate',
        value: function recreate(data) {
            _ScratchJr2.default.log('Project data structures start loading', _ScratchJr2.default.getTime(), 'sec');
            mediaCount = 0;
            _ScratchJr2.default.stage.pages = [];
            var pages = data.pages;
            pageid = data.currentPage;
            for (var i = 0; i < pages.length; i++) {
                Project.recreatePage(pages[i], data[pages[i]]);
            }
            mediaCountBase = mediaCount;
        }
    }, {
        key: 'recreatePage',
        value: function recreatePage(name, data, fcn) {
            var page = new _Page2.default(name, data, fcn);
            page.div.style.visibility = 'hidden';
        }
    }, {
        key: 'substractCount',
        value: function substractCount() {
            mediaCount--;
            if ((0, _lib.gn)('backdrop').className != 'modal-backdrop fade in' || mediaCountBase == 0) {
                return;
            }
            Project.setProgress(Project.getMediaLoadRatio(70));
        }
    }, {
        key: 'recreateObject',
        value: function recreateObject(page, name, data, callBack, active) {
            var list = data.scripts;
            //delete data.scripts;
            var spr;
            data.page = page;
            if (data.type == 'sprite') {
                mediaCount++;
                var fcn = function fcn(spr) {
                    spr.setPos(data.xcoor, data.ycoor);
                    mediaCount--;
                    if ((0, _lib.gn)('backdrop').className == 'modal-backdrop fade in') {
                        Project.setProgress(Project.getMediaLoadRatio(70));
                    }
                    _ScratchJr2.default.log(spr.name, _ScratchJr2.default.getTime(), 'sec');
                    if (callBack) {
                        callBack(spr);
                    }
                };
                if (!data.defaultScale) {
                    data.defaultScale = 0.5;
                }
                spr = new _Sprite2.default(data, fcn);
                // load scripts
                var sc = (0, _lib.gn)(name + '_scripts').owner;
                for (var j = 0; j < list.length; j++) {
                    sc.recreateStrip(list[j]);
                }
                if (active) {
                    sc.activate();
                } else {
                    sc.deactivate();
                }
            } else {
                spr = new _Sprite2.default(data, callBack);
            }
            spr.div.style.opacity = spr.shown ? 1 : 0;
            return spr;
        }

        //////////////////////////////////////////////////
        // Save project data
        //////////////////////////////////////////////////

    }, {
        key: 'prepareToSave',
        value: function prepareToSave(id, whenDone) {
            if (saving) {
                _Alert2.default.open(_lib.frame, (0, _lib.gn)('flip'), 'Waiting', '#28A5DA');
                Project.waitUntilSaved(id, whenDone);
            } else {
                _Alert2.default.open(_lib.frame, (0, _lib.gn)('flip'), 'Saving', '#28A5DA');
                Project.save(id, whenDone);
            }
        }
    }, {
        key: 'waitUntilSaved',
        value: function waitUntilSaved(id, fcn) {
            if (saving) {
                setTimeout(function () {
                    Project.waitUntilSaved(id, fcn);
                }, 500);
            } else {
                Project.save(id, fcn);
            }
        }

        // Determine if thumbnailMD5 is unique to projectID
        // callback(true/false)

    }, {
        key: 'thumbnailUnique',
        value: function thumbnailUnique(thumbnailMD5, projectID, callback) {
            var json = {};
            json.cond = 'deleted = ? AND id != ? AND gallery IS NULL';
            json.items = ['name', 'thumbnail', 'id'];
            json.values = ['NO', projectID];
            _IO2.default.query(_OS2.default.database, json, function (result) {
                var pdata = JSON.parse(result);
                var isUnique = true;
                for (var p = 0; p < pdata.length; p++) {
                    var thispdata = _IO2.default.parseProjectData(pdata[p]);
                    var th = thispdata.thumbnail;
                    if (th) {
                        var thumb = typeof th == 'string' ? JSON.parse(th) : th;
                        if (thumb && thumb.md5) {
                            if (thumb.md5 == thumbnailMD5) {
                                isUnique = false;
                            }
                        }
                    }
                }
                callback(isUnique);
            });
        }
    }, {
        key: 'save',
        value: function save(id, whenDone) {
            saving = true;
            var th = metadata.thumbnail;
            if (th && _ScratchJr2.default.editmode != 'storyStarter') {
                // Don't try to delete the thumbnail in a sample project
                var thumb = typeof th === 'string' ? JSON.parse(th) : th;
                if (thumb.md5.indexOf('samples/') < 0) {
                    // In case we've exited story-starter mode
                    Project.thumbnailUnique(thumb.md5, id, function (isUnique) {
                        if (isUnique) {
                            _OS2.default.remove(thumb.md5, _OS2.default.trace); // remove thumb;
                        }
                    });
                }
            }
            metadata.id = id;
            metadata.json = Project.getProject(_ScratchJr2.default.stage.pages[0].id);
            Project.getThumbnailPNG(_ScratchJr2.default.stage.pages[0], 192, 144, getMD5);
            function getMD5(dataurl) {
                var pngBase64 = dataurl.split(',')[1];
                _OS2.default.getmd5(pngBase64, function (str) {
                    savePNG(str, pngBase64);
                });
            }

            function savePNG(md5, pngBase64) {
                var filename = _ScratchJr2.default.currentProject + '_' + md5;
                _OS2.default.setmedianame(pngBase64, filename, 'png', doNext);
            }

            function doNext(md5) {
                metadata.thumbnail = {
                    'pagecount': _ScratchJr2.default.stage.pages.length,
                    'md5': md5
                };
                metadata.mtime = new Date().getTime().toString();
                _IO2.default.saveProject(metadata, saveDone);
            }

            function saveDone() {
                saving = false;
                if (whenDone) {
                    whenDone();
                }
            }
        }
    }, {
        key: 'getProject',
        value: function getProject(pageid) {
            var obj = {};
            obj.pages = _ScratchJr2.default.stage.getPagesID();
            obj.currentPage = pageid;
            for (var i = 0; i < _ScratchJr2.default.stage.pages.length; i++) {
                obj[_ScratchJr2.default.stage.pages[i].id] = _ScratchJr2.default.stage.pages[i].encodePage();
            }
            return obj;
        }
    }, {
        key: 'getUndo',
        value: function getUndo() {
            return Project.getProject(_ScratchJr2.default.stage.currentPage.id);
        }
    }, {
        key: 'encodeSprite',
        value: function encodeSprite(name) {
            return (0, _lib.gn)(name).owner.getData();
        }
    }, {
        key: 'encodeStrip',
        value: function encodeStrip(b) {
            var res = [];
            var hasargs = ['playsnd', 'gotopage', 'playusersnd', 'setcolor', 'onmessage', 'message', 'setspeed'];
            var loops = ['repeat'];
            var carets = ['caretcmd', 'caretend', 'caretstart'];
            while (b != null) {
                var bt = b.blocktype;
                // Don't encode carets in a strip
                if (carets.indexOf(bt) > -1) {
                    b = b.next;
                    continue;
                }
                if (bt == 'caretrepeat') {
                    // Convert repeat carets to actual repeats for the encoding
                    bt = 'repeat';
                }
                var arg = b.arg != null || hasargs.indexOf(bt) > -1 ? b.getArgValue() : null;
                if (!arg && arg != 0) {
                    arg = 'null';
                }
                var dx = b.div.left / b.scale;
                var dy = b.div.top / b.scale;
                var data = [bt, arg, dx, dy];
                if (loops.indexOf(bt) > -1) {
                    var inside = Project.encodeStrip(b.inside);
                    data.push(inside);
                }
                res.push(data);
                b = b.next;
            }
            return res;
        }

        /////////////////////////////
        // Project PNG Thumbnail
        /////////////////////////////

    }, {
        key: 'getThumbnailPNG',
        value: function getThumbnailPNG(page, w, h, fcn) {
            var scale = w / 480;
            var data = {};
            data.pagecount = _ScratchJr2.default.stage.pages.length;
            var c = document.createElement('canvas');
            (0, _lib.setCanvasSize)(c, w, h);
            var ctx = c.getContext('2d');
            var md5 = page.md5;
            ctx.fillStyle = window.Settings.stageColor;
            ctx.fillRect(0, 0, w, h);
            if (!md5) {
                Project.drawSprites(page, scale, c, w, h, fcn);
            } else {
                var pcnv;
                if (md5.substr(md5.length - 3) == 'png') {
                    var bgimg = page.div.firstElementChild.firstElementChild;
                    pcnv = Project.drawPNGInCanvas(bgimg, 480, 360);
                } else {
                    pcnv = Project.drawSVGinCanvas(page.svg, 480, 360);
                }
                ctx.drawImage(pcnv, 0, 0, 480, 360, 0, 0, w, h);
                Project.drawSprites(page, scale, c, w, h, fcn);
            }
        }
    }, {
        key: 'drawPNGInCanvas',
        value: function drawPNGInCanvas(png, w, h) {
            var srccnv = document.createElement('canvas');
            (0, _lib.setCanvasSize)(srccnv, w, h);
            var ctx = srccnv.getContext('2d');
            ctx.drawImage(png, 0, 0, w, h);
            return srccnv;
        }
    }, {
        key: 'drawSVGinCanvas',
        value: function drawSVGinCanvas(extxml, w, h) {
            var srccnv = document.createElement('canvas');
            (0, _lib.setCanvasSize)(srccnv, w, h);
            var ctx = srccnv.getContext('2d');
            for (var i = 0; i < extxml.childElementCount; i++) {
                _SVG2Canvas2.default.drawLayer(extxml.childNodes[i], ctx, _SVG2Canvas2.default.drawLayer);
            }
            return srccnv;
        }
    }, {
        key: 'maskBorders',
        value: function maskBorders(ctx, w, h) {
            ctx.save();
            ctx.globalCompositeOperation = 'destination-in';
            if (window.Settings.edition != 'PBS') {
                ctx.drawImage(_BlockSpecs2.default.projectThumb, 0, 0, w, h);
            }
            ctx.restore();
        }
    }, {
        key: 'drawSprites',
        value: function drawSprites(page, scale, c, w, h, fcn) {
            var ctx = c.getContext('2d');
            doNext(1);
            function doNext(n) {
                if (!(n < page.div.childElementCount)) {
                    Project.maskBorders(c.getContext('2d'), w, h);
                    fcn(c.toDataURL('image/png'));
                } else {
                    var spr = page.div.childNodes[n].owner;
                    if (!spr || !spr.shown) {
                        doNext(n + 1);
                    } else {
                        drawLoadedImage(page, ctx, spr.outline, spr, scale, n);
                    }
                }
            }

            function drawLoadedImage(page, ctx, img, spr, scale, n) {
                page.drawSpriteImage(ctx, img, spr, scale);
                doNext(n + 1);
            }
        }
    }, {
        key: 'metadata',
        get: function get() {
            return metadata;
        },
        set: function set(newMetadata) {
            metadata = newMetadata;
        }
    }, {
        key: 'mediaCount',
        get: function get() {
            return mediaCount;
        },
        set: function set(newMediaCount) {
            mediaCount = newMediaCount;
        }
    }, {
        key: 'loadIcon',
        set: function set(newLoadIcon) {
            loadIcon = newLoadIcon;
        },
        get: function get() {
            return loadIcon;
        }
    }, {
        key: 'error',
        get: function get() {
            return error;
        }
    }]);

    return Project;
}();

exports.default = Project;

/***/ }),

/***/ "./src/editor/ui/Record.js":
/*!*********************************!*\
  !*** ./src/editor/ui/Record.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ScratchJr = __webpack_require__(/*! ../ScratchJr */ "./src/editor/ScratchJr.js");

var _ScratchJr2 = _interopRequireDefault(_ScratchJr);

var _Palette = __webpack_require__(/*! ./Palette */ "./src/editor/ui/Palette.js");

var _Palette2 = _interopRequireDefault(_Palette);

var _Undo = __webpack_require__(/*! ./Undo */ "./src/editor/ui/Undo.js");

var _Undo2 = _interopRequireDefault(_Undo);

var _OS = __webpack_require__(/*! ../../tablet/OS */ "./src/tablet/OS.js");

var _OS2 = _interopRequireDefault(_OS);

var _ScratchAudio = __webpack_require__(/*! ../../utils/ScratchAudio */ "./src/utils/ScratchAudio.js");

var _ScratchAudio2 = _interopRequireDefault(_ScratchAudio);

var _lib = __webpack_require__(/*! ../../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var interval = null;
var recordedSound = null;
var isRecording = false;
var isPlaying = false;
var available = true;
var error = false;
var dialogOpen = false;
var timeLimit = null;
var playTimeLimit = null;

var volumeIndex = 0;
var volumes = [];

var Record = function () {
    function Record() {
        _classCallCheck(this, Record);
    }

    _createClass(Record, null, [{
        key: 'init',


        // Create the recording window, including buttons and volume indicators
        value: function init() {
            var modal = (0, _lib.newHTML)('div', 'record fade', _lib.frame);
            modal.setAttribute('id', 'recorddialog');
            var topbar = (0, _lib.newHTML)('div', 'toolbar', modal);
            var actions = (0, _lib.newHTML)('div', 'actions', topbar);
            (0, _lib.newHTML)('div', 'microphone', actions);
            var buttons = (0, _lib.newHTML)('div', 'recordbuttons', actions);
            var okbut = (0, _lib.newHTML)('div', 'recorddone', buttons);
            okbut.onclick = Record.saveSoundAndClose;
            var sc = (0, _lib.newHTML)('div', 'soundbox', modal);
            sc.setAttribute('id', 'soundbox');
            var sv = (0, _lib.newHTML)('div', 'soundvolume', sc);
            sv.setAttribute('id', 'soundvolume');
            for (var i = 0; i < 13; i++) {
                var si = (0, _lib.newHTML)('div', 'indicator', sv);
                (0, _lib.newHTML)('div', 'soundlevel', si);
            }
            var ctrol = (0, _lib.newHTML)('div', 'soundcontrols', sc);
            ctrol.setAttribute('id', 'soundcontrols');
            var lib = [['record', Record.record], ['stop', Record.stopSnd], ['play', Record.playSnd]];
            for (var j = 0; j < lib.length; j++) {
                Record.newToggleClicky(ctrol, 'id_', lib[j][0], lib[j][1]);
            }
        }

        // Dialog box hide/show

    }, {
        key: 'appear',
        value: function appear() {
            _OS2.default.analyticsEvent('editor', 'record_dialog_open');
            (0, _lib.gn)('backdrop').setAttribute('class', 'modal-backdrop fade in');
            (0, _lib.setProps)((0, _lib.gn)('backdrop').style, {
                display: 'block'
            });
            (0, _lib.gn)('recorddialog').setAttribute('class', 'record fade in');
            _ScratchJr2.default.stopStrips();
            dialogOpen = true;
            _ScratchJr2.default.onBackButtonCallback.push(Record.saveSoundandClose);
        }
    }, {
        key: 'disappear',
        value: function disappear() {
            _OS2.default.analyticsEvent('editor', 'record_dialog_close');
            setTimeout(function () {
                (0, _lib.gn)('backdrop').setAttribute('class', 'modal-backdrop fade');
                (0, _lib.setProps)((0, _lib.gn)('backdrop').style, {
                    display: 'none'
                });
                (0, _lib.gn)('recorddialog').setAttribute('class', 'record fade');
            }, 333);
            dialogOpen = false;
            _ScratchJr2.default.onBackButtonCallback.pop();
        }

        // Register toggle buttons and handlers

    }, {
        key: 'newToggleClicky',
        value: function newToggleClicky(p, prefix, key, fcn) {
            var button = (0, _lib.newHTML)('div', 'controlwrap', p);
            (0, _lib.newHTML)('div', key + 'snd off', button);
            button.setAttribute('type', 'toggleclicky');
            button.setAttribute('id', prefix + key);
            if (fcn) {
                button.onclick = function (evt) {
                    fcn(evt);
                };
            }
            return button;
        }

        // Toggle button appearance on/off

    }, {
        key: 'toggleButtonUI',
        value: function toggleButtonUI(button, newState) {
            var element = 'id_' + button;
            var newStateStr = newState ? 'on' : 'off';
            var attrclass = button + 'snd';
            (0, _lib.gn)(element).childNodes[0].setAttribute('class', attrclass + ' ' + newStateStr);
        }

        // Volume UI updater

    }, {
        key: 'updateVolume',
        value: function updateVolume(f) {
            var num = Math.round(f * 13);
            var div = (0, _lib.gn)('soundvolume');
            if (!isRecording && !isPlaying) {
                num = 0;
            }
            for (var i = 0; i < 13; i++) {
                div.childNodes[i].childNodes[0].setAttribute('class', i > num ? 'soundlevel off' : 'soundlevel on');
            }
        }

        // Stop recording UI and turn off volume levels

    }, {
        key: 'recordUIoff',
        value: function recordUIoff() {
            Record.toggleButtonUI('record', false);
            var div = (0, _lib.gn)('soundvolume');
            for (var i = 0; i < (0, _lib.gn)('soundvolume').childElementCount; i++) {
                div.childNodes[i].childNodes[0].setAttribute('class', 'soundlevel off');
            }
        }

        // On press record button

    }, {
        key: 'record',
        value: function record(e) {
            if (error) {
                Record.killRecorder(e);
                return;
            }
            if (isPlaying) {
                Record.stopPlayingSound(doRecord);
            } else {
                doRecord();
            }
            function doRecord() {
                if (isRecording) {
                    Record.stopRecording(); // Stop if we're already recording
                } else {
                    _OS2.default.sndrecord(Record.startRecording); // Start a recording
                }
            }
        }
    }, {
        key: 'startRecording',
        value: function startRecording(filename) {
            _OS2.default.analyticsEvent('editor', 'start_recording');
            volumes = [];
            if (parseInt(filename) < 0) {
                // Error in getting record filename - go back to editor
                recordedSound = undefined;
                isRecording = false;
                Record.killRecorder();
                _Palette2.default.selectCategory(3);
            } else {
                // Save recording's filename for later
                recordedSound = filename;
                isRecording = true;
                error = false;
                Record.soundname = filename;
                Record.toggleButtonUI('record', true);
                var poll = function poll() {
                    _OS2.default.volume(function (f) {
                        volumes.push(f);
                        Record.updateVolume(f);
                    });
                };
                interval = setInterval(poll, 33);
                timeLimit = setTimeout(function () {
                    if (isRecording) {
                        Record.stopRecording();
                    }
                }, 30000);
            }
        }

        // Press the play button

    }, {
        key: 'playSnd',
        value: function playSnd(e) {
            if (error) {
                Record.killRecorder(e);
                return;
            }
            if (!recordedSound) {
                return;
            }
            if (isPlaying) {
                Record.stopPlayingSound();
            } else {
                if (isRecording) {
                    Record.stopRecording(Record.startPlaying);
                } else {
                    Record.startPlaying();
                }
            }
        }

        // Start playing the sound and switch UI appropriately

    }, {
        key: 'startPlaying',
        value: function startPlaying() {
            _OS2.default.startplay(Record.timeOutPlay);
            Record.toggleButtonUI('play', true);
            isPlaying = true;
            volumeIndex = 0;
            var poll = function poll() {
                var f = 0;
                if (volumeIndex < volumes.length) {
                    f = volumes[volumeIndex];
                    volumeIndex++;
                }
                Record.updateVolume(f);
            };
            interval = setInterval(poll, 33);
        }

        // Gets the sound duration from iOS and changes play UI state after time

    }, {
        key: 'timeOutPlay',
        value: function timeOutPlay(timeout) {
            if (parseInt(timeout) < 0) {
                timeout = 0.1; // Error - stop playing immediately
            }
            playTimeLimit = setTimeout(function () {
                Record.toggleButtonUI('play', false);
                isPlaying = false;
                if (interval) {
                    clearTimeout(interval);
                    interval = null;
                }
            }, timeout * 1000);
        }

        // Press on stop

    }, {
        key: 'stopSnd',
        value: function stopSnd(e) {
            if (error) {
                Record.killRecorder(e);
                return;
            }
            if (!recordedSound) {
                return;
            }
            Record.flashStopButton();
            if (isRecording) {
                Record.stopRecording();
            } else if (isPlaying) {
                Record.stopPlayingSound();
            }
        }
    }, {
        key: 'flashStopButton',
        value: function flashStopButton() {
            Record.toggleButtonUI('stop', true);
            setTimeout(function () {
                Record.toggleButtonUI('stop', false);
            }, 200);
        }

        // Stop playing the sound and switch UI appropriately

    }, {
        key: 'stopPlayingSound',
        value: function stopPlayingSound(fcn) {
            _OS2.default.stopplay(fcn);
            Record.toggleButtonUI('play', false);
            isPlaying = false;
            window.clearTimeout(playTimeLimit);
            playTimeLimit = null;
        }

        // Stop the volume monitor and recording

    }, {
        key: 'stopRecording',
        value: function stopRecording(fcn) {
            _OS2.default.analyticsEvent('editor', 'stop_recording');
            if (timeLimit != null) {
                clearTimeout(timeLimit);
                timeLimit = null;
            }
            if (interval != null) {
                window.clearInterval(interval);
                interval = null;
                setTimeout(function () {
                    Record.volumeCheckStopped(fcn);
                }, 33);
            } else {
                Record.volumeCheckStopped(fcn);
            }
        }
    }, {
        key: 'volumeCheckStopped',
        value: function volumeCheckStopped(fcn) {
            isRecording = false;
            Record.recordUIoff();
            _OS2.default.recordstop(fcn);
        }

        // Press OK (check)

    }, {
        key: 'saveSoundAndClose',
        value: function saveSoundAndClose() {
            if (error || !recordedSound) {
                Record.killRecorder();
            } else {
                if (isPlaying) {
                    Record.stopPlayingSound(Record.closeContinueSave);
                } else {
                    if (isRecording) {
                        Record.stopRecording(Record.closeContinueSave);
                    } else {
                        Record.closeContinueSave();
                    }
                }
            }
        }
    }, {
        key: 'closeContinueSave',
        value: function closeContinueSave() {
            _OS2.default.recorddisappear('YES', Record.registerProjectSound);
        }
    }, {
        key: 'closeContinueRemove',
        value: function closeContinueRemove() {
            // don't get the sound - proceed right to tearDown
            _OS2.default.recorddisappear('NO', Record.tearDownRecorder);
        }
    }, {
        key: 'registerProjectSound',
        value: function registerProjectSound() {
            function whenDone(snd) {
                if (snd != 'error') {
                    var spr = _ScratchJr2.default.getSprite();
                    var page = spr.div.parentNode.owner;
                    spr.sounds.push(recordedSound);
                    _Undo2.default.record({
                        action: 'recordsound',
                        who: spr.id,
                        where: page.id,
                        sound: recordedSound
                    });
                    _ScratchJr2.default.storyStart('Record.registerProjectSound');
                }
                Record.tearDownRecorder();
                _Palette2.default.selectCategory(3);
            }
            if (!_lib.isAndroid) {
                _ScratchAudio2.default.loadFromLocal('Documents', recordedSound, whenDone);
            } else {
                // On Android, just pass URL
                _ScratchAudio2.default.loadFromLocal('', recordedSound, whenDone);
            }
        }

        // Called on error - remove everything and hide the recorder

    }, {
        key: 'killRecorder',
        value: function killRecorder() {
            // Inform iOS and then tear-down
            if (isPlaying) {
                Record.stopPlayingSound(Record.closeContinueRemove); // stop playing and tear-down
            } else {
                if (isRecording) {
                    Record.stopRecording(Record.closeContinueRemove); // stop recording and tear-down
                } else {
                    Record.closeContinueRemove();
                }
            }
        }
    }, {
        key: 'tearDownRecorder',
        value: function tearDownRecorder() {
            // Clear errors
            if (error) {
                error = false;
            }
            // Refresh audio context
            isRecording = false;
            recordedSound = null;
            // Hide the dialog
            Record.disappear();
        }

        // Called when the app is put into the background

    }, {
        key: 'recordError',
        value: function recordError() {
            error = true;
            Record.killRecorder();
        }
    }, {
        key: 'available',
        get: function get() {
            return available;
        },
        set: function set(newAvailable) {
            available = newAvailable;
        }
    }, {
        key: 'dialogOpen',
        get: function get() {
            return dialogOpen;
        }
    }]);

    return Record;
}();

exports.default = Record;

/***/ }),

/***/ "./src/editor/ui/Scripts.js":
/*!**********************************!*\
  !*** ./src/editor/ui/Scripts.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); ///////////////////////////////////////////////
//  Scripts
///////////////////////////////////////////////

var _ScratchJr = __webpack_require__(/*! ../ScratchJr */ "./src/editor/ScratchJr.js");

var _ScratchJr2 = _interopRequireDefault(_ScratchJr);

var _Block = __webpack_require__(/*! ../blocks/Block */ "./src/editor/blocks/Block.js");

var _Block2 = _interopRequireDefault(_Block);

var _BlockSpecs = __webpack_require__(/*! ../blocks/BlockSpecs */ "./src/editor/blocks/BlockSpecs.js");

var _BlockSpecs2 = _interopRequireDefault(_BlockSpecs);

var _ScriptsPane = __webpack_require__(/*! ./ScriptsPane */ "./src/editor/ui/ScriptsPane.js");

var _ScriptsPane2 = _interopRequireDefault(_ScriptsPane);

var _Events = __webpack_require__(/*! ../../utils/Events */ "./src/utils/Events.js");

var _Events2 = _interopRequireDefault(_Events);

var _ScratchAudio = __webpack_require__(/*! ../../utils/ScratchAudio */ "./src/utils/ScratchAudio.js");

var _ScratchAudio2 = _interopRequireDefault(_ScratchAudio);

var _lib = __webpack_require__(/*! ../../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Scripts = function () {
    function Scripts(spr) {
        _classCallCheck(this, Scripts);

        this.flowCaret = null;
        this.spr = spr;
        this.dragList = [];
        var dc = (0, _lib.gn)('scriptscontainer');
        this.sc = (0, _lib.newHTML)('div', 'look', dc);
        (0, _lib.setCanvasSize)(this.sc, dc.offsetWidth, dc.offsetHeight);
        this.sc.setAttribute('id', spr.id + '_scripts');
        this.sc.setAttribute('class', 'look');
        this.sc.owner = this;
        this.sc.top = 0;
        this.sc.left = 0;
    }

    _createClass(Scripts, [{
        key: 'activate',
        value: function activate() {
            (0, _lib.setProps)(this.sc.style, {
                visibility: 'visible'
            });
        }
    }, {
        key: 'deactivate',
        value: function deactivate() {
            (0, _lib.setProps)(this.sc.style, {
                visibility: 'hidden'
            });
        }

        ////////////////////////////////////////////////
        //  Events MouseDown
        ////////////////////////////////////////////////

    }, {
        key: 'scriptsMouseDown',
        value: function scriptsMouseDown(e) {
            if (_lib.isTablet && e.touches && e.touches.length > 1) {
                return;
            }
            if (_ScratchJr2.default.onHold) {
                return;
            }
            if (window.event) {
                t = window.event.srcElement;
            } else {
                t = e.target;
            }
            if (t.nodeName == 'H3' && t.owner == _ScratchJr2.default.activeFocus) {
                return;
            } // editing the current field
            _ScratchJr2.default.clearSelection();
            if (t.nodeName == 'H3') {
                _ScratchJr2.default.blur();
                _ScratchJr2.default.editArg(e, t);
                return;
            }

            if (t.firstChild && t.firstChild.nodeName == 'H3') {
                _ScratchJr2.default.blur();
                _ScratchJr2.default.editArg(e, t.firstChild);
                return;
            }

            _ScratchJr2.default.unfocus(e);
            var sc = _ScratchJr2.default.getActiveScript();
            var spt = _Events2.default.getTargetPoint(e);
            var pt = {
                x: (0, _lib.localx)(sc, spt.x),
                y: (0, _lib.localy)(sc, spt.y)
            };
            for (var i = sc.childElementCount - 1; i > -1; i--) {
                var ths = sc.childNodes[i];
                if (!ths.owner) {
                    continue;
                }
                if (ths.owner.isCaret) {
                    continue;
                }
                if (!(0, _lib.hit3DRect)(ths, pt)) {
                    continue;
                }
                var t = new WebKitCSSMatrix(window.getComputedStyle(ths).webkitTransform);
                // This line was causing repeat blocks to only drag when touched in the front and top
                // It seems to have been checking if the drag was on the invisible shadow of the repeat block
                // It's not clear to me why we would want this, and seems functional without it. -- TM
                //if ((ths.owner.blocktype == "repeat") && !hitTest(ths.childNodes[1], pixel)) continue;
                e.preventDefault();
                _Events2.default.startDrag(e, ths, _ScriptsPane2.default.prepareToDrag, _ScriptsPane2.default.dropBlock, _ScriptsPane2.default.draggingBlock, _ScriptsPane2.default.runBlock);
                return;
            }
            _ScriptsPane2.default.dragBackground(e);
        }

        ////////////////////////////////////////////////
        //  Events MouseUP
        ////////////////////////////////////////////////

    }, {
        key: 'addBlockToScripts',
        value: function addBlockToScripts(b, dx, dy) {
            if (this.flowCaret != null && this.flowCaret.div.parentNode == this.sc) {
                this.sc.removeChild(this.flowCaret.div);
            }
            this.flowCaret = null;
            _Events2.default.dragDiv.removeChild(b);
            this.sc.appendChild(b);
            //  b.owner.drop();
            b.owner.moveBlock(dx, dy);
            for (var i = 1; i < this.dragList.length; i++) {
                var piece = this.dragList[i].div;
                piece.parentNode.removeChild(piece);
                this.sc.appendChild(piece);
                //   piece.owner.drop();
            }
            this.layout(b.owner);
            this.snapToPlace(this.dragList);
            if (b.owner.cShape) {
                this.sendToBack(b.owner);
            }
            this.dragList = [];
        }
    }, {
        key: 'sendToBack',
        value: function sendToBack(b) {
            if (!b.inside) {
                return;
            }
            var you = b.inside;
            while (you != null) {
                var p = you.div.parentNode;
                p.appendChild(you.div);
                if (you.cShape) {
                    this.sendToBack(you);
                }
                you = you.next;
            }
            this.layout(b);
        }
    }, {
        key: 'snapToPlace',
        value: function snapToPlace(drag) {
            if (drag.length < 2 && drag[0].cShape) {
                this.snapCshape(drag);
            } else {
                this.snapBlock(drag);
            }
        }
    }, {
        key: 'snapBlock',
        value: function snapBlock(drag) {
            var me = drag[0];
            var last = me.findLast();
            var res = this.findClosest(this.available(0, me, drag), me);
            if (this.isValid(me, res, 0)) {
                this.snapToDock(res, me, 0, drag);
                return;
            }
            res = this.findClosest(this.available(last.cShape ? 2 : 1, last, drag), last);
            if (!this.isValid(last, res, last.cShape ? 2 : 1)) {
                return;
            }
            this.snapToDock(res, last, last.cShape ? 2 : 1, drag);
        }
    }, {
        key: 'snapCshape',
        value: function snapCshape(drag) {
            var me = drag[0];
            var last = me.findLast();
            var res = this.findClosest(this.available(0, me, drag), me);
            if (this.isValid(me, res, 0)) {
                this.snapToDock(res, me, 0, drag);
                return;
            }
            var allowInside = me.isCaret ? this.dragList[0].inside == null : me.inside == null;
            if (allowInside) {
                res = this.findClosest(this.available(1, me, drag), me);
                if (this.isValid(me, res, 1)) {
                    this.snapToDock(res, me, 1, drag);
                    return;
                }
            }
            res = this.findClosest(this.available(2, last, drag), last);
            if (this.isValid(me, res, 2)) {
                this.snapToDock(res, last, 2, drag);
            }
        }
    }, {
        key: 'isValid',
        value: function isValid(me, res, myn) {
            if (res == null) {
                return false;
            }
            var you = res[0];
            var yourn = res[1];
            if (res[2] > 30) {
                return false;
            }
            if (me.cShape && myn == 1 && you.anEnd) {
                return false;
            }
            if (me.anEnd && you.next != null) {
                return false;
            }
            if (me.findFirst().aStart && you.prev != null) {
                return false;
            } // a strip starting with a start cannot be inserted between 2 blocks
            if (myn == 0 && me.findLast().anEnd && (you.blocktype == 'repeat' && yourn == 1 || this.insideCShape(you))) {
                return false;
            }
            if (me.findLast().anEnd && you.next != null) {
                return false;
            }
            if (me.findLast().anEnd && you.findLast().anEnd) {
                return false;
            }
            return true;
        }
    }, {
        key: 'insideCShape',
        value: function insideCShape(you) {
            while (you != null) {
                var next = you.prev;
                if (next == null) {
                    return false;
                }
                var docknum = next.getMyDockNum(you);
                if (next.cShape && docknum == 1) {
                    return true;
                }
                you = next;
            }
            return false;
        }
    }, {
        key: 'snapToDock',
        value: function snapToDock(choice, me, place, drag) {
            if (choice == null) {
                return;
            }
            if (me.blocktype.indexOf('caret') < 0) {
                _ScratchJr2.default.storyStart('Scripts.snapToDock');
                _ScratchAudio2.default.sndFX('snap.wav');
            }
            var you = choice[0];
            var yourn = choice[1];
            var bestxy;
            if (me.cShape && place == 1) {
                var res = this.getDockDxDy(you, yourn, me, place);
                bestxy = [res[0], res[1]];
            } else {
                bestxy = this.getDockDxDy(you, yourn, me, place);
            }
            if (me.isCaret) {
                me.div.style.visibility = 'visible';
            }
            for (var i = 0; i < drag.length; i++) {
                drag[i].moveBlock(drag[i].div.left + bestxy[0], drag[i].div.top + bestxy[1]);
            }
            me.connectBlock(place, choice[0], choice[1]);
        }
    }, {
        key: 'available',
        value: function available(myn, me, drag) {
            var thisxy = null;
            var res = [];
            var you = null;
            var allblocks = this.getBlocks();
            for (var i = 0; i < allblocks.length; i++) {
                you = allblocks[i];
                if (you == null) {
                    continue;
                }
                if (you == me) {
                    continue;
                }
                if (you.isCaret) {
                    continue;
                }
                if (you.isReporter) {
                    continue;
                }
                if (you.div.style.visibility == 'hidden') {
                    continue;
                }
                if (drag.indexOf(you) == -1) {
                    var yourdocks = you.resolveDocks();
                    for (var yourn = 0; yourn < yourdocks.length; yourn++) {
                        thisxy = this.getDockDxDy(you, yourn, me, myn);
                        if (thisxy != null) {
                            res.push([you, yourn, this.magnitude(thisxy)]);
                        }
                    }
                }
            }
            return res;
        }
    }, {
        key: 'magnitude',
        value: function magnitude(p) {
            var x = p[0];
            var y = p[1];
            return Math.sqrt(x * x + y * y);
        }
    }, {
        key: 'findClosest',
        value: function findClosest(choices) {
            var min = 9999;
            var item = null;
            for (var i = 0; i < choices.length; i++) {
                var c = choices[i];
                if (c[2] < min) {
                    min = c[2];
                    item = c;
                }
            }
            return item;
        }
    }, {
        key: 'getDockDxDy',
        value: function getDockDxDy(b1, n1, b2, n2) {
            var d1 = b1.resolveDocks()[n1];
            var d2 = b2.resolveDocks()[n2];
            if (b1 == b2) {
                return null;
            } // same block
            if (d1 == null || d2 == null) {
                return null;
            } // no block
            if (d1[0] != d2[0]) {
                return null;
            } //  not the same type of notch like "flow"
            if (d1[1] == d2[1]) {
                return null;
            } // not an "inny" with and "outie" (both true)
            var x1 = b1.div.left + d1[2] * b1.scale;
            var y1 = b1.div.top + d1[3] * b1.scale;
            var x2 = b2.div.left + d2[2] * b2.scale;
            var y2 = b2.div.top + d2[3] * b2.scale;
            return [x1 - x2, y1 - y2];
        }
    }, {
        key: 'layout',
        value: function layout(block) {
            var first = block.findFirst();
            this.layoutStrip(first);
        }
    }, {
        key: 'layoutStrip',
        value: function layoutStrip(b) {
            while (b != null) {
                if (b.cShape) {
                    this.layoutCshape(b);
                }
                this.layoutNextBlock(b);
                b = b.next;
            }
        }
    }, {
        key: 'layoutNextBlock',
        value: function layoutNextBlock(b) {
            if (b.next != null) {
                var you = b.next;
                var bestxy = this.getDockDxDy(b, b.cShape ? 2 : 1, you, 0);
                if (bestxy == null) {
                    return;
                }
                you.moveBlock(you.div.left + bestxy[0], you.div.top + bestxy[1]);
            }
        }
    }, {
        key: 'layoutCshape',
        value: function layoutCshape(b) {
            var inside = 0;
            var maxh = 0;
            var oldh = b.hrubberband;
            var cblock = b.inside;
            if (cblock != null) {
                this.adjustPos(cblock, 0, b, 1);
                this.layoutStrip(cblock);
                inside += this.adjustCinside(cblock);
                maxh += this.adjustCheight(cblock);
            }
            oldh = b.vrubberband;
            b.vrubberband = maxh < 0 ? 0 : maxh;
            b.hrubberband = inside;
            b.redrawRepeat();
            b.moveBlock(b.div.left, b.div.top + (oldh - b.vrubberband) * b.scale);
        }
    }, {
        key: 'adjustPos',
        value: function adjustPos(me, myn, you, yourn) {
            var bestxy = this.getDockDxDy(you, yourn, me, myn);
            me.moveBlock(me.div.left + bestxy[0], me.div.top + bestxy[1]);
        }
    }, {
        key: 'adjustCheight',
        value: function adjustCheight(b) {
            var old = b;
            var h = b.blockshape.height;
            b = b.next;
            while (b != null) {
                if (b.blockshape.height > h) {
                    h = b.blockshape.height;
                }
                b = b.next;
            }
            h /= old.scale * window.devicePixelRatio;
            return h > 66 ? h - 66 : 0;
        }
    }, {
        key: 'adjustCinside',
        value: function adjustCinside(b) {
            var first = b;
            var last = b;
            while (b != null) {
                last = b;
                b = b.next;
            }
            var w = last.blockshape.width / last.scale / window.devicePixelRatio + (last.div.left - first.div.left) / last.scale;
            return w - (last.cShape ? 76 : 76);
        }
    }, {
        key: 'getBlocks',
        value: function getBlocks() {
            var res = [];
            var sc = this.sc;
            for (var i = 0; i < sc.childElementCount; i++) {
                var b = sc.childNodes[i].owner;
                if (!b) {
                    continue;
                }
                if (b.type != 'block') {
                    continue;
                }
                if (b.isCaret) {
                    continue;
                }
                res.push(b);
            }
            return res;
        }
    }, {
        key: 'findGroup',
        value: function findGroup(b) {
            if (b.type != 'block') {
                return [];
            }
            var res = [];
            return this.findingGroup(res, b);
        }
    }, {
        key: 'findingGroup',
        value: function findingGroup(res, b) {
            while (b != null) {
                res.push(b);
                if (b.cShape) {
                    this.findingGroup(res, b.inside);
                }
                b = b.next;
            }
            return res;
        }
    }, {
        key: 'gettopblocks',
        value: function gettopblocks() {
            var list = this.getBlocks();
            var res = [];
            for (var n = 0; n < list.length; n++) {
                if (list[n].prev == null && !list[n].isReporter) {
                    res.push(list[n]);
                }
                if (list[n].isReporter && (list[n].daddy = null)) {
                    res.push(list[n]);
                }
            }
            return res;
        }

        // A version of gettopblocks that also returns strips which
        // may be currently starting with a caret and blocks in the dragDiv

    }, {
        key: 'getEncodableBlocks',
        value: function getEncodableBlocks() {
            var list = [];
            var sc = this.sc;
            for (var i = 0; i < sc.childElementCount; i++) {
                var b = sc.childNodes[i].owner;
                if (!b || b.type != 'block') {
                    continue;
                }
                list.push(b);
            }

            var res = [];
            for (var n = 0; n < list.length; n++) {
                if (list[n].prev == null) res.push(list[n]);
            }
            return res;
        }
    }, {
        key: 'redisplay',
        value: function redisplay() {
            var list = this.gettopblocks();
            for (var n = 0; n < list.length; n++) {
                this.layout(list[n]);
            }
        }
    }, {
        key: 'getBlocksType',
        value: function getBlocksType(list) {
            var res = [];
            var blocks = this.getBlocks();
            for (var i = 0; i < list.length; i++) {
                var key = list[i];
                for (var n = 0; n < blocks.length; n++) {
                    if (key == blocks[n].blocktype) {
                        res.push(blocks[n]);
                    }
                }
            }
            return res;
        }
    }, {
        key: 'prepareCaret',
        value: function prepareCaret(b) {
            // Block data structure
            var last = b.findLast();
            var bt = this.getCaretType(last);
            if (this.flowCaret != null) {
                this.sc.removeChild(this.flowCaret.div);
            }
            this.flowCaret = null;
            if (bt == null) {
                return;
            } // don't have a caret
            this.flowCaret = this.newCaret(bt);
            this.flowCaret.isCaret = true;
        }
    }, {
        key: 'newCaret',
        value: function newCaret(bt) {
            // Block data structure
            var parent = this.sc;
            var bbx = new _Block2.default(_BlockSpecs2.default.defs[bt], false, _lib.scaleMultiplier);
            (0, _lib.setProps)(bbx.div.style, {
                position: 'absolute',
                left: '0px',
                top: '0px',
                visibility: 'hidden',
                zIndex: 10
            });
            parent.appendChild(bbx.div);
            bbx.moveBlock(0, 0);
            return bbx;
        }

        ////////////////////////////////////////////
        // Caret
        ///////////////////////////////////////////

    }, {
        key: 'getCaretType',
        value: function getCaretType(b) {
            if (this.dragList[0].aStart) {
                return 'caretstart';
            }
            if (b.anEnd) {
                return 'caretend';
            }
            if (this.dragList.length < 2 && this.dragList[0].cShape) {
                return 'caretrepeat';
            }
            return 'caretcmd';
        }

        ////////////////////////////////////////////////
        //  Events MouseMove
        ////////////////////////////////////////////////

    }, {
        key: 'removeCaret',
        value: function removeCaret() {
            if (this.flowCaret == null) {
                return;
            }
            var before = this.flowCaret.prev;
            var after = this.flowCaret.next;
            var inside = this.flowCaret.inside;
            this.flowCaret.prev = null;
            this.flowCaret.next = null;
            this.flowCaret.inside = null;
            var n;
            if (after != null) {
                n = after.getMyDockNum(this.flowCaret);
                after.setMyDock(n, inside != null ? inside.findLast() : before);
                if (inside == null && before == null) {
                    this.layout(after);
                }
            }
            if (inside != null) {
                n = inside.getMyDockNum(this.flowCaret);
                inside.setMyDock(n, before);
                if (after != null) {
                    inside.findLast().next = after;
                }
                if (before == null) {
                    this.layout(inside);
                }
            }
            if (before != null) {
                n = before.getMyDockNum(this.flowCaret);
                before.setMyDock(n, inside != null ? inside : after);
                this.layout(before);
            }
            if (this.flowCaret.cShape) {
                this.flowCaret.vrubberband = 0;
                this.flowCaret.hrubberband = 0;
                this.flowCaret.redrawRepeat();
            }
            this.flowCaret.div.style.visibility = 'hidden';
        }
    }, {
        key: 'insertCaret',
        value: function insertCaret(x, y) {
            if (this.flowCaret == null) {
                return;
            }
            var sc = _ScratchJr2.default.getActiveScript();
            var dx = (0, _lib.localx)(sc, x);
            var dy = (0, _lib.localy)(sc, y) + this.adjustCheight(this.dragList[0]);
            this.flowCaret.moveBlock(dx, dy);
            this.snapToPlace(new Array(this.flowCaret));
            if (this.flowCaret.div.style.visibility == 'visible') {
                this.layout(this.flowCaret);
            }
        }
    }, {
        key: 'deleteBlocks',
        value: function deleteBlocks() {
            _ScratchJr2.default.storyStart('Scripts.prototype.deleteBlocks');
            _ScriptsPane2.default.cleanCarets();
            _ScratchAudio2.default.sndFX('cut.wav');
            if (this.dragList.length > 0) {
                _ScratchJr2.default.runtime.stopThreadBlock(this.dragList[0].findFirst());
            }
            for (var i = 0; i < this.dragList.length; i++) {
                var b = this.dragList[i];
                if (b.blocktype == undefined) {
                    continue;
                }
                b.div.parentNode.removeChild(b.div);
            }
        }
    }, {
        key: 'recreateStrip',
        value: function recreateStrip(list) {
            var res = [];
            var b = null;
            var loops = ['repeat'];
            for (var i = 0; i < list.length; i++) {
                if (!_BlockSpecs2.default.defs[list[i][0]]) {
                    continue;
                }
                switch (list[i][0]) {
                    case 'say':
                        list[i][1] = unescape(list[i][1]);
                        break;
                    case 'gotopage':
                        var n = _ScratchJr2.default.stage.pages.indexOf(this.spr.page);
                        if (list[i][1] - 1 == n) {
                            list[i][1] = (n + 1) % _ScratchJr2.default.stage.pages.length + 1;
                        }
                        break;
                    case 'playusersnd':
                        if (this.spr.sounds.length <= list[i][1]) {
                            list[i][0] = 'playsnd';
                            list[i][1] = this.spr.sounds[0];
                        }
                        break;
                    case 'playsnd':
                        var snd = this.spr.sounds.indexOf(list[i][1]);
                        if (snd < 0) {
                            list[i][0] = 'playsnd';
                            list[i][1] = this.spr.sounds[0];
                        }
                        break;
                }
                var cb = this.recreateBlock(list[i]);
                res.push(cb);
                if (loops.indexOf(cb.blocktype) > -1) {
                    var strip = this.recreateStrip(list[i][4]);
                    if (strip.length > 0) {
                        cb.inside = strip[0];
                        strip[0].prev = cb;
                    }
                    cb.redrawRepeat();
                }
                if (b) {
                    cb.prev = b;
                    b.next = cb;
                }
                b = cb;
            }
            if (res.length > 0) {
                this.layout(res[0]);
            }
            return res;
        }

        /////////////////////////////////
        // Load
        ////////////////////////////////

    }, {
        key: 'recreateBlock',
        value: function recreateBlock(data) {
            var op = data[0];
            var val = data[1] == 'null' ? null : data[1];
            var dx = data[2];
            var dy = data[3];
            var spec = _BlockSpecs2.default.defs[op].concat();
            if (val != null) {
                spec.splice(4, 1, val);
            }
            var bbx = new _Block2.default(spec, false, _lib.scaleMultiplier);
            (0, _lib.setProps)(bbx.div.style, {
                position: 'absolute',
                left: '0px',
                top: '0px'
            });
            bbx.moveBlock(dx * _lib.scaleMultiplier, dy * _lib.scaleMultiplier);
            this.sc.appendChild(bbx.div);
            bbx.update(this.spr);
            return bbx;
        }
    }]);

    return Scripts;
}();

exports.default = Scripts;

/***/ }),

/***/ "./src/editor/ui/ScriptsPane.js":
/*!**************************************!*\
  !*** ./src/editor/ui/ScriptsPane.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ScratchJr = __webpack_require__(/*! ../ScratchJr */ "./src/editor/ScratchJr.js");

var _ScratchJr2 = _interopRequireDefault(_ScratchJr);

var _Project = __webpack_require__(/*! ./Project */ "./src/editor/ui/Project.js");

var _Project2 = _interopRequireDefault(_Project);

var _Thumbs = __webpack_require__(/*! ./Thumbs */ "./src/editor/ui/Thumbs.js");

var _Thumbs2 = _interopRequireDefault(_Thumbs);

var _Palette = __webpack_require__(/*! ./Palette */ "./src/editor/ui/Palette.js");

var _Palette2 = _interopRequireDefault(_Palette);

var _Undo = __webpack_require__(/*! ./Undo */ "./src/editor/ui/Undo.js");

var _Undo2 = _interopRequireDefault(_Undo);

var _Events = __webpack_require__(/*! ../../utils/Events */ "./src/utils/Events.js");

var _Events2 = _interopRequireDefault(_Events);

var _Scroll = __webpack_require__(/*! ./Scroll */ "./src/editor/ui/Scroll.js");

var _Scroll2 = _interopRequireDefault(_Scroll);

var _Menu = __webpack_require__(/*! ../blocks/Menu */ "./src/editor/blocks/Menu.js");

var _Menu2 = _interopRequireDefault(_Menu);

var _ScratchAudio = __webpack_require__(/*! ../../utils/ScratchAudio */ "./src/utils/ScratchAudio.js");

var _ScratchAudio2 = _interopRequireDefault(_ScratchAudio);

var _lib = __webpack_require__(/*! ../../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var scroll = undefined;
var watermark = void 0;

var ScriptsPane = function () {
    function ScriptsPane() {
        _classCallCheck(this, ScriptsPane);
    }

    _createClass(ScriptsPane, null, [{
        key: 'createScripts',
        value: function createScripts(parent) {
            var div = (0, _lib.newHTML)('div', 'scripts', parent);
            div.setAttribute('id', 'scripts');
            watermark = (0, _lib.newHTML)('div', 'watermark', div);
            var h = Math.max((0, _lib.getDocumentHeight)(), _lib.frame.offsetHeight);
            (0, _lib.setCanvasSize)(div, div.offsetWidth, h - div.offsetTop);
            scroll = new _Scroll2.default(div, 'scriptscontainer', div.offsetWidth, h - div.offsetTop, _ScratchJr2.default.getActiveScript, _ScratchJr2.default.getBlocks);
        }
    }, {
        key: 'setActiveScript',
        value: function setActiveScript(sprname) {
            var currentsc = (0, _lib.gn)(sprname + '_scripts');
            if (!currentsc) {
                // Sprite not found
                return;
            }
            _ScratchJr2.default.stage.currentPage.setCurrentSprite((0, _lib.gn)(sprname).owner);
            currentsc.owner.activate();
            currentsc.parentNode.ontouchstart = function (evt) {
                currentsc.owner.scriptsMouseDown(evt);
            };
            currentsc.parentNode.onmousedown = function (evt) {
                currentsc.owner.scriptsMouseDown(evt);
            };
            scroll.update();
        }
    }, {
        key: 'runBlock',
        value: function runBlock(e, div) {
            e.preventDefault();
            e.stopPropagation();
            var b = div.owner.findFirst();
            //	if (b.aStart) b = b.next;
            if (!b) {
                return;
            }
            _ScratchJr2.default.runtime.addRunScript(_ScratchJr2.default.getSprite(), b);
            _ScratchJr2.default.startCurrentPageStrips(['ontouch']);
            _ScratchJr2.default.userStart = true;
        }
    }, {
        key: 'prepareToDrag',
        value: function prepareToDrag(e) {
            e.preventDefault();
            var pt = _Events2.default.getTargetPoint(e);
            ScriptsPane.pickBlock(pt.x, pt.y, e);
        }
    }, {
        key: 'pickBlock',
        value: function pickBlock(x, y, e) {
            if (!_ScratchJr2.default.runtime.inactive()) {
                _ScratchJr2.default.stopStrips();
            }
            ScriptsPane.cleanCarets();
            _ScratchJr2.default.unfocus(e);
            var sc = _ScratchJr2.default.getActiveScript().owner;
            sc.dragList = sc.findGroup(_Events2.default.dragthumbnail.owner);
            sc.flowCaret = null;
            var sy = _Events2.default.dragthumbnail.parentNode.scrollTop;
            var sx = _Events2.default.dragthumbnail.parentNode.scrollLeft;
            _Events2.default.dragmousex = x;
            _Events2.default.dragmousey = y;
            var lpt = {
                x: (0, _lib.localx)(_Events2.default.dragthumbnail.parentNode, x),
                y: (0, _lib.localy)(_Events2.default.dragthumbnail.parentNode, y)
            };
            var mx = _Events2.default.dragmousex - (0, _lib.globalx)(_Events2.default.dragDiv) - lpt.x + _Events2.default.dragthumbnail.left;
            var my = _Events2.default.dragmousey - (0, _lib.globaly)(_Events2.default.dragDiv) - lpt.y + _Events2.default.dragthumbnail.top;
            var mtx = new WebKitCSSMatrix(window.getComputedStyle(_Events2.default.dragthumbnail).webkitTransform);
            my -= sy;
            mx -= sx;
            _Events2.default.dragcanvas = _Events2.default.dragthumbnail;
            _Events2.default.dragcanvas.origin = 'scripts';
            _Events2.default.dragcanvas.startx = mtx.m41;
            _Events2.default.dragcanvas.starty = mtx.m42;
            if (!_Events2.default.dragcanvas.isReporter && _Events2.default.dragcanvas.parentNode) {
                _Events2.default.dragcanvas.parentNode.removeChild(_Events2.default.dragcanvas);
            }
            _Events2.default.move3D(_Events2.default.dragcanvas, mx, my);
            _Events2.default.dragcanvas.style.zIndex = _ScratchJr2.default.dragginLayer;
            _Events2.default.dragDiv.appendChild(_Events2.default.dragcanvas);
            var b = _Events2.default.dragcanvas.owner;
            b.detachBlock();
            //	b.lift();
            if (_Events2.default.dragcanvas.isReporter) {
                return;
            }
            _ScratchJr2.default.getActiveScript().owner.prepareCaret(b);
            for (var i = 1; i < sc.dragList.length; i++) {
                b = sc.dragList[i];
                var pos = new WebKitCSSMatrix(window.getComputedStyle(b.div).webkitTransform);
                var dx = pos.m41 - mtx.m41;
                var dy = pos.m42 - mtx.m42;
                b.moveBlock(dx, dy);
                //   b.lift();
                _Events2.default.dragcanvas.appendChild(b.div);
            }
        }

        ////////////////////////////////////////////////
        //  Events MouseMove
        ////////////////////////////////////////////////

    }, {
        key: 'draggingBlock',
        value: function draggingBlock(e) {
            e.preventDefault();
            var pt = _Events2.default.getTargetPoint(e);
            var dx = pt.x - _Events2.default.dragmousex;
            var dy = pt.y - _Events2.default.dragmousey;
            _Events2.default.move3D(_Events2.default.dragcanvas, dx, dy);
            ScriptsPane.blockFeedback(_Events2.default.dragcanvas.left, _Events2.default.dragcanvas.top, e);
        }
    }, {
        key: 'blockFeedback',
        value: function blockFeedback(dx, dy, e) {
            var script = _ScratchJr2.default.getActiveScript().owner;
            var limit = (0, _lib.gn)('palette').parentNode.offsetTop + (0, _lib.gn)('palette').parentNode.offsetHeight;
            var ycor = dy + _Events2.default.dragcanvas.offsetHeight;
            if (ycor < limit) {
                script.removeCaret();
            } else {
                script.removeCaret();
                script.insertCaret(dx, dy);
            }
            var thumb;
            switch (_Palette2.default.getLandingPlace(script.dragList[0].div, e)) {
                case 'library':
                    thumb = _Palette2.default.getHittedThumb(script.dragList[0].div, (0, _lib.gn)('spritecc'));
                    if (thumb && (0, _lib.gn)(thumb.owner).owner.type == _ScratchJr2.default.getSprite().type) {
                        _Thumbs2.default.quickHighlight(thumb);
                    } else {
                        thumb = undefined;
                    }
                    for (var i = 0; i < (0, _lib.gn)('spritecc').childElementCount; i++) {
                        var spr = (0, _lib.gn)('spritecc').childNodes[i];
                        if (spr.nodeName == 'FORM') {
                            continue;
                        }
                        if (thumb && thumb.id != spr.id) {
                            _Thumbs2.default.quickRestore(spr);
                        }
                    }
                    break;
                default:
                    ScriptsPane.removeLibCaret();
                    break;
            }
        }

        ////////////////////////////////////////////////
        //  Events MouseUP
        ////////////////////////////////////////////////

    }, {
        key: 'dropBlock',
        value: function dropBlock(e, el) {
            e.preventDefault();
            var sc = _ScratchJr2.default.getActiveScript();
            var spr = sc.owner.spr.id;
            var page = _ScratchJr2.default.stage.currentPage;
            switch (_Palette2.default.getLandingPlace(el, e)) {
                case 'scripts':
                    var dx = (0, _lib.localx)(sc, el.left);
                    var dy = (0, _lib.localy)(sc, el.top);
                    ScriptsPane.blockDropped(sc, dx, dy);
                    // Start the story if scripts is changed.
                    _ScratchJr2.default.storyStart('ScriptsPane.changed');
                    break;
                case 'library':
                    var thumb = _Palette2.default.getHittedThumb(el, (0, _lib.gn)('spritecc'));
                    ScriptsPane.blockDropped(_ScratchJr2.default.getActiveScript(), el.startx, el.starty);
                    if (thumb && (0, _lib.gn)(thumb.owner).owner.type == (0, _lib.gn)(page.currentSpriteName).owner.type) {
                        _ScratchJr2.default.storyStart('ScriptsPane.dropBlock:library');
                        _ScratchAudio2.default.sndFX('copy.wav');
                        _Thumbs2.default.quickHighlight(thumb);
                        setTimeout(function () {
                            _Thumbs2.default.quickRestore(thumb);
                        }, 300);
                        sc = (0, _lib.gn)(thumb.owner + '_scripts').owner;
                        var strip = _Project2.default.encodeStrip(el.owner);
                        var firstblock = strip[0];
                        var delta = sc.gettopblocks().length * 3;
                        firstblock[2] = firstblock[2] + delta;
                        firstblock[3] = firstblock[3] + delta;
                        sc.recreateStrip(strip);
                        spr = thumb.owner;
                    }
                    break;
                default:
                    _ScratchJr2.default.getActiveScript().owner.deleteBlocks();
                    scroll.adjustCanvas();
                    scroll.refresh();
                    scroll.fitToScreen();
                    break;
            }
            _Undo2.default.record({
                action: 'scripts',
                where: page.id,
                who: spr
            });
            _ScratchJr2.default.getActiveScript().owner.dragList = [];
        }
    }, {
        key: 'blockDropped',
        value: function blockDropped(sc, dx, dy) {
            _Events2.default.dragcanvas.style.zIndex = '';
            var script = _ScratchJr2.default.getActiveScript().owner;
            ScriptsPane.cleanCarets();
            script.addBlockToScripts(_Events2.default.dragcanvas, dx, dy);
            script.layout(_Events2.default.dragcanvas.owner);
            if (sc.id == _ScratchJr2.default.getActiveScript().id) {
                scroll.adjustCanvas();
                scroll.refresh();
                scroll.bounceBack();
            }
        }
    }, {
        key: 'cleanCarets',
        value: function cleanCarets() {
            _ScratchJr2.default.getActiveScript().owner.removeCaret();
            ScriptsPane.removeLibCaret();
        }
    }, {
        key: 'removeLibCaret',
        value: function removeLibCaret() {
            for (var i = 0; i < (0, _lib.gn)('spritecc').childElementCount; i++) {
                var spr = (0, _lib.gn)('spritecc').childNodes[i];
                if (spr.nodeName == 'FORM') {
                    continue;
                }
                _Thumbs2.default.quickRestore(spr);
            }
        }

        //----------------------------------
        //  Drag Script Background
        //----------------------------------

    }, {
        key: 'dragBackground',
        value: function dragBackground(e) {
            if (_Menu2.default.openMenu) {
                return;
            }
            if (_lib.isTablet && e.touches && e.touches.length > 1) {
                return;
            }
            e.preventDefault();
            e.stopPropagation();
            var sc = _ScratchJr2.default.getActiveScript();
            sc.top = sc.offsetTop;
            sc.left = sc.offsetLeft;
            var pt = _Events2.default.getTargetPoint(e);
            _Events2.default.dragmousex = pt.x;
            _Events2.default.dragmousey = pt.y;
            _Events2.default.dragged = false;
            ScriptsPane.setDragBackgroundEvents(ScriptsPane.dragMove, ScriptsPane.dragEnd);
        }
    }, {
        key: 'setDragBackgroundEvents',
        value: function setDragBackgroundEvents(fcnmove, fcnup) {
            if (_lib.isTablet) {
                // setDragBackgroundEvents
                window.ontouchmove = function (evt) {
                    fcnmove(evt);
                };
                window.ontouchend = function (evt) {
                    fcnup(evt);
                };
            } else {
                window.onmousemove = function (evt) {
                    fcnmove(evt);
                };
                window.onmouseup = function (evt) {
                    fcnup(evt);
                };
            }
        }
    }, {
        key: 'dragMove',
        value: function dragMove(e) {
            var pt = _Events2.default.getTargetPoint(e);
            if (!_Events2.default.dragged && _Events2.default.distance(_Events2.default.dragmousex - pt.x, _Events2.default.dragmousey - pt.y) < 5) {
                return;
            }
            _Events2.default.dragged = true;
            var dx = pt.x - _Events2.default.dragmousex;
            var dy = pt.y - _Events2.default.dragmousey;
            _Events2.default.dragmousex = pt.x;
            _Events2.default.dragmousey = pt.y;
            _Events2.default.move3D(_ScratchJr2.default.getActiveScript(), dx, dy);
            scroll.refresh();
            e.preventDefault();
        }
    }, {
        key: 'dragEnd',
        value: function dragEnd(e) {
            _Events2.default.dragged = false;
            e.preventDefault();
            _Events2.default.clearEvents();
            scroll.bounceBack();
        }

        //////////////////////
        //
        //////////////////////

    }, {
        key: 'updateScriptsPageBlocks',
        value: function updateScriptsPageBlocks(list) {
            for (var j = 0; j < list.length; j++) {
                if (!(0, _lib.gn)(list[j] + '_scripts')) {
                    continue;
                }
                var sc = (0, _lib.gn)(list[j] + '_scripts').owner;
                if (!sc) {
                    continue;
                }
                var allblocks = sc.getBlocks();
                for (var i = 0; i < allblocks.length; i++) {
                    allblocks[i].updateBlock();
                }
            }
        }
    }, {
        key: 'scroll',
        get: function get() {
            return scroll;
        }
    }, {
        key: 'watermark',
        get: function get() {
            return watermark;
        }
    }]);

    return ScriptsPane;
}();

exports.default = ScriptsPane;

/***/ }),

/***/ "./src/editor/ui/Scroll.js":
/*!*********************************!*\
  !*** ./src/editor/ui/Scroll.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); ////////////////////////////////////////////////
// Scrolling Pane
////////////////////////////////////////////////

var _Events = __webpack_require__(/*! ../../utils/Events */ "./src/utils/Events.js");

var _Events2 = _interopRequireDefault(_Events);

var _lib = __webpack_require__(/*! ../../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Scroll = function () {
    function Scroll(div, id, w, h, cfcn, ofcn) {
        _classCallCheck(this, Scroll);

        this.hasHorizontal = true;
        this.hasVertical = true;
        this.arrowDistance = 6;
        this.aleft = undefined;
        this.aright = undefined;
        this.aup = undefined;
        this.adown = undefined;
        this.contents = (0, _lib.newDiv)(div, 0, 0, w, h, {});
        this.contents.setAttribute('id', id);
        this.contents.owner = this;
        this.addArrows(div, w, h);
        this.getContent = cfcn;
        this.getObjects = ofcn;
        div.scroll = this; // for now;
    }

    _createClass(Scroll, [{
        key: 'update',
        value: function update() {
            this.adjustCanvas();
            this.refresh();
            this.bounceBack();
        }

        /////////////////////////////////////////////////////////////
        // Arrows
        ////////////////////////////////////////////////////////////

    }, {
        key: 'addArrows',
        value: function addArrows(sc, w, h) {
            this.aleft = (0, _lib.newHTML)('div', 'leftarrow', sc);
            this.aleft.style.height = h + 'px';
            var larrow = (0, _lib.newHTML)('span', undefined, this.aleft);
            larrow.style.top = Math.floor((h - larrow.offsetHeight) / 2) + 'px';

            this.aright = (0, _lib.newHTML)('div', 'rightarrow', sc);
            this.aright.style.height = h + 'px';
            var rarrow = (0, _lib.newHTML)('span', undefined, this.aright);
            rarrow.style.top = Math.floor((h - rarrow.offsetHeight) / 2) + 'px';

            this.aup = (0, _lib.newHTML)('div', 'toparrow', sc);
            this.adown = (0, _lib.newHTML)('div', 'bottomarrow', sc);
            (0, _lib.newHTML)('div', 'halign up', this.aup);
            (0, _lib.newHTML)('div', 'halign down', this.adown);

            var me = this;
            if (_lib.isTablet) {
                this.aup.ontouchstart = function (e) {
                    me.scrolldown(e);
                };
            } else {
                this.aup.onmousedown = function (e) {
                    me.scrolldown(e);
                };
            }

            if (_lib.isTablet) {
                this.adown.ontouchstart = function (e) {
                    me.scrollup(e);
                };
            } else {
                this.adown.onmousedown = function (e) {
                    me.scrollup(e);
                };
            }

            if (_lib.isTablet) {
                this.aleft.ontouchstart = function (e) {
                    me.scrollright(e);
                };
            } else {
                this.aleft.onmousedown = function (e) {
                    me.scrollright(e);
                };
            }

            if (_lib.isTablet) {
                this.aright.ontouchstart = function (e) {
                    me.scrollleft(e);
                };
            } else {
                this.aright.onmousedown = function (e) {
                    me.scrollleft(e);
                };
            }
        }

        /////////////////////////////////////////////////////////////
        // Scrolling
        ////////////////////////////////////////////////////////////

    }, {
        key: 'repositionArrows',
        value: function repositionArrows(h) {
            this.aleft.style.height = h + 'px';
            this.aleft.childNodes[0].style.top = Math.floor((h - this.aleft.childNodes[0].offsetHeight) / 2) + 'px';
            this.aright.style.height = h + 'px';
            this.aright.childNodes[0].style.top = Math.floor((h - this.aright.childNodes[0].offsetHeight) / 2) + 'px';
        }
    }, {
        key: 'getAdjustment',
        value: function getAdjustment(rect) {
            // rect of the dragg block canvas
            var d = this.contents.parentNode; // scripts
            var w = d.offsetWidth;
            var h = d.offsetHeight;
            if (rect.x > 0 && rect.y > 0) {
                return 'topleft';
            }
            if (rect.x + rect.width < w && rect.y + rect.height < h) {
                return 'bottomright';
            }
            if (rect.x > 0 && rect.y + rect.height < h) {
                return 'bottomleft';
            }
            if (rect.x + rect.width < w && rect.y > 0) {
                return 'topright';
            }
            if (rect.x + rect.width < w) {
                return 'right';
            }
            if (rect.y + rect.height < h) {
                return 'down';
            }
            if (rect.y > 0) {
                return 'up';
            }
            if (rect.x > 0) {
                return 'left';
            }
            return 'none';
        }
    }, {
        key: 'bounceBack',
        value: function bounceBack() {
            var owner = this;
            var p = this.contents; // scriptscontainer
            var bc = this.getContent(); // blockcanvas
            var valx = bc.left;
            var valy = bc.top;
            var h = p.offsetHeight;
            var w = p.offsetWidth;
            var rect = {
                x: valx,
                y: valy,
                width: bc.offsetWidth,
                height: bc.offsetHeight
            };
            var transition = {
                duration: 0.5,
                transition: 'ease-out',
                style: {},
                onComplete: function onComplete() {
                    owner.refresh();
                }
            };
            switch (this.getAdjustment(rect)) {
                case 'topright':
                    transition.style.left = (this.hasHorizontal ? w - rect.width : 0) + 'px';
                    transition.style.top = '0px';
                    (0, _lib.CSSTransition3D)(bc, transition);
                    break;
                case 'bottomright':
                    transition.style.left = (this.hasHorizontal ? w - rect.width : 0) + 'px';
                    transition.style.top = (this.hasVertical ? h - rect.height : 0) + 'px';
                    (0, _lib.CSSTransition3D)(bc, transition);
                    break;
                case 'topleft':
                    transition.style.top = '0px';
                    transition.style.left = '0px';
                    (0, _lib.CSSTransition3D)(bc, transition);
                    break;
                case 'bottomleft':
                    transition.style.top = (this.hasVertical ? h - rect.height : 0) + 'px';
                    transition.style.left = '0px';
                    (0, _lib.CSSTransition3D)(bc, transition);
                    break;
                case 'right':
                    transition.style.top = valy + 'px';
                    transition.style.left = (this.hasHorizontal ? w - rect.width : 0) + 'px';
                    (0, _lib.CSSTransition3D)(bc, transition);
                    break;
                case 'left':
                    if (this.hasHorizontal) {
                        transition.style.top = valy + 'px';
                        transition.style.left = '0px';
                        (0, _lib.CSSTransition3D)(bc, transition);
                    }
                    break;
                case 'down':
                    transition.style.top = h - rect.height + 'px';
                    transition.style.left = valx + 'px';
                    (0, _lib.CSSTransition3D)(bc, transition);
                    break;
                case 'up':
                    if (this.hasVertical) {
                        transition.style.top = '0px';
                        transition.style.left = valx + 'px';
                        (0, _lib.CSSTransition3D)(bc, transition);
                    }
                    break;
            }
        }

        /////////////////////////////////////////////////////////////
        // Refreshing
        ////////////////////////////////////////////////////////////

    }, {
        key: 'refresh',
        value: function refresh() {
            var p = this.contents; // scriptscontainer
            var bc = this.getContent(); // blockcanvas
            var w = p.offsetWidth;
            var h = p.offsetHeight;
            var you;
            var needleft = 'hidden';
            var needright = 'hidden';
            var needup = 'hidden';
            var needdown = 'hidden';
            var allblocks = this.getObjects();
            for (var i = 0; i < allblocks.length; i++) {
                you = allblocks[i].div;
                if (you == null) {
                    continue;
                }
                if (!you.owner) {
                    continue;
                }
                if (you.style.visibility == 'hidden') {
                    continue;
                }
                if (you.left + bc.left < 0) {
                    needleft = 'visible';
                }
                if (you.left + you.offsetWidth + bc.left > w) {
                    needright = 'visible';
                }
                if (you.top + bc.top + 10 < 0) {
                    needup = 'visible';
                }
                if (you.top + you.offsetHeight + bc.top > h) {
                    needdown = 'visible';
                }
            }
            this.aleft.style.visibility = needleft;
            this.aright.style.visibility = needright;
            this.aup.style.visibility = needup;
            this.adown.style.visibility = needdown;
        }
    }, {
        key: 'adjustCanvas',
        value: function adjustCanvas() {
            var bc = this.getContent(); // blockcanvas
            var p = this.contents; // scriptscontainer
            var w = p.offsetWidth;
            var h = p.offsetHeight;
            var ow = bc.offsetWidth;
            var oh = bc.offsetHeight;
            var you;
            var minx = 99999;
            var maxwidth = 0;
            var miny = 99999;
            var maxheight = 0;
            var padding = 0;
            var allblocks = this.getObjects();
            for (var i = 0; i < allblocks.length; i++) {
                you = allblocks[i].div;
                if (you == null) {
                    continue;
                }
                if (!you.owner) {
                    continue;
                }
                if (you.style.visibility == 'hidden') {
                    continue;
                }
                if (you.left < minx) {
                    minx = you.left;
                }
                if (you.left + you.offsetWidth + padding > maxwidth) {
                    maxwidth = you.left + you.offsetWidth + padding;
                }
                if (you.top < miny) {
                    miny = you.top;
                }
                if (you.top + you.offsetHeight + 20 > maxheight) {
                    maxheight = you.top + you.offsetHeight + 20;
                }
            }
            if (minx < 0) {
                minx -= padding;
                minx += bc.left;
                w -= minx;
            } else {
                minx = 0;
            }
            if (miny < 0) {
                miny -= 20;
                miny += bc.top;
                h -= miny;
            } else {
                miny = 0;
            }
            if (maxwidth - minx > w) {
                w = Math.round(maxwidth - minx);
            }
            if (maxheight - miny > h) {
                h = Math.round(maxheight - miny);
            }
            if (ow != w || oh != h) {
                (0, _lib.setCanvasSize)(bc, w, h);
            }
            if (minx < 0 || miny < 0) {
                this.moveBlocks(-minx, -miny);
                _Events2.default.move3D(bc, minx, miny);
            }
        }
    }, {
        key: 'moveBlocks',
        value: function moveBlocks(dx, dy) {
            var allblocks = this.getObjects();
            for (var i = 0; i < allblocks.length; i++) {
                var b = allblocks[i];
                b.moveBlock(b.div.left + dx, b.div.top + dy);
            }
        }

        /////////////////////////////////////////////////////////////
        // Scrolling
        ////////////////////////////////////////////////////////////

    }, {
        key: 'scrolldown',
        value: function scrolldown(e) {
            if (_lib.isTablet && e.touches && e.touches.length > 1) {
                return;
            }
            e.preventDefault();
            e.stopPropagation();
            var owner = this;
            var p = this.contents;
            var sc = this.getContent();
            var h = p.offsetHeight;
            var valy = sc.top + h;
            if (valy > 0) {
                valy = 0;
            }
            valy = Math.round(valy);
            var transition = {
                duration: 0.5,
                transition: 'ease-out',
                style: {
                    top: valy + 'px'
                },
                onComplete: function onComplete() {
                    owner.refresh();
                }
            };
            (0, _lib.CSSTransition3D)(sc, transition);
        }
    }, {
        key: 'scrollup',
        value: function scrollup(e) {
            if (_lib.isTablet && e.touches && e.touches.length > 1) {
                return;
            }
            e.preventDefault();
            e.stopPropagation();
            var owner = this;
            var p = this.contents;
            var sc = this.getContent();
            var h = p.offsetHeight;
            var valy = sc.top - h;
            if (valy + sc.offsetHeight < h) {
                valy = h - sc.offsetHeight;
            }
            valy = Math.round(valy);
            var transition = {
                duration: 0.5,
                transition: 'ease-out',
                style: {
                    top: valy + 'px'
                },
                onComplete: function onComplete() {
                    owner.refresh();
                }
            };
            (0, _lib.CSSTransition3D)(sc, transition);
        }
    }, {
        key: 'scrollright',
        value: function scrollright(e) {
            if (_lib.isTablet && e.touches && e.touches.length > 1) {
                return;
            }
            e.preventDefault();
            e.stopPropagation();
            var owner = this;
            var p = this.contents;
            var sc = this.getContent();
            var w = p.offsetWidth;
            var valx = sc.left + w;
            if (valx > 0) {
                valx = 0;
            }
            valx = Math.round(valx);
            var transition = {
                duration: 0.5,
                transition: 'ease-out',
                style: {
                    left: valx + 'px'
                },
                onComplete: function onComplete() {
                    owner.refresh();
                }
            };
            (0, _lib.CSSTransition3D)(sc, transition);
        }
    }, {
        key: 'scrollleft',
        value: function scrollleft(e) {
            if (_lib.isTablet && e.touches && e.touches.length > 1) {
                return;
            }
            e.preventDefault();
            e.stopPropagation();
            var owner = this;
            var p = this.contents;
            var sc = this.getContent();
            var w = p.offsetWidth;
            var valx = sc.left - w;
            if (valx + sc.offsetWidth < w) {
                valx = w - sc.offsetWidth;
            }
            valx = Math.round(valx);
            var transition = {
                duration: 0.5,
                transition: 'ease-out',
                style: {
                    left: valx + 'px'
                },
                onComplete: function onComplete() {
                    owner.refresh();
                }
            };
            (0, _lib.CSSTransition3D)(sc, transition);
        }
    }, {
        key: 'fitToScreen',
        value: function fitToScreen() {
            var p = this.contents;
            var sc = this.getContent();
            var valx = sc.left;
            var valy = sc.top;
            var h = p.offsetHeight;
            var w = p.offsetWidth;
            var rect = {
                x: valx,
                y: valy,
                width: sc.offsetWidth,
                height: sc.offsetHeight
            };
            switch (this.getAdjustment(rect)) {
                case 'topright':
                    valx = w - rect.width;
                    valy = 0;
                    break;
                case 'bottomright':
                    valx = w - rect.width;
                    valy = h - rect.height;
                    break;
                case 'topleft':
                    valx = 0;valy = 0;
                    break;
                case 'bottomleft':
                    valy = h - rect.height;
                    valx = 0;
                    break;
                case 'right':
                    valx = w - rect.width;
                    break;
                case 'left':
                    valx = 0;
                    break;
                case 'down':
                    valy = h - rect.height;
                    break;
                case 'up':
                    valy = 0;
                    break;
            }
            _Events2.default.move3D(sc, valx, valy);
        }
    }]);

    return Scroll;
}();

exports.default = Scroll;

/***/ }),

/***/ "./src/editor/ui/Thumbs.js":
/*!*********************************!*\
  !*** ./src/editor/ui/Thumbs.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); //////////////////////////////////////
//   Pages
/////////////////////////////////////

var _ScratchJr = __webpack_require__(/*! ../ScratchJr */ "./src/editor/ScratchJr.js");

var _ScratchJr2 = _interopRequireDefault(_ScratchJr);

var _Palette = __webpack_require__(/*! ./Palette */ "./src/editor/ui/Palette.js");

var _Palette2 = _interopRequireDefault(_Palette);

var _Page = __webpack_require__(/*! ../engine/Page */ "./src/editor/engine/Page.js");

var _Page2 = _interopRequireDefault(_Page);

var _ScriptsPane = __webpack_require__(/*! ./ScriptsPane */ "./src/editor/ui/ScriptsPane.js");

var _ScriptsPane2 = _interopRequireDefault(_ScriptsPane);

var _Undo = __webpack_require__(/*! ./Undo */ "./src/editor/ui/Undo.js");

var _Undo2 = _interopRequireDefault(_Undo);

var _UI = __webpack_require__(/*! ./UI */ "./src/editor/ui/UI.js");

var _UI2 = _interopRequireDefault(_UI);

var _OS = __webpack_require__(/*! ../../tablet/OS */ "./src/tablet/OS.js");

var _OS2 = _interopRequireDefault(_OS);

var _Events = __webpack_require__(/*! ../../utils/Events */ "./src/utils/Events.js");

var _Events2 = _interopRequireDefault(_Events);

var _ScratchAudio = __webpack_require__(/*! ../../utils/ScratchAudio */ "./src/utils/ScratchAudio.js");

var _ScratchAudio2 = _interopRequireDefault(_ScratchAudio);

var _lib = __webpack_require__(/*! ../../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var caret = undefined;

var Thumbs = function () {
    function Thumbs() {
        _classCallCheck(this, Thumbs);
    }

    _createClass(Thumbs, null, [{
        key: 'updatePages',
        value: function updatePages() {
            var pthumbs = (0, _lib.gn)('pagecc');
            while (pthumbs.childElementCount > 0) {
                pthumbs.removeChild(pthumbs.childNodes[0]);
            }
            var prev = undefined;
            for (var i = 0; i < _ScratchJr2.default.stage.pages.length; i++) {
                var page = _ScratchJr2.default.stage.pages[i];
                page.num = i + 1;
                var th = page.pageThumbnail(pthumbs);
                th.prev = prev;
                if (prev) {
                    prev.next = th;
                }
                if (page.id == _ScratchJr2.default.stage.currentPage.id) {
                    Thumbs.highlighPage(th);
                } else {
                    Thumbs.unhighlighPage(th);
                }
                _ScriptsPane2.default.updateScriptsPageBlocks(JSON.parse(page.sprites));
                prev = th;
            }
            if (_ScratchJr2.default.stage.pages.length > 3 || !_ScratchJr2.default.isEditable()) {
                return;
            }
            var ep = Thumbs.emptyPage(pthumbs);
            ep.prev = prev;
            th.next = ep;
        }
    }, {
        key: 'getObjectFor',
        value: function getObjectFor(div, id) {
            for (var i = 0; i < div.childElementCount; i++) {
                if (div.childNodes[i].owner == id) {
                    return div.childNodes[i];
                }
            }
            return div.childNodes[0];
        }
    }, {
        key: 'getType',
        value: function getType(div, str) {
            while (div != null) {
                if (div.type == str) {
                    return div;
                }
                div = div.parentNode;
            }
            return null;
        }
    }, {
        key: 'pageMouseDown',
        value: function pageMouseDown(e) {
            if (e.touches && e.touches.length > 1) {
                return;
            }
            if (_ScratchJr2.default.onHold) {
                return;
            }
            e.preventDefault();
            e.stopPropagation();
            if (window.event) {
                Thumbs.t = window.event.srcElement;
            } else {
                Thumbs.t = e.target;
            }
            var tb = Thumbs.getType(Thumbs.t, 'pagethumb');
            if (_ScratchJr2.default.shaking && e.target.className == 'deletethumb') {
                _ScratchJr2.default.clearSelection();
                _OS2.default.analyticsEvent('editor', 'delete_scene');
                _ScratchJr2.default.stage.deletePage(tb.owner);
                return;
            }
            if (_ScratchJr2.default.shaking) {
                _ScratchJr2.default.clearSelection();
                return;
            }
            if (!tb) {
                return;
            }
            if (!_ScratchJr2.default.isEditable() || (0, _lib.gn)('pagecc').childElementCount < 3) {
                Thumbs.clickOnPage(e, tb.owner);
            } else {
                _Events2.default.startDrag(e, tb, Thumbs.prepareToDragPage, Thumbs.dropPage, Thumbs.draggingPage, Thumbs.clickPage, Thumbs.startPageShaking);
            }
        }
    }, {
        key: 'prepareToDragPage',
        value: function prepareToDragPage(e) {
            e.preventDefault();
            e.stopPropagation();
            _ScratchAudio2.default.sndFX('grab.wav');
            var pt = _Events2.default.getTargetPoint(e);
            _Events2.default.dragmousex = pt.x;
            _Events2.default.dragmousey = pt.y;
            var mx = _Events2.default.dragmousex - _lib.frame.offsetLeft - (0, _lib.localx)(_Events2.default.dragthumbnail, _Events2.default.dragmousex);
            var my = _Events2.default.dragmousey - _lib.frame.offsetTop - (0, _lib.localy)(_Events2.default.dragthumbnail, _Events2.default.dragmousey);
            var mstyle = {
                position: 'absolute',
                left: '0px',
                top: '0px',
                zIndex: _ScratchJr2.default.dragginLayer
            };
            _Events2.default.dragcanvas = _Events2.default.dragthumbnail;
            (0, _lib.setProps)(_Events2.default.dragcanvas.style, mstyle);
            _Events2.default.move3D(_Events2.default.dragcanvas, mx, my);
            _lib.frame.appendChild(_Events2.default.dragcanvas);
            caret = (0, _lib.newHTML)('div', 'pagethumb caret', (0, _lib.gn)('pagecc'));
            caret.prev = _Events2.default.dragthumbnail.prev;
            caret.next = _Events2.default.dragthumbnail.next;
            if (_Events2.default.dragthumbnail.prev) {
                _Events2.default.dragthumbnail.prev.next = caret;
            }
            if (_Events2.default.dragthumbnail.next) {
                _Events2.default.dragthumbnail.next.prev = caret;
            }
            Thumbs.layoutPages();
            _Events2.default.dragthumbnail.pos = Thumbs.getPagePos(_Events2.default.dragcanvas.top);
        }
    }, {
        key: 'layoutPages',
        value: function layoutPages() {
            var thispage = Thumbs.findFirst();
            var p = (0, _lib.gn)('pagecc');
            while (thispage) {
                p.appendChild(thispage);
                thispage = thispage.next;
            }
        }
    }, {
        key: 'findFirst',
        value: function findFirst() {
            var kid = (0, _lib.gn)('pagecc').childNodes[0];
            while (kid.prev) {
                kid = kid.prev;
            }
            return kid;
        }
    }, {
        key: 'findLast',
        value: function findLast() {
            var kid = (0, _lib.gn)('pagecc').childNodes[0];
            while (kid.next) {
                kid = kid.next;
            }
            return kid;
        }
    }, {
        key: 'getPageOrder',
        value: function getPageOrder() {
            var page = Thumbs.findFirst();
            var res = [];
            while (page) {
                var pagename = page.owner;
                if (pagename) {
                    res.push((0, _lib.gn)(pagename).owner);
                }
                page = page.next;
            }
            return res;
        }
    }, {
        key: 'draggingPage',
        value: function draggingPage(e, el) {
            e.preventDefault();
            var pt = _Events2.default.getTargetPoint(e);
            var dx = pt.x - _Events2.default.dragmousex;
            var dy = pt.y - _Events2.default.dragmousey;
            _Events2.default.move3D(el, dx, dy);
            if (!caret) {
                return;
            }
            Thumbs.removeCaret();
            Thumbs.insertCaret(el);
            Thumbs.layoutPages();
        }
    }, {
        key: 'removeCaret',
        value: function removeCaret() {
            var myprev = caret.prev;
            var mynext = caret.next;
            if (myprev) {
                myprev.next = mynext;
            }
            if (mynext) {
                mynext.prev = myprev;
            }
            caret.prev = undefined;
            caret.next = undefined;
            var p = caret.parentNode;
            if (p) {
                p.removeChild(caret);
            }
        }
    }, {
        key: 'insertCaret',
        value: function insertCaret(el) {
            var pos = Thumbs.getPagePos(el.top);
            Thumbs.positionMe(pos, caret);
            (0, _lib.gn)('pagecc').appendChild(caret);
        }
    }, {
        key: 'getPagePos',
        value: function getPagePos(dy) {
            var delta = (0, _lib.gn)('pagecc').childNodes[1].offsetTop - (0, _lib.gn)('pagecc').childNodes[0].offsetTop;
            var pos = Math.floor((0, _lib.localy)((0, _lib.gn)('pagecc'), dy + delta / 2) / delta);
            pos = Math.max(0, pos);
            var max = Thumbs.getPageOrder().length;
            return Math.min(max, pos);
        }
    }, {
        key: 'positionMe',
        value: function positionMe(pos, elem) {
            var beforewho = pos >= (0, _lib.gn)('pagecc').childElementCount ? undefined : (0, _lib.gn)('pagecc').childNodes[pos];
            if (!beforewho) {
                var last = Thumbs.findLast();
                last.next = elem;
                elem.prev = last;
                elem.next = undefined;
            } else {
                var prev = beforewho.prev;
                beforewho.prev = elem;
                elem.next = beforewho;
                if (prev) {
                    prev.next = elem;
                    elem.prev = prev;
                }
            }
        }
    }, {
        key: 'repositionThumb',
        value: function repositionThumb(thumb, dy) {
            var pos = Thumbs.getPagePos(dy);
            if (pos != thumb.pos) {
                _ScratchAudio2.default.sndFX('snap.wav');
            }
            var myprev = thumb.prev;
            var mynext = thumb.next;
            if (myprev) {
                myprev.next = mynext;
            }
            if (mynext) {
                mynext.prev = myprev;
            }
            Thumbs.positionMe(pos, thumb);
        }
    }, {
        key: 'dropPage',
        value: function dropPage(e) {
            _ScratchJr2.default.storyStart('Thumbs.dropPage');
            e.preventDefault();
            if (!caret) {
                return;
            }
            _Events2.default.dragthumbnail.prev = caret.prev;
            _Events2.default.dragthumbnail.next = caret.next;
            if (_Events2.default.dragthumbnail.prev) {
                _Events2.default.dragthumbnail.prev.next = _Events2.default.dragthumbnail;
            }
            if (_Events2.default.dragthumbnail.next) {
                _Events2.default.dragthumbnail.next.prev = _Events2.default.dragthumbnail;
            }
            if (caret.parentNode) {
                caret.parentNode.removeChild(caret);
            }
            caret = undefined;
            _Events2.default.dragthumbnail.style.position = '';
            _Events2.default.dragthumbnail.style.left = '';
            _Events2.default.dragthumbnail.style.top = '';
            _Events2.default.dragthumbnail.style.webkitTransform = '';
            var oldpos = Number(_Events2.default.dragthumbnail.childNodes[1].childNodes[0].textContent) - 1;
            var oldpage = _Events2.default.dragthumbnail.owner;
            Thumbs.repositionThumb(_Events2.default.dragthumbnail, _Events2.default.dragthumbnail.top);
            var oldlist = _ScratchJr2.default.stage.getPagesID();
            _ScratchJr2.default.stage.pages = Thumbs.getPageOrder();
            Thumbs.layoutPages();
            Thumbs.updatePages();
            _ScratchJr2.default.stage.renumberPageBlocks(oldlist);
            if (_Palette2.default.numcat == 5) {
                _Palette2.default.selectCategory(5);
            }
            if (Thumbs.getPageOrder()[oldpos].id != oldpage) {
                _Undo2.default.record({
                    action: 'pageorder',
                    who: oldpage,
                    where: oldpage
                });
            }
        }
    }, {
        key: 'clickPage',
        value: function clickPage(e) {
            _ScratchJr2.default.clearSelection();
            Thumbs.clickOnPage(e, _Events2.default.dragthumbnail.owner);
            _Events2.default.clearEvents();
            _Events2.default.dragthumbnail = undefined;
        }
    }, {
        key: 'clickOnPage',
        value: function clickOnPage(e, pagename) {
            _ScratchJr2.default.unfocus(e);
            var pthumbs = (0, _lib.gn)('pagecc');
            for (var i = 0; i < pthumbs.childElementCount; i++) {
                var thumb = pthumbs.childNodes[i];
                if (thumb.id == 'emptypage') {
                    continue;
                }
            }
            if (_ScratchJr2.default.stage.currentPage.id == pagename) {
                return;
            }
            var page = (0, _lib.gn)(pagename).owner;
            _ScratchJr2.default.stage.setPage(page, false);
            _Undo2.default.record({
                action: 'changepage',
                who: pagename,
                where: pagename
            });
        }
    }, {
        key: 'startPageShaking',
        value: function startPageShaking(tb) {
            _ScratchJr2.default.shaking = tb;
            _ScratchJr2.default.stopShaking = Thumbs.stopPageShaking;
            var cc = tb.getAttribute('class');
            tb.setAttribute('class', cc + ' shakeme');
            tb.childNodes[tb.childElementCount - 1].style.visibility = 'visible';
        }
    }, {
        key: 'stopPageShaking',
        value: function stopPageShaking(b) {
            _ScratchJr2.default.shaking = undefined;
            _ScratchJr2.default.stopShaking = undefined;
            var cc = b.getAttribute('class');
            cc = cc.substr(0, cc.length - 8);
            b.setAttribute('class', cc);
            b.childNodes[b.childElementCount - 1].style.visibility = 'hidden';
        }
    }, {
        key: 'emptyPage',
        value: function emptyPage(p) {
            var tb = (0, _lib.newHTML)('div', 'pagethumb', p);
            var c = (0, _lib.newHTML)('div', 'empty', tb);
            var img;
            if (window.Settings.edition == 'PBS') {
                img = (0, _lib.newImage)(c, 'assets/ui/newpage.svg');
            } else {
                img = (0, _lib.newImage)(c, 'assets/ui/newpage.png', {
                    position: 'absolute'
                });
            }
            img.setAttribute('class', 'unselectable');
            tb.setAttribute('id', 'emptypage');
            tb.onclick = function (evt) {
                Thumbs.clickOnEmptyPage(evt);
            };
            return tb;
        }
    }, {
        key: 'clickOnEmptyPage',
        value: function clickOnEmptyPage(e) {
            if (_lib.isTablet && e.touches && e.touches.length > 1) {
                return;
            }
            _ScratchAudio2.default.sndFX('tap.wav');
            e.preventDefault();
            _ScratchJr2.default.stage.currentPage.div.style.visibility = 'hidden';
            _ScratchJr2.default.stage.currentPage.setPageSprites('hidden');
            var sc = (0, _lib.gn)(_ScratchJr2.default.stage.currentPage.currentSpriteName + '_scripts');
            if (sc) {
                sc.owner.deactivate();
            }
            _ScratchJr2.default.unfocus(e);
            _OS2.default.analyticsEvent('editor', 'add_scene');
            new _Page2.default((0, _lib.getIdFor)('page'));
        }
    }, {
        key: 'highlighPage',
        value: function highlighPage(page) {
            page.setAttribute('class', 'pagethumb on');
        }
    }, {
        key: 'unhighlighPage',
        value: function unhighlighPage(page) {
            page.setAttribute('class', 'pagethumb off');
        }
    }, {
        key: 'overpage',
        value: function overpage(page) {
            page.setAttribute('class', 'pagethumb drop');
        }

        //////////////////////////////////////
        //   Library
        /////////////////////////////////////

    }, {
        key: 'updateSprites',
        value: function updateSprites() {
            var costumes = (0, _lib.gn)('spritecc');
            costumes.style.top = '0px';
            while (costumes.childElementCount > 0) {
                costumes.removeChild(costumes.childNodes[0]);
            }
            var sprites = JSON.parse(_ScratchJr2.default.stage.currentPage.sprites);
            for (var i = 0; i < sprites.length; i++) {
                var s = (0, _lib.gn)(sprites[i]);
                if (!s) {
                    continue;
                }
                var spr = s.owner;
                if (spr.type != 'sprite') {
                    continue;
                }
                var th = spr.spriteThumbnail(costumes);
                if (spr.id == _ScratchJr2.default.stage.currentPage.currentSpriteName) {
                    Thumbs.highlighSprite(th);
                } else {
                    Thumbs.unhighlighSprite(th);
                }
            }
            if (!_ScratchJr2.default.getSprite()) {
                _ScratchJr2.default.stage.currentPage.setCurrentSprite(undefined);
            }
            _UI2.default.resetSpriteLibrary();
        }
    }, {
        key: 'updateSprite',
        value: function updateSprite(spr) {
            if (!spr) {
                return;
            }
            if (spr.thumbnail) {
                spr.updateSpriteThumb();
            } else {
                var costumes = (0, _lib.gn)('spritecc');
                if (spr.type != 'sprite') {
                    return;
                }
                spr.spriteThumbnail(costumes);
                Thumbs.selectThisSprite(spr);
                _UI2.default.resetSpriteLibrary();
            }
        }

        /////////////////////////////////////////////
        //  Sprite Thumbnails
        ////////////////////////////////////////////

    }, {
        key: 'startDragThumb',
        value: function startDragThumb(e, tb) {
            if (_ScratchJr2.default.shaking && e.target.id == 'deletespritethumb') {
                _ScratchJr2.default.clearSelection();
                _ScratchJr2.default.stage.removeSprite((0, _lib.gn)(tb.owner).owner);
            }
            if (_ScratchJr2.default.shaking) {
                _ScratchJr2.default.clearSelection();
            }
            if (!_ScratchJr2.default.isEditable()) {
                Thumbs.clickOnSprite(e, tb);
            } else {
                _Events2.default.startDrag(e, tb, Thumbs.prepareToDrag, Thumbs.drop, Thumbs.dragging, Thumbs.click, Thumbs.startCharShaking);
            }
        }
    }, {
        key: 'startCharShaking',
        value: function startCharShaking(tb) {
            if (!tb) {
                return;
            }
            _ScratchJr2.default.shaking = tb;
            _ScratchJr2.default.stopShaking = Thumbs.stopCharShaking;
            var cc = tb.getAttribute('class');
            tb.setAttribute('class', cc + ' shakethumb');
            var close = (0, _lib.newHTML)('div', 'deletespritethumb', tb);
            close.id = 'deletespritethumb';
        }
    }, {
        key: 'stopCharShaking',
        value: function stopCharShaking(b) {
            _ScratchJr2.default.shaking = undefined;
            _ScratchJr2.default.stopShaking = undefined;
            var cc = b.getAttribute('class');
            cc = cc.substr(0, cc.length - 8);
            b.setAttribute('class', cc);
            var ic = b.childNodes[b.childElementCount - 1];
            if (ic.getAttribute('class') == 'deletespritethumb') {
                b.removeChild(ic);
            }
        }
    }, {
        key: 'selectThisSprite',
        value: function selectThisSprite(spr) {
            var costumes = (0, _lib.gn)('spritecc');
            var el = spr.thumbnail;
            for (var i = 0; i < costumes.childElementCount; i++) {
                var th = costumes.childNodes[i];
                if (th == el) {
                    Thumbs.highlighSprite(el);
                } else {
                    Thumbs.unhighlighSprite(th);
                }
            }
        }
    }, {
        key: 'clickOnSprite',
        value: function clickOnSprite(e, el) {
            if (_ScratchJr2.default.shaking && _ScratchJr2.default.shaking == el) {
                _ScratchJr2.default.clearSelection();
                _ScratchJr2.default.stage.removeSprite((0, _lib.gn)(el.owner).owner);
                return;
            }
            var spritename = el.owner;
            if (!(0, _lib.gn)(spritename)) {
                return;
            }
            _ScratchJr2.default.unfocus(e);
            var spr = (0, _lib.gn)(spritename).owner;
            var page = spr.div.parentNode.owner;
            page.setCurrentSprite(spr);
            Thumbs.selectThisSprite(spr);
        }
    }, {
        key: 'prepareToDrag',
        value: function prepareToDrag(e) {
            e.preventDefault();
            e.stopPropagation();
            _ScratchAudio2.default.sndFX('grab.wav');
            var pt = _Events2.default.getTargetPoint(e);
            _Events2.default.dragmousex = pt.x;
            _Events2.default.dragmousey = pt.y;
            _Events2.default.dragthumbnail = Thumbs.getObjectFor((0, _lib.gn)('spritecc'), _Events2.default.dragthumbnail.owner);
            var mx = _Events2.default.dragmousex - _lib.frame.offsetLeft - (0, _lib.localx)(_Events2.default.dragthumbnail, _Events2.default.dragmousex) - (0, _lib.gn)('topsection').offsetLeft;
            var my = _Events2.default.dragmousey - _lib.frame.offsetTop - (0, _lib.localy)(_Events2.default.dragthumbnail, _Events2.default.dragmousey) - (0, _lib.gn)('topsection').offsetTop;
            var sy = _Events2.default.dragthumbnail.parentNode.parentNode.scrollTop;
            var sx = _Events2.default.dragthumbnail.parentNode.parentNode.scrollLeft;
            my -= sy;
            mx -= sx;
            var mstyle = {
                position: 'absolute',
                left: '0px',
                top: '0px',
                zIndex: _ScratchJr2.default.dragginLayer,
                zoom: 100 / window.devicePixelRatio + '%'
            };
            var spr = (0, _lib.gn)(_Events2.default.dragthumbnail.owner).owner;
            _Events2.default.dragcanvas = document.createElement('canvas');
            spr.drawMyImage(_Events2.default.dragcanvas, 76 * _lib.scaleMultiplier * window.devicePixelRatio, (76 - 12) * _lib.scaleMultiplier * window.devicePixelRatio);
            (0, _lib.setProps)(_Events2.default.dragcanvas.style, mstyle);
            _Events2.default.move3D(_Events2.default.dragcanvas, mx * window.devicePixelRatio, my * window.devicePixelRatio);
            _Events2.default.dragcanvas.owner = _Events2.default.dragthumbnail.owner;
            _lib.frame.appendChild(_Events2.default.dragcanvas);
        }
    }, {
        key: 'dragging',
        value: function dragging(e, el) {
            e.preventDefault();
            var pt = _Events2.default.getTargetPoint(e);
            var dx = pt.x - _Events2.default.dragmousex;
            var dy = pt.y - _Events2.default.dragmousey;
            _Events2.default.move3D(el, dx * window.devicePixelRatio, dy * window.devicePixelRatio);
            if (_Palette2.default.getLandingPlace(el, e, window.devicePixelRatio) != 'pages') {
                Thumbs.removePagesCaret();
                return;
            }
            var thumb = _Palette2.default.getHittedThumb(el, (0, _lib.gn)('pagecc'), window.devicePixelRatio);
            if (thumb && !thumb.owner) {
                thumb = undefined;
            }
            if (thumb) {
                Thumbs.overpage(thumb);
            }
            for (var i = 0; i < (0, _lib.gn)('pagecc').childElementCount; i++) {
                var spr = (0, _lib.gn)('pagecc').childNodes[i];
                if (!spr.owner) {
                    continue;
                }
                var page = (0, _lib.gn)(spr.owner);
                if (thumb && thumb.id != spr.id) {
                    if (page.owner.id == _ScratchJr2.default.stage.currentPage.id) {
                        Thumbs.highlighPage(spr);
                    } else {
                        Thumbs.unhighlighPage(spr);
                    }
                }
            }
        }
    }, {
        key: 'removePagesCaret',
        value: function removePagesCaret() {
            for (var i = 0; i < (0, _lib.gn)('pagecc').childElementCount; i++) {
                var spr = (0, _lib.gn)('pagecc').childNodes[i];
                if (!spr.owner) {
                    continue;
                }
                var page = (0, _lib.gn)(spr.owner);
                if (page.owner.id == _ScratchJr2.default.stage.currentPage.id) {
                    Thumbs.highlighPage(spr);
                } else {
                    Thumbs.unhighlighPage(spr);
                }
            }
        }
    }, {
        key: 'drop',
        value: function drop(e, el) {
            e.preventDefault();
            switch (_Palette2.default.getLandingPlace(el, e, window.devicePixelRatio)) {
                case 'pages':
                    var thumb = _Palette2.default.getHittedThumb(el, (0, _lib.gn)('pagecc'), window.devicePixelRatio);
                    if (thumb && thumb.id != 'emptypage') {
                        _ScratchJr2.default.stage.copySprite(el, thumb);
                    }
                    break;
                default:
                    break;
            }
            if (_Events2.default.dragcanvas) {
                _Events2.default.dragcanvas.parentNode.removeChild(_Events2.default.dragcanvas);
            }
            _Events2.default.dragcanvas = undefined;
        }
    }, {
        key: 'click',
        value: function click(e, el) {
            e.preventDefault();
            e.stopPropagation();
            if (window.event) {
                Thumbs.t = window.event.srcElement;
            } else {
                Thumbs.t = e.target;
            }
            el.setAttribute('class', _ScratchJr2.default.isEditable() ? 'spritethumb on' : 'spritethumb noneditable');
            Thumbs.clickOnSprite(e, el);
        }
    }, {
        key: 'highlighSprite',
        value: function highlighSprite(spr) {
            spr.setAttribute('class', _ScratchJr2.default.isEditable() ? 'spritethumb on' : 'spritethumb noneditable');
            _ScriptsPane2.default.setActiveScript(spr.owner);
            _Palette2.default.reset();
        }
    }, {
        key: 'unhighlighSprite',
        value: function unhighlighSprite(spr) {
            spr.setAttribute('class', 'spritethumb off');
            var currentsc = (0, _lib.gn)(spr.owner + '_scripts');
            currentsc.owner.deactivate();
            for (var i = 0; i < currentsc.childElementCount; i++) {
                if (currentsc.childNodes[i].owner) {
                    currentsc.childNodes[i].owner.unhighlight();
                }
            }
        }
    }, {
        key: 'quickHighlight',
        value: function quickHighlight(spr) {
            if (spr.owner == _ScratchJr2.default.stage.currentPage.currentSpriteName) {
                spr.className = 'spritethumb on target';
            } else {
                spr.className = 'spritethumb off target';
            }
        }
    }, {
        key: 'quickRestore',
        value: function quickRestore(spr) {
            if (spr.owner == _ScratchJr2.default.stage.currentPage.currentSpriteName) {
                spr.className = _ScratchJr2.default.isEditable() ? 'spritethumb on' : 'spritethumb noneditable';
            } else {
                spr.className = 'spritethumb off';
            }
        }
    }]);

    return Thumbs;
}();

exports.default = Thumbs;

/***/ }),

/***/ "./src/editor/ui/UI.js":
/*!*****************************!*\
  !*** ./src/editor/ui/UI.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); //////////////////////////////////////
//  General UI Layout
/////////////////////////////////////

var _ScratchJr = __webpack_require__(/*! ../ScratchJr */ "./src/editor/ScratchJr.js");

var _ScratchJr2 = _interopRequireDefault(_ScratchJr);

var _BlockSpecs = __webpack_require__(/*! ../blocks/BlockSpecs */ "./src/editor/blocks/BlockSpecs.js");

var _BlockSpecs2 = _interopRequireDefault(_BlockSpecs);

var _Alert = __webpack_require__(/*! ./Alert */ "./src/editor/ui/Alert.js");

var _Alert2 = _interopRequireDefault(_Alert);

var _Project = __webpack_require__(/*! ./Project */ "./src/editor/ui/Project.js");

var _Project2 = _interopRequireDefault(_Project);

var _Thumbs = __webpack_require__(/*! ./Thumbs */ "./src/editor/ui/Thumbs.js");

var _Thumbs2 = _interopRequireDefault(_Thumbs);

var _Palette = __webpack_require__(/*! ./Palette */ "./src/editor/ui/Palette.js");

var _Palette2 = _interopRequireDefault(_Palette);

var _Grid = __webpack_require__(/*! ./Grid */ "./src/editor/ui/Grid.js");

var _Grid2 = _interopRequireDefault(_Grid);

var _Stage = __webpack_require__(/*! ../engine/Stage */ "./src/editor/engine/Stage.js");

var _Stage2 = _interopRequireDefault(_Stage);

var _ScriptsPane = __webpack_require__(/*! ./ScriptsPane */ "./src/editor/ui/ScriptsPane.js");

var _ScriptsPane2 = _interopRequireDefault(_ScriptsPane);

var _Undo = __webpack_require__(/*! ./Undo */ "./src/editor/ui/Undo.js");

var _Undo2 = _interopRequireDefault(_Undo);

var _Library = __webpack_require__(/*! ./Library */ "./src/editor/ui/Library.js");

var _Library2 = _interopRequireDefault(_Library);

var _OS = __webpack_require__(/*! ../../tablet/OS */ "./src/tablet/OS.js");

var _OS2 = _interopRequireDefault(_OS);

var _IO = __webpack_require__(/*! ../../tablet/IO */ "./src/tablet/IO.js");

var _IO2 = _interopRequireDefault(_IO);

var _MediaLib = __webpack_require__(/*! ../../tablet/MediaLib */ "./src/tablet/MediaLib.js");

var _MediaLib2 = _interopRequireDefault(_MediaLib);

var _Paint = __webpack_require__(/*! ../../painteditor/Paint */ "./src/painteditor/Paint.js");

var _Paint2 = _interopRequireDefault(_Paint);

var _Events = __webpack_require__(/*! ../../utils/Events */ "./src/utils/Events.js");

var _Events2 = _interopRequireDefault(_Events);

var _Localization = __webpack_require__(/*! ../../utils/Localization */ "./src/utils/Localization.js");

var _Localization2 = _interopRequireDefault(_Localization);

var _ScratchAudio = __webpack_require__(/*! ../../utils/ScratchAudio */ "./src/utils/ScratchAudio.js");

var _ScratchAudio2 = _interopRequireDefault(_ScratchAudio);

var _lib = __webpack_require__(/*! ../../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var projectNameTextInput = null;
var info = null;
var okclicky = null;
var infoBoxOpen = false;

var EMAILSHARE = 0;
var AIRDROPSHARE = 1;

var UI = function () {
    function UI() {
        _classCallCheck(this, UI);
    }

    _createClass(UI, null, [{
        key: 'layout',
        value: function layout() {
            UI.topSection();
            UI.middleSection();
            UI.BottomSection();
            UI.fullscreenControls();
            UI.createFormForText(_lib.frame);
            _ScratchJr2.default.setupKeypad();
            _ScratchJr2.default.setupEditableField();
            UI.aspectRatioAdjustment();
        }

        // Helps debug on Android 4.2 by enabling the user to type in a
        // JavaScript expression and evaluate the output and render to console.log.
        /*static addDebugControl () {
            var div = newHTML('div', 'debug', document.body);
            setProps(div.style, {
                position: 'absolute',
                left: '0px',
                top: '0px',
                width: '64px',
                height: '64px',
                background: 'red',
                zIndex: 30000
            });
            div.ontouchstart = function (e) {
                console.log(eval(prompt('Enter Debug JavaScript')));
            };
        }*/

        /** Tweak some elements depending on aspect ratio */

    }, {
        key: 'aspectRatioAdjustment',
        value: function aspectRatioAdjustment() {
            var aspect = (0, _lib.getDocumentWidth)() / (0, _lib.getDocumentHeight)();
            if (aspect > 1.45) {
                // Nudge sprite list right a bit and the pages list left a bit
                (0, _lib.gn)('library').style.left = '3vw';
                (0, _lib.gn)('pages').style.right = '1vw';
            }
        }
    }, {
        key: 'topSection',
        value: function topSection() {
            var div = (0, _lib.newHTML)('div', 'topsection', _lib.frame);
            div.setAttribute('id', 'topsection');
            if (_ScratchJr2.default.isEditable()) {
                UI.addProjectInfo();
            }
            UI.leftPanel(div);
            UI.stageArea(div);
            UI.rightPanel(div);
        }
    }, {
        key: 'leftPanel',
        value: function leftPanel(div) {
            // sprite library
            var sl = (0, _lib.newHTML)('div', 'leftpanel', div);
            var flip = (0, _lib.newHTML)('div', 'flipme', sl);
            flip.setAttribute('id', 'flip');
            flip.onclick = function (evt) {
                _ScratchJr2.default.saveAndFlip(evt);
            }; // move to project
            UI.layoutLibrary(sl);
        }
    }, {
        key: 'middleSection',
        value: function middleSection() {
            var bp = (0, _lib.newHTML)('div', 'blockspalette', _lib.frame);
            bp.setAttribute('id', 'blockspalette');
            _Palette2.default.setup(bp);
            _Undo2.default.setup(bp);
        }
    }, {
        key: 'BottomSection',
        value: function BottomSection() {
            _ScriptsPane2.default.createScripts(_lib.frame);
        }
    }, {
        key: 'addProjectInfo',
        value: function addProjectInfo() {
            info = (0, _lib.newHTML)('div', 'info', _lib.frame);
            info.setAttribute('id', 'projectinfo');
            var infobox = (0, _lib.newHTML)('div', 'infobox fade', _lib.frame);
            infobox.setAttribute('id', 'infobox');
            okclicky = (0, _lib.newHTML)('div', 'paintdone', infobox);
            (0, _lib.newHTML)('div', 'infoboxlogo', infobox);
            var nameField = UI.addEditableName(infobox);
            var staticinfo = (0, _lib.newHTML)('div', 'fixedinfo', infobox);
            var author = (0, _lib.newHTML)('div', 'infolabel', staticinfo);
            author.setAttribute('id', 'deviceName');

            if (window.Settings.shareEnabled) {
                // For Parents button
                var parentsSection = (0, _lib.newHTML)('div', 'infoboxParentsSection', infobox);
                parentsSection.setAttribute('id', 'parentsection');

                var parentsButton = (0, _lib.newHTML)('div', 'infoboxParentsButton', parentsSection);
                parentsButton.id = 'infoboxParentsSectionButton';
                parentsButton.textContent = _Localization2.default.localize('FOR_PARENTS');

                // Sharing
                var shareButtons = (0, _lib.newHTML)('div', 'infoboxShareButtons', infobox);
                shareButtons.setAttribute('id', 'sharebuttons');

                var shareEmail = (0, _lib.newHTML)('div', 'infoboxShareButton', shareButtons);
                shareEmail.id = 'infoboxShareButtonEmail';
                shareEmail.textContent = _Localization2.default.localize('SHARING_BY_EMAIL');
                shareEmail.onclick = function (e) {
                    UI.infoDoShare(e, nameField, shareLoadingGif, EMAILSHARE);
                };

                if (_lib.isAndroid) {
                    shareEmail.style.margin = 'auto';
                } else {
                    shareEmail.style.float = 'left';
                }

                if (!_lib.isAndroid) {
                    var shareAirdrop = (0, _lib.newHTML)('div', 'infoboxShareButton', shareButtons);
                    shareAirdrop.id = 'infoboxShareButtonAirdrop';
                    shareAirdrop.textContent = _Localization2.default.localize('SHARING_BY_AIRDROP');
                    shareAirdrop.style.float = 'right';
                    shareAirdrop.onclick = function (e) {
                        UI.infoDoShare(e, nameField, shareLoadingGif, AIRDROPSHARE);
                    };
                }

                _OS2.default.deviceName(function (name) {
                    (0, _lib.gn)('deviceName').textContent = name;
                });

                var shareLoadingGif = (0, _lib.newHTML)('img', 'infoboxShareLoading', shareButtons);
                shareLoadingGif.src = './assets/ui/loader.png';

                parentsButton.onclick = function (e) {
                    UI.parentalGate(e, function (e) {
                        UI.showSharing(e, shareButtons, parentsSection);
                    });
                };
            }

            info.onclick = UI.showInfoBox;
            okclicky.onclick = function (evt) {
                UI.hideInfoBox(evt, nameField);
            };
        }
    }, {
        key: 'parentalGate',
        value: function parentalGate(evt, callback) {
            _ScratchAudio2.default.sndFX('tap.wav');
            var pgFrame = (0, _lib.newHTML)('div', 'parentalgate', (0, _lib.gn)('frame'));

            var pgCloseButton = (0, _lib.newHTML)('div', 'paintdone', pgFrame);
            pgCloseButton.onclick = function () {
                parentalGateClose(false);
            };

            var pgProblem = (0, _lib.newHTML)('div', 'parentalgateproblem', pgFrame);
            var pgChoiceA = (0, _lib.newHTML)('div', 'parentalgatechoice', pgFrame);
            var pgChoiceB = (0, _lib.newHTML)('div', 'parentalgatechoice', pgFrame);
            var pgChoiceC = (0, _lib.newHTML)('div', 'parentalgatechoice', pgFrame);

            var problems = [
            // Problem, Choice A, Choice B, Choice C, Correct choice #
            ['30 + 7', '37', '9', '28', 0], ['22 + 3', '18', '25', '3', 1], ['91 + 1', '32', '74', '92', 2], ['30 + 4', '34', '59', '12', 0], ['48 + 1', '9', '49', '20', 1], ['32 + 6', '23', '99', '38', 2], ['53 + 4', '57', '12', '90', 0], ['26 + 3', '17', '29', '8', 1], ['71 + 1', '58', '14', '72', 2], ['11 + 8', '19', '23', '67', 0]];

            var problemChoice = Math.floor(Math.random() * problems.length);
            var theProblem = problems[problemChoice];

            pgProblem.textContent = theProblem[0];
            pgChoiceA.textContent = theProblem[1];
            pgChoiceB.textContent = theProblem[2];
            pgChoiceC.textContent = theProblem[3];

            pgChoiceA.onclick = function () {
                parentalGateClose(theProblem[4] == 0);
            };
            pgChoiceB.onclick = function () {
                parentalGateClose(theProblem[4] == 1);
            };
            pgChoiceC.onclick = function () {
                parentalGateClose(theProblem[4] == 2);
            };

            var pgExplain = (0, _lib.newHTML)('div', 'parentalgateexplain', pgFrame);
            pgExplain.textContent = _Localization2.default.localize('PARENTAL_GATE_EXPLANATION');

            function parentalGateClose(success) {
                _ScratchAudio2.default.sndFX('exittap.wav');
                (0, _lib.gn)('frame').removeChild(pgFrame);
                if (success) {
                    callback(evt);
                }
            }
        }
    }, {
        key: 'showSharing',
        value: function showSharing(evt, shareButtons, parentsSection) {
            shareButtons.style.visibility = 'visible';
            parentsSection.style.visibility = 'hidden';
        }

        /*
        +    Save the project, including the new name, then package the project and send native-side for sharing
        +
        +    evt: reference to touch event triggering share
        +    nameField: reference to the project rename field
        +    shareLoadingGif: reference to HTML element to show during packaging/loading and hide for completion
        +    shareType: which dialog to show - 0 for email; 1 for airdrop
        + */

    }, {
        key: 'infoDoShare',
        value: function infoDoShare(evt, nameField, shareLoadingGif, shareType) {
            _ScratchAudio2.default.sndFX('tap.wav');
            shareLoadingGif.style.visibility = 'visible';
            nameField.blur(); // Hide the keyboard for name changes

            setTimeout(saveAndShare, 500); // 500ms delay to wait for loading GIF to show and keyboard to hide

            _OS2.default.analyticsEvent('editor', 'share_button', shareType == EMAILSHARE ? 'email' : 'airdrop');

            function saveAndShare() {
                // Save the project's new name
                UI.handleTextFieldSave(true);

                // Save any changes made to the project
                _ScratchJr2.default.onHold = true; // Freeze the editing UI
                _ScratchJr2.default.stopStripsFromTop(evt);

                _Project2.default.prepareToSave(_ScratchJr2.default.currentProject, function () {
                    _Alert2.default.close();

                    // Package the project as a .sjr file
                    _IO2.default.compressProject(_ScratchJr2.default.currentProject, function (fullName) {
                        _ScratchJr2.default.onHold = false; // Unfreeze the editing UI
                        var emailSubject = _Localization2.default.localize('SHARING_EMAIL_SUBJECT', {
                            PROJECT_NAME: _IO2.default.shareName
                        });
                        _OS2.default.sendSjrToShareDialog(fullName, emailSubject, _Localization2.default.localize('SHARING_EMAIL_TEXT'), shareType);

                        shareLoadingGif.style.visibility = 'hidden';
                    });
                });
            }
        }
    }, {
        key: 'addEditableName',
        value: function addEditableName(p) {
            var pname = (0, _lib.newHTML)('form', 'projectname', p);
            pname.name = 'projectname';
            pname.id = 'title';
            pname.onsubmit = function (evt) {
                submitChange(evt);
            };
            var ti = (0, _lib.newHTML)('input', 'pnamefield', pname);
            projectNameTextInput = ti;
            ti.name = 'myproject';
            ti.maxLength = 30;
            ti.onkeypress = undefined;
            ti.autocomplete = 'off';
            ti.autocorrect = false;
            ti.onblur = undefined;
            ti.onfocus = function (e) {
                e.preventDefault();
                ti.oldvalue = ti.value;
                if (_lib.isAndroid) {
                    AndroidInterface.scratchjr_setsoftkeyboardscrolllocation(ti.getBoundingClientRect().top * devicePixelRatio, ti.getBoundingClientRect().bottom * devicePixelRatio);
                    AndroidInterface.scratchjr_forceShowKeyboard();
                }
            };
            ti.onkeypress = function (evt) {
                handleNamePress(evt);
            };
            function handleNamePress(e) {
                var key = e.keyCode || e.which;
                if (key == 13) {
                    submitChange(e);
                }
            }
            function submitChange(e) {
                e.preventDefault();
                var input = e.target;
                input.blur();
            }
            return ti;
        }
    }, {
        key: 'handleTextFieldSave',
        value: function handleTextFieldSave(dontHide) {
            // Handle story-starter mode project
            if (_ScratchJr2.default.isEditable() && _ScratchJr2.default.editmode == 'storyStarter' && !_Project2.default.error && _ScratchJr2.default.changed) {
                _OS2.default.analyticsEvent('samples', 'story_starter_edited', _Project2.default.metadata.name);
                // Get the new project name
                var sampleName = _Localization2.default.localizeSampleName(_Project2.default.metadata.name);
                _IO2.default.uniqueProjectName({
                    name: sampleName
                }, function (jsonData) {
                    var newName = jsonData.name;
                    _Project2.default.metadata.name = newName;
                    // Create the new project
                    _IO2.default.createProject({
                        name: newName,
                        version: _ScratchJr2.default.version,
                        mtime: new Date().getTime().toString()
                    }, function (md5) {
                        _Project2.default.metadata.id = md5;
                        _ScratchJr2.default.currentProject = md5;
                        _ScratchJr2.default.editmode = 'edit';
                        _Project2.default.metadata.gallery = '';
                        UI.finishTextFieldSave(dontHide);
                    });
                });
            } else {
                UI.finishTextFieldSave(dontHide);
            }
        }
    }, {
        key: 'finishTextFieldSave',
        value: function finishTextFieldSave(dontHide) {
            var ti = projectNameTextInput;
            var pname = ti.value.length == 0 ? ti.oldvalue : ti.value.substring(0, ti.maxLength);
            if (_Project2.default.metadata.name != pname) {
                _ScratchJr2.default.storyStart('UI.handleTextFieldSave');
            }
            _Project2.default.metadata.name = pname;
            _OS2.default.setfield(_OS2.default.database, _Project2.default.metadata.id, 'name', pname);
            if (!dontHide) {
                _ScratchAudio2.default.sndFX('exittap.wav');
                (0, _lib.gn)('infobox').className = 'infobox fade';
            }
        }
    }, {
        key: 'showInfoBox',
        value: function showInfoBox(e) {
            infoBoxOpen = true;
            e.preventDefault();
            e.stopPropagation();
            if (_Paint2.default.saving) {
                return;
            }
            if (_ScratchJr2.default.onHold) {
                return;
            }

            var canShare = _ScratchJr2.default.editmode != 'storyStarter' || _ScratchJr2.default.changed;
            (0, _lib.gn)('infoboxParentsSectionButton').style.display = canShare ? 'block' : 'none';

            // Prevent button from thrashing
            setTimeout(function () {
                okclicky.onclick = UI.hideInfoBox;
                projectNameTextInput.onblur = function () {
                    if (_lib.isAndroid) {
                        AndroidInterface.scratchjr_forceHideKeyboard();
                    }
                };
            }, 500);
            projectNameTextInput.onblur = function () {
                if (_ScratchJr2.default.isEditable()) {
                    document.forms.projectname.myproject.focus();
                }
            };
            info.onclick = null;

            _ScratchJr2.default.onBackButtonCallback.push(function () {
                var e2 = document.createEvent('TouchEvent');
                e2.initTouchEvent();
                e2.preventDefault();
                e2.stopPropagation();
                UI.hideInfoBox(e2);
            });

            _ScratchAudio2.default.sndFX('entertap.wav');
            _ScratchJr2.default.stopStrips();
            if (!_Project2.default.metadata.ctime) {
                _Project2.default.metadata.mtime = new Date().getTime();
                _Project2.default.metadata.ctime = UI.formatTime(new Date().getTime());
            }

            if (_ScratchJr2.default.isEditable()) {
                var name = _Project2.default.metadata.name;
                if (_ScratchJr2.default.editmode == 'storyStarter') {
                    name = _Localization2.default.localizeSampleName(name);
                }
                document.forms.projectname.myproject.value = name;
            } else {
                (0, _lib.gn)('pname').textContent = _Project2.default.metadata.name;
            }
            (0, _lib.gn)('infobox').className = 'infobox fade in';
            if (_ScratchJr2.default.isEditable()) {
                setTimeout(function () {
                    //(document.forms["projectname"]["myproject"]).focus();
                }, 500);
            }
        }
    }, {
        key: 'formatTime',
        value: function formatTime(unixtime) {
            var date = new Date(unixtime);
            var year = date.getFullYear();
            var month = date.getMonth() + 1;
            var day = date.getDate();
            var hour = date.getHours();
            var min = date.getMinutes();
            var sec = date.getSeconds();
            return year + '-' + month + '-' + day + ' ' + hour + ':' + min + ':' + sec;
        }
    }, {
        key: 'hideInfoBox',
        value: function hideInfoBox(e) {
            e.preventDefault();
            e.stopPropagation();
            _ScratchJr2.default.onBackButtonCallback.pop();

            // Prevent button thrashing
            okclicky.onclick = null;
            setTimeout(function () {
                info.onclick = UI.showInfoBox;
            }, 500);

            if (_ScratchJr2.default.isEditable()) {
                document.forms.projectname.myproject.blur();
                UI.handleTextFieldSave();
            } else {
                _ScratchAudio2.default.sndFX('exittap.wav');
                (0, _lib.gn)('infobox').className = 'infobox fade';
            }
            (0, _lib.gn)('sharebuttons').style.visibility = 'hidden';
            (0, _lib.gn)('parentsection').style.visibility = 'visible';
            infoBoxOpen = false;
        }

        //////////////////////////////////////
        //   Library
        /////////////////////////////////////

    }, {
        key: 'layoutLibrary',
        value: function layoutLibrary(sl) {
            var sprites = (0, _lib.newHTML)('div', 'thumbpanel', sl);
            sprites.setAttribute('id', 'library');
            //scrolling area
            var p = (0, _lib.newHTML)('div', 'spritethumbs', sprites);
            var div = (0, _lib.newHTML)('div', 'spritecc', p);
            div.setAttribute('id', 'spritecc');
            div.ontouchstart = UI.spriteThumbsActions;
            div.onmousedown = UI.spriteThumbsActions;

            // scrollbar
            var sb = (0, _lib.newHTML)('div', 'scrollbar', sprites);
            sb.setAttribute('id', 'scrollbar');
            var sbthumb = (0, _lib.newHTML)('div', 'sbthumb', sb);
            sbthumb.setAttribute('id', 'sbthumb');

            // new sprite
            if (_ScratchJr2.default.isEditable()) {
                var ns = (0, _lib.newHTML)('div', 'addsprite', sprites);
                ns.onclick = UI.addSprite;
            }
        }
    }, {
        key: 'mascotData',
        value: function mascotData(page) {
            var sprAttr = {
                flip: false,
                angle: 0,
                shown: true,
                type: 'sprite',
                scale: 0.5,
                defaultScale: 0.5,
                speed: 2,
                dirx: 1,
                diry: 1,
                sounds: ['pop.mp3'],
                homex: 240,
                homey: 180,
                xcoor: 240,
                ycoor: 180,
                homeshown: true,
                homeflip: false,
                homescale: 0.5,
                scripts: []
            };
            sprAttr.page = page;
            sprAttr.md5 = _ScratchJr2.default.defaultSprite;
            var catkey = _MediaLib2.default.keys[sprAttr.md5].name;
            sprAttr.id = (0, _lib.getIdFor)(catkey);
            sprAttr.name = catkey;
            return sprAttr;
        }

        //////////////////////////////////////
        // Scrolling
        //////////////////////////////////////

    }, {
        key: 'needsScroll',
        value: function needsScroll() {
            var sc = (0, _lib.gn)('spritecc');
            var p = sc.parentNode;
            if (sc.scrollHeight / p.offsetHeight == 1 || (0, _lib.gn)('spritecc').childElementCount == 0) {
                (0, _lib.gn)('scrollbar').setAttribute('class', 'scrollbar off');
            } else {
                (0, _lib.gn)('scrollbar').setAttribute('class', 'scrollbar on');
                UI.updateSpriteScroll();
            }
        }
    }, {
        key: 'updateSpriteScroll',
        value: function updateSpriteScroll() {
            var sc = (0, _lib.gn)('spritecc');
            var dy = sc.offsetTop;
            var p = sc.parentNode;
            var top = -dy / (sc.scrollHeight / p.offsetHeight);
            var size = p.offsetHeight / sc.scrollHeight * p.offsetHeight;
            var thumb = (0, _lib.gn)('sbthumb');
            thumb.style.height = size + 'px';
            thumb.style.top = top + 'px';
        }
    }, {
        key: 'scrollContents',
        value: function scrollContents(dy) {
            var sc = (0, _lib.gn)('spritecc');
            var valy = sc.offsetTop - dy;
            if (valy > 0) {
                valy = 0;
            }
            var transition = {
                duration: 0.5,
                transition: 'ease-out',
                style: {
                    top: valy + 'px'
                }
            };
            (0, _lib.CSSTransition)(sc, transition);
        }
    }, {
        key: 'spriteInView',
        value: function spriteInView(spr) {
            var sc = (0, _lib.gn)('spritecc');
            var achild = spr.thumbnail;
            if (!achild) {
                return;
            }
            var h = (0, _lib.gn)('spritecc').parentNode.offsetHeight;
            var scroll = -(0, _lib.gn)('spritecc').offsetTop;
            var dy = -(0, _lib.gn)('spritecc').offsetTop;
            if (achild.offsetTop + achild.offsetHeight + scroll > h) {
                dy = h - (achild.offsetTop + achild.offsetHeight);
            }
            if (achild.offsetTop <= scroll) {
                dy = achild.offsetTop + scroll;
            }
            if (dy > 0) {
                dy = 0;
            }
            sc.style.top = dy + 'px';
            UI.needsScroll();
        }
    }, {
        key: 'resetSpriteLibrary',
        value: function resetSpriteLibrary() {
            if (!_ScratchJr2.default.getSprite()) {
                return;
            }
            UI.spriteInView(_ScratchJr2.default.getSprite());
        }

        ///////////////////////////////////
        // Sprite Thumbs Events
        //////////////////////////////////

    }, {
        key: 'spriteThumbsActions',
        value: function spriteThumbsActions(e) {
            if (_lib.isTablet && e.touches && e.touches.length > 1) {
                return;
            }
            if (_ScratchJr2.default.onHold) {
                return;
            }
            var t;
            var pt = _Events2.default.getTargetPoint(e);
            if (window.event) {
                t = window.event.srcElement;
            } else {
                t = e.target;
            }
            //	if ((t.nodeName == "INPUT") || (t.nodeName == "FORM")) return;
            e.preventDefault();
            e.stopPropagation();
            _ScratchJr2.default.blur();
            t.focus();
            if (t.className == 'brush') {
                UI.putInPaintEditor(e);return;
            }
            var tb = _Thumbs2.default.getType(t, 'spritethumb');
            if (!tb) {
                if (_ScratchJr2.default.shaking) {
                    _ScratchJr2.default.clearSelection();
                }
                return;
            }
            var x = (0, _lib.localx)(t, pt.x);
            if (tb && x < 70 && _ScratchJr2.default.isEditable()) {
                _Thumbs2.default.startDragThumb(e, tb);
            } else {
                UI.startSpriteScroll(e, tb);
            }
        }
    }, {
        key: 'startSpriteScroll',
        value: function startSpriteScroll(e, tb) {
            if (_ScratchJr2.default.shaking) {
                _ScratchJr2.default.clearSelection();
            }
            if (!tb) {
                return;
            }
            if ((0, _lib.gn)('scrollbar').className == 'scrollbar off') {
                _Events2.default.startDrag(e, tb, UI.ignoreEvent, UI.ignoreEvent, UI.ignoreEvent, UI.spriteClicked, _ScratchJr2.default.isEditable() ? _Thumbs2.default.startCharShaking : undefined);
            } else {
                _Events2.default.startDrag(e, tb, UI.prepareToScroll, UI.stopScroll, UI.spriteScolling, UI.spriteClicked, _ScratchJr2.default.isEditable() ? _Thumbs2.default.startCharShaking : undefined);
            }
        }
    }, {
        key: 'ignoreEvent',
        value: function ignoreEvent(e) {
            e.preventDefault();
            e.stopPropagation();
        }
    }, {
        key: 'prepareToScroll',
        value: function prepareToScroll(e) {
            e.preventDefault();
            e.stopPropagation();
            UI.spriteScolling(e, _Events2.default.dragthumbnail);
        }
    }, {
        key: 'stopScroll',
        value: function stopScroll(e) {
            e.preventDefault();
            e.stopPropagation();
            UI.spriteScolling(e, _Events2.default.dragthumbnail);
        }
    }, {
        key: 'spriteScolling',
        value: function spriteScolling(e) {
            var pt = _Events2.default.getTargetPoint(e);
            var deltay = _Events2.default.dragmousey - pt.y;
            _Events2.default.dragmousey = pt.y;
            var sc = (0, _lib.gn)('spritecc');
            var dy = sc.offsetTop;
            dy -= deltay;
            var p = sc.parentNode;
            if (dy > 0) {
                dy = 0;
            }
            if (dy + sc.offsetHeight < p.offsetHeight) {
                dy = p.offsetHeight - sc.offsetHeight;
            }
            sc.style.top = dy + 'px';
            UI.updateSpriteScroll();
        }
    }, {
        key: 'spriteClicked',
        value: function spriteClicked(e, el) {
            e.preventDefault();
            e.stopPropagation();
            var t;
            if (window.event) {
                t = window.event.srcElement;
            } else {
                t = e.target;
            }
            if (_ScratchJr2.default.isEditable() && _ScratchJr2.default.getSprite() && (t.className == 'sname' && el.owner == _ScratchJr2.default.getSprite().id || t.className == 'brush')) {
                UI.putInPaintEditor(e);
                return;
            }
            if (el.className.indexOf('shakeme') < 0) {
                el.setAttribute('class', 'spritethumb on');
            }
            _Thumbs2.default.clickOnSprite(e, el);
        }
    }, {
        key: 'putInPaintEditor',
        value: function putInPaintEditor(e) {
            _ScratchJr2.default.unfocus(e);
            var s = _ScratchJr2.default.getSprite();
            if (!s) {
                return;
            }
            _ScratchJr2.default.stopStrips();
            _Paint2.default.open(false, s.md5, s.id, s.name, s.defaultScale, Math.round(s.w), Math.round(s.h));
        }

        ///////////////////////////////
        // Setup Stage Variables
        //////////////////////////////

    }, {
        key: 'stageArea',
        value: function stageArea(inner) {
            var outerDiv = (0, _lib.newHTML)('div', 'centerpanel', inner);
            var div = (0, _lib.newHTML)('div', 'stageframe', outerDiv);
            div.setAttribute('id', 'stageframe');
            _ScratchJr2.default.stage = new _Stage2.default(div);
            _Grid2.default.init(div);
            if (_ScratchJr2.default.isEditable()) {
                UI.createTopBarClicky(div, 'addtext', 'addText', UI.addText);
                UI.createTopBarClicky(div, 'setbkg', 'changeBkg', UI.addBackground);
            }
            UI.createTopBarClicky(div, 'grid', 'gridToggle off', UI.switchGrid);
            UI.createTopBarClicky(div, 'go', 'go on', UI.toggleRun);
            UI.createTopBarClicky(div, 'resetall', 'resetall', UI.resetAllSprites);
            // UI.createTopBarClicky(div, 'full', 'fullscreen', ScratchJr.fullScreen);
            UI.setShowGrid(false);
        }
    }, {
        key: 'resetAllSprites',
        value: function resetAllSprites(e) {
            e.preventDefault();
            e.stopPropagation();
            if (_ScratchJr2.default.onHold) {
                return;
            }
            _ScratchAudio2.default.sndFX('tap.wav');
            if (!_ScratchJr2.default.runtime.inactive()) {
                _ScratchJr2.default.stopStripsFromTop(e);
            }
            _ScratchJr2.default.resetSprites();
        }
    }, {
        key: 'toggleRun',
        value: function toggleRun(e) {
            var isOff = _ScratchJr2.default.runtime.inactive();
            if (isOff) {
                _ScratchJr2.default.runStrips(e);
            } else {
                _ScratchJr2.default.stopStripsFromTop(e);
            }
        }
    }, {
        key: 'switchGrid',
        value: function switchGrid() {
            _ScratchAudio2.default.sndFX('tap.wav');
            UI.setShowGrid(_Grid2.default.hidden);
            _OS2.default.analyticsEvent('editor', _Grid2.default.hidden ? 'hide_grid' : 'show_grid');
        }
    }, {
        key: 'setShowGrid',
        value: function setShowGrid(b) {
            _Grid2.default.hide(!b);
            (0, _lib.gn)('grid').className = _Grid2.default.hidden ? 'gridToggle off' : 'gridToggle on';
        }
    }, {
        key: 'createTopBarClicky',
        value: function createTopBarClicky(p, str, mstyle, fcn) {
            var toggle = (0, _lib.newHTML)('div', mstyle, p);
            toggle.onclick = fcn;
            toggle.setAttribute('id', str);
        }
    }, {
        key: 'fullscreenControls',
        value: function fullscreenControls() {
            UI.nextpage = (0, _lib.newHTML)('div', 'nextpage off', _lib.frame);
            UI.prevpage = (0, _lib.newHTML)('div', 'nextpage off', _lib.frame);
            UI.nextpage.onclick = UI.nextPage;
            UI.prevpage.onclick = UI.prevPage;
        }
    }, {
        key: 'updatePageControls',
        value: function updatePageControls() {
            var n = _ScratchJr2.default.stage.pages.indexOf(_ScratchJr2.default.stage.currentPage);
            if (n == 0) {
                UI.prevpage.setAttribute('class', 'prevpage off');
            } else {
                UI.prevpage.setAttribute('class', 'prevpage on');
            }
            if (n == _ScratchJr2.default.stage.pages.length - 1) {
                UI.nextpage.setAttribute('class', 'nextpage off');
            } else {
                UI.nextpage.setAttribute('class', 'nextpage on');
            }
        }
    }, {
        key: 'nextPage',
        value: function nextPage(e) {
            e.preventDefault();
            e.stopPropagation();
            var n = _ScratchJr2.default.stage.pages.indexOf(_ScratchJr2.default.stage.currentPage);
            n++;
            if (n >= _ScratchJr2.default.stage.pages.length) {
                return;
            }
            _ScratchJr2.default.stage.setPage(_ScratchJr2.default.stage.pages[n], false);
        }
    }, {
        key: 'prevPage',
        value: function prevPage(e) {
            e.preventDefault();
            e.stopPropagation();
            var n = _ScratchJr2.default.stage.pages.indexOf(_ScratchJr2.default.stage.currentPage);
            if (n < 1) {
                return;
            }
            _ScratchJr2.default.stage.setPage(_ScratchJr2.default.stage.pages[n - 1], false);
        }
    }, {
        key: 'enterFullScreen',
        value: function enterFullScreen() {
            var w = Math.min((0, _lib.getDocumentWidth)(), _lib.frame.offsetWidth);
            var h = Math.max((0, _lib.getDocumentHeight)(), _lib.frame.offsetHeight);
            _lib.frame.appendChild((0, _lib.gn)('stage'));
            var list = ['go'];
            for (var i = 0; i < list.length; i++) {
                (0, _lib.gn)(list[i]).className = (0, _lib.gn)(list[i]).className + ' presentationmode';
                _lib.frame.appendChild((0, _lib.gn)(list[i]));
            }
            var scale = Math.min((w - _lib.fullscreenScaleMultiplier * _lib.scaleMultiplier) / (0, _lib.gn)('stage').owner.width, h / (0, _lib.gn)('stage').owner.height);
            var dx = Math.floor((w - (0, _lib.gn)('stage').owner.width * scale) / 2);
            var dy = Math.floor((h - (0, _lib.gn)('stage').owner.height * scale) / 2);

            _ScratchJr2.default.stage.setStageScaleAndPosition(scale, dx / scale, dy / scale);

            (0, _lib.gn)('stage').owner.currentZoom = Math.floor(scale * 100) / 100;
            (0, _lib.gn)('stage').style.webkitTextSizeAdjust = Math.floor((0, _lib.gn)('stage').owner.currentZoom * 100) + '%';
            document.body.parentNode.style.background = 'black';
            (0, _lib.gn)('stage').setAttribute('class', 'stage fullscreen');
            UI.nextpage.setAttribute('class', 'nextpage on');
        }
    }, {
        key: 'quitFullScreen',
        value: function quitFullScreen() {
            var div = (0, _lib.gn)('stageframe');
            div.appendChild((0, _lib.gn)('stage'));
            _ScratchJr2.default.stage.setStageScaleAndPosition(_lib.scaleMultiplier, 46, 74);
            (0, _lib.gn)('go').className = 'go off nopresent';
            div.appendChild((0, _lib.gn)('go'));
            (0, _lib.gn)('full').className = 'fullscreen';
            div.appendChild((0, _lib.gn)('full'));
            (0, _lib.gn)('stage').owner.currentZoom = 1;
            (0, _lib.gn)('stage').style.webkitTextSizeAdjust = '100%';
            document.body.parentNode.style.background = 'none';
            (0, _lib.gn)('stage').setAttribute('class', 'stage normal');
            UI.nextpage.setAttribute('class', 'nextpage off');
            UI.prevpage.setAttribute('class', 'nextpage off');
            _ScratchJr2.default.stage.setViewPage(_ScratchJr2.default.stage.currentPage);
            _Thumbs2.default.updateSprites();
            _Thumbs2.default.updatePages();
        }

        //////////////////////////////////////
        //   Right panel
        /////////////////////////////////////

    }, {
        key: 'rightPanel',
        value: function rightPanel(div) {
            var rp = (0, _lib.newHTML)('div', 'rightpanel', div);
            var tb = (0, _lib.newHTML)('div', 'pages', rp);
            tb.setAttribute('id', 'pages');
            var ndiv = (0, _lib.newHTML)('div', 'pagescc', tb);
            ndiv.setAttribute('id', 'pagecc');
        }

        //////////////////////////////////////
        //   Tools
        /////////////////////////////////////

    }, {
        key: 'layoutToolbar',
        value: function layoutToolbar(div) {
            var h = 56;
            var w = 66 * 2;
            var tb = (0, _lib.newDiv)(div, 220, 0, w, h, {
                position: 'absolute'
            });
            tb.setAttribute('id', 'toolbar');
            var addt = (0, _lib.newHTML)('div', 'addText', tb);
            addt.onclick = UI.addText;
            var changebkg = (0, _lib.newHTML)('div', 'changeBkg', tb);
            changebkg.onclick = UI.addBackground;
        }
    }, {
        key: 'addSprite',
        value: function addSprite(e) {
            if (_ScratchJr2.default.onHold) {
                return;
            }
            e.preventDefault();
            e.stopPropagation();
            var pt = _Events2.default.getTargetPoint(e);
            if (pt.x > (0, _lib.globalx)(e.target) + 167) {
                return;
            }
            _ScratchAudio2.default.sndFX('tap.wav');
            _ScratchJr2.default.stopStrips();
            _ScratchJr2.default.unfocus(e);
            if (_Events2.default.dragthumbnail) {
                _Events2.default.mouseUp(e);
            }
            _Library2.default.open('costumes');
        }
    }, {
        key: 'addBackground',
        value: function addBackground(e) {
            if (_ScratchJr2.default.onHold) {
                return;
            }
            e.preventDefault();
            e.stopPropagation();
            _ScratchJr2.default.stopStrips();
            _ScratchJr2.default.unfocus(e);
            if (_Events2.default.dragthumbnail) {
                _Events2.default.mouseUp(e);
            }
            _Library2.default.open('backgrounds');
        }
    }, {
        key: 'addText',
        value: function addText(e) {
            if (_ScratchJr2.default.onHold) {
                return;
            }
            e.preventDefault();
            e.stopPropagation();
            if (_lib.isAndroid) {
                if ((0, _lib.gn)('textbox').style.visibility === 'visible') {
                    return;
                }
            }
            _ScratchJr2.default.unfocus(e);
            _ScratchJr2.default.stage.currentPage.createText();
        }

        //////////////////////////////////
        // Key Handling in TextBox
        //////////////////////////////////

    }, {
        key: 'createFormForText',
        value: function createFormForText(p) {
            var tf = (0, _lib.newHTML)('div', 'pagetext off', p);
            tf.setAttribute('id', 'textbox');
            // If the textbox background is clicked or touched, the input loses focus,
            // which causes the text input to close unexpectedly
            var eatEvent = function eatEvent(e) {
                e.stopPropagation();
                e.preventDefault();
            };
            tf.ontouchstart = eatEvent;
            tf.onmousedown = eatEvent;
            var activetb = (0, _lib.newHTML)('form', 'pageform', tf);
            activetb.name = 'activetextbox';
            activetb.id = 'myform';
            activetb.textsprite = null;
            var field = (0, _lib.newTextInput)(activetb, 'text');
            field.name = 'typing';
            field.setAttribute('class', 'edittext');
            field.maxLength = 50;
            field.onkeypress = undefined;
            field.autocomplete = 'off';
            field.autocorrect = false;
            field.onblur = undefined;
            activetb.onsubmit = undefined;
            var ta = (0, _lib.newHTML)('div', 'pagetextactions', tf);
            var clicky = (0, _lib.newHTML)('div', 'fontsizeText off', ta);
            clicky.setAttribute('id', 'fontsizebutton');
            clicky.ontouchstart = UI.openFontSizeMenu;
            clicky.onmousedown = UI.openFontSizeMenu;
            var col = (0, _lib.newHTML)('div', 'changecolorText off', ta);
            col.setAttribute('id', 'fontcolorbutton');

            col.ontouchstart = UI.topLevelColor;
            col.onmousedown = UI.topLevelColor;
            UI.createColorMenu(tf);
            UI.createTextSizeMenu(tf);
        }
    }, {
        key: 'createColorMenu',
        value: function createColorMenu(div) {
            var swatchlist = _BlockSpecs2.default.fontcolors;
            var spal = (0, _lib.newHTML)('div', 'textuicolormenu off', div);
            spal.setAttribute('id', 'textcolormenu');
            for (var i = 0; i < swatchlist.length; i++) {
                var colour = (0, _lib.newHTML)('div', 'textcolorbucket', spal);
                // bucket
                var sf = (0, _lib.newHTML)('div', 'swatchframe', colour);
                var sc = (0, _lib.newHTML)('div', 'swatchcolor', sf);
                sc.style.background = swatchlist[i];
                //
                sf = (0, _lib.newHTML)('div', 'splasharea off', colour);
                _Paint2.default.setSplashColor(sf, _Paint2.default.splash, swatchlist[i]);
                _Paint2.default.addImageUrl(sf, _Paint2.default.splashshade);
                colour.ontouchstart = UI.setTextColor;
                colour.onmousedown = UI.setTextColor;
            }
            UI.setMenuTextColor((0, _lib.gn)('textcolormenu').childNodes[9]);
        }
    }, {
        key: 'createTextSizeMenu',
        value: function createTextSizeMenu(div) {
            var sizes = _BlockSpecs2.default.fontsizes;
            var spal = (0, _lib.newHTML)('div', 'textuifont off', div);
            spal.setAttribute('id', 'textfontsizes');
            for (var i = 0; i < sizes.length; i++) {
                var textuisize = (0, _lib.newHTML)('div', 'textuisize t' + (i + 1), spal);
                textuisize.fs = sizes[i];
                var sf = (0, _lib.newHTML)('span', undefined, textuisize);
                sf.textContent = 'A';
                textuisize.ontouchstart = UI.setTextSize;
                textuisize.onmousedown = UI.setTextSize;
            }
            UI.setMenuTextSize((0, _lib.gn)('textfontsizes').childNodes[5]);
        }
    }, {
        key: 'setMenuTextColor',
        value: function setMenuTextColor(t) {
            var c = t.childNodes[0].childNodes[0].style.backgroundColor;
            for (var i = 0; i < (0, _lib.gn)('textcolormenu').childElementCount; i++) {
                var mycolor = (0, _lib.gn)('textcolormenu').childNodes[i].childNodes[0].childNodes[0].style.backgroundColor;
                if (c == mycolor) {
                    (0, _lib.gn)('textcolormenu').childNodes[i].childNodes[1].setAttribute('class', 'splasharea on');
                } else {
                    (0, _lib.gn)('textcolormenu').childNodes[i].childNodes[1].setAttribute('class', 'splasharea off');
                }
            }
        }
    }, {
        key: 'setMenuTextSize',
        value: function setMenuTextSize(t) {
            var c = t.fs;
            for (var i = 0; i < (0, _lib.gn)('textfontsizes').childElementCount; i++) {
                var kid = (0, _lib.gn)('textfontsizes').childNodes[i];
                var fs = kid.fs;
                var ckid = kid.className.split(' ')[1];
                if (c == fs) {
                    (0, _lib.gn)('textfontsizes').childNodes[i].className = 'textuisize ' + ckid + ' on';
                } else {
                    (0, _lib.gn)('textfontsizes').childNodes[i].className = 'textuisize ' + ckid + ' off';
                }
            }
        }

        /////////////////////////////////////////////////////////
        // Text color and size
        /////////////////////////////////////////////////////////

    }, {
        key: 'topLevelColor',
        value: function topLevelColor(e) {
            e.preventDefault();
            e.stopPropagation();
            if ((0, _lib.gn)('fontcolorbutton').className == 'changecolorText on') {
                (0, _lib.gn)('fontcolorbutton').className = 'changecolorText off';
                (0, _lib.gn)('textcolormenu').className = 'textuicolormenu off';
            } else {
                (0, _lib.gn)('fontsizebutton').className = 'fontsizeText off';
                (0, _lib.gn)('textfontsizes').className = 'textuifont off';
                var text = document.forms.activetextbox.textsprite;
                var indx = _BlockSpecs2.default.fontcolors.indexOf(text);
                if (indx > -1) {
                    UI.setMenuTextColor((0, _lib.gn)('textcolormenu').childNodes[indx]);
                }
                (0, _lib.gn)('textcolormenu').className = 'textuicolormenu on';
                (0, _lib.gn)('fontcolorbutton').className = 'changecolorText on';
            }
        }
    }, {
        key: 'setTextColor',
        value: function setTextColor(e) {
            if (e.touches && e.touches.length > 1) {
                return;
            }
            e.preventDefault();
            e.stopPropagation();
            if (window.event) {
                t = window.event.srcElement;
            } else {
                t = e.target;
            }
            var b = 'textcolorbucket' != t.className;
            while (b) {
                var t = t.parentNode;
                b = t && 'textcolorbucket' != t.className;
            }
            if (!t) {
                return;
            }
            _ScratchAudio2.default.sndFX('splash.wav');
            UI.setMenuTextColor(t);
            var text = document.forms.activetextbox.textsprite;
            var c = t.childNodes[0].childNodes[0].style.background;
            text.setColor(c);
            _Undo2.default.record({
                action: 'edittext',
                where: text.div.parentNode.owner.id,
                who: text.id
            });
            _ScratchJr2.default.storyStart('UI.setTextColor'); // Record a change for sample projects in story-starter mode
            var ti = document.forms.activetextbox.typing;
            ti.style.color = c;
        }
    }, {
        key: 'openFontSizeMenu',
        value: function openFontSizeMenu(e) {
            e.preventDefault();
            e.stopPropagation();
            if ((0, _lib.gn)('fontsizebutton').className == 'fontsizeText on') {
                (0, _lib.gn)('fontsizebutton').className = 'fontsizeText off';
                (0, _lib.gn)('textfontsizes').className = 'textuifont off';
            } else {
                (0, _lib.gn)('fontcolorbutton').className = 'changecolorText off';
                (0, _lib.gn)('textcolormenu').className = 'textuicolormenu off';
                var text = document.forms.activetextbox.textsprite;
                var indx = _BlockSpecs2.default.fontsizes.indexOf(text.fontsize);
                if (indx > -1) {
                    UI.setMenuTextSize((0, _lib.gn)('textfontsizes').childNodes[indx]);
                }
                (0, _lib.gn)('textfontsizes').className = 'textuifont on';
                (0, _lib.gn)('fontsizebutton').className = 'fontsizeText on';
            }
        }
    }, {
        key: 'setTextSize',
        value: function setTextSize(e) {
            e.preventDefault();
            e.stopPropagation();
            var t;
            if (window.event) {
                t = window.event.srcElement;
            } else {
                t = e.target;
            }
            if (t.nodeName == 'SPAN') {
                t = t.parentNode;
            }
            if (!t) {
                return;
            }
            var ckid = t.className.split(' ')[0];
            if (ckid != 'textuisize') {
                return;
            }
            UI.setMenuTextSize(t);
            var text = document.forms.activetextbox.textsprite;
            text.setFontSize(t.fs);
            _Undo2.default.record({
                action: 'edittext',
                where: text.div.parentNode.owner.id,
                who: text.id
            });
            _ScratchJr2.default.storyStart('UI.setTextSize'); // Record a change for sample projects in story-starter mode
            var ti = document.forms.activetextbox.typing;
            ti.style.fontSize = t.fs * _lib.scaleMultiplier + 'px';
            (0, _lib.setProps)(document.forms.activetextbox.style, {
                height: (t.fs + 10) * _lib.scaleMultiplier + 'px'
            });
        }

        ///////////////////////////////////////////
        // UI clear
        /////////////////////////////////////////

    }, {
        key: 'clear',
        value: function clear() {
            var costumes = (0, _lib.gn)('spritecc');
            while (costumes.childElementCount > 0) {
                costumes.removeChild(costumes.childNodes[0]);
            }
            var pthumbs = (0, _lib.gn)('pagecc');
            while (pthumbs.childElementCount > 0) {
                pthumbs.removeChild(pthumbs.childNodes[0]);
            }
        }
    }, {
        key: 'infoBoxOpen',
        get: function get() {
            return infoBoxOpen;
        }
    }]);

    return UI;
}();

exports.default = UI;

/***/ }),

/***/ "./src/editor/ui/Undo.js":
/*!*******************************!*\
  !*** ./src/editor/ui/Undo.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); //////////////////////////////////
// Undo / Redo Functions
//////////////////////////////////

var _ScratchJr = __webpack_require__(/*! ../ScratchJr */ "./src/editor/ScratchJr.js");

var _ScratchJr2 = _interopRequireDefault(_ScratchJr);

var _Thumbs = __webpack_require__(/*! ./Thumbs */ "./src/editor/ui/Thumbs.js");

var _Thumbs2 = _interopRequireDefault(_Thumbs);

var _Project = __webpack_require__(/*! ./Project */ "./src/editor/ui/Project.js");

var _Project2 = _interopRequireDefault(_Project);

var _Palette = __webpack_require__(/*! ./Palette */ "./src/editor/ui/Palette.js");

var _Palette2 = _interopRequireDefault(_Palette);

var _UI = __webpack_require__(/*! ./UI */ "./src/editor/ui/UI.js");

var _UI2 = _interopRequireDefault(_UI);

var _ScratchAudio = __webpack_require__(/*! ../../utils/ScratchAudio */ "./src/utils/ScratchAudio.js");

var _ScratchAudio2 = _interopRequireDefault(_ScratchAudio);

var _lib = __webpack_require__(/*! ../../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var buffer = [];
var index = 0;
var tryCounter = void 0;

var Undo = function () {
    function Undo() {
        _classCallCheck(this, Undo);
    }

    _createClass(Undo, null, [{
        key: 'init',
        value: function init() {
            index = buffer.length;
            Undo.update();
        }
    }, {
        key: 'setup',
        value: function setup(p) {
            var div = (0, _lib.newHTML)('div', 'controlundo', p);
            div.setAttribute('id', 'undocontrols');
            var lib = [['undo', Undo.prevStep], ['redo', Undo.nextStep]];
            for (var i = 0; i < lib.length; i++) {
                Undo.newToggleClicky(div, 'id_', lib[i][0], lib[i][1]);
            }
            Undo.update();
        }
    }, {
        key: 'newToggleClicky',
        value: function newToggleClicky(p, prefix, key, fcn) {
            var div = (0, _lib.newHTML)('div', key + 'button', p);
            div.setAttribute('type', 'toggleclicky');
            div.setAttribute('id', prefix + key);
            if (fcn) {
                div.ontouchstart = function (evt) {
                    fcn(evt);
                };
                div.onmousedown = function (evt) {
                    fcn(evt);
                };
            }
            return div;
        }
    }, {
        key: 'record',
        value: function record(obj) {
            //console.log ("record", index, JSON.stringify(obj));
            if (_ScratchJr2.default.getActiveScript()) {
                _ScratchJr2.default.getActiveScript().owner.removeCaret();
            }
            if (index + 1 <= buffer.length) {
                buffer.splice(index + 1, buffer.length);
            }
            var data = _Project2.default.getUndo();
            for (var key in obj) {
                data[key] = obj[key];
            }
            buffer.push(data);
            index++;
            Undo.update();

            // Project change state is usually tracked by looking if a particular action would record an undo
            // We need slightly more specific behavior for story starters, so storyStarted is unaffected here.
            _ScratchJr2.default.changed = true;
        }

        //////////////////////////////////
        // Control buttons callbacks
        //
        ////////////////////////////////

    }, {
        key: 'prevStep',
        value: function prevStep(e) {
            if (_lib.isTablet && e.touches && e.touches.length > 1) {
                return;
            }
            e.preventDefault();
            e.stopPropagation();
            _ScratchJr2.default.unfocus();
            _ScratchJr2.default.time = e.timeStamp;
            while (index >= buffer.length) {
                index--;
            }
            index--;
            var snd = index < 0 ? 'boing.wav' : 'tap.wav';
            _ScratchAudio2.default.sndFX(snd);
            if (index < 0) {
                index = 0;
            } else {
                Undo.smartRecreate('prev', buffer[index + 1], buffer[index]);
            }
        }
    }, {
        key: 'nextStep',
        value: function nextStep(e) {
            if (_lib.isTablet && e.touches && e.touches.length > 1) {
                return;
            }
            e.preventDefault();
            e.stopPropagation();
            _ScratchJr2.default.unfocus();
            _ScratchJr2.default.time = e.timeStamp;
            index++;
            var snd = index > buffer.length - 1 ? 'boing.wav' : 'tap.wav';
            _ScratchAudio2.default.sndFX(snd);
            if (index > buffer.length - 1) {
                index = buffer.length - 1;
            } else {
                Undo.smartRecreate('next', buffer[index], buffer[index]);
            }
        }
    }, {
        key: 'smartRecreate',
        value: function smartRecreate(cmd, elem, data) {
            _ScratchJr2.default.stopStrips();
            var action = elem.action;
            var page = elem.where;
            var spr = elem.who;
            //  console.log (action, page, spr);
            switch (action) {
                case 'pageorder':
                    _ScratchJr2.default.stage.pages = Undo.getPageOrder(data);
                    Undo.recreateAllScripts(data);
                    _ScratchJr2.default.stage.setPage((0, _lib.gn)(data.currentPage).owner, false);
                    if (_Palette2.default.numcat == 5) {
                        _Palette2.default.selectCategory(5);
                    }
                    break;
                case 'changepage':
                    _ScratchJr2.default.stage.setPage((0, _lib.gn)(data.currentPage).owner, false);
                    break;
                case 'changebkg':
                    (0, _lib.gn)(page).owner.redoChangeBkg(data);
                    break;
                case 'scripts':
                    Undo.redoScripts(data, page, spr);
                    if (spr && (0, _lib.gn)(spr)) {
                        (0, _lib.gn)(page).owner.setCurrentSprite((0, _lib.gn)(spr).owner); // sets the variables
                        _Thumbs2.default.selectThisSprite((0, _lib.gn)(spr).owner); // sets the UI
                        _UI2.default.resetSpriteLibrary();
                    }
                    break;
                case 'deletepage':
                case 'addpage':
                    if (data[page]) {
                        Undo.copyPage(data, page);
                    } else {
                        Undo.removePage(data, page);
                    }
                    break;
                case 'deletesprite':
                case 'copy':
                    if (data[page][spr]) {
                        Undo.copySprite(data, page, spr);
                    } else {
                        Undo.removeSprite(data, page, spr);
                    }
                    break;
                case 'deletesound':
                    var sounds = data[page][spr].sounds.concat();
                    (0, _lib.gn)(spr).owner.sounds = sounds;
                    Undo.redoScripts(data, page, spr);
                    if (_Palette2.default.numcat == 3) {
                        _Palette2.default.selectCategory(3);
                    }
                    break;
                case 'recordsound':
                    spr = (0, _lib.gn)(data[page][spr].id).owner;
                    if (elem.sound && spr.sounds.indexOf(elem.sound) > -1) {
                        var indx = spr.sounds.indexOf(elem.sound);
                        if (indx > -1) {
                            spr.sounds.splice(indx, 1);
                        }
                    } else {
                        spr.sounds.push(elem.sound);
                    }
                    if (_Palette2.default.numcat == 3) {
                        _Palette2.default.selectCategory(3);
                    }
                    break;
                case 'edittext': // sprite delete or add
                case 'modify':
                    Undo.removeSprite(data, page, spr);
                    if (data[page][spr]) {
                        Undo.copySprite(data, page, spr);
                    }
                    break;
                default:
                    _Project2.default.clear();
                    Undo.recreate(buffer[index]);
                    break;
            }
            Undo.update();
        }
    }, {
        key: 'copyPage',
        value: function copyPage(obj, page) {
            var sc = _ScratchJr2.default.getSprite() ? (0, _lib.gn)(_ScratchJr2.default.stage.currentPage.currentSpriteName + '_scripts') : undefined;
            if (sc) {
                sc.owner.deactivate();
            }
            _Project2.default.recreatePage(page, obj[page], nextStep2);
            function nextStep2() {
                _ScratchJr2.default.stage.pages = Undo.getPageOrder(obj);
                _ScratchJr2.default.stage.setPage((0, _lib.gn)(obj.currentPage).owner, false);
                Undo.recreateAllScripts(obj);
                var spritename = obj[obj.currentPage].lastSprite;
                if (spritename && (0, _lib.gn)(spritename)) {
                    var spr = (0, _lib.gn)(spritename).owner;
                    var page = spr.div.parentNode.owner;
                    page.setCurrentSprite(spr);
                    _Thumbs2.default.selectThisSprite(spr);
                    if (_Palette2.default.numcat == 5) {
                        _Palette2.default.selectCategory(5);
                    }
                }
            }
        }
    }, {
        key: 'getPageOrder',
        value: function getPageOrder(data) {
            var pages = data.pages;
            var res = [];
            for (var i = 0; i < pages.length; i++) {
                res.push((0, _lib.gn)(pages[i]).owner);
            }
            return res;
        }
    }, {
        key: 'recreateAllScripts',
        value: function recreateAllScripts(data) {
            for (var n = 0; n < data.pages.length; n++) {
                var page = data[data.pages[n]];
                var sprnames = page.sprites;
                for (var i = 0; i < sprnames.length; i++) {
                    var spr = page[sprnames[i]];
                    if (!spr) {
                        continue;
                    }
                    if (spr.type != 'sprite') {
                        continue;
                    }
                    var sc = (0, _lib.gn)(spr.id + '_scripts');
                    if (!sc) {
                        continue;
                    }
                    Undo.redoScripts(data, data.pages[n], sprnames[i]);
                }
            }
        }
    }, {
        key: 'removePage',
        value: function removePage(data, str) {
            if (!(0, _lib.gn)(str)) {
                return;
            }
            var page = (0, _lib.gn)(str).owner;
            if (!page) {
                return;
            }
            _ScratchJr2.default.stage.removePageBlocks(str);
            _ScratchJr2.default.stage.removePage(page);
            _ScratchJr2.default.stage.pages = Undo.getPageOrder(data);
            if (_ScratchJr2.default.stage.pages.length == 0) {
                Undo.copyPage(data, data.currentPage);
            } else {
                _ScratchJr2.default.stage.setViewPage((0, _lib.gn)(data.currentPage).owner);
                _Thumbs2.default.updateSprites();
                _Thumbs2.default.updatePages();
            }
        }
    }, {
        key: 'redoScripts',
        value: function redoScripts(data, page, spr) {
            var div = (0, _lib.gn)(spr + '_scripts');
            while (div.childElementCount > 0) {
                div.removeChild(div.childNodes[0]);
            }
            var sc = div.owner;
            var list = data[page][spr].scripts;
            for (var j = 0; j < list.length; j++) {
                sc.recreateStrip(list[j]);
            }
        }
    }, {
        key: 'copySprite',
        value: function copySprite(data, page, spr) {
            var obj = data[page][spr];
            var fcn = function fcn(spr) {
                if (spr.type == 'sprite') {
                    if (page == _ScratchJr2.default.stage.currentPage.id) {
                        spr.div.style.visibility = 'visible';
                    }
                    Undo.setSprite(page, data);
                } else {
                    var delta = spr.fontsize * 1.35;
                    if (spr.homey == spr.page.textstartat) {
                        spr.page.textstartat += delta;
                    }
                    _Thumbs2.default.updatePages();
                }
            };
            _Project2.default.recreateObject((0, _lib.gn)(page).owner, spr, obj, fcn, data[page].lastSprite == spr);
        }
    }, {
        key: 'setSprite',
        value: function setSprite(page, data) {
            _Thumbs2.default.updatePages();
            if (page != _ScratchJr2.default.stage.currentPage.id) {
                return;
            }
            var pageobj = (0, _lib.gn)(page).owner;
            var lastspritename = data[page].lastSprite;
            var lastsprite = lastspritename ? (0, _lib.gn)(lastspritename) : undefined;
            if (!lastsprite) {
                pageobj.setCurrentSprite(undefined);
            } else {
                var cs = lastsprite.owner;
                pageobj.setCurrentSprite(cs);
                _UI2.default.needsScroll();
                _Thumbs2.default.updateSprites();
            }
        }
    }, {
        key: 'removeSprite',
        value: function removeSprite(data, page, spr) {
            if (!(0, _lib.gn)(spr)) {
                return;
            }
            var sprite = (0, _lib.gn)(spr).owner;
            var th = sprite.thumbnail;
            _ScratchJr2.default.runtime.stopThreadSprite(sprite);
            var pageobj = (0, _lib.gn)(page).owner;
            var list = JSON.parse(pageobj.sprites);
            var n = list.indexOf(spr);
            list.splice(n, 1);
            pageobj.sprites = JSON.stringify(list);
            (0, _lib.gn)(spr).parentNode.removeChild((0, _lib.gn)(spr));
            if (!(0, _lib.gn)(spr + '_scripts')) {
                _Thumbs2.default.updatePages();
                return;
            }
            var sc = (0, _lib.gn)(spr + '_scripts');
            if (sc) {
                sc.parentNode.removeChild(sc);
            }
            if (th && th.parentNode) {
                th.parentNode.removeChild(th);
            }
            Undo.setSprite(page, data);
        }
    }, {
        key: 'recreate',
        value: function recreate(data) {
            _Project2.default.mediaCount = 0;
            _ScratchJr2.default.stage.pages = [];
            var pages = data.pages;
            if (data.projectsounds) {
                _ScratchAudio2.default.projectsounds = data.projectsounds;
            }
            for (var i = 0; i < pages.length; i++) {
                _Project2.default.recreatePage(pages[i], data[pages[i]]);
            }
            Undo.loadPage(data.currentPage);
        }
    }, {
        key: 'loadPage',
        value: function loadPage(pageid) {
            var pages = _ScratchJr2.default.stage.getPagesID();
            if (pages.indexOf(pageid) < 0) {
                _ScratchJr2.default.stage.currentPage = _ScratchJr2.default.stage.pages[0];
            } else {
                _ScratchJr2.default.stage.currentPage = _ScratchJr2.default.stage.getPage(pageid);
            }
            _ScratchJr2.default.stage.currentPage.div.style.visibility = 'visible';
            _ScratchJr2.default.stage.currentPage.setPageSprites('visible');
            tryCounter = 100;
            if (_Project2.default.mediaCount > 0) {
                setTimeout(function () {
                    Undo.updateImages();
                }, 20);
            } else {
                Undo.doneLoading();
            }
        }
    }, {
        key: 'updateImages',
        value: function updateImages() {
            tryCounter--;
            var done = _Project2.default.mediaCount < 1 || tryCounter < 1;
            if (done) {
                Undo.doneLoading();
            } else {
                setTimeout(function () {
                    Undo.updateImages();
                }, 20);
            }
        }
    }, {
        key: 'flashIcon',
        value: function flashIcon(div, press) {
            div.setAttribute('class', press);
            setTimeout(function () {
                Undo.update();
            }, 1000);
        }
    }, {
        key: 'doneLoading',
        value: function doneLoading() {
            _Thumbs2.default.updateSprites();
            _Thumbs2.default.updatePages();
        }
    }, {
        key: 'update',
        value: function update() {
            if ((0, _lib.gn)('id_undo')) {
                if (buffer.length == 1) {
                    Undo.tunOffButton((0, _lib.gn)('id_undo'));
                } else {
                    if (index < 1) {
                        Undo.tunOffButton((0, _lib.gn)('id_undo'));
                    } else {
                        Undo.tunOnButton((0, _lib.gn)('id_undo'));
                    }
                }
                if (index >= buffer.length - 1) {
                    Undo.tunOffButton((0, _lib.gn)('id_redo'));
                } else {
                    Undo.tunOnButton((0, _lib.gn)('id_redo'));
                }
            }
        }
    }, {
        key: 'tunOnButton',
        value: function tunOnButton(kid) {
            var kclass = kid.getAttribute('class').split(' ')[0];
            kid.setAttribute('class', kclass + ' enable');
        }
    }, {
        key: 'tunOffButton',
        value: function tunOffButton(kid) {
            var kclass = kid.getAttribute('class').split(' ')[0];
            kid.setAttribute('class', kclass + ' disable');
        }
    }]);

    return Undo;
}();

exports.default = Undo;

/***/ }),

/***/ "./src/entry/app.js":
/*!**************************!*\
  !*** ./src/entry/app.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _lib = __webpack_require__(/*! ../utils/lib */ "./src/utils/lib.js");

var _Localization = __webpack_require__(/*! ../utils/Localization */ "./src/utils/Localization.js");

var _Localization2 = _interopRequireDefault(_Localization);

var _InitialOptions = __webpack_require__(/*! ../utils/InitialOptions */ "./src/utils/InitialOptions.js");

var _InitialOptions2 = _interopRequireDefault(_InitialOptions);

var _OS = __webpack_require__(/*! ../tablet/OS */ "./src/tablet/OS.js");

var _OS2 = _interopRequireDefault(_OS);

var _IO = __webpack_require__(/*! ../tablet/IO */ "./src/tablet/IO.js");

var _IO2 = _interopRequireDefault(_IO);

var _MediaLib = __webpack_require__(/*! ../tablet/MediaLib */ "./src/tablet/MediaLib.js");

var _MediaLib2 = _interopRequireDefault(_MediaLib);

var _index = __webpack_require__(/*! ./index */ "./src/entry/index.js");

var _home = __webpack_require__(/*! ./home */ "./src/entry/home.js");

var _editor = __webpack_require__(/*! ./editor */ "./src/entry/editor.js");

var _gettingstarted = __webpack_require__(/*! ./gettingstarted */ "./src/entry/gettingstarted.js");

var _inapp = __webpack_require__(/*! ./inapp */ "./src/entry/inapp.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function loadSettings(settingsRoot, whenDone) {
    _IO2.default.requestFromServer(settingsRoot + 'settings.json', function (result) {
        window.Settings = JSON.parse(result);
        whenDone();
    });
}

// App-wide entry-point
window.onload = function () {
    // Function to be called after settings, locale strings, and Media Lib
    // are asynchronously loaded. This is overwritten per HTML page below.
    var entryFunction = function entryFunction() {};

    // Root directory for includes. Needed in case we are in the inapp-help
    // directory (and root becomes '../')
    var root = './';

    // scratchJrPage is defined in the HTML pages
    var page = window.scratchJrPage;

    // Load CSS and set root/entryFunction for all pages
    switch (page) {
        case 'index':
            // Index page (splash screen)
            (0, _lib.preprocessAndLoadCss)('css', 'css/font.css');
            (0, _lib.preprocessAndLoadCss)('css', 'css/base.css');
            (0, _lib.preprocessAndLoadCss)('css', 'css/start.css');
            (0, _lib.preprocessAndLoadCss)('css', 'css/thumbs.css');
            /* For parental gate. These CSS properties should be refactored */
            (0, _lib.preprocessAndLoadCss)('css', 'css/editor.css');
            entryFunction = function entryFunction() {
                return _OS2.default.waitForInterface(function () {
                    var assets = Object.keys(_MediaLib2.default.keys).join(',');
                    _OS2.default.registerLibraryAssets(_MediaLib2.default.version, assets, _index.indexMain);
                });
            };
            break;
        case 'home':
            // Lobby pages
            (0, _lib.preprocessAndLoadCss)('css', 'css/font.css');
            (0, _lib.preprocessAndLoadCss)('css', 'css/base.css');
            (0, _lib.preprocessAndLoadCss)('css', 'css/lobby.css');
            (0, _lib.preprocessAndLoadCss)('css', 'css/thumbs.css');
            entryFunction = function entryFunction() {
                return _OS2.default.waitForInterface(_home.homeMain);
            };
            break;
        case 'editor':
            // Editor pages
            (0, _lib.preprocessAndLoadCss)('css', 'css/font.css');
            (0, _lib.preprocessAndLoadCss)('css', 'css/base.css');
            (0, _lib.preprocessAndLoadCss)('css', 'css/editor.css');
            (0, _lib.preprocessAndLoadCss)('css', 'css/editorleftpanel.css');
            (0, _lib.preprocessAndLoadCss)('css', 'css/editorstage.css');
            (0, _lib.preprocessAndLoadCss)('css', 'css/editormodal.css');
            (0, _lib.preprocessAndLoadCss)('css', 'css/librarymodal.css');
            (0, _lib.preprocessAndLoadCss)('css', 'css/paintlook.css');
            entryFunction = function entryFunction() {
                return _OS2.default.waitForInterface(_editor.editorMain);
            };
            break;
        case 'gettingStarted':
            // Getting started video page
            (0, _lib.preprocessAndLoadCss)('css', 'css/font.css');
            (0, _lib.preprocessAndLoadCss)('css', 'css/base.css');
            (0, _lib.preprocessAndLoadCss)('css', 'css/gs.css');
            entryFunction = function entryFunction() {
                return _OS2.default.waitForInterface(_gettingstarted.gettingStartedMain);
            };
            break;
        case 'inappAbout':
            // About ScratchJr in-app help frame
            (0, _lib.preprocessAndLoadCss)('style', 'style/about.css');
            entryFunction = function entryFunction() {
                return (0, _inapp.inappAbout)();
            };
            root = '../';
            break;
        case 'inappInterfaceGuide':
            // Interface guide in-app help frame
            (0, _lib.preprocessAndLoadCss)('style', 'style/style.css');
            (0, _lib.preprocessAndLoadCss)('style', 'style/interface.css');
            entryFunction = function entryFunction() {
                return (0, _inapp.inappInterfaceGuide)();
            };
            root = '../';
            break;
        case 'inappPaintEditorGuide':
            // Paint editor guide in-app help frame
            (0, _lib.preprocessAndLoadCss)('style', 'style/style.css');
            (0, _lib.preprocessAndLoadCss)('style', 'style/paint.css');
            entryFunction = function entryFunction() {
                return (0, _inapp.inappPaintEditorGuide)();
            };
            root = '../';
            break;
        case 'inappBlocksGuide':
            // Blocks guide in-app help frame
            (0, _lib.preprocessAndLoadCss)('style', 'style/style.css');
            (0, _lib.preprocessAndLoadCss)('style', 'style/blocks.css');
            entryFunction = function entryFunction() {
                return (0, _inapp.inappBlocksGuide)();
            };
            root = '../';
            break;
        case 'inappPrivacyPolicy':
            // Blocks guide in-app help frame
            (0, _lib.preprocessAndLoadCss)('style', 'style/style.css');
            (0, _lib.preprocessAndLoadCss)('style', 'style/privacy.css');
            entryFunction = function entryFunction() {
                return (0, _inapp.inappPrivacyPolicy)();
            };
            root = '../';
            break;
    }

    // Start up sequence
    // Load settings from JSON
    loadSettings(root, function () {
        // Load locale strings from JSON
        _Localization2.default.includeLocales(root, function () {
            // Load Media Lib from JSON
            _MediaLib2.default.loadMediaLib(root, function () {
                entryFunction();
            });
        });
        // Initialize currentUsage data
        _InitialOptions2.default.initWithSettings(window.Settings.initialOptions);
    });
};

/***/ }),

/***/ "./src/entry/editor.js":
/*!*****************************!*\
  !*** ./src/entry/editor.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.editorMain = editorMain;

var _ScratchJr = __webpack_require__(/*! ../editor/ScratchJr */ "./src/editor/ScratchJr.js");

var _ScratchJr2 = _interopRequireDefault(_ScratchJr);

var _OS = __webpack_require__(/*! ../tablet/OS */ "./src/tablet/OS.js");

var _OS2 = _interopRequireDefault(_OS);

var _Camera = __webpack_require__(/*! ../painteditor/Camera */ "./src/painteditor/Camera.js");

var _Camera2 = _interopRequireDefault(_Camera);

var _Record = __webpack_require__(/*! ../editor/ui/Record */ "./src/editor/ui/Record.js");

var _Record2 = _interopRequireDefault(_Record);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function editorMain() {
    _OS2.default.getsettings(doNext);
    _OS2.default.analyticsEvent('editor', 'project_editor_open');
    function doNext(str) {
        var list = str.split(',');
        _OS2.default.path = list[1] == '0' ? list[0] + '/' : undefined;
        if (list.length > 2) {
            _Record2.default.available = list[2] == 'YES' ? true : false;
        }
        if (list.length > 3) {
            _Camera2.default.available = list[3] == 'YES' ? true : false;
        }
        _ScratchJr2.default.appinit(window.Settings.scratchJrVersion);
    }
}

/***/ }),

/***/ "./src/entry/gettingstarted.js":
/*!*************************************!*\
  !*** ./src/entry/gettingstarted.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.gettingStartedMain = gettingStartedMain;

var _lib = __webpack_require__(/*! ../utils/lib */ "./src/utils/lib.js");

var place = void 0;

function gettingStartedMain() {
    (0, _lib.gn)('closeHelp').onclick = gettingStartedCloseMe;
    (0, _lib.gn)('closeHelp').ontouchstart = gettingStartedCloseMe;
    var videoObj = (0, _lib.gn)('myVideo');
    videoObj.poster = 'assets/lobby/poster.png';
    var image = document.createElement('img');
    image.src = videoObj.poster;
    image.onload = function () {
        videoObj.style.display = 'block';
    };
    if (_lib.isiOS) {
        // On iOS we can load from server
        videoObj.src = 'assets/lobby/intro.mp4';
    } else {
        // On Android we need to copy to a temporary directory first:
        setTimeout(function () {
            videoObj.type = 'video/mp4';
            videoObj.src = AndroidInterface.scratchjr_getgettingstartedvideopath();
        }, 1000);
    }
    var urlvars = (0, _lib.getUrlVars)();
    place = urlvars['place'];
    document.ontouchmove = function (e) {
        e.preventDefault();
    };
}

function gettingStartedCloseMe() {
    window.location.href = 'home.html?place=' + place;
}

/***/ }),

/***/ "./src/entry/home.js":
/*!***************************!*\
  !*** ./src/entry/home.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.homeMain = homeMain;

var _lib = __webpack_require__(/*! ../utils/lib */ "./src/utils/lib.js");

var _Localization = __webpack_require__(/*! ../utils/Localization */ "./src/utils/Localization.js");

var _Localization2 = _interopRequireDefault(_Localization);

var _OS = __webpack_require__(/*! ../tablet/OS */ "./src/tablet/OS.js");

var _OS2 = _interopRequireDefault(_OS);

var _Lobby = __webpack_require__(/*! ../lobby/Lobby */ "./src/lobby/Lobby.js");

var _Lobby2 = _interopRequireDefault(_Lobby);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function homeMain() {
    (0, _lib.gn)('logotab').onclick = homeGoBack;
    homeStrings();
    _OS2.default.getsettings(doNext);
    function doNext(str) {
        var list = str.split(',');
        _OS2.default.path = list[1] == '0' ? list[0] + '/' : undefined;
        _Lobby2.default.appinit(window.Settings.scratchJrVersion);
    }
}

function homeGoBack() {
    window.location.href = 'index.html?back=yes';
}

function homeStrings() {
    (0, _lib.gn)('abouttab-text').textContent = _Localization2.default.localize('ABOUT_SCRATCHJR');
    (0, _lib.gn)('interfacetab-text').textContent = _Localization2.default.localize('INTERFACE_GUIDE');
    (0, _lib.gn)('painttab-text').textContent = _Localization2.default.localize('PAINT_EDITOR_GUIDE');
    (0, _lib.gn)('blockstab-text').textContent = _Localization2.default.localize('BLOCKS_GUIDE');
    (0, _lib.gn)('privacytab-text').textContent = _Localization2.default.localize('PRIVACY_POLICY');
}

/***/ }),

/***/ "./src/entry/inapp.js":
/*!****************************!*\
  !*** ./src/entry/inapp.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.inappAbout = inappAbout;
exports.inappInterfaceGuide = inappInterfaceGuide;
exports.inappPaintEditorGuide = inappPaintEditorGuide;
exports.inappBlocksGuide = inappBlocksGuide;
exports.inappPrivacyPolicy = inappPrivacyPolicy;

var _lib = __webpack_require__(/*! ../utils/lib */ "./src/utils/lib.js");

var _Localization = __webpack_require__(/*! ../utils/Localization */ "./src/utils/Localization.js");

var _Localization2 = _interopRequireDefault(_Localization);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function inappAbout() {
    (0, _lib.gn)('aboutScratchjrTitle').textContent = _Localization2.default.localize('ABOUT_SCRATCHJR');
    (0, _lib.gn)('aboutWhatIs').textContent = _Localization2.default.localize('ABOUT_WHAT_IS');
    (0, _lib.gn)('aboutDescription').innerHTML = _Localization2.default.localize('ABOUT_DESCRIPTION') + '<br/><br/>' + _Localization2.default.localize('ABOUT_INSPIRED_BY');
    (0, _lib.gn)('aboutWhyCreate').textContent = _Localization2.default.localize('ABOUT_WHY_CREATE');
    (0, _lib.gn)('aboutWhyCreateDescription').innerHTML = _Localization2.default.localize('ABOUT_WHY_CREATE_DESCRIPTION');
    (0, _lib.gn)('aboutWhoCreated').textContent = _Localization2.default.localize('ABOUT_WHO_CREATED');
    (0, _lib.gn)('aboutWhoCreatedDescription').innerHTML = _Localization2.default.localize('ABOUT_WHO_CREATED_DESCRIPTION');
    (0, _lib.gn)('aboutWhoSupported').textContent = _Localization2.default.localize('ABOUT_WHO_SUPPORTED');
    (0, _lib.gn)('aboutWhoSupportedDescription').innerHTML = _Localization2.default.localize('ABOUT_WHO_SUPPORTED_DESCRIPTION');

    // PBS-only
    if (window.Settings.edition == 'PBS') {
        (0, _lib.gn)('aboutWhatIsPbs').innerHTML = _Localization2.default.localize('ABOUT_WHAT_IS_PBS');
        (0, _lib.gn)('aboutWhatIsPbsDescription').innerHTML = _Localization2.default.localize('ABOUT_WHAT_IS_PBS_DESCRIPTION');
        (0, _lib.gn)('aboutPbsShows').innerHTML = _Localization2.default.localize('ABOUT_PBS_SHOWS');
        (0, _lib.gn)('aboutPbsShowsDescription').innerHTML = _Localization2.default.localize('ABOUT_PBS_SHOWS_DESCRIPTION');
    }
}

function inappInterfaceGuide() {
    var interfaceKeyHeaderNode = (0, _lib.gn)('interface-key-header');
    var interfaceKeyDescriptionNode = (0, _lib.gn)('interface-key-description');

    interfaceKeyHeaderNode.textContent = _Localization2.default.localize('INTERFACE_GUIDE_SAVE', { N: 1 });
    interfaceKeyDescriptionNode.textContent = _Localization2.default.localize('INTERFACE_GUIDE_SAVE_DESCRIPTION');

    var interfaceKeys = ['SAVE', 'STAGE', 'PRESENTATION_MODE', 'GRID', 'CHANGE_BG', 'ADD_TEXT', 'RESET_CHAR', 'GREEN_FLAG', 'PAGES', 'PROJECT_INFO', 'UNDO_REDO', 'PROGRAMMING_SCRIPT', 'PROGRAMMING_AREA', 'BLOCKS_PALETTE', 'BLOCKS_CATEGORIES', 'CHARACTERS'];

    var interfaceDescriptions = [];
    for (var i = 0; i < interfaceKeys.length; i++) {
        var key = interfaceKeys[i];
        interfaceDescriptions.push([_Localization2.default.localize('INTERFACE_GUIDE_' + key, { N: i + 1 }), _Localization2.default.localize('INTERFACE_GUIDE_' + key + '_DESCRIPTION')]);
    }

    var currentButton = document.getElementById('interface-button-save');

    var switchHelp = function switchHelp(e) {
        var target = e.target;
        if (target.className == 'interface-button-text') {
            var descriptionId = parseInt(target.innerText - 1);
            interfaceKeyHeaderNode.textContent = interfaceDescriptions[descriptionId][0];
            interfaceKeyDescriptionNode.textContent = interfaceDescriptions[descriptionId][1];
            currentButton.className = 'interface-button';
            currentButton = target.parentNode;
            currentButton.className = currentButton.className + ' interface-button-selected';
            window.parent.ScratchAudio.sndFXWithVolume('keydown.wav', 0.3);
        }
    };
    document.addEventListener('click', switchHelp, false);
}

function inappPaintEditorGuide() {
    var paintKeyHeaderNode = (0, _lib.gn)('paint-key-header');
    var paintKeyDescriptionNode = (0, _lib.gn)('paint-key-description');

    paintKeyHeaderNode.textContent = _Localization2.default.localize('PAINT_GUIDE_UNDO', { N: 1 });
    paintKeyDescriptionNode.textContent = _Localization2.default.localize('PAINT_GUIDE_UNDO_DESCRIPTION');

    var paintKeys = ['UNDO', 'REDO', 'SHAPE', 'CHARACTER_NAME', 'CUT', 'DUPLICATE', 'ROTATE', 'DRAG', 'SAVE', 'FILL', 'CAMERA', 'COLOR', 'LINE_WIDTH'];

    var paintDescriptions = [];
    for (var i = 0; i < paintKeys.length; i++) {
        var key = paintKeys[i];
        paintDescriptions.push([_Localization2.default.localize('PAINT_GUIDE_' + key, { N: i + 1 }), _Localization2.default.localize('PAINT_GUIDE_' + key + '_DESCRIPTION')]);
    }

    var currentButton = document.getElementById('paint-button-undo');

    var switchHelp = function switchHelp(e) {
        var target = e.target;
        if (target.className == 'paint-button-text') {
            var descriptionId = parseInt(target.innerText - 1);
            paintKeyHeaderNode.textContent = paintDescriptions[descriptionId][0];
            paintKeyDescriptionNode.textContent = paintDescriptions[descriptionId][1];
            currentButton.className = 'paint-button';
            currentButton = target.parentNode;
            currentButton.className = currentButton.className + ' paint-button-selected';
            window.parent.ScratchAudio.sndFXWithVolume('keydown.wav', 0.3);
        }
    };
    document.addEventListener('click', switchHelp, false);
}

function inappBlocksGuide() {
    // Localized category names
    (0, _lib.gn)('yellow-block-category-header').textContent = _Localization2.default.localize('BLOCKS_TRIGGERING_BLOCKS');
    (0, _lib.gn)('blue-block-category-header').textContent = _Localization2.default.localize('BLOCKS_MOTION_BLOCKS');
    (0, _lib.gn)('purple-block-category-header').textContent = _Localization2.default.localize('BLOCKS_LOOKS_BLOCKS');
    (0, _lib.gn)('green-block-category-header').textContent = _Localization2.default.localize('BLOCKS_SOUND_BLOCKS');
    (0, _lib.gn)('orange-block-category-header').textContent = _Localization2.default.localize('BLOCKS_CONTROL_BLOCKS');
    (0, _lib.gn)('red-block-category-header').textContent = _Localization2.default.localize('BLOCKS_END_BLOCKS');

    var blockDescriptionKeys = ['BLOCKS_GREEN_FLAG', 'BLOCKS_GREEN_FLAG_DESCRIPTION', 'BLOCKS_ON_TAP', 'BLOCKS_ON_TAP_DESCRIPTION', 'BLOCKS_ON_TOUCH', 'BLOCKS_ON_TOUCH_DESCRIPTION', 'BLOCKS_ON_MESSAGE', 'BLOCKS_ON_MESSAGE_DESCRIPTION', 'BLOCKS_SEND_MESSAGE', 'BLOCKS_SEND_MESSAGE_DESCRIPTION', 'BLOCKS_MOVE_RIGHT', 'BLOCKS_MOVE_RIGHT_DESCRIPTION', 'BLOCKS_MOVE_LEFT', 'BLOCKS_MOVE_LEFT_DESCRIPTION', 'BLOCKS_MOVE_UP', 'BLOCKS_MOVE_UP_DESCRIPTION', 'BLOCKS_MOVE_DOWN', 'BLOCKS_MOVE_DOWN_DESCRIPTION', 'BLOCKS_TURN_RIGHT', 'BLOCKS_TURN_RIGHT_DESCRIPTION', 'BLOCKS_TURN_LEFT', 'BLOCKS_TURN_LEFT_DESCRIPTION', 'BLOCKS_HOP', 'BLOCKS_HOP_DESCRIPTION', 'BLOCKS_GO_HOME', 'BLOCKS_GO_HOME_DESCRIPTION', 'BLOCKS_SAY', 'BLOCKS_SAY_DESCRIPTION', 'BLOCKS_GROW', 'BLOCKS_GROW_DESCRIPTION', 'BLOCKS_SHRINK', 'BLOCKS_SHRINK_DESCRIPTION', 'BLOCKS_RESET_SIZE', 'BLOCKS_RESET_SIZE_DESCRIPTION', 'BLOCKS_HIDE', 'BLOCKS_HIDE_DESCRIPTION', 'BLOCKS_SHOW', 'BLOCKS_SHOW_DESCRIPTION', 'BLOCKS_POP', 'BLOCKS_POP_DESCRIPTION', 'BLOCKS_PLAY_RECORDED', 'BLOCKS_PLAY_RECORDED_DESCRIPTION', 'BLOCKS_WAIT', 'BLOCKS_WAIT_DESCRIPTION', 'BLOCKS_STOP', 'BLOCKS_STOP_DESCRIPTION', 'BLOCKS_SET_SPEED', 'BLOCKS_SET_SPEED_DESCRIPTION', 'BLOCKS_REPEAT', 'BLOCKS_REPEAT_DESCRIPTION', 'BLOCKS_END', 'BLOCKS_END_DESCRIPTION', 'BLOCKS_REPEAT_FOREVER', 'BLOCKS_REPEAT_FOREVER_DESCRIPTION', 'BLOCKS_GO_TO_PAGE', 'BLOCKS_GO_TO_PAGE_DESCRIPTION'];

    for (var i = 0; i < blockDescriptionKeys.length; i++) {
        (0, _lib.gn)(blockDescriptionKeys[i]).textContent = _Localization2.default.localize(blockDescriptionKeys[i]);
    }
}

function inappPrivacyPolicy() {
    var elements = document.querySelectorAll('[data-i18n]');
    elements.forEach(function (item) {
        var key = item.getAttribute('data-i18n');
        item.innerHTML = _Localization2.default.localize(key);
    });
}

/***/ }),

/***/ "./src/entry/index.js":
/*!****************************!*\
  !*** ./src/entry/index.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.indexMain = indexMain;

var _ScratchAudio = __webpack_require__(/*! ../utils/ScratchAudio */ "./src/utils/ScratchAudio.js");

var _ScratchAudio2 = _interopRequireDefault(_ScratchAudio);

var _lib = __webpack_require__(/*! ../utils/lib */ "./src/utils/lib.js");

var _OS = __webpack_require__(/*! ../tablet/OS */ "./src/tablet/OS.js");

var _OS2 = _interopRequireDefault(_OS);

var _UI = __webpack_require__(/*! ../editor/ui/UI */ "./src/editor/ui/UI.js");

var _UI2 = _interopRequireDefault(_UI);

var _Localization = __webpack_require__(/*! ../utils/Localization */ "./src/utils/Localization.js");

var _Localization2 = _interopRequireDefault(_Localization);

var _InitialOptions = __webpack_require__(/*! ../utils/InitialOptions */ "./src/utils/InitialOptions.js");

var _InitialOptions2 = _interopRequireDefault(_InitialOptions);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
When this code starts up, there are several scenarios:
* the app was already running: "AlreadyRunning"
* the app was not already running, but has been opened before: "NewSession"
* the app has never been opened before: "FirstTimeEver"

*/

var alreadyStartedQuestions = false;

function indexMain() {
    (0, _lib.gn)('gettings').onclick = indexGettingstarted;
    (0, _lib.gn)('startcode').onclick = indexGohome;
    _ScratchAudio2.default.init();
    var urlvars = (0, _lib.getUrlVars)();
    if (urlvars.back && _InitialOptions2.default.allQuestionsAnswered()) {
        indexLoadStart();
    } else {
        indexNewSession();
    }

    if (window.Settings.edition == 'PBS') {
        (0, _lib.gn)('topbar-moreapps').textContent = _Localization2.default.localize('PBS_MORE_APPS');
        (0, _lib.gn)('startButton').textContent = _Localization2.default.localize('PBS_START');
        (0, _lib.gn)('gettings').textContent = _Localization2.default.localize('PBS_HOW_TO');

        (0, _lib.gn)('startButton').onclick = indexGohome;
        (0, _lib.gn)('pbschars').onclick = indexGohome;

        (0, _lib.gn)('topbar-moreapps').onclick = indexMoreApps;
        (0, _lib.gn)('topbar-settings').onclick = indexGoSettings;
        (0, _lib.gn)('topbar-info').onclick = indexInfo;
    } else {
        (0, _lib.gn)('gear').onclick = indexGoSettings;
    }

    setTimeout(function () {
        (0, _lib.gn)('rays').className = 'rays spinme';
    }, 250);
}

function startQuestionsIfNotAlreadyStarted() {
    if (!alreadyStartedQuestions) {
        alreadyStartedQuestions = true;
        indexAskRemainingQuestions();
    }
    window.removeEventListener('touchend', startQuestionsIfNotAlreadyStarted, false);
}

function indexNewSession() {
    showSplash();
    _OS2.default.askpermission(); // ask for sound recording
    setTimeout(function () {
        _OS2.default.hidesplash(addTouchListener);
    }, 500);
    // may be necessary to wait for a touch in some environments
    function addTouchListener() {
        window.addEventListener('touchend', startQuestionsIfNotAlreadyStarted, false);
    }
    setTimeout(startQuestionsIfNotAlreadyStarted, 2000);
}

function showSplash() {
    (0, _lib.gn)('authors').className = 'credits show';
    (0, _lib.gn)('authorsText').className = 'creditsText show';
    if (window.Settings.edition == 'PBS') {
        (0, _lib.gn)('pbschars').className = 'characters hide';
        (0, _lib.gn)('startcode').className = 'catlogo show';
        (0, _lib.gn)('topbar').className = 'topbar hide';
        (0, _lib.gn)('startButton').className = 'startButton hide';
    } else {
        (0, _lib.gn)('purpleguy').className = 'purple show';
        (0, _lib.gn)('blueguy').className = 'blue show';
        (0, _lib.gn)('redguy').className = 'red show';
    }
}

function indexHideSplash() {
    (0, _lib.gn)('authors').className = 'credits hide';
    (0, _lib.gn)('authorsText').className = 'creditsText hide';

    if (window.Settings.edition == 'PBS') {
        (0, _lib.gn)('pbschars').className = 'characters show';
        (0, _lib.gn)('topbar').className = 'topbar show';
        (0, _lib.gn)('startButton').className = 'startButton show';
    } else {
        (0, _lib.gn)('purpleguy').className = 'purple hide';
        (0, _lib.gn)('blueguy').className = 'blue hide';
        (0, _lib.gn)('redguy').className = 'red hide';
        (0, _lib.gn)('gear').className = 'gear show';
    }
}

// set analytics prefs for all initial options, whether set in this session
// or before
function indexSetAnalyticsPrefs() {
    var prefs = _InitialOptions2.default.getCurrentVals();
    if (!prefs) return;
    Object.keys(prefs).map(function (key) {
        _OS2.default.setAnalyticsPref(key, prefs[key]);
    });
}

function indexLoadStart() {
    indexHideSplash();
    showLogo();
    showGear();
    (0, _lib.gn)('gettings').className = 'gettings show';
    (0, _lib.gn)('startcode').className = 'startcode show';

    indexSetAnalyticsPrefs();

    document.ontouchmove = function (e) {
        e.preventDefault();
    };
    document.onmousemove = function (e) {
        e.preventDefault();
    };
    if (_lib.isAndroid) {
        AndroidInterface.notifySplashDone();
    }
}

function indexAskRemainingQuestions() {
    var nextQuestionKey = _InitialOptions2.default.nextUnansweredQuestion();
    if (nextQuestionKey) {
        indexShowQuestion(nextQuestionKey);
    } else {
        // done with questions
        indexLoadStart();
    }
}

function hideLogo() {
    (0, _lib.gn)('catface').className = 'catface hide';
    (0, _lib.gn)('jrlogo').className = 'jrlogo hide';
}

function showLogo() {
    (0, _lib.gn)('catface').className = 'catface show';
    (0, _lib.gn)('jrlogo').className = 'jrlogo show';
}

function hideGear() {
    (0, _lib.gn)('gear').className = 'gear hide';
}

function showGear() {
    (0, _lib.gn)('gear').className = 'gear show';
}

function indexAskPlace() {
    (0, _lib.gn)('authors').className = 'credits show';
    (0, _lib.gn)('authorsText').className = 'creditsText hide';
    (0, _lib.gn)('purpleguy').className = 'purple hide';
    (0, _lib.gn)('blueguy').className = 'blue hide';
    (0, _lib.gn)('redguy').className = 'red hide';

    (0, _lib.gn)('usageQuestion').textContent = _Localization2.default.localize('USAGE_QUESTION');
    (0, _lib.gn)('useSchoolText').textContent = _Localization2.default.localize('USAGE_SCHOOL');
    (0, _lib.gn)('useHomeText').textContent = _Localization2.default.localize('USAGE_HOME');
    (0, _lib.gn)('useOtherText').textContent = _Localization2.default.localize('USAGE_OTHER');
    (0, _lib.gn)('usageNoanswerText').textContent = _Localization2.default.localize('USAGE_NONE');

    (0, _lib.gn)('usageQuestion').className = 'usageQuestion show';
    (0, _lib.gn)('usageSchool').className = 'usageSchool show';
    (0, _lib.gn)('usageHome').className = 'usageHome show';
    (0, _lib.gn)('usageOther').className = 'usageOther show';
    (0, _lib.gn)('usageNoanswer').className = 'usageNoanswer show';
    (0, _lib.gn)('usageSchool').onclick = indexSetPlace;
    (0, _lib.gn)('usageHome').onclick = indexSetPlace;
    (0, _lib.gn)('usageOther').onclick = indexSetPlace;
    (0, _lib.gn)('usageNoanswer').onclick = indexSetPlace;
}

function indexSetPlace(e) {
    var usageText = '';

    switch (e.target.parentElement.id) {
        case 'usageSchool':
            usageText = 'school';
            break;
        case 'usageHome':
            usageText = 'home';
            break;
        case 'usageOther':
            usageText = 'other';
            break;
        case 'usageNoanswer':
        default:
            usageText = 'noanswer';
            break;
    }
    // Send one-time analytics event about usage
    _OS2.default.analyticsEvent('lobby', 'scratchjr_usage', usageText);
    _InitialOptions2.default.setValue('place_preference', usageText);
    _ScratchAudio2.default.sndFX('tap.wav');
    indexHidePlaceQuestion();
    indexAskRemainingQuestions();
}

function indexHidePlaceQuestion() {
    (0, _lib.gn)('catface').className = 'catface show';
    (0, _lib.gn)('jrlogo').className = 'jrlogo show';
    (0, _lib.gn)('usageQuestion').className = 'usageQuestion hide';
    (0, _lib.gn)('usageSchool').className = 'usageSchool hide';
    (0, _lib.gn)('usageHome').className = 'usageHome hide';
    (0, _lib.gn)('usageOther').className = 'usageOther hide';
    (0, _lib.gn)('usageNoanswer').className = 'usageNoanswer hide';
}

function optionSelected(elem) {
    var key = elem.target.getAttribute('data-key');
    var value = elem.target.getAttribute('data-value');
    // sometimes a touch is registered by a child of the relevant parent
    if (!key && !value) {
        var parent = elem.target.parentNode;
        key = parent.getAttribute('data-key');
        value = parent.getAttribute('data-value');
    }
    // if we still don't have a key and value, something is wrong -- just go
    // to lobby
    if (!key && !value) {
        indexLoadStart();
        return;
    }
    // elem.target.style.backgroundColor = 'purple';
    // if everything is good, register the selection and advance to next screen
    indexSelectOption(key, value);
}

// show the question for a given settings option key
function indexShowQuestion(key) {
    indexHideSplash();
    hideLogo();
    hideGear();
    var optionType = _InitialOptions2.default.optionTypeForKey(key);
    if (optionType === 'place_preference') {
        indexAskPlace();
    } else {
        // custom question
        var options = _InitialOptions2.default.optionsForKey(key);
        // if we could not find any options, choose 'n/a'
        if (!options || !options.length) {
            indexSelectOption(key, 'none');
            return;
        }
        // if there's only one option, don't bother asking, just choose it!
        if (options.length === 1) {
            indexSelectOption(key, options[0]);
            return;
        }
        // if we got here, there is more than one option...
        var instructionText = _Localization2.default.localizeOptional(_InitialOptions2.default.instructionForKey(key));
        var instructionElem = document.getElementById('optionsInstruction');
        instructionElem.appendChild(document.createTextNode(instructionText));
        (0, _lib.gn)('optionsInstruction').className = 'optionsInstruction show';

        var optionsListElem = document.getElementById('optionsList');
        var optionNum = 0;
        options.forEach(function (option) {
            var optionElem = document.createElement('div');
            optionElem.setAttribute('data-key', key);
            optionElem.setAttribute('data-value', option);
            optionElem.setAttribute('id', 'option-' + key + '-' + optionNum);
            optionElem.onclick = optionSelected;
            optionsListElem.appendChild(optionElem);

            switch (optionType) {
                case 'image':
                    var imgElem = document.createElement('img');
                    imgElem.setAttribute('src', 'svglibrary/' + option);
                    imgElem.setAttribute('style', 'max-width: 150px; max-height: 90px');
                    optionElem.appendChild(imgElem);
                    break;
                case 'text':
                default:
                    var translatedOption = _Localization2.default.localizeOptional(option);
                    optionElem.appendChild(document.createTextNode(translatedOption));
                    break;
            }
            optionNum = optionNum + 1;
        });
        // iPad mini has the minimum screen size, it can show 13 items in one column
        // and we use 3 columns as default
        if (optionNum > 13 * 5) {
            (0, _lib.gn)('optionsList').style['column-count'] = 8;
        } else if (optionNum > 13 * 3) {
            (0, _lib.gn)('optionsList').style['column-count'] = 5;
        } else {
            (0, _lib.gn)('optionsList').style['column-count'] = 3;
        }
        (0, _lib.gn)('optionsList').className = 'optionsList show';
    }
}

// store user selection, and show next question
function indexSelectOption(key, val) {
    _InitialOptions2.default.setValue(key, val);
    _ScratchAudio2.default.sndFX('tap.wav');

    // clear out old options instruction
    var instructionElem = document.getElementById('optionsInstruction');
    instructionElem.innerHTML = '';
    (0, _lib.gn)('optionsInstruction').className = 'optionsInstruction hide';
    // clear out old options content
    var optionsListElem = document.getElementById('optionsList');
    optionsListElem.innerHTML = '';
    (0, _lib.gn)('optionsList').className = 'optionsList hide';

    // show next question, or advance to start screen
    indexAskRemainingQuestions();
}

function indexGohome() {
    _OS2.default.setfile('homescroll.sjr', 0, function () {
        doNext();
    });
    function doNext() {
        window.location.href = 'home.html';
    }
}

function indexGoSettings() {
    // Switch to the settings selection page
    // Triggered by tapping the gear icon in the top right
    _ScratchAudio2.default.sndFX('tap.wav');
    window.location.href = 'home.html?place=gear';
}

function indexGettingstarted() {
    _ScratchAudio2.default.sndFX('tap.wav');
    window.location.href = 'gettingstarted.html?place=home';
}

// For PBS KIDS edition only
function indexInfo() {
    _ScratchAudio2.default.sndFX('tap.wav');
    window.location.href = 'home.html?place=book';
}

function indexMoreApps() {
    _ScratchAudio2.default.sndFX('tap.wav');

    _UI2.default.parentalGate(null, function () {
        if (_lib.isiOS) {
            window.location.href = 'https://itunes.apple.com/us/developer/pbs-kids/id324323339?mt=8';
        } else {
            window.location.href = 'http://to.pbs.org/ScJr_GPlay';
        }
    });
}

/***/ }),

/***/ "./src/geom/Matrix.js":
/*!****************************!*\
  !*** ./src/geom/Matrix.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

////////////////////////////////////////
// Basic Matrix
////////////////////////////////////////

var Matrix = function () {
    function Matrix() {
        _classCallCheck(this, Matrix);

        this.a = 1;
        this.b = 0;
        this.c = 0;
        this.d = 1;
        this.e = 0;
        this.f = 0;
    }

    _createClass(Matrix, [{
        key: "identity",
        value: function identity() {
            this.a = 1;
            this.b = 0;
            this.c = 0;
            this.d = 1;
            this.e = 0;
            this.f = 0;
        }
    }, {
        key: "setMatrix",
        value: function setMatrix(mtx) {
            // webKitMtrx
            this.a = mtx.a;
            this.b = mtx.b;
            this.c = mtx.c;
            this.d = mtx.d;
            this.e = mtx.e;
            this.f = mtx.f;
        }
    }, {
        key: "isIdentity",
        value: function isIdentity() {
            return this.a == 1 && this.b == 0 && this.c == 0 && this.d == 1 && this.e == 0 && this.f == 0;
        }
    }, {
        key: "rotate",
        value: function rotate(angle) {
            var cos = Math.cos(angle * Math.PI / 180);
            var sin = Math.sin(angle * Math.PI / 180);
            this.a = cos;
            this.b = sin;
            this.c = -sin;
            this.d = cos;
        }
    }, {
        key: "scale",
        value: function scale(scalex, scaley) {
            this.a = scalex;
            this.d = scaley ? scaley : scalex;
        }
    }, {
        key: "translate",
        value: function translate(dx, dy) {
            this.e = dx;
            this.f = dy;
        }
    }, {
        key: "transformPoint",
        value: function transformPoint(pt) {
            return {
                x: this.a * pt.x + this.c * pt.y + this.e,
                y: this.b * pt.x + this.d * pt.y + this.f
            };
        }
    }, {
        key: "multiply",
        value: function multiply(m2) {
            var zero = 1e-14;
            var m = new Matrix();
            m.a = this.a * m2.a + this.c * m2.b;
            m.b = this.b * m2.a + this.d * m2.b, m.c = this.a * m2.c + this.c * m2.d, m.d = this.b * m2.c + this.d * m2.d, m.e = this.a * m2.e + this.c * m2.f + this.e, m.f = this.b * m2.e + this.d * m2.f + this.f;
            if (Math.abs(m.a) < zero) {
                m.a = 0;
            }
            if (Math.abs(m.b) < zero) {
                m.b = 0;
            }
            if (Math.abs(m.c) < zero) {
                m.c = 0;
            }
            if (Math.abs(m.d) < zero) {
                m.d = 0;
            }
            if (Math.abs(m.e) < zero) {
                m.e = 0;
            }
            if (Math.abs(m.f) < zero) {
                m.f = 0;
            }
            return m;
        }
    }]);

    return Matrix;
}();

exports.default = Matrix;

/***/ }),

/***/ "./src/geom/Rectangle.js":
/*!*******************************!*\
  !*** ./src/geom/Rectangle.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Rectangle = function () {
    function Rectangle(x, y, w, h) {
        _classCallCheck(this, Rectangle);

        this.x = x;
        this.y = y;
        this.width = w;
        this.height = h;
    }

    _createClass(Rectangle, [{
        key: "hitRect",
        value: function hitRect(pt) {
            var x = pt.x;
            var y = pt.y;
            if (x < this.x) {
                return false;
            }
            if (x > this.x + this.width) {
                return false;
            }
            if (y < this.y) {
                return false;
            }
            if (y > this.y + this.height) {
                return false;
            }
            return true;
        }
    }, {
        key: "intersects",
        value: function intersects(r) {
            var x0 = Math.max(this.x, r.x);
            var x1 = Math.min(this.x + this.width, r.x + r.width);
            if (x0 <= x1) {
                var y0 = Math.max(this.y, r.y);
                var y1 = Math.min(this.y + this.height, r.y + r.height);
                if (y0 <= y1) {
                    return true;
                }
            }
            return false;
        }
    }, {
        key: "overlapElemBy",
        value: function overlapElemBy(box2, percent) {
            return this.overlapElem(box2) >= percent;
        }
    }, {
        key: "overlapElem",
        value: function overlapElem(box2) {
            var boxi = this.intersection(box2);
            if (boxi.isEmpty()) {
                return 0;
            }
            if (boxi.isEqual(box2)) {
                return 1;
            }
            if (boxi.isEqual(this)) {
                return 1;
            }
            return boxi.width * boxi.height / (box2.width * box2.height);
        }
    }, {
        key: "intersection",
        value: function intersection(box2) {
            var dx = Math.max(this.x, box2.x);
            var dw = Math.min(this.x + this.width, box2.x + box2.width);
            if (dx <= dw) {
                var dy = Math.max(this.y, box2.y);
                var dh = Math.min(this.y + this.height, box2.y + box2.height);
                if (dy > dh) {
                    return new Rectangle(0, 0, 0, 0);
                }
                return new Rectangle(dx, dy, dw - dx, dh - dy);
            }
            return new Rectangle(0, 0, 0, 0);
        }
    }, {
        key: "union",
        value: function union(box2) {
            var box = new Rectangle(0, 0, 0, 0);
            box.x = this.x < box2.x ? this.x : box2.x;
            box.y = this.y < box2.y ? this.y : box2.y;
            this.extentsw = this.x == 9999999 ? 0 : this.x + this.width;
            this.extentsh = this.y == 9999999 ? 0 : this.y + this.height;
            box2.extentsw = box2.x == 9999999 ? 0 : box2.x + box2.width;
            box2.extentsh = box2.y == 9999999 ? 0 : box2.y + box2.height;
            box.width = this.extentsw > box2.extentsw ? this.extentsw : box2.extentsw;
            box.height = this.extentsh > box2.extentsh ? this.extentsh : box2.extentsh;
            box.width -= box.x;
            box.height -= box.y;
            if (box.isEmpty()) {
                box = {
                    x: 9999999,
                    y: 9999999,
                    width: 0,
                    height: 0
                };
            }
            return box;
        }
    }, {
        key: "expandBy",
        value: function expandBy(sw) {
            this.x -= sw / 2;
            this.y -= sw / 2;
            this.width += sw;
            this.height += sw;
            return this;
        }
    }, {
        key: "crop",
        value: function crop(box) {
            if (this.x < box.x) {
                this.x = box.x;
            }
            if (this.y < box.y) {
                this.y = box.y;
            }
            if (this.width + this.x > box.width + box.x) {
                this.width += box.width + box.x - (this.width + this.x);
            }
            if (this.height + this.y > box.height + box.y) {
                this.height += box.height + box.y - (this.height + this.y);
            }
        }
    }, {
        key: "getArea",
        value: function getArea() {
            return this.width * this.height;
        }
    }, {
        key: "rounded",
        value: function rounded() {
            return new Rectangle(Math.floor(this.x), Math.floor(this.y), Math.round(this.width) + 1, Math.round(this.height) + 1);
        }
    }, {
        key: "isEqual",
        value: function isEqual(box2) {
            return this.x == box2.x && this.y == box2.y && this.width == box2.width && this.height == box2.height;
        }
    }, {
        key: "isEmpty",
        value: function isEmpty() {
            return this.x == 0 && this.y == 0 && this.width == 0 && this.height == 0;
        }
    }, {
        key: "scale",
        value: function scale(sx, sy) {
            this.x *= sx;
            this.y *= sy;
            this.width *= sx;
            this.height *= sy;
        }
    }]);

    return Rectangle;
}();

exports.default = Rectangle;

/***/ }),

/***/ "./src/geom/Vector.js":
/*!****************************!*\
  !*** ./src/geom/Vector.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Vector = function () {
    function Vector() {
        _classCallCheck(this, Vector);
    }

    _createClass(Vector, null, [{
        key: "sum",
        value: function sum(a, b) {
            var res = {};
            res.x = a.x + b.x;
            res.y = a.y + b.y;
            return res;
        }
    }, {
        key: "diff",
        value: function diff(a, b) {
            var res = {};
            res.x = a.x - b.x;
            res.y = a.y - b.y;
            return res;
        }
    }, {
        key: "equal",
        value: function equal(a, b) {
            return Vector.len(Vector.diff(a, b)) == 0;
        }
    }, {
        key: "floor",
        value: function floor(a) {
            var res = {};
            res.x = Math.floor(a.x);
            res.y = Math.floor(a.y);
            return res;
        }
    }, {
        key: "neg",
        value: function neg(a) {
            var res = {};
            res.x = -a.x;
            res.y = -a.y;
            return res;
        }
    }, {
        key: "len",
        value: function len(a) {
            return Math.sqrt(a.x * a.x + a.y * a.y);
        }
    }, {
        key: "norm",
        value: function norm(a) {
            var len = Vector.len(a);
            var res = {};
            if (len == 0) {
                len = 0.001;
            }
            res.x = a.x / len;
            res.y = a.y / len;
            return res;
        }
    }, {
        key: "perp",
        value: function perp(a) {
            var res = {};
            res.x = -a.y;
            res.y = a.x;
            return res;
        }
    }, {
        key: "scale",
        value: function scale(a, s) {
            var res = {};
            res.x = a.x * s;
            res.y = a.y * s;
            return res;
        }
    }, {
        key: "dot",
        value: function dot(a, b) {
            return a.x * b.x + a.y * b.y;
        }
    }, {
        key: "mid",
        value: function mid(a, b) {
            var res = {};
            res.x = (a.x + b.x) / 2;
            res.y = (a.y + b.y) / 2;
            return res;
        }
    }, {
        key: "lineIntersect",
        value: function lineIntersect(v1, v2, v3, v4) {
            var seg1 = Vector.diff(v2, v1);
            var seg2 = Vector.diff(v4, v3);
            var seg3 = Vector.diff(v1, v3);
            var denom = seg2.y * seg1.x - seg2.x * seg1.y;
            var numera = seg2.x * seg3.y - seg2.y * seg3.x;
            var numerb = seg1.x * seg3.y - seg1.y * seg3.x;
            if (denom == 0) {
                return null;
            }
            var mua = numera / denom;
            var mub = numerb / denom;
            /* Is the intersection along the  segments */
            if (mua < 0 || mua > 1 || mub < 0 || mub > 1) {
                return null;
            }
            var px = v1.x + mua * seg1.x;
            var py = v1.y + mua * seg1.y;
            return {
                x: px,
                y: py
            };
        }
    }]);

    return Vector;
}();

exports.default = Vector;

/***/ }),

/***/ "./src/lobby/Home.js":
/*!***************************!*\
  !*** ./src/lobby/Home.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); //////////////////////////////////////////////////
// Home Screen
//////////////////////////////////////////////////

var _Lobby = __webpack_require__(/*! ./Lobby */ "./src/lobby/Lobby.js");

var _Lobby2 = _interopRequireDefault(_Lobby);

var _OS = __webpack_require__(/*! ../tablet/OS */ "./src/tablet/OS.js");

var _OS2 = _interopRequireDefault(_OS);

var _IO = __webpack_require__(/*! ../tablet/IO */ "./src/tablet/IO.js");

var _IO2 = _interopRequireDefault(_IO);

var _Project = __webpack_require__(/*! ../editor/ui/Project */ "./src/editor/ui/Project.js");

var _Project2 = _interopRequireDefault(_Project);

var _Localization = __webpack_require__(/*! ../utils/Localization */ "./src/utils/Localization.js");

var _Localization2 = _interopRequireDefault(_Localization);

var _ScratchAudio = __webpack_require__(/*! ../utils/ScratchAudio */ "./src/utils/ScratchAudio.js");

var _ScratchAudio2 = _interopRequireDefault(_ScratchAudio);

var _Vector = __webpack_require__(/*! ../geom/Vector */ "./src/geom/Vector.js");

var _Vector2 = _interopRequireDefault(_Vector);

var _lib = __webpack_require__(/*! ../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var frame = void 0;
var scrollvalue = void 0;
var version = void 0;
var timeoutEvent = void 0;
var performingAction = false;

var Home = function () {
    function Home() {
        _classCallCheck(this, Home);
    }

    _createClass(Home, null, [{
        key: 'init',
        value: function init() {
            version = _Lobby2.default.version;
            frame = (0, _lib.gn)('htmlcontents');
            var inner = (0, _lib.newHTML)('div', 'inner', frame);
            var div = (0, _lib.newHTML)('div', 'scrollarea', inner);
            div.setAttribute('id', 'scrollarea');
            frame.ontouchstart = Home.handleTouchStart;
            frame.ontouchend = Home.handleTouchEnd;
            frame.onmousedown = Home.handleTouchStart;
            frame.onmouseup = Home.handleTouchEnd;
            Home.displayYourProjects();
        }

        ////////////////////////////
        // Home Screen
        ////////////////////////////

    }, {
        key: 'emptyProjectThumbnail',
        value: function emptyProjectThumbnail(parent) {
            var tb = (0, _lib.newHTML)('div', 'projectthumb', parent);
            (0, _lib.newHTML)('div', 'aproject empty', tb);
            tb.id = 'newproject';
        }

        //////////////////////////
        // Events
        //////////////////////////

    }, {
        key: 'handleTouchStart',
        value: function handleTouchStart(e) {
            // On my android tablet, when touching a project,
            // the tablet triggers the mousedown event
            // after touchstart event about 600ms
            // --Donald
            if (performingAction) {
                return;
            }
            performingAction = true;
            setTimeout(function () {
                performingAction = false;
            }, 1000);
            Home.dragging = false;
            Home.holding = false;
            // if ((t.nodeName == "INPUT") || (t.nodeName == "FORM")) return;
            var mytarget = Home.getMouseTarget(e);
            if (mytarget != Home.actionTarget && Home.actionTarget && Home.actionTarget.childElementCount > 2) {
                Home.actionTarget.childNodes[Home.actionTarget.childElementCount - 1].style.visibility = 'hidden';
            }
            Home.actionTarget = mytarget;
            Home.initialPt = Events.getTargetPoint(e);
            if (Home.actionTarget) {
                holdit(Home.actionTarget);
            }
            function holdit() {
                frame.ontouchmove = Home.handleMove;
                frame.onmousemove = Home.handleMove;
                var repeat = function repeat() {
                    if (Home.actionTarget && Home.actionTarget.childElementCount > 2) {
                        Home.actionTarget.childNodes[Home.actionTarget.childElementCount - 1].style.visibility = 'visible';

                        Home.holding = true;
                    }
                };
                timeoutEvent = setTimeout(repeat, 500);
            }
            Home.scrolltop = document.body.scrollTop;
        }
    }, {
        key: 'handleMove',
        value: function handleMove(e) {
            var pt = Events.getTargetPoint(e);
            var delta = _Vector2.default.diff(pt, Home.initialPt);
            if (!Home.dragging && _Vector2.default.len(delta) > 20) {
                Home.dragging = true;
            }
            if (!Home.dragging) {
                return;
            }
            if (timeoutEvent) {
                clearTimeout(timeoutEvent);
            }
            timeoutEvent = undefined;
        }
    }, {
        key: 'getMouseTarget',
        value: function getMouseTarget(e) {
            var t = e.target;
            if (t == frame) {
                return null;
            }
            if (t.parentNode && !t.parentNode.tagName) {
                return null;
            }
            while (t.parentNode && t.parentNode != frame && t.parentNode.getAttribute('class') != 'scrollarea') {
                t = t.parentNode;
            }
            return !t.parentNode || t.parentNode == frame ? null : t;
        }
    }, {
        key: 'handleTouchEnd',
        value: function handleTouchEnd(e) {
            e.preventDefault();
            e.stopPropagation();
            if (e.touches && e.touches.length > 1) {
                return;
            }
            frame.ontouchmove = undefined;
            frame.onmousemove = undefined;
            if (timeoutEvent) {
                clearTimeout(timeoutEvent);
            }
            timeoutEvent = undefined;
            if (Home.dragging) {
                return;
            }
            Home.performAction(e);
        }
    }, {
        key: 'performAction',
        value: function performAction(e) {
            e.preventDefault();
            e.stopPropagation();
            if (!Home.actionTarget) {
                return;
            }
            if (Home.holding) {
                return;
            }
            var md5 = Home.actionTarget.id;
            switch (Home.getAction(e)) {
                case 'project':
                    _ScratchAudio2.default.sndFX('keydown.wav');
                    if (md5 && md5 == 'newproject') {
                        Home.createNewProject();
                    } else if (md5) {
                        _OS2.default.setfile('homescroll.sjr', (0, _lib.gn)('wrapc').scrollTop, function () {
                            doNext(md5);
                        });
                    }
                    break;
                case 'delete':
                    _ScratchAudio2.default.sndFX('cut.wav');
                    _Project2.default.thumbnailUnique(Home.actionTarget.thumb, Home.actionTarget.id, function (isUnique) {
                        if (isUnique) {
                            _OS2.default.remove(Home.actionTarget.thumb, _OS2.default.trace);
                        }
                    });
                    _OS2.default.setfield(_OS2.default.database, Home.actionTarget.id, 'deleted', 'YES', Home.removeProjThumb);
                    break;
                default:
                    if (Home.actionTarget && Home.actionTarget.childElementCount > 2) {
                        Home.actionTarget.childNodes[Home.actionTarget.childElementCount - 1].style.visibility = 'hidden';
                    }
                    break;
            }
            function doNext() {
                _OS2.default.analyticsEvent('lobby', 'existing_project_edited');
                window.location.href = 'editor.html?pmd5=' + md5 + '&mode=edit';
            }
        }
    }, {
        key: 'createNewProject',
        value: function createNewProject() {
            _OS2.default.analyticsEvent('lobby', 'project_created');
            var obj = {};
            // XXX: for localization, the new project name should likely be refactored
            obj.name = Home.getNextName(_Localization2.default.localize('NEW_PROJECT_PREFIX'));
            obj.version = version;
            obj.mtime = new Date().getTime().toString();
            _IO2.default.createProject(obj, Home.gotoEditor);
        }
    }, {
        key: 'gotoEditor',
        value: function gotoEditor(md5) {
            _OS2.default.setfile('homescroll.sjr', (0, _lib.gn)('wrapc').scrollTop, function () {
                doNext(md5);
            });
            function doNext(md5) {
                window.location.href = 'editor.html?pmd5=' + md5 + '&mode=edit';
            }
        }

        // Project names are given by reading the DOM elements of existing projects...

    }, {
        key: 'getNextName',
        value: function getNextName(name) {
            var pn = [];
            var div = (0, _lib.gn)('scrollarea');
            for (var i = 0; i < div.childElementCount; i++) {
                if (div.childNodes[i].id == 'newproject') {
                    continue;
                }
                pn.push(div.childNodes[i].childNodes[1].childNodes[0].textContent);
            }
            var n = 1;
            while (pn.indexOf(name + ' ' + n) > -1) {
                n++;
            }
            return name + ' ' + n;
        }
    }, {
        key: 'removeProjThumb',
        value: function removeProjThumb() {
            if (Home.actionTarget && Home.actionTarget.parentNode) {
                Home.actionTarget.parentNode.removeChild(Home.actionTarget);
            }
            Home.actionTarget = undefined;
        }
    }, {
        key: 'getAction',
        value: function getAction(e) {
            if (!Home.actionTarget) {
                return 'none';
            }
            var shown = Home.actionTarget.childElementCount > 2 ? Home.actionTarget.childNodes[Home.actionTarget.childElementCount - 1].style.visibility == 'visible' : false;
            if (e && shown) {
                var t;
                if (window.event) {
                    t = window.event.srcElement;
                } else {
                    t = e.target;
                }
                if (t.getAttribute('class') == 'closex') {
                    return 'delete';
                }
            }
            return 'project';
        }

        //////////////////////////
        // Gather projects
        //////////////////////////

    }, {
        key: 'displayYourProjects',
        value: function displayYourProjects() {
            _OS2.default.getfile('homescroll.sjr', gotScrollsState);
            function gotScrollsState(str) {
                var num = Number(atob(str));
                scrollvalue = num.toString() == 'NaN' ? 0 : num;
                var json = {};
                json.cond = 'deleted = ? AND version = ? AND gallery IS NULL';
                json.items = ['name', 'thumbnail', 'id', 'isgift'];
                json.values = ['NO', version];
                json.order = 'ctime desc';
                _IO2.default.query(_OS2.default.database, json, Home.displayProjects);
            }
        }
    }, {
        key: 'displayProjects',
        value: function displayProjects(str) {
            var data = JSON.parse(str);
            var div = (0, _lib.gn)('scrollarea');
            while (div.childElementCount > 0) {
                div.removeChild(div.childNodes[0]);
            }
            Home.emptyProjectThumbnail(div);
            for (var i = 0; i < data.length; i++) {
                Home.addProjectLink(div, data[i]);
            }
            setTimeout(function () {
                _Lobby2.default.busy = false;
            }, 1000);
            if ((0, _lib.gn)('wrapc')) {
                (0, _lib.gn)('wrapc').scrollTop = scrollvalue;
            }
        }
    }, {
        key: 'addProjectLink',
        value: function addProjectLink(parent, aa) {
            var data = _IO2.default.parseProjectData(aa);
            var id = data.id;
            var th = data.thumbnail;
            if (!th) {
                return;
            }
            var thumb = typeof th === 'string' ? JSON.parse(th) : th;
            var pc = thumb.pagecount ? thumb.pagecount : 1;
            var tb = (0, _lib.newHTML)('div', 'projectthumb', parent);
            tb.setAttribute('id', id);
            tb.type = 'projectthumb';
            tb.thumb = thumb.md5;
            var mt = (0, _lib.newHTML)('div', 'aproject p' + pc, tb);
            Home.insertThumbnail(mt, 192, 144, thumb);
            var label = (0, _lib.newHTML)('div', 'projecttitle', tb);
            var txt = (0, _lib.newHTML)('h4', undefined, label);
            txt.textContent = data.name;

            var bow = (0, _lib.newHTML)('div', 'share', tb);
            var ribbonHorizontal = (0, _lib.newHTML)('div', 'ribbonHorizontal', tb);
            var ribbonVertical = (0, _lib.newHTML)('div', 'ribbonVertical', tb);

            if (data.isgift != '0') {
                // If it's a gift, show the bow and ribbon
                bow.style.visibility = 'visible';
                ribbonHorizontal.style.visibility = 'visible';
                ribbonVertical.style.visibility = 'visible';
            }

            (0, _lib.newHTML)('div', 'closex', tb);
        }
    }, {
        key: 'insertThumbnail',
        value: function insertThumbnail(p, w, h, data) {
            var md5 = data.md5;
            var img = (0, _lib.newHTML)('img', undefined, p);
            if (md5) {
                _IO2.default.getAsset(md5, drawMe);
            }
            img.ondragstart = function () {
                return false;
            };
            function drawMe(url) {
                img.src = url;
            }
        }
    }]);

    return Home;
}();

exports.default = Home;

var Events = function () {
    function Events() {
        _classCallCheck(this, Events);
    }

    _createClass(Events, null, [{
        key: 'getTargetPoint',
        value: function getTargetPoint(e) {
            if (_lib.isTablet) {
                if (e.touches && e.touches.length > 0) {
                    return {
                        x: e.touches[0].pageX,
                        y: e.touches[0].pageY
                    };
                } else if (e.changedTouches) {
                    return {
                        x: e.changedTouches[0].pageX,
                        y: e.changedTouches[0].pageY
                    };
                }
            }
            return {
                x: e.clientX,
                y: e.clientY
            };
        }
    }]);

    return Events;
}();

/***/ }),

/***/ "./src/lobby/Lobby.js":
/*!****************************!*\
  !*** ./src/lobby/Lobby.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); //////////////////////////////////////////////////
// Home Screen
//////////////////////////////////////////////////

var _lib = __webpack_require__(/*! ../utils/lib */ "./src/utils/lib.js");

var _ScratchAudio = __webpack_require__(/*! ../utils/ScratchAudio */ "./src/utils/ScratchAudio.js");

var _ScratchAudio2 = _interopRequireDefault(_ScratchAudio);

var _OS = __webpack_require__(/*! ../tablet/OS */ "./src/tablet/OS.js");

var _OS2 = _interopRequireDefault(_OS);

var _Localization = __webpack_require__(/*! ../utils/Localization */ "./src/utils/Localization.js");

var _Localization2 = _interopRequireDefault(_Localization);

var _Cookie = __webpack_require__(/*! ../utils/Cookie */ "./src/utils/Cookie.js");

var _Cookie2 = _interopRequireDefault(_Cookie);

var _Home = __webpack_require__(/*! ./Home */ "./src/lobby/Home.js");

var _Home2 = _interopRequireDefault(_Home);

var _Samples = __webpack_require__(/*! ./Samples */ "./src/lobby/Samples.js");

var _Samples2 = _interopRequireDefault(_Samples);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var version = undefined;
var busy = false;
var errorTimer = void 0;
var host = 'inapp/';
var currentPage = null;

var Lobby = function () {
    function Lobby() {
        _classCallCheck(this, Lobby);
    }

    _createClass(Lobby, null, [{
        key: 'appinit',
        value: function appinit(v) {
            (0, _lib.libInit)();
            version = v;
            var urlvars = (0, _lib.getUrlVars)();
            var place = urlvars.place;
            _ScratchAudio2.default.addSound('sounds/', 'tap.wav', _ScratchAudio2.default.uiSounds);
            _ScratchAudio2.default.addSound('sounds/', 'cut.wav', _ScratchAudio2.default.uiSounds);
            _ScratchAudio2.default.init();
            Lobby.setPage(place ? place : 'home');

            if (window.Settings.settingsPageDisabled) {
                (0, _lib.gn)('settings').style.visibility = 'hidden';
            }

            (0, _lib.gn)('hometab').onclick = function () {
                if ((0, _lib.gn)('hometab').className != 'home on') {
                    Lobby.setPage('home');
                }
            };
            (0, _lib.gn)('helptab').onclick = function () {
                if ((0, _lib.gn)('helptab').className != 'help on') {
                    Lobby.setPage('help');
                }
            };
            (0, _lib.gn)('booktab').onclick = function () {
                if ((0, _lib.gn)('booktab').className != 'book on') {
                    Lobby.setPage('book');
                }
            };
            (0, _lib.gn)('geartab').onclick = function () {
                if ((0, _lib.gn)('geartab').className != 'gear on') {
                    Lobby.setPage('gear');
                }
            };
            (0, _lib.gn)('abouttab').onclick = function () {
                if ((0, _lib.gn)('abouttab').className != 'tab on') {
                    Lobby.setSubMenu('about');
                }
            };
            (0, _lib.gn)('interfacetab').onclick = function () {
                if ((0, _lib.gn)('interfacetab').className != 'tab on') {
                    Lobby.setSubMenu('interface');
                }
            };
            (0, _lib.gn)('painttab').onclick = function () {
                if ((0, _lib.gn)('painttab').className != 'tab on') {
                    Lobby.setSubMenu('paint');
                }
            };
            (0, _lib.gn)('blockstab').onclick = function () {
                if ((0, _lib.gn)('blockstab').className != 'tab on') {
                    Lobby.setSubMenu('blocks');
                }
            };
            (0, _lib.gn)('privacytab').onclick = function () {
                if ((0, _lib.gn)('privacytab').className != 'tab2 on') {
                    Lobby.setSubMenu('privacy');
                }
            };
            if (_lib.isAndroid) {
                AndroidInterface.notifyDoneLoading();
            }
        }
    }, {
        key: 'setPage',
        value: function setPage(page) {
            if (busy) {
                return;
            }
            if ((0, _lib.gn)('hometab').className == 'home on') {
                var doNext = function doNext(page) {
                    Lobby.changePage(page);
                };
                _OS2.default.setfile('homescroll.sjr', (0, _lib.gn)('wrapc').scrollTop, function () {
                    doNext(page);
                });
            } else {
                Lobby.changePage(page);
            }
        }
    }, {
        key: 'changePage',
        value: function changePage(page) {
            Lobby.selectButton(page);
            document.documentElement.scrollTop = 0;
            var div = (0, _lib.gn)('wrapc');
            while (div.childElementCount > 0) {
                div.removeChild(div.childNodes[0]);
            }
            switch (page) {
                case 'home':
                    busy = true;
                    _ScratchAudio2.default.sndFX('tap.wav');
                    Lobby.loadProjects(div);
                    break;
                case 'help':
                    busy = true;
                    _ScratchAudio2.default.sndFX('tap.wav');
                    Lobby.loadSamples(div);
                    break;
                case 'book':
                    Lobby.loadGuide(div);
                    break;
                case 'gear':
                    _ScratchAudio2.default.sndFX('tap.wav');
                    Lobby.loadSettings(div);
                    break;
                default:
                    break;
            }
            currentPage = page;
        }
    }, {
        key: 'loadProjects',
        value: function loadProjects(p) {
            document.ontouchmove = undefined;
            document.onmousemove = undefined;
            (0, _lib.gn)('topsection').className = 'topsection home';
            (0, _lib.gn)('tabheader').textContent = _Localization2.default.localize('MY_PROJECTS');
            (0, _lib.gn)('subtitle').textContent = '';
            (0, _lib.gn)('footer').className = 'footer off';
            (0, _lib.gn)('wrapc').scrollTop = 0;
            (0, _lib.gn)('wrapc').className = 'contentwrap scroll';
            var div = (0, _lib.newHTML)('div', 'htmlcontents home', p);
            div.setAttribute('id', 'htmlcontents');
            _Home2.default.init();
        }
    }, {
        key: 'loadSamples',
        value: function loadSamples(p) {
            (0, _lib.gn)('topsection').className = 'topsection help';
            (0, _lib.gn)('tabheader').textContent = _Localization2.default.localize('QUICK_INTRO');
            (0, _lib.gn)('subtitle').textContent = _Localization2.default.localize('SAMPLE_PROJECTS');
            (0, _lib.gn)('footer').className = 'footer off';
            (0, _lib.gn)('wrapc').scrollTop = 0;
            (0, _lib.gn)('wrapc').className = 'contentwrap noscroll';
            var div = (0, _lib.newHTML)('div', 'htmlcontents help', p);
            div.setAttribute('id', 'htmlcontents');
            document.ontouchmove = function (e) {
                e.preventDefault();
            };
            document.onmousemove = function (e) {
                e.preventDefault();
            };
            _Samples2.default.init();
        }
    }, {
        key: 'loadGuide',
        value: function loadGuide(p) {
            (0, _lib.gn)('topsection').className = 'topsection book';
            (0, _lib.gn)('footer').className = 'footer on';
            var div = (0, _lib.newHTML)('div', 'htmlcontents home', p);
            div.setAttribute('id', 'htmlcontents');
            setTimeout(function () {
                Lobby.setSubMenu('about');
            }, 250);
        }
    }, {
        key: 'loadSettings',
        value: function loadSettings(p) {
            // loadProjects without the header
            (0, _lib.gn)('topsection').className = 'topsection book';
            (0, _lib.gn)('footer').className = 'footer off';
            (0, _lib.gn)('wrapc').scrollTop = 0;
            (0, _lib.gn)('wrapc').className = 'contentwrap scroll';
            var div = (0, _lib.newHTML)('div', 'htmlcontents settings', p);
            div.setAttribute('id', 'htmlcontents');

            // Localization settings
            var title = (0, _lib.newHTML)('h1', 'localizationtitle', div);
            title.textContent = _Localization2.default.localize('SELECT_LANGUAGE');

            var languageButtons = (0, _lib.newHTML)('div', 'languagebuttons', div);

            var languageButton;
            for (var l in window.Settings.supportedLocales) {
                var selected = '';
                if (window.Settings.supportedLocales[l] == _Localization2.default.currentLocale) {
                    selected = ' selected';
                }
                languageButton = (0, _lib.newHTML)('div', 'localizationselect' + selected, languageButtons);
                languageButton.textContent = l;

                languageButton.onclick = function (e) {
                    _ScratchAudio2.default.sndFX('tap.wav');
                    var newLocale = window.Settings.supportedLocales[e.target.textContent];
                    _Cookie2.default.set('localization', newLocale);
                    _OS2.default.analyticsEvent('lobby', 'language_changed', newLocale);
                    window.location = '?place=gear';
                };
            }
        }
    }, {
        key: 'setSubMenu',
        value: function setSubMenu(page) {
            if (busy) {
                return;
            }
            document.ontouchmove = undefined;
            document.onmousemove = undefined;
            busy = true;
            _ScratchAudio2.default.sndFX('tap.wav');
            Lobby.selectSubButton(page);
            document.documentElement.scrollTop = 0;
            (0, _lib.gn)('wrapc').scrollTop = 0;
            var div = (0, _lib.gn)('wrapc');
            while (div.childElementCount > 0) {
                div.removeChild(div.childNodes[0]);
            }
            var url;
            switch (page) {
                case 'about':
                    url = host + 'about.html';
                    Lobby.loadLink(div, url, 'contentwrap scroll', 'htmlcontents scrolled');
                    break;
                case 'interface':
                    document.ontouchmove = function (e) {
                        e.preventDefault();
                    };
                    document.onmousemove = function (e) {
                        e.preventDefault();
                    };
                    url = host + 'interface.html';
                    Lobby.loadLink(div, url, 'contentwrap noscroll', 'htmlcontents fixed');
                    break;
                case 'paint':
                    document.ontouchmove = function (e) {
                        e.preventDefault();
                    };
                    document.onmousemove = function (e) {
                        e.preventDefault();
                    };
                    url = host + 'paint.html';
                    Lobby.loadLink(div, url, 'contentwrap noscroll', 'htmlcontents fixed');
                    break;
                case 'blocks':
                    url = host + 'blocks.html';
                    Lobby.loadLink(div, url, 'contentwrap scroll', 'htmlcontents scrolled');
                    break;
                case 'privacy':
                    url = host + 'privacy.html';
                    Lobby.loadLink(div, url, 'contentwrap scroll', 'htmlcontents scrolled');
                    break;
                default:
                    Lobby.missing(page, div);
                    break;
                //url =  Lobby.loadProjects(div); break;
            }
        }
    }, {
        key: 'selectSubButton',
        value: function selectSubButton(str) {
            var list = ['about', 'interface', 'paint', 'blocks', 'privacy'];
            for (var i = 0; i < list.length; i++) {
                var kid = (0, _lib.gn)(list[i] + 'tab');
                var cls = kid.className.split(' ')[0];
                kid.className = cls + (list[i] == str ? ' on' : ' off');
            }
        }
    }, {
        key: 'selectButton',
        value: function selectButton(str) {
            var list = ['home', 'help', 'book', 'gear'];
            for (var i = 0; i < list.length; i++) {
                if (str == list[i]) {
                    (0, _lib.gn)(list[i] + 'tab').className = list[i] + ' on';
                } else {
                    (0, _lib.gn)(list[i] + 'tab').className = list[i] + ' off';
                }
            }
        }
    }, {
        key: 'loadLink',
        value: function loadLink(p, url, css, css2) {
            document.documentElement.scrollTop = 0;
            (0, _lib.gn)('wrapc').scrollTop = 0;
            (0, _lib.gn)('wrapc').className = css;
            var iframe = (0, _lib.newHTML)('iframe', 'htmlcontents', p);
            iframe.setAttribute('id', 'htmlcontents');
            (0, _lib.gn)('htmlcontents').className = css2;
            (0, _lib.gn)('htmlcontents').src = url;
            (0, _lib.gn)('htmlcontents').onload = function () {
                if (errorTimer) {
                    clearTimeout(errorTimer);
                }
                errorTimer = undefined;
                busy = false;
                (0, _lib.gn)('wrapc').scrollTop = 0;
            };
            errorTimer = window.setTimeout(function () {
                Lobby.errorLoading('Loading timeout');
            }, 20000);
        }
    }, {
        key: 'errorLoading',
        value: function errorLoading(str) {
            if (errorTimer) {
                clearTimeout(errorTimer);
            }
            errorTimer = undefined;
            var wc = (0, _lib.gn)('wrapc');
            while (wc.childElementCount > 0) {
                wc.removeChild(wc.childNodes[0]);
            }
            var div = (0, _lib.newHTML)('div', 'htmlcontents', wc);
            div.setAttribute('id', 'htmlcontents');
            var ht = (0, _lib.newHTML)('div', 'errormsg', div);
            var h = (0, _lib.newHTML)('h1', undefined, ht);
            h.textContent = str;
            busy = false;
        }
    }, {
        key: 'missing',
        value: function missing(page, p) {
            (0, _lib.gn)('wrapc').className = 'contentwrap scroll';
            var div = (0, _lib.newHTML)('div', 'htmlcontents', p);
            div.setAttribute('id', 'htmlcontents');
            div = (0, _lib.newHTML)('div', 'errormsg', div);
            var h = (0, _lib.newHTML)('h1', undefined, div);
            h.textContent = page.toUpperCase() + ': UNDER CONSTRUCTION';
            busy = false;
        }
    }, {
        key: 'goHome',
        value: function goHome() {
            if (currentPage === 'home') {
                window.location.href = 'index.html?back=true';
            } else {
                Lobby.setPage('home');
            }
        }
    }, {
        key: 'refresh',
        value: function refresh() {
            if ((0, _lib.gn)('hometab') !== null) {
                // Check if we're on the lobby page
                Lobby.setPage('home');
            }
        }
    }, {
        key: 'version',

        // Getters/setters for properties used in other classes
        get: function get() {
            return version;
        }
    }, {
        key: 'busy',
        set: function set(newBusy) {
            busy = newBusy;
        }
    }, {
        key: 'errorTimer',
        get: function get() {
            return errorTimer;
        }
    }]);

    return Lobby;
}();

exports.default = Lobby;


window.Lobby = Lobby;

/***/ }),

/***/ "./src/lobby/Samples.js":
/*!******************************!*\
  !*** ./src/lobby/Samples.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); //////////////////////////////////////////////////
// Samples Screen
//////////////////////////////////////////////////

var _Lobby = __webpack_require__(/*! ./Lobby */ "./src/lobby/Lobby.js");

var _Lobby2 = _interopRequireDefault(_Lobby);

var _OS = __webpack_require__(/*! ../tablet/OS */ "./src/tablet/OS.js");

var _OS2 = _interopRequireDefault(_OS);

var _IO = __webpack_require__(/*! ../tablet/IO */ "./src/tablet/IO.js");

var _IO2 = _interopRequireDefault(_IO);

var _MediaLib = __webpack_require__(/*! ../tablet/MediaLib */ "./src/tablet/MediaLib.js");

var _MediaLib2 = _interopRequireDefault(_MediaLib);

var _ScratchAudio = __webpack_require__(/*! ../utils/ScratchAudio */ "./src/utils/ScratchAudio.js");

var _ScratchAudio2 = _interopRequireDefault(_ScratchAudio);

var _Localization = __webpack_require__(/*! ../utils/Localization */ "./src/utils/Localization.js");

var _Localization2 = _interopRequireDefault(_Localization);

var _lib = __webpack_require__(/*! ../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var frame = void 0;
// Should ScratchJr projects be saved when the sample project is changed?
// Enabled for the PBS version; disabled for the ScratchJr version
// window.Settings.useStoryStarters

var Samples = function () {
    function Samples() {
        _classCallCheck(this, Samples);
    }

    _createClass(Samples, null, [{
        key: 'init',
        value: function init() {
            frame = (0, _lib.gn)('htmlcontents');
            (0, _lib.gn)('tabicon').ontouchstart = Samples.playHowTo;
            (0, _lib.gn)('tabicon').onclick = Samples.playHowTo;
            var div = (0, _lib.newHTML)('div', 'samples off', frame);
            div.setAttribute('id', 'samples');
            Samples.display('samples');
        }

        ////////////////////////////
        // Show Me How
        ////////////////////////////

    }, {
        key: 'playHowTo',
        value: function playHowTo(e) {
            e.preventDefault();
            e.stopPropagation();
            _ScratchAudio2.default.sndFX('tap.wav');
            window.location.href = 'gettingstarted.html?place=help';
        }

        ////////////////////////////
        // Learn Samples
        ////////////////////////////

    }, {
        key: 'display',
        value: function display(key) {
            var files = _MediaLib2.default[key];
            var div = (0, _lib.gn)(key);
            for (var i = 0; i < files.length; i++) {
                Samples.addLink(div, i, files[i]);
                Samples.requestFromServer(i, files[i], displayThumb);
            }
            function displayThumb(pos, str) {
                var mt = (0, _lib.gn)('sample-' + pos);
                var data = _IO2.default.parseProjectData(JSON.parse(str)[0]);
                var name = mt.childNodes[1];

                // Localize sample project names
                name.textContent = _Localization2.default.localizeSampleName(data.name);
                var cnv = mt.childNodes[0].childNodes[1];
                Samples.insertThumbnail(cnv, data.thumbnail);
                mt.onclick = function (evt) {
                    Samples.loadMe(evt, mt);
                };
            }
            setTimeout(Samples.show, 10);
        }
    }, {
        key: 'show',
        value: function show() {
            _Lobby2.default.busy = false;
            frame.parentNode.scrollTop = 0;
            (0, _lib.gn)('samples').className = 'samples on';
        }
    }, {
        key: 'loadMe',
        value: function loadMe(e, mt) {
            e.preventDefault();
            e.stopPropagation();
            _ScratchAudio2.default.sndFX('tap.wav');
            _OS2.default.analyticsEvent('samples', 'sample_opened', mt.textContent);
            var md5 = mt.md5;
            window.location.href = 'editor.html?pmd5=' + md5 + '&mode=' + (window.Settings.useStoryStarters ? 'storyStarter' : 'look');
        }
    }, {
        key: 'insertThumbnail',
        value: function insertThumbnail(img, data) {
            var md5 = data.md5;
            if (md5) {
                img.style.backgroundImage = 'url(\'' + md5 + '\')';
            }
        }
    }, {
        key: 'addLink',
        value: function addLink(parent, pos, md5) {
            var tb = (0, _lib.newHTML)('div', 'samplethumb', parent);
            tb.setAttribute('id', 'sample-' + pos);
            tb.md5 = md5;
            tb.type = 'samplethumb';
            var mt = (0, _lib.newHTML)('div', 'thumb pos' + pos, tb);
            (0, _lib.newHTML)('div', 'woodframe', mt);
            (0, _lib.newHTML)('div', 'sampleicon', mt);
            var name = (0, _lib.newHTML)('p', undefined, tb);
            name.textContent = 'Sample ' + pos;
        }
    }, {
        key: 'requestFromServer',
        value: function requestFromServer(pos, url, whenDone) {
            var xmlrequest = new XMLHttpRequest();
            xmlrequest.addEventListener('error', transferFailed, false);
            xmlrequest.onreadystatechange = function () {
                if (xmlrequest.readyState == 4) {
                    whenDone(pos, xmlrequest.responseText);
                }
            };
            xmlrequest.open('GET', url, true);
            xmlrequest.send(null);
            function transferFailed(e) {
                e.preventDefault();
                e.stopPropagation();
                // Failed loading
            }
        }
    }]);

    return Samples;
}();

exports.default = Samples;

/***/ }),

/***/ "./src/painteditor/Camera.js":
/*!***********************************!*\
  !*** ./src/painteditor/Camera.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ScratchJr = __webpack_require__(/*! ../editor/ScratchJr */ "./src/editor/ScratchJr.js");

var _ScratchJr2 = _interopRequireDefault(_ScratchJr);

var _OS = __webpack_require__(/*! ../tablet/OS */ "./src/tablet/OS.js");

var _OS2 = _interopRequireDefault(_OS);

var _ScratchAudio = __webpack_require__(/*! ../utils/ScratchAudio */ "./src/utils/ScratchAudio.js");

var _ScratchAudio2 = _interopRequireDefault(_ScratchAudio);

var _Paint = __webpack_require__(/*! ./Paint */ "./src/painteditor/Paint.js");

var _Paint2 = _interopRequireDefault(_Paint);

var _PaintUndo = __webpack_require__(/*! ./PaintUndo */ "./src/painteditor/PaintUndo.js");

var _PaintUndo2 = _interopRequireDefault(_PaintUndo);

var _SVGImage = __webpack_require__(/*! ./SVGImage */ "./src/painteditor/SVGImage.js");

var _SVGImage2 = _interopRequireDefault(_SVGImage);

var _SVGTools = __webpack_require__(/*! ./SVGTools */ "./src/painteditor/SVGTools.js");

var _SVGTools2 = _interopRequireDefault(_SVGTools);

var _SVG2Canvas = __webpack_require__(/*! ../utils/SVG2Canvas */ "./src/utils/SVG2Canvas.js");

var _SVG2Canvas2 = _interopRequireDefault(_SVG2Canvas);

var _Rectangle = __webpack_require__(/*! ../geom/Rectangle */ "./src/geom/Rectangle.js");

var _Rectangle2 = _interopRequireDefault(_Rectangle);

var _Layer = __webpack_require__(/*! ./Layer */ "./src/painteditor/Layer.js");

var _Layer2 = _interopRequireDefault(_Layer);

var _Ghost = __webpack_require__(/*! ./Ghost */ "./src/painteditor/Ghost.js");

var _Ghost2 = _interopRequireDefault(_Ghost);

var _lib = __webpack_require__(/*! ../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var view = 'front';
var target = undefined;
var available = false;

var Camera = function () {
    function Camera() {
        _classCallCheck(this, Camera);
    }

    _createClass(Camera, null, [{
        key: 'startFeed',
        value: function startFeed(feedTarget) {
            _ScratchAudio2.default.sndFX('entertap.wav');
            if (!_Paint2.default.canvasFits()) {
                _Paint2.default.scaleToFit();
            }
            target = feedTarget;
            Camera.active = true;
            var devicePixelRatio = window.devicePixelRatio;
            var viewbox = _SVGTools2.default.getBox(target).rounded();
            var box = new _Rectangle2.default(0, 0, _Paint2.default.workspaceWidth, _Paint2.default.workspaceHeight);
            viewbox = viewbox.expandBy(20);
            viewbox.crop(box);
            var mask = Camera.getLayerMask(target);
            var data = new Object();
            var x = Math.floor((viewbox.x + viewbox.width / 2) * _Paint2.default.currentZoom - viewbox.width / 2);
            var y = Math.floor((viewbox.y + viewbox.height / 2) * _Paint2.default.currentZoom - viewbox.height / 2);
            data.x = (0, _lib.globalx)((0, _lib.gn)('workspacebkg')) + x + (0, _lib.gn)('maincanvas').dx + (0, _lib.gn)('maincanvas').cx - (0, _lib.gn)('maincanvas').cx * _Paint2.default.currentZoom;
            data.y = (0, _lib.globaly)((0, _lib.gn)('workspacebkg')) + y + (0, _lib.gn)('maincanvas').dy + (0, _lib.gn)('maincanvas').cy - (0, _lib.gn)('maincanvas').cy * _Paint2.default.currentZoom;
            data.width = viewbox.width;
            data.height = viewbox.height;
            data.scale = _Paint2.default.currentZoom;
            data.devicePixelRatio = devicePixelRatio;
            data.mx = (0, _lib.globalx)((0, _lib.gn)('workspacebkg')) + (0, _lib.gn)('maincanvas').dx;
            data.my = (0, _lib.globaly)((0, _lib.gn)('workspacebkg')) + (0, _lib.gn)('maincanvas').dy;
            data.mw = _Paint2.default.workspaceWidth;
            data.mh = _Paint2.default.workspaceHeight;
            data.image = mask.toDataURL('image/png');
            _OS2.default.startfeed(data, _OS2.default.trace);
            _Paint2.default.cameraToolsOn();
        }
    }, {
        key: 'prepareForLandscapeMode',
        value: function prepareForLandscapeMode(cnv) {
            var result = document.createElement('canvas');
            (0, _lib.setCanvasSize)(result, cnv.height, cnv.width);
            var finalctx = result.getContext('2d');
            var min = Math.min(cnv.width, cnv.height);
            var max = Math.max(cnv.width, cnv.height);
            var delta = (max - min) / 2;
            var pt = {
                x: cnv.width / 2,
                y: cnv.height / 2
            };
            finalctx.translate(pt.x, pt.y);
            finalctx.rotate(90 * _lib.DEGTOR);
            finalctx.translate(-pt.x, -pt.y);
            finalctx.drawImage(cnv, delta, delta);
            return result;
        }
    }, {
        key: 'doAction',
        value: function doAction(str) {
            switch (str) {
                case 'cameraflip':
                    _ScratchAudio2.default.sndFX('tap.wav');
                    view = view == 'front' ? 'back' : 'front';
                    _OS2.default.choosecamera(view, Camera.flip);
                    break;
                case 'camerasnap':
                    Camera.snapShot();
                    _Paint2.default.cameraToolsOff();
                    break;
                case 'cammera':
                    Camera.close();
                    _Paint2.default.selectButton('select');
                    break;
                default:
                    Camera.close();
                    _Paint2.default.selectButton(str);
                    break;
            }
        }
    }, {
        key: 'close',
        value: function close() {
            target = undefined;
            view = 'front';
            Camera.active = false;
            _OS2.default.stopfeed();
            _Paint2.default.cameraToolsOff();
            if (_lib.isAndroid) {
                _ScratchJr2.default.onBackButtonCallback.pop();
            }
        }
    }, {
        key: 'snapShot',
        value: function snapShot() {
            _OS2.default.captureimage('Camera.processimage'); // javascript call back;
        }
    }, {
        key: 'getLayerMask',
        value: function getLayerMask(elem) {
            // draw background
            var w, h;
            if (_lib.isAndroid) {
                var mainCanvas = (0, _lib.gn)('maincanvas');
                var mainCanvasRect = mainCanvas.getBoundingClientRect();
                w = mainCanvasRect.width;
                h = mainCanvasRect.height;
            } else {
                w = _Paint2.default.workspaceWidth;
                h = _Paint2.default.workspaceHeight;
            }
            var cnv = document.createElement('canvas');
            (0, _lib.setCanvasSize)(cnv, w, h);
            var ctx = cnv.getContext('2d');
            ctx.fillStyle = _ScratchJr2.default.stagecolor;
            ctx.fillRect(0, 0, cnv.width, cnv.height);
            if (_lib.isAndroid) {
                ctx.save();
                ctx.scale(_Paint2.default.currentZoom, _Paint2.default.currentZoom);
            }
            _SVG2Canvas2.default.drawImage((0, _lib.gn)('paintgrid'), ctx);

            var isgroup = elem.parentNode && elem.parentNode.id != 'layer1';
            var index = isgroup ? _Layer2.default.groupStartsAt((0, _lib.gn)('layer1'), elem.parentNode) : _Layer2.default.groupStartsAt((0, _lib.gn)('layer1'), elem);
            Camera.drawLayers((0, _lib.gn)('layer1'), ctx, 0, index);
            if (isgroup) {
                var localindex = _Layer2.default.groupStartsAt(elem.parentNode, elem);
                Camera.drawLayers(elem.parentNode, ctx, 0, localindex);
            }
            Camera.drawHole(elem, ctx);
            if (isgroup) {
                Camera.drawLayers(elem.parentNode, ctx, localindex + 1, elem.parentNode.childElementCount);
            }
            Camera.drawLayers((0, _lib.gn)('layer1'), ctx, index + 1, (0, _lib.gn)('layer1').childElementCount);
            if (_lib.isAndroid) {
                ctx.restore();
            }
            return cnv;
        }
    }, {
        key: 'drawLayers',
        value: function drawLayers(p, ctx, startat, endat) {
            var min = Math.min(startat, p.childElementCount);
            var max = Math.min(endat, p.childElementCount);
            for (var i = min; i < max; i++) {
                _SVG2Canvas2.default.drawLayer(p.childNodes[i], ctx, _SVG2Canvas2.default.drawLayer);
            }
        }
    }, {
        key: 'drawHole',
        value: function drawHole(elem, ctx) {
            ctx.save();
            ctx.globalCompositeOperation = 'destination-out';
            _SVG2Canvas2.default.drawElementHole(elem, ctx);
            ctx.restore();
            ctx.fillStyle = 'rgba(0, 0, 0,0)';
            ctx.strokeStyle = !elem.getAttribute('stroke') ? 'none' : elem.getAttribute('stroke');
            ctx.lineCap = elem.getAttribute('stroke-linecap') ? elem.getAttribute('stroke-linecap') : _SVG2Canvas2.default.strokevalues['stroke-linecap'];
            ctx.lineWidth = elem.getAttribute('stroke-width') ? Number(elem.getAttribute('stroke-width')) : Number(_SVG2Canvas2.default.strokevalues['stroke-width']);
            ctx.miterLimit = elem.getAttribute('stroke-miterlimit') ? elem.getAttribute('stroke-miterlimit') : _SVG2Canvas2.default.strokevalues['stroke-miterlimit'];
            ctx.linejoin = elem.getAttribute('stroke-linejoin') ? elem.getAttribute('stroke-linejoin') : _SVG2Canvas2.default.strokevalues['stroke-linejoin'];
            _SVG2Canvas2.default.processXMLnode(elem, ctx, true);
        }
    }, {
        key: 'processimage',
        value: function processimage(str) {
            if (!target) {
                return;
            }
            if (str != 'error getting a still') {
                _SVGImage2.default.addCameraFill(target, str);
            }
            Camera.close();
            _Paint2.default.cameraToolsOff();
            _Paint2.default.selectButton('select');
            if (str != 'error getting a still') {
                _PaintUndo2.default.record();
                _Ghost2.default.drawOffscreen();
            }
        }
    }, {
        key: 'available',
        get: function get() {
            return available;
        },
        set: function set(newAvailable) {
            available = newAvailable;
        }
    }]);

    return Camera;
}();

// Exposing the camera for the tablet callback in OS.snapShot


exports.default = Camera;
window.Camera = Camera;

/***/ }),

/***/ "./src/painteditor/Ghost.js":
/*!**********************************!*\
  !*** ./src/painteditor/Ghost.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _snapsvg = __webpack_require__(/*! snapsvg */ "./node_modules/snapsvg/Gruntfile.js");

var _snapsvg2 = _interopRequireDefault(_snapsvg);

var _ScratchJr = __webpack_require__(/*! ../editor/ScratchJr */ "./src/editor/ScratchJr.js");

var _ScratchJr2 = _interopRequireDefault(_ScratchJr);

var _SVGTools = __webpack_require__(/*! ./SVGTools */ "./src/painteditor/SVGTools.js");

var _SVGTools2 = _interopRequireDefault(_SVGTools);

var _Paint = __webpack_require__(/*! ./Paint */ "./src/painteditor/Paint.js");

var _Paint2 = _interopRequireDefault(_Paint);

var _PaintAction = __webpack_require__(/*! ./PaintAction */ "./src/painteditor/PaintAction.js");

var _PaintAction2 = _interopRequireDefault(_PaintAction);

var _Layer = __webpack_require__(/*! ./Layer */ "./src/painteditor/Layer.js");

var _Layer2 = _interopRequireDefault(_Layer);

var _Vector = __webpack_require__(/*! ../geom/Vector */ "./src/geom/Vector.js");

var _Vector2 = _interopRequireDefault(_Vector);

var _Transform = __webpack_require__(/*! ./Transform */ "./src/painteditor/Transform.js");

var _Transform2 = _interopRequireDefault(_Transform);

var _SVG2Canvas = __webpack_require__(/*! ../utils/SVG2Canvas */ "./src/utils/SVG2Canvas.js");

var _SVG2Canvas2 = _interopRequireDefault(_SVG2Canvas);

var _lib = __webpack_require__(/*! ../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var maskCanvas = document.createElement('canvas');
var maskData = {};
var linemask = 16;
var maskColor = 16;

var Ghost = function () {
    function Ghost() {
        _classCallCheck(this, Ghost);
    }

    _createClass(Ghost, null, [{
        key: 'highlight',
        value: function highlight(group) {
            Ghost.clearLayer();
            var g = _SVGTools2.default.createGroup((0, _lib.gn)('draglayer'), 'ghostgroup');
            g.setAttribute('class', 'active3d');
            for (var i = 0; i < group.length; i++) {
                Ghost.hightlightElem(g, group[i], 0.5, '5,5', 'black', 3);
            }
        }
    }, {
        key: 'hightlightElem',
        value: function hightlightElem(p, elem, opacity, space, c, sw) {
            if (elem.tagName == 'g') {
                for (var i = 0; i < elem.childElementCount; i++) {
                    Ghost.hightlightElem(p, elem.childNodes[i], opacity, space, c, sw);
                }
            } else {
                if (Ghost.hasGhost(elem)) {
                    Ghost.getKid(p, elem, opacity, space, c, sw);
                }
            }
        }
    }, {
        key: 'hasGhost',
        value: function hasGhost(elem) {
            // too slow if there are too many--> doing this to minimize overlapping ghosts
            if (!elem.id) {
                return true;
            }
            if (elem.id.indexOf('Border') < 0) {
                return true;
            }
            var mfill = elem.id.split('Border')[0];
            if (mfill == '') {
                return true;
            }
            return !(0, _lib.gn)(mfill);
        }
    }, {
        key: 'clearLayer',
        value: function clearLayer() {
            var p = (0, _lib.gn)('draglayer');
            if (!p) {
                return;
            }
            while (p.childElementCount > 0) {
                p.removeChild(p.childNodes[0]);
            }
        }

        ///////////////////////////////////
        // Ghost Management
        ///////////////////////////////////

    }, {
        key: 'findTarget',
        value: function findTarget(evt) {
            Ghost.clearLayer();
            if (evt == null) {
                return null;
            }
            var pt = _PaintAction2.default.getScreenPt(evt);
            if (Ghost.outsideArea(_Vector2.default.floor(_Vector2.default.scale(pt, _Paint2.default.currentZoom)), maskCanvas)) {
                return null;
            } else {
                return Ghost.allTools(pt);
            }
        }
    }, {
        key: 'findWho',
        value: function findWho(evt) {
            // just gets the object clicked
            Ghost.clearLayer();
            if (evt == null) {
                return null;
            }
            var pt = _PaintAction2.default.getScreenPt(evt);
            var color = Ghost.getPtColor(pt);
            var id = maskData[color];
            var mt = id && (0, _lib.gn)(id) ? (0, _lib.gn)(id) : null;
            return mt && mt.getAttribute('fixed') != 'yes' ? mt : Ghost.getHitObject(pt);
        }
    }, {
        key: 'allTools',
        value: function allTools(pt) {
            var color = Ghost.getPtColor(pt);
            var id = maskData[color];
            if (id) {
                return Ghost.hitSomething(pt, id, color);
            } else {
                return Ghost.notHitted(pt);
            }
        }
    }, {
        key: 'hitSomething',
        value: function hitSomething(pt, id) {
            var mt = (0, _lib.gn)(id);
            var dogohst = true;
            if (mt && mt.getAttribute('relatedto')) {
                mt = (0, _lib.gn)(mt.getAttribute('relatedto'));
            }
            switch (_Paint2.default.mode) {
                case 'select':
                case 'rotate':
                case 'stamper':
                case 'scissors':
                case 'path':
                    if (mt.getAttribute('fixed') == 'yes') {
                        mt = Ghost.getHitObject(pt, _Paint2.default.mode == 'path');
                    }
                    dogohst = mt ? mt.getAttribute('fixed') != 'yes' : false;
                    break;
                case 'paintbucket':
                case 'camera':
                    mt = Ghost.getHitObject(pt, _Paint2.default.mode == 'path');
                    break;
            }
            if (mt && dogohst) {
                return Ghost.setGhostTo(mt);
            }
            return null;
        }
    }, {
        key: 'svgHit',
        value: function svgHit(pt) {
            var rpos = _Paint2.default.root.createSVGRect();
            rpos.x = pt.x;
            rpos.y = pt.y;
            rpos.width = 1;
            rpos.height = 1;

            var matches = _Paint2.default.root.getIntersectionList(rpos, null);
            if (matches !== null) {
                return matches;
            } else {
                // getIntersectionList() isn't implemented below API Level 19
                // and will return null.  Call the helper method to manually detect
                // the intersection lists.
                return Ghost.svgHitHelper((0, _lib.gn)('layer1'), pt);
            }
        }

        /**
         * Iterates all the path elements of the root and checks if 'pt'
         * is inside the path.
         * This method uses the SnapSVG library (Apache 2 license) to perform the hit test.
         */

    }, {
        key: 'svgHitHelper',
        value: function svgHitHelper(root, pt) {
            var matches = [];
            if (!root) {
                return matches;
            }

            var paths = root.getElementsByTagName('path');
            for (var i = 0; i < paths.length; ++i) {
                var pathData = paths[i].getAttribute('d');
                if (pathData && _snapsvg2.default.path.isPointInside(pathData, pt.x, pt.y)) {
                    matches.push(paths[i]);
                }
            }

            return matches;
        }
    }, {
        key: 'setGhostTo',
        value: function setGhostTo(mt) {
            var g = _SVGTools2.default.createGroup((0, _lib.gn)('draglayer'), 'ghostlayer');
            Ghost.setDashBorder(g, mt, 0.7, '5,5', 'black', 3);
            return mt;
        }
    }, {
        key: 'notHitted',
        value: function notHitted(pt) {
            var mt;
            switch (_Paint2.default.mode) {
                case 'select':
                case 'rotate':
                case 'stamper':
                case 'scissors':
                    mt = Ghost.getActualHit(Ghost.getHitObject(pt, _Paint2.default.mode != 'path'), pt);
                    if (mt && mt.id) {
                        if (mt.getAttribute('relatedto')) {
                            mt = (0, _lib.gn)(mt.getAttribute('relatedto'));
                        }
                        var isStencil = mt.id.indexOf('staticbkg') > -1 || mt.getAttribute('stencil') == 'yes' || mt.getAttribute('fixed') == 'yes';
                        if (isStencil) {
                            mt = undefined;
                        }
                    }
                    break;
                case 'camera':
                case 'paintbucket':
                    var targ = Ghost.getHitObject(pt, false);
                    var target = Ghost.getActualHit(targ, pt);
                    if (target && target.nodeName != 'g') {
                        mt = target;
                    }
                    break;
            }
            if (mt) {
                return Ghost.setGhostTo(mt);
            }
            return null;
        }
    }, {
        key: 'getActualHit',
        value: function getActualHit(mt, pt) {
            if (!mt) {
                return null;
            }
            pt = _Vector2.default.floor(_Vector2.default.scale(pt, _Paint2.default.currentZoom));
            var list = _Layer2.default.findUnderMe(mt);
            for (var i = 0; i < list.length; i++) {
                var obj = list[i];
                if (!Ghost.contains(mt, obj)) {
                    continue;
                }
                if (!Ghost.hittedSingleObject(obj, pt)) {
                    continue;
                }
                mt = obj;
            }
            return mt;
        }
    }, {
        key: 'contains',
        value: function contains(e1, e2) {
            var box1 = _SVGTools2.default.getBox(e1);
            var box2 = _SVGTools2.default.getBox(e2);
            var boxi = box1.intersection(box2);
            if (boxi.isEmpty()) {
                return false;
            }
            return boxi.isEqual(box2);
        }
    }, {
        key: 'hittedSingleObject',
        value: function hittedSingleObject(obj, pt) {
            var ctx = _ScratchJr2.default.workingCanvas.getContext('2d');
            ctx.clearRect(0, 0, _ScratchJr2.default.workingCanvas.width, _ScratchJr2.default.workingCanvas.height);
            ctx.save();
            _Layer2.default.drawInContext(obj, ctx, _Paint2.default.currentZoom);
            ctx.restore();
            var pixel = ctx.getImageData(pt.x, pt.y, 1, 1).data;
            return pixel[3] != 0;
        }
    }, {
        key: 'getPtColor',
        value: function getPtColor(pt) {
            pt = _Vector2.default.floor(_Vector2.default.scale(pt, _Paint2.default.currentZoom));
            if (Ghost.outsideArea(pt, maskCanvas)) {
                return 0;
            }
            var ctx = maskCanvas.getContext('2d');
            var pixel = ctx.getImageData(pt.x, pt.y, 1, 1).data;
            var r = pixel[0];
            var g = pixel[1];
            var b = pixel[2];
            return Ghost.getHex([r, g, b]);
        }
    }, {
        key: 'outsideArea',
        value: function outsideArea(node, canvas) {
            if (node.x < 0 || node.x > canvas.width - 1) {
                return true;
            }
            if (node.y < 0 || node.y > canvas.height - 1) {
                return true;
            }
            return false;
        }
    }, {
        key: 'setDashBorder',
        value: function setDashBorder(p, elem, opacity, space, c, sw) {
            if (elem.tagName == 'g') {
                for (var i = 0; i < elem.childElementCount; i++) {
                    Ghost.setDashBorder(p, elem.childNodes[i], opacity, space, c, sw);
                }
            } else {
                Ghost.getKid(p, elem, opacity, space, c, sw);
            }
        }
    }, {
        key: 'getKid',
        value: function getKid(p, elem, opacity, space, c, sw) {
            if (!sw) {
                sw = elem.getAttribute('stroke-width');
            }
            var attr = _SVGTools2.default.attributeTable[elem.tagName];
            if (!attr) {
                attr = [];
            }
            var drawattr = _SVGTools2.default.attributePenTable[elem.tagName];
            if (!drawattr) {
                drawattr = [];
            }
            // black outline
            var shape = document.createElementNS(_Paint2.default.xmlns, elem.tagName);
            p.appendChild(shape);

            attr = attr.concat(drawattr);
            for (var i = 0; i < attr.length; i++) {
                if (elem.getAttribute(attr[i]) == null) {
                    continue;
                }
                shape.setAttribute(attr[i], elem.getAttribute(attr[i]));
            }
            shape.setAttribute('fill', 'none');
            shape.setAttribute('stroke', c);
            shape.setAttribute('stroke-width', sw / _Paint2.default.currentZoom);
            shape.setAttribute('class', 'active3d');
            var ang = _Transform2.default.getRotationAngle(elem);
            if (ang != 0) {
                _Transform2.default.applyRotation(shape, ang);
            }
            if (opacity) {
                shape.setAttribute('opacity', opacity);
            }
            // white dashed

            var dash = document.createElementNS(_Paint2.default.xmlns, elem.tagName);
            p.appendChild(dash);
            attr = attr.concat(drawattr);
            for (var j = 0; j < attr.length; j++) {
                if (elem.getAttribute(attr[j]) == null) {
                    continue;
                }
                dash.setAttribute(attr[j], elem.getAttribute(attr[j]));
            }
            dash.setAttribute('fill', 'none');
            dash.setAttribute('stroke', 'white');
            dash.setAttribute('stroke-width', 3 / _Paint2.default.currentZoom);
            dash.setAttribute('stroke-dasharray', space);
            dash.setAttribute('class', 'active3d');
            if (opacity) {
                dash.setAttribute('opacity', opacity);
            }
            if (ang != 0) {
                _Transform2.default.applyRotation(dash, ang);
            }
            return dash;
        }

        //////////////////////////////////////////////////
        //   Offscreen for cursor
        //////////////////////////////////////////////////

    }, {
        key: 'drawOffscreen',
        value: function drawOffscreen() {
            (0, _lib.setCanvasSize)(maskCanvas, Math.round(Number(_Paint2.default.root.getAttribute('width')) * _Paint2.default.currentZoom), Math.round(Number(_Paint2.default.root.getAttribute('height')) * _Paint2.default.currentZoom));
            var ctx = maskCanvas.getContext('2d');
            ctx.clearRect(0, 0, maskCanvas.width, maskCanvas.height);
            var p = (0, _lib.gn)('layer1');
            if (!p) {
                return;
            }
            maskData = {};
            maskColor = 16;
            Ghost.drawElements(p, ctx);
        }
    }, {
        key: 'drawElements',
        value: function drawElements(p, ctx) {
            for (var i = 0; i < p.childElementCount; i++) {
                var elem = p.childNodes[i];
                if (elem.id == 'pathdots') {
                    continue;
                }
                if (elem.tagName == 'image') {
                    continue;
                }
                if (elem.tagName == 'clipPath') {
                    continue;
                }
                if (elem.nodeName == 'g') {
                    Ghost.drawElements(elem, ctx);
                } else {
                    Ghost.drawElement(elem, ctx);
                }
            }
        }
    }, {
        key: 'drawElement',
        value: function drawElement(elem, ctx) {
            var c = Ghost.getRGB(maskColor);
            var bc = Ghost.getRGB(maskColor + 8);
            maskColor += 16;
            ctx.save();
            var nostroke = !elem.getAttribute('stroke') || elem.getAttribute('stroke') == 'none';
            var n = Number(elem.getAttribute('stroke-width'));
            ctx.lineWidth = nostroke ? 0 : n;
            ctx.fillStyle = elem.getAttribute('fill') == 'none' ? 'rgba(0,0,0,0)' : 'rgba(' + c[0] + ',' + c[1] + ',' + c[2] + ',255)';
            ctx.strokeStyle = !elem.getAttribute('stroke') ? 'rgba(0,0,0,0)' : 'rgba(' + bc[0] + ',' + bc[1] + ',' + bc[2] + ',255)';
            if (!_SVG2Canvas2.default.isCloseDPath(elem)) {
                ctx.strokeStyle = 'rgba(' + c[0] + ',' + c[1] + ',' + c[2] + ',255)';
            }
            if (elem.id.indexOf('pathborder_image') > -1) {
                ctx.fillStyle = 'rgba(' + c[0] + ',' + c[1] + ',' + c[2] + ',255)';
            }
            if (!elem.getAttribute('fill') && !elem.getAttribute('stroke')) {
                ctx.fillStyle = 'rgba(' + bc[0] + ',' + bc[1] + ',' + bc[2] + ',255)';
            }
            maskData[Ghost.getHex(c)] = elem.id;
            maskData[Ghost.getHex(bc)] = elem.id;
            var rot = _Transform2.default.extract(elem, 4);
            if (rot.angle != 0) {
                _Layer2.default.rotateFromCenter(ctx, elem, rot.angle);
            }
            ctx.scale(_Paint2.default.currentZoom, _Paint2.default.currentZoom);
            _SVG2Canvas2.default.processXMLnode(elem, ctx, true);
            ctx.restore();
            if (_SVG2Canvas2.default.isCloseDPath(elem)) {
                return;
            }
            ctx.save();
            ctx.scale(_Paint2.default.currentZoom, _Paint2.default.currentZoom);
            ctx.lineWidth = linemask < n ? n : linemask;
            ctx.fillStyle = 'rgba(' + c[0] + ',' + c[1] + ',' + c[2] + ',255)';
            ctx.strokeStyle = 'rgba(' + bc[0] + ',' + bc[1] + ',' + bc[2] + ',255)';
            rot = _Transform2.default.extract(elem, 4);
            if (rot.angle != 0) {
                _Layer2.default.rotateFromCenter(ctx, elem, rot.angle);
            }
            _SVG2Canvas2.default.renderPathTips(elem, ctx);
            ctx.restore();
        }
    }, {
        key: 'getRGB',
        value: function getRGB(color) {
            return [Number(color >> 16 & 255), Number(color >> 8 & 255), Number(color & 255)];
        }
    }, {
        key: 'getHex',
        value: function getHex(rgb) {
            var r = rgb[0].toString(16);
            if (r.length < 2) {
                r = '0' + r;
            }
            var g = rgb[1].toString(16);
            if (g.length < 2) {
                g = '0' + g;
            }
            var b = rgb[2].toString(16);
            if (b.length < 2) {
                b = '0' + b;
            }
            return r + g + b;
        }
    }, {
        key: 'getHitObject',
        value: function getHitObject(pt, isTip, exclude) {
            var list = Ghost.svgHit(pt);
            pt = _Vector2.default.floor(_Vector2.default.scale(pt, _Paint2.default.currentZoom));
            if (!_Paint2.default.root) {
                return false;
            }
            (0, _lib.setCanvasSize)(_ScratchJr2.default.workingCanvas, Math.round(_Paint2.default.root.getAttribute('width') * _Paint2.default.currentZoom), Math.round(_Paint2.default.root.getAttribute('height') * _Paint2.default.currentZoom));
            var ctx = _ScratchJr2.default.workingCanvas.getContext('2d');
            if (Ghost.outsideArea(pt, _ScratchJr2.default.workingCanvas)) {
                return null;
            }
            ctx.clearRect(0, 0, _ScratchJr2.default.workingCanvas.width, _ScratchJr2.default.workingCanvas.height);
            return Ghost.findHit(list, pt, _ScratchJr2.default.workingCanvas.getContext('2d'), isTip, exclude);
        }
    }, {
        key: 'findHit',
        value: function findHit(list, pt, ctx, isTip, exclude) {
            for (var i = list.length - 1; i >= 0; i--) {
                var elem = list[i];
                if (exclude && elem == exclude) {
                    continue;
                }
                var lw = elem.getAttribute('stroke-width') ? elem.getAttribute('stroke-width') : 0;
                ctx.save();
                _Layer2.default.drawInContext(elem, ctx, _Paint2.default.currentZoom, lw, isTip);
                ctx.restore();
                var pixel = ctx.getImageData(pt.x, pt.y, 1, 1).data;
                if (pixel[3] != 0) {
                    return elem;
                }
            }
            return null;
        }

        ////////////////////
        // Debugging hit masks
        ////////////////////////

    }, {
        key: 'showmask',
        value: function showmask() {
            var mask = (0, _lib.newDiv)(_Paint2.default.frame, 0, 0, maskCanvas.width, maskCanvas.height, {
                position: 'absolute',
                zIndex: _ScratchJr2.default.layerTop + 20
            });
            mask.setAttribute('id', 'ghostmask');
            mask.appendChild(maskCanvas);
        }
    }, {
        key: 'off',
        value: function off() {
            (0, _lib.gn)('ghostmask').style.visibility = 'hidden';
        }
    }, {
        key: 'on',
        value: function on() {
            (0, _lib.gn)('ghostmask').style.visibility = 'visible';
        }
    }, {
        key: 'maskCanvas',
        get: function get() {
            return maskCanvas;
        }
    }, {
        key: 'maskData',
        get: function get() {
            return maskData;
        },
        set: function set(newMaskData) {
            maskData = newMaskData;
        }
    }, {
        key: 'linemask',
        get: function get() {
            return linemask;
        }
    }]);

    return Ghost;
}();

exports.default = Ghost;

/***/ }),

/***/ "./src/painteditor/Layer.js":
/*!**********************************!*\
  !*** ./src/painteditor/Layer.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ScratchJr = __webpack_require__(/*! ../editor/ScratchJr */ "./src/editor/ScratchJr.js");

var _ScratchJr2 = _interopRequireDefault(_ScratchJr);

var _Paint = __webpack_require__(/*! ./Paint */ "./src/painteditor/Paint.js");

var _Paint2 = _interopRequireDefault(_Paint);

var _PaintUndo = __webpack_require__(/*! ./PaintUndo */ "./src/painteditor/PaintUndo.js");

var _PaintUndo2 = _interopRequireDefault(_PaintUndo);

var _Path = __webpack_require__(/*! ./Path */ "./src/painteditor/Path.js");

var _Path2 = _interopRequireDefault(_Path);

var _SVGTools = __webpack_require__(/*! ./SVGTools */ "./src/painteditor/SVGTools.js");

var _SVGTools2 = _interopRequireDefault(_SVGTools);

var _SVGImage = __webpack_require__(/*! ./SVGImage */ "./src/painteditor/SVGImage.js");

var _SVGImage2 = _interopRequireDefault(_SVGImage);

var _SVG2Canvas = __webpack_require__(/*! ../utils/SVG2Canvas */ "./src/utils/SVG2Canvas.js");

var _SVG2Canvas2 = _interopRequireDefault(_SVG2Canvas);

var _Transform = __webpack_require__(/*! ./Transform */ "./src/painteditor/Transform.js");

var _Transform2 = _interopRequireDefault(_Transform);

var _lib = __webpack_require__(/*! ../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var targetOffscreen = document.createElement('canvas');
var offscreen = document.createElement('canvas');

var Layer = function () {
    function Layer() {
        _classCallCheck(this, Layer);
    }

    _createClass(Layer, null, [{
        key: 'bringToFront',
        value: function bringToFront(elem) {
            if (!elem) {
                return;
            }
            if (elem.getAttribute('fixed') == 'yes') {
                return;
            }
            if (!elem.parentNode) {
                return;
            }
            while (elem.parentNode && elem.parentNode.id != 'layer1') {
                elem = elem.parentNode;
            }
            var index = Layer.groupStartsAt((0, _lib.gn)('layer1'), elem);
            var group = Layer.onTopOfBy((0, _lib.gn)('layer1'), elem, 1, index, Layer.getRelated(elem));
            var p = elem.parentNode;
            for (var i = 0; i < group.length; i++) {
                p.appendChild(group[i]);
            }
            if (group.length > 1) {
                _PaintUndo2.default.record();
            }
        }
    }, {
        key: 'bringElementsToFront',
        value: function bringElementsToFront() {
            var res = [];
            for (var i = 0; i < (0, _lib.gn)('layer1').childElementCount; i++) {
                var mt = (0, _lib.gn)('layer1').childNodes[i];
                if (mt.getAttribute('fixed') == 'yes') {
                    continue;
                }
                if (mt.getAttribute('stencil') == 'yes') {
                    continue;
                }
                res.push(mt);
            }
            for (i = 0; i < res.length; i++) {
                (0, _lib.gn)('layer1').appendChild(res[i]);
            }
        }
    }, {
        key: 'onTopOf',
        value: function onTopOf(p, index) {
            var res = [];
            for (var i = index; i < p.childElementCount; i++) {
                res.push(p.childNodes[i]);
            }
            return res;
        }
    }, {
        key: 'ordering',
        value: function ordering(p, nl) {
            var res = [];
            for (var i = 0; i < p.childElementCount; i++) {
                if (nl.indexOf(p.childNodes[i]) > -1) {
                    res.push(p.childNodes[i]);
                }
            }
            return res;
        }
    }, {
        key: 'groupStartsAt',
        value: function groupStartsAt(p, mt) {
            for (var i = 0; i < p.childElementCount; i++) {
                if (p.childNodes[i] == mt) {
                    return i;
                }
            }
            return i;
        }

        // use to be 0.5 overlap but it was too slow
        // there may be case which will miss
        // this comparision is quite slow.

    }, {
        key: 'onTopOfBy',
        value: function onTopOfBy(p, mt, factor, n, list) {
            n = Math.max(0, n);
            Layer.drawInOffscreen(mt, targetOffscreen);
            for (var i = n; i < p.childElementCount; i++) {
                var elem = p.childNodes[i];
                if (elem.getAttribute('stencil') == 'yes') {
                    continue;
                }
                if (elem.getAttribute('fixed') == 'yes') {
                    continue;
                }
                if (elem.nodeName == 'clipPath') {
                    continue;
                }
                if (elem.nodeName == 'image') {
                    continue;
                }
                if (elem.id.indexOf('group_image_') > -1) {
                    continue;
                }
                if (list.indexOf(elem) > -1) {
                    continue;
                }
                var overlap = Layer.overlapBox(mt, elem);
                if (overlap == 1) {
                    var touched = Layer.verifyCollision(mt, elem);
                    if (!touched) {
                        continue;
                    }
                    list = list.concat(Layer.getRelated(elem));
                    continue;
                }

                var checkThis = overlap > factor || // factor in
                overlap > 0.34 && _SVGTools2.default.getArea(elem) / _SVGTools2.default.getArea(mt) < 0.1;
                // or is a 3rd in of someting that is a light weight
                if (checkThis) {
                    // commented because pixel detecting because is too slow
                    touched = Layer.verifyCollision(mt, elem);
                    if (!touched) {
                        continue;
                    }
                    if (list.indexOf(elem) < 0) {
                        list = list.concat(Layer.getRelated(elem));
                    }
                    Layer.onTopOfBy(p, elem, factor, i, list);
                    Layer.drawInOffscreen(mt, targetOffscreen);
                }
            }
            return list;
        }
    }, {
        key: 'addFromBelow',
        value: function addFromBelow(p, mt, n, list) {
            n = Math.min(p.childElementCount, n);
            for (var i = 0; i < n; i++) {
                var elem = p.childNodes[i];
                if (elem.getAttribute('stencil') == 'yes') {
                    continue;
                }
                if (elem.getAttribute('fixed') == 'yes') {
                    continue;
                }
                if (elem.nodeName == 'clipPath') {
                    continue;
                }
                if (elem.nodeName == 'image') {
                    continue;
                }
                if (list.indexOf(elem) > -1) {
                    continue;
                }
                if (elem.getAttribute('fill') != 'none') {
                    continue;
                }
                if (Layer.overlapBox(mt, elem) > 0.5) {
                    if (list.indexOf(elem) < 0) {
                        list = list.concat(Layer.getRelated(elem));
                    }
                }
            }
            return list;
        }
    }, {
        key: 'getRelated',
        value: function getRelated(elem) {
            var res = [];
            if (elem.id.indexOf('pathborder_image') > -1) {
                var imageid = elem.id.substring(String('pathborder_').length, elem.id.length);
                var group = (0, _lib.gn)('group_' + imageid);
                if (group) {
                    res.push(group);
                } else {
                    var img = _SVGImage2.default.getImage(elem);
                    if (img) {
                        res.push(img);
                    }
                    var clip = _SVGImage2.default.getPathMask(elem);
                    if (clip) {
                        res.push(clip);
                    }
                }
            }
            res.push(elem);
            return res;
        }
    }, {
        key: 'inContactWith',
        value: function inContactWith(p, mt, factor, n) {
            var res = [];
            for (var i = n; i < p.childElementCount; i++) {
                var elem = p.childNodes[i];
                if (elem.id == mt.id) {
                    continue;
                }
                if (elem.getAttribute('stencil') == 'yes') {
                    continue;
                }
                if (Layer.overlapBox(mt, elem) > 0) {
                    res.push(elem);
                }
            }
            return res;
        }
    }, {
        key: 'includesBox',
        value: function includesBox(e1, e2) {
            var box1 = _SVGTools2.default.getBox(e1);
            var box2 = _SVGTools2.default.getBox(e2);
            if (box2.width * box2.height > box1.width * box1.height) {
                return false;
            }
            var boxi = box1.intersection(box2);
            if (boxi.isEmpty()) {
                return 0;
            }
            if (boxi.isEqual(box2)) {
                return 1;
            }
            if (boxi.isEqual(box1)) {
                return 1;
            }
            return boxi.width * boxi.height / (box2.width * box2.height) == 1;
        }
    }, {
        key: 'getContainedMost',
        value: function getContainedMost(p, elem, max, factor) {
            p = elem.parentNode;
            for (var i = 0; i < max; i++) {
                var node = p.childNodes[i];
                if (node.id == elem.id) {
                    continue;
                }
                if (Layer.overlapBoxBy(elem, node, factor)) {
                    return i;
                }
            }
            return null;
        }
    }, {
        key: 'overlapBox',
        value: function overlapBox(e1, e2) {
            var box1 = _SVGTools2.default.getBox(e1);
            var box2 = _SVGTools2.default.getBox(e2);
            if (e1.nodeName != 'g' && e2.nodeName != 'g') {
                var contatctPoints = _Path2.default.getPathCrossing(e2, e1);
                if (contatctPoints.length == 0 && box2.width * box2.height > box1.width * box1.height) {
                    return 0;
                }
            }
            var boxi = box1.intersection(box2);
            if (boxi.isEmpty()) {
                return 0;
            }
            if (boxi.isEqual(box2)) {
                return 1;
            }
            //	if (boxi.isEqual(box1)) return 1;
            return boxi.width * boxi.height / (box2.width * box2.height);
        }
    }, {
        key: 'insideMe',
        value: function insideMe(e1, e2) {
            var box1 = _SVGTools2.default.getBox(e1);
            var box2 = _SVGTools2.default.getBox(e2);
            var boxi = box1.intersection(box2);
            if (boxi.isEmpty()) {
                return false;
            }
            var contatctPoints = _Path2.default.getPathCrossing(e2, e1);
            if (contatctPoints.length == 0 && box2.width * box2.height > box1.width * box1.height) {
                return true;
            }
            return false;
        }
    }, {
        key: 'overlapBoxBy',
        value: function overlapBoxBy(e1, e2, percent) {
            return Layer.overlapBox(e1, e2) >= percent;
        }
    }, {
        key: 'findUnderMe',
        value: function findUnderMe(mt) {
            var p = (0, _lib.gn)('layer1');
            var n = Layer.groupStartsAt(p, mt);
            var group = [];
            var box = _SVGTools2.default.getBox(mt);
            for (var i = n - 1; i > -1; i--) {
                var elem = p.childNodes[i];
                if (elem.id == 'staticbkg') {
                    continue;
                }
                if (elem.id.indexOf('erasertemp') > -1) {
                    continue;
                }
                var box2 = _SVGTools2.default.getBox(elem);
                if (!box.intersects(box2)) {
                    continue;
                }
                group.push(elem);
            }
            return group;
        }
    }, {
        key: 'findGroup',
        value: function findGroup(mt) {
            var dt = _ScratchJr2.default.getTime();
            _ScratchJr2.default.log('findGroup start', dt, 'sec');
            (0, _lib.setCanvasSize)(_ScratchJr2.default.workingCanvas, _Paint2.default.workspaceWidth, _Paint2.default.workspaceHeight);
            var list = Layer.getRelated(mt);
            var index = Layer.groupStartsAt(mt.parentNode, mt);
            var test = mt.getAttribute('fill') == 'none' && _SVG2Canvas2.default.isCloseDPath(mt) && mt.id.indexOf('pathborder_image') < 0;
            list = test ? Layer.addFromBelow(mt.parentNode, mt, index, list) : list;
            var newlist = Layer.onTopOfBy(mt.parentNode, mt, 0.5, index, list);
            // to keep righ laying order
            var g = Layer.ordering(mt.parentNode, newlist);
            _ScratchJr2.default.log('findGroup end', _ScratchJr2.default.getTime() - dt, 'sec');
            return g;
        }

        // using canvas because SVG is not good enough
        // revise in the future
        //offscreen

    }, {
        key: 'verifyCollision',
        value: function verifyCollision(spr, other) {
            var box = _SVGTools2.default.getBox(spr);
            var box2 = _SVGTools2.default.getBox(other);
            if (!box.intersects(box2)) {
                return false;
            }
            var rect = box.intersection(box2);
            if (rect.width == 0) {
                return false;
            }
            if (rect.height == 0) {
                return false;
            }
            rect.x = Math.floor(rect.x);
            rect.y = Math.floor(rect.y);
            rect.width = Math.floor(rect.width) + 2;
            rect.height = Math.floor(rect.height) + 2;

            // write the other on the offscreen
            Layer.drawInOffscreen(other, offscreen);
            (0, _lib.setCanvasSize)(_ScratchJr2.default.workingCanvas, _Paint2.default.workspaceWidth, _Paint2.default.workspaceHeight);
            var ctx = _ScratchJr2.default.workingCanvas.getContext('2d');
            ctx.clearRect(0, 0, _Paint2.default.workspaceWidth, _Paint2.default.workspaceHeight);
            ctx.save();
            ctx.globalCompositeOperation = 'source-over';
            ctx.drawImage(offscreen, 0, 0);
            ctx.globalCompositeOperation = 'source-in';
            ctx.drawImage(targetOffscreen, 0, 0);
            ctx.restore();

            var pixels = ctx.getImageData(rect.x, rect.y, rect.width, rect.height).data;
            var max = Math.floor(pixels.length / 4);
            for (var i = 0; i < max; i++) {
                var pt = {
                    x: i % rect.width,
                    y: Math.floor(i / rect.width)
                };
                if (!Layer.isTransparent(pixels, pt, rect.width)) {
                    return true;
                }
            }
            return false;
        }
    }, {
        key: 'drawInOffscreen',
        value: function drawInOffscreen(spr, cnv) {
            var ctx = cnv.getContext('2d');
            (0, _lib.setCanvasSize)(cnv, _Paint2.default.workspaceWidth, _Paint2.default.workspaceHeight);
            ctx.clearRect(0, 0, _Paint2.default.workspaceWidth, _Paint2.default.workspaceHeight);
            var lw = spr.getAttribute('stroke-width');
            ctx.save();
            Layer.drawInContext(spr, ctx, 1, lw, false);
            ctx.restore();
        }
    }, {
        key: 'isTransparent',
        value: function isTransparent(data, node, w) {
            var dx = node.x;
            var dy = node.y;
            return data[dx * 4 + dy * w * 4 + 3] == 0;
        }
    }, {
        key: 'drawInContext',
        value: function drawInContext(elem, ctx, zoom, lw, isTip) {
            var rot = _Transform2.default.extract(elem, 4);
            if (rot.angle != 0) {
                Layer.rotateFromCenter(ctx, elem, rot.angle);
            }
            ctx.scale(zoom, zoom);
            ctx.fillStyle = isTip && !_SVG2Canvas2.default.isCloseDPath(elem) || elem.tagName == 'image' ? '#ff00FF' : _Path2.default.endDotColor;
            ctx.lineWidth = lw;
            ctx.strokeStyle = '#ff00FF';
            // patch for jillians graphics
            if (!elem.getAttribute('fill') && !elem.getAttribute('stroke')) {
                ctx.strokeStyle = 'rgba(0,0,0,0)';
                ctx.fillStyle = '#ff00FF';
            }
            switch (elem.tagName) {
                case 'path':
                    if (isTip && !_SVG2Canvas2.default.isCloseDPath(elem)) {
                        if (_Paint2.default.mode != 'path') {
                            _SVG2Canvas2.default.renderPath(elem, ctx);
                        }
                        _SVG2Canvas2.default.renderPathTips(elem, ctx);
                    } else {
                        _SVG2Canvas2.default.renderPath(elem, ctx);
                    }
                    break;
                case 'g':
                    for (var i = 0; i < elem.childElementCount; i++) {
                        ctx.restore();
                        ctx.save();
                        Layer.drawInContext(elem.childNodes[i], ctx, zoom, lw, isTip);
                        ctx.restore();
                        ctx.save();
                    }
                    break;
                default:
                    _SVG2Canvas2.default.processXMLnode(elem, ctx, true);
                    break;
            }
        }
    }, {
        key: 'rotateFromCenter',
        value: function rotateFromCenter(ctx, group, angle) {
            var box = _SVGTools2.default.getBoxCenter(group);
            ctx.translate(box.x, box.y);
            ctx.rotate(angle * _lib.DEGTOR);
            ctx.translate(-box.x, -box.y);
        }

        /////////////////////////////
        //   Debugging hit masks
        /////////////////////////////

    }, {
        key: 'showmask',
        value: function showmask() {
            var mask = (0, _lib.newDiv)(_Paint2.default.frame, 0, 0, _ScratchJr2.default.workingCanvas.width, _ScratchJr2.default.workingCanvas.height, {
                position: 'absolute',
                zIndex: 200000,
                visibility: 'visible'
            });
            mask.setAttribute('id', 'layermask');
            mask.appendChild(_ScratchJr2.default.workingCanvas);
        }
    }, {
        key: 'on',
        value: function on() {
            (0, _lib.gn)('layermask').style.visibility = 'visible';
        }
    }, {
        key: 'off',
        value: function off() {
            (0, _lib.gn)('layermask').style.visibility = 'hidden';
        }
    }]);

    return Layer;
}();

exports.default = Layer;

/***/ }),

/***/ "./src/painteditor/Paint.js":
/*!**********************************!*\
  !*** ./src/painteditor/Paint.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ScratchJr = __webpack_require__(/*! ../editor/ScratchJr */ "./src/editor/ScratchJr.js");

var _ScratchJr2 = _interopRequireDefault(_ScratchJr);

var _BlockSpecs = __webpack_require__(/*! ../editor/blocks/BlockSpecs */ "./src/editor/blocks/BlockSpecs.js");

var _BlockSpecs2 = _interopRequireDefault(_BlockSpecs);

var _SVGTools = __webpack_require__(/*! ./SVGTools */ "./src/painteditor/SVGTools.js");

var _SVGTools2 = _interopRequireDefault(_SVGTools);

var _SVG2Canvas = __webpack_require__(/*! ../utils/SVG2Canvas */ "./src/utils/SVG2Canvas.js");

var _SVG2Canvas2 = _interopRequireDefault(_SVG2Canvas);

var _Ghost = __webpack_require__(/*! ./Ghost */ "./src/painteditor/Ghost.js");

var _Ghost2 = _interopRequireDefault(_Ghost);

var _OS = __webpack_require__(/*! ../tablet/OS */ "./src/tablet/OS.js");

var _OS2 = _interopRequireDefault(_OS);

var _IO = __webpack_require__(/*! ../tablet/IO */ "./src/tablet/IO.js");

var _IO2 = _interopRequireDefault(_IO);

var _MediaLib = __webpack_require__(/*! ../tablet/MediaLib */ "./src/tablet/MediaLib.js");

var _MediaLib2 = _interopRequireDefault(_MediaLib);

var _Localization = __webpack_require__(/*! ../utils/Localization */ "./src/utils/Localization.js");

var _Localization2 = _interopRequireDefault(_Localization);

var _Alert = __webpack_require__(/*! ../editor/ui/Alert */ "./src/editor/ui/Alert.js");

var _Alert2 = _interopRequireDefault(_Alert);

var _PaintAction = __webpack_require__(/*! ./PaintAction */ "./src/painteditor/PaintAction.js");

var _PaintAction2 = _interopRequireDefault(_PaintAction);

var _ScratchAudio = __webpack_require__(/*! ../utils/ScratchAudio */ "./src/utils/ScratchAudio.js");

var _ScratchAudio2 = _interopRequireDefault(_ScratchAudio);

var _Path = __webpack_require__(/*! ./Path */ "./src/painteditor/Path.js");

var _Path2 = _interopRequireDefault(_Path);

var _PaintUndo = __webpack_require__(/*! ./PaintUndo */ "./src/painteditor/PaintUndo.js");

var _PaintUndo2 = _interopRequireDefault(_PaintUndo);

var _Camera = __webpack_require__(/*! ./Camera */ "./src/painteditor/Camera.js");

var _Camera2 = _interopRequireDefault(_Camera);

var _Events = __webpack_require__(/*! ../utils/Events */ "./src/utils/Events.js");

var _Events2 = _interopRequireDefault(_Events);

var _Transform = __webpack_require__(/*! ./Transform */ "./src/painteditor/Transform.js");

var _Transform2 = _interopRequireDefault(_Transform);

var _Vector = __webpack_require__(/*! ../geom/Vector */ "./src/geom/Vector.js");

var _Vector2 = _interopRequireDefault(_Vector);

var _lib = __webpack_require__(/*! ../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// Originally several files (Paint.js, PaintIO.js, PaintLayout.js)
// were all contributing utility functions to the Paint object.
// To consolidate it into a single module, I've combined these below.
// A nice refactor would be to split them back into the "modules," but that will likely involve
// some serious code changes - determining where the relevant Paint.X are called, if any shared
// data needs to be moved, etc. -TM
var xmlns = 'http://www.w3.org/2000/svg';
var xmlnslink = 'http://www.w3.org/1999/xlink';
var fillcolor = '#080808';
var workspaceWidth = 432;
var workspaceHeight = 384;
var mode = 'select';
var pensizes = [1, 2, 4, 8, 16];

var strokewidth = 2;
var spriteId = void 0;
var currentName = void 0;
var costumeScale = void 0;
var nativeJr = void 0;
var isBkg = false;
var currentMd5 = undefined;
var currentZoom = 1;
var root = void 0;
var saving = false;
var paintFrame = void 0;
var saveMD5 = undefined;
var svgdata = void 0;
var splash = void 0;
var splashshade = void 0;
var maxZoom = 5;
var minZoom = 1;
var initialPoint = {
    x: 0,
    y: 0
};
var deltaPoint = {
    x: 0,
    y: 0
};

var Paint = function () {
    function Paint() {
        _classCallCheck(this, Paint);
    }

    _createClass(Paint, null, [{
        key: 'init',


        ///////////////////////////////////////////
        //Opening and Layout
        ///////////////////////////////////////////

        value: function init(w, h) {
            paintFrame = document.getElementById('paintframe');
            paintFrame.style.width = w + 'px';
            paintFrame.style.height = h + 'px';
            _BlockSpecs2.default.loadCount++;
            _IO2.default.requestFromServer('assets/paint/splash.svg', Paint.setSplash);
            _BlockSpecs2.default.loadCount++;
            _IO2.default.requestFromServer('assets/paint/splashshade.svg', Paint.setSplashShade);
        }
    }, {
        key: 'setSplash',
        value: function setSplash(str) {
            _BlockSpecs2.default.loadCount--;
            splash = str;
        }
    }, {
        key: 'setSplashShade',
        value: function setSplashShade(str) {
            _BlockSpecs2.default.loadCount--;
            splashshade = 'data:image/svg+xml;base64,' + btoa(str);
        }
    }, {
        key: 'open',
        value: function open(bkg, md5, sname, cname, cscale, sw, sh) {
            var action = '';
            var label = '';
            // Analytics:
            // * md3: name of the asset, an md5 hash for user generated, filename for library items
            // * sname: is not set for a new character (ignored for backgrounds)
            // log two events:
            // * paint editor is opened
            // * type of edit (edit_background, edit_character, new_character)
            _OS2.default.analyticsEvent('paint_editor', 'paint_editor_open');
            if (bkg) {
                action = 'edit_background';
                label = md5 in _MediaLib2.default.keys ? md5 : 'user_background';
            } else {
                action = sname ? 'edit_character' : 'new_character';
                label = md5 in _MediaLib2.default.keys ? md5 : 'user_character';
            }
            _OS2.default.analyticsEvent('paint_editor', action, label);
            _PaintUndo2.default.buffer = [];
            _PaintUndo2.default.index = 0;
            maxZoom = 5;
            minZoom = 1;
            workspaceWidth = 432;
            workspaceHeight = 384;
            Paint.clearWorkspace();
            _lib.frame.style.display = 'none';
            paintFrame.className = 'paintframe appear';
            currentMd5 = md5;
            isBkg = bkg;
            spriteId = sname;
            currentName = cname;
            costumeScale = cscale;
            _SVGTools2.default.init();
            nativeJr = true;
            if (isBkg) {
                Paint.initBkg(480, 360);
            } else {
                Paint.initSprite(sw, sh);
            }
            window.ontouchstart = Paint.detectGesture;
            window.onmousedown = Paint.detectGesture;
            window.ondevicemotion = undefined;

            // Set the back button callback
            _ScratchJr2.default.onBackButtonCallback.push(function () {
                var e = document.createEvent('TouchEvent');
                e.initTouchEvent();
                Paint.backToProject(e);
            });
        }

        //Paint Editor Gestures


    }, {
        key: 'blockGestures',
        value: function blockGestures(e) {
            if (!e.touches) {
                return;
            }
            if (e.touches.length == 4) {
                Paint.ignore(e);
            }
        }
    }, {
        key: 'detectGesture',
        value: function detectGesture(e) {
            if (_Camera2.default.active) {
                return;
            }
            Paint.clearEvents(e);
            initialPoint = _PaintAction2.default.getScreenPt(e);
            deltaPoint = _PaintAction2.default.getScreenPt(e);
            var n = 1;
            if (e.touches) {
                n = Math.min(3, e.touches.length);
            }
            var cmdForGesture = [Paint.ignore, Paint.mouseDown, Paint.pinchStart, Paint.Scroll];
            cmdForGesture[n](e);
        }
    }, {
        key: 'clearEvents',
        value: function clearEvents(e) {
            window.ontouchmove = undefined;
            window.ontouchend = undefined;
            window.onmousemove = undefined;
            window.onmouseup = undefined;
            if (_PaintAction2.default.currentshape) {
                _PaintAction2.default.stopAction(e);
            }
            _Events2.default.clearEvents();
            _PaintAction2.default.clearEvents();
        }
    }, {
        key: 'ignore',
        value: function ignore(e) {
            e.preventDefault();
            e.stopPropagation();
        }
    }, {
        key: 'Scroll',
        value: function Scroll(e) {
            e.preventDefault();
            e.stopPropagation();
            if (Paint.canvasFits()) {
                return;
            }
            _Ghost2.default.clearLayer();
            initialPoint = _PaintAction2.default.getScreenPt(e);
            window.ontouchmove = function (evt) {
                Paint.dragBackground(evt);
            };
            window.ontouchend = function () {
                Paint.bounceBack();
                Paint.setCanvasTransform(currentZoom);
                _PaintAction2.default.clearEvents();
            };
            window.onmousemove = function (evt) {
                Paint.dragBackground(evt);
            };
            window.onmouseup = function () {
                Paint.bounceBack();
                Paint.setCanvasTransform(currentZoom);
                _PaintAction2.default.clearEvents();
            };
        }
    }, {
        key: 'pinchStart',
        value: function pinchStart(e) {
            e.preventDefault();
            e.stopPropagation();
            if (_PaintAction2.default.currentshape) {
                return;
            }
            window.ontouchmove = function () {
                Paint.gestureStart(e);
            };
            window.onmousemove = function () {
                Paint.gestureStart(e);
            };
        }
    }, {
        key: 'gestureStart',
        value: function gestureStart(e) {
            window.ontouchmove = undefined;
            window.onmousemove = undefined;
            var skipmodes = ['path', 'ellipse', 'rect'];
            if (skipmodes.indexOf(mode) > -1) {
                if (_PaintAction2.default.currentshape && _PaintAction2.default.currentshape.parentNode) {
                    _PaintAction2.default.currentshape.parentNode.removeChild(_PaintAction2.default.currentshape);
                }
            }
            _Ghost2.default.clearLayer();
            _Events2.default.scaleStartsAt = currentZoom;
            _Events2.default.updatePinchCenter(e);
            initialPoint = _PaintAction2.default.zoomPt(_Events2.default.pinchcenter);
            _Events2.default.clearEvents();
            _Events2.default.clearDragAndDrop();
            window.ontouchmove = Paint.gestureChange;
            window.ontouchend = Paint.gestureEnd;
            window.onmousemove = Paint.gestureChange;
            window.onmouseup = Paint.gestureEnd;
        }
    }, {
        key: 'gestureChange',
        value: function gestureChange(e) {
            e.preventDefault();
            var scale = Math.min(maxZoom, _Events2.default.scaleStartsAt * _Events2.default.zoomScale(e));
            scale = Math.max(minZoom, scale);
            var mc = (0, _lib.gn)('maincanvas');
            var w = mc.offsetWidth * scale;
            var h = mc.offsetHeight * scale;
            var size = Math.min(w, h);
            if (size < 240) {
                return;
            }
            Paint.updateZoomScale(scale);
            var pt = _PaintAction2.default.zoomPt(_Events2.default.pinchcenter);
            var delta = _Vector2.default.diff(pt, initialPoint);
            Paint.adjustPos(delta);
        }
    }, {
        key: 'gestureEnd',
        value: function gestureEnd(e) {
            e.preventDefault();
            window.ontouchmove = undefined;
            window.ontouchend = undefined;
            window.onmousemove = undefined;
            window.onmouseup = undefined;
            var scale = Math.min(maxZoom, _Events2.default.scaleStartsAt * _Events2.default.zoomScale(e));
            scale = Math.max(minZoom, scale);
            Paint.updateZoomScale(scale);
            var pt = _PaintAction2.default.zoomPt(_Events2.default.pinchcenter);
            var delta = _Vector2.default.diff(pt, initialPoint);
            Paint.adjustPos(delta);
            _Events2.default.scaleStartsAt = currentZoom;
            if (_Path2.default.selector) {
                _Path2.default.showDots(_Path2.default.selector);
            }
            Paint.setZoomTo(scale);
        }
    }, {
        key: 'canvasFits',
        value: function canvasFits() {
            return (0, _lib.gn)('maincanvas').offsetWidth * currentZoom <= (0, _lib.gn)('workspacebkg').offsetWidth && (0, _lib.gn)('maincanvas').offsetHeight * currentZoom <= (0, _lib.gn)('workspacebkg').offsetHeight;
        }
    }, {
        key: 'mouseDown',
        value: function mouseDown(e) {
            if (_lib.isTablet && e.target.ontouchstart || e.target.ontouchstart) {
                return;
            }
            var pt = _Events2.default.getTargetPoint(e);
            if ((0, _lib.hitRect)((0, _lib.gn)('donecheck'), pt)) {
                Paint.backToProject(e);
            } else {
                if (e.target.parentNode && e.target.parentNode.getAttribute('key')) {
                    return;
                } else {
                    _PaintAction2.default.mouseDown(e);
                }
            }
        }
    }, {
        key: 'close',
        value: function close() {
            _OS2.default.analyticsEvent('paint_editor', 'paint_editor_close');
            saving = true;
            paintFrame.className = 'paintframe disappear';
            _lib.frame.style.display = 'block';
            _ScratchJr2.default.editorEvents();
            window.ontouchmove = undefined;
            window.ontouchend = undefined;
            window.onmousemove = undefined;
            window.onmouseup = undefined;
            _Alert2.default.close();
            Paint.clearWorkspace();
            _PaintUndo2.default.buffer = [];
            _PaintUndo2.default.index = 0;
            _Ghost2.default.maskData = {};
            setTimeout(function () {
                saving = false;
            }, 500); // delay so it doesn't open the info box
        }
    }, {
        key: 'backToProject',
        value: function backToProject(e) {
            e.preventDefault();
            e.stopPropagation();
            if (saving) {
                return;
            }
            if (_PaintAction2.default.dragGroup.length > 0) {
                return;
            }
            if (e.touches && e.touches.length > 1) {
                return;
            }
            _Path2.default.quitEditMode();
            _Camera2.default.close();
            _PaintAction2.default.clearDragGroup();
            _ScratchJr2.default.unfocus();
            _ScratchAudio2.default.sndFX('tap.wav');
            if (spriteId == null && currentName == null) {
                Paint.savePageImage(Paint.changePage);
            } else {
                Paint.saveSprite(Paint.changePageSprite);
            }
            _ScratchJr2.default.onBackButtonCallback.pop();
        }
    }, {
        key: 'saveEditState',
        value: function saveEditState() {
            _Camera2.default.close();
            _ScratchJr2.default.unfocus();
            _ScratchAudio2.default.sndFX('tap.wav');
            if (spriteId == null && currentName == null) {
                Paint.savePageImage();
            } else {
                Paint.saveSprite();
            }
        }

        /////////////////////////
        //Modes
        /////////////////////////

    }, {
        key: 'setMode',
        value: function setMode(e) {
            if (e.touches && e.touches.length > 1) {
                return;
            }
            e.preventDefault();
            var t;
            if (window.event) {
                t = window.event.srcElement;
            } else {
                t = e.target;
            }
            if (t == null) {
                return;
            }
            _Path2.default.quitEditMode();
            if (_Camera2.default.active) {
                _Camera2.default.doAction(t.getAttribute('key'));
            } else {
                var tools = ['select', 'rotate', 'stamper', 'scissors', 'camera', 'paintbucket'];
                if (tools.indexOf(t.getAttribute('key')) > -1) {
                    _ScratchAudio2.default.sndFX('tap.wav');
                }
                Paint.selectButton(t.getAttribute('key'));
            }
        }
    }, {
        key: 'selectButton',
        value: function selectButton(str) {
            Paint.selectButtonFromDiv((0, _lib.gn)('painttools'), str);
            Paint.selectButtonFromDiv((0, _lib.gn)('selectortools'), str);
            Paint.selectButtonFromDiv((0, _lib.gn)('edittools'), str);
            Paint.selectButtonFromDiv((0, _lib.gn)('filltools'), str);
            if ((0, _lib.gn)('stamps')) {
                Paint.selectButtonFromDiv((0, _lib.gn)('stamps'), str);
            }
            mode = str;
            Paint.selectPenSize(pensizes.indexOf(strokewidth));
        }
    }, {
        key: 'selectButtonFromDiv',
        value: function selectButtonFromDiv(p, str) {
            for (var i = 0; i < p.childElementCount; i++) {
                var elem = p.childNodes[i];
                if (elem.childNodes[0].getAttribute('key') == str) {
                    elem.setAttribute('class', Paint.getClass(elem, 'on'));
                    if (elem.childNodes[0].getAttribute('class')) {
                        elem.childNodes[0].setAttribute('class', Paint.getClass(elem.childNodes[0], 'on'));
                    }
                } else {
                    elem.setAttribute('class', Paint.getClass(elem, 'off'));
                    if (elem.childNodes[0].getAttribute('class')) {
                        elem.childNodes[0].setAttribute('class', Paint.getClass(elem.childNodes[0], 'off'));
                    }
                }
            }
        }
    }, {
        key: 'getClass',
        value: function getClass(elem, state) {
            var list = elem.getAttribute('class').split(' ');
            list.pop();
            list.push(state);
            return list.join(' ');
        }

        //Zoom Management
        ///////////////////////////////////////////

    }, {
        key: 'setZoomTo',
        value: function setZoomTo(value) {
            currentZoom = value;
            Paint.bounceBack();
            Paint.setCanvasTransform(value);
            _Ghost2.default.drawOffscreen();
        }
    }, {
        key: 'updateZoomScale',
        value: function updateZoomScale(value) {
            currentZoom = value;
            Paint.setCanvasTransform(value);
        }
    }, {
        key: 'setCanvasTransform',
        value: function setCanvasTransform(value) {
            if (_lib.isAndroid) {
                // Use 3D translate to increase speed
                (0, _lib.gn)('maincanvas').style.webkitTransform = 'translate3d(' + (0, _lib.gn)('maincanvas').dx + 'px,' + (0, _lib.gn)('maincanvas').dy + 'px, 0px) scale(' + value + ',' + value + ')';
            } else {
                // Use 2D translate to maintain sharpness
                (0, _lib.gn)('maincanvas').style.webkitTransform = 'translate(' + (0, _lib.gn)('maincanvas').dx + 'px,' + (0, _lib.gn)('maincanvas').dy + 'px) scale(' + value + ',' + value + ')';
            }
        }
    }, {
        key: 'adjustPos',
        value: function adjustPos(delta) {
            (0, _lib.gn)('maincanvas').dx += delta.x;
            (0, _lib.gn)('maincanvas').dy += delta.y;
            Paint.setCanvasTransform(currentZoom);
        }
    }, {
        key: 'bounceBack',
        value: function bounceBack() {
            var mx = Math.floor(((0, _lib.gn)('workspacebkg').offsetWidth - workspaceWidth) / 2);
            var my = Math.floor(((0, _lib.gn)('workspacebkg').offsetHeight - workspaceHeight) / 2);
            (0, _lib.gn)('maincanvas').dx = Paint.canvasFits() ? mx : Paint.getCoorx(20, mx);
            (0, _lib.gn)('maincanvas').dy = Paint.canvasFits() ? my : Paint.getCoory(20, my);
        }
    }, {
        key: 'getCoorx',
        value: function getCoorx(indent, val) {
            if ((0, _lib.gn)('maincanvas').offsetWidth * currentZoom <= (0, _lib.gn)('workspacebkg').offsetWidth) {
                return val;
            }
            var dx = (0, _lib.gn)('maincanvas').dx + (0, _lib.gn)('maincanvas').cx - (0, _lib.gn)('maincanvas').cx * currentZoom;
            if (dx > indent) {
                return (0, _lib.gn)('maincanvas').dx + (indent - dx);
            }
            val = (dx / currentZoom + (0, _lib.gn)('maincanvas').offsetWidth) * currentZoom;
            var edge = (0, _lib.gn)('workspacebkg').offsetWidth - indent;
            if (val < edge) {
                return (0, _lib.gn)('maincanvas').dx + (edge - val);
            }
            return (0, _lib.gn)('maincanvas').dx;
        }
    }, {
        key: 'getCoory',
        value: function getCoory(indent, val) {
            if ((0, _lib.gn)('maincanvas').offsetHeight * currentZoom <= (0, _lib.gn)('workspacebkg').offsetHeight) {
                return val;
            }
            var dy = (0, _lib.gn)('maincanvas').dy + (0, _lib.gn)('maincanvas').cy - (0, _lib.gn)('maincanvas').cy * currentZoom;
            if (dy > indent) {
                return (0, _lib.gn)('maincanvas').dy + (indent - dy);
            }
            val = (dy / currentZoom + (0, _lib.gn)('maincanvas').offsetHeight) * currentZoom;
            var edge = (0, _lib.gn)('workspacebkg').offsetHeight - indent;
            if (val < edge) {
                return (0, _lib.gn)('maincanvas').dy + (edge - val);
            }
            return (0, _lib.gn)('maincanvas').dy;
        }
    }, {
        key: 'scaleToFit',
        value: function scaleToFit() {
            var dh = root.parentNode.parentNode.offsetHeight / (workspaceHeight + 10);
            var dw = root.parentNode.parentNode.offsetWidth / (workspaceWidth + 10);
            Paint.setZoomTo(Math.min(dw, dh));
        }
    }, {
        key: 'dragBackground',
        value: function dragBackground(evt) {
            if (Paint.canvasFits()) {
                return;
            }
            var pt = _PaintAction2.default.getScreenPt(evt);
            var delta = _Vector2.default.diff(pt, initialPoint);
            Paint.adjustPos(delta);
        }

        /////////////////////////////////////////////////////////
        //dispatch table


        // Originally PaintLayout.js

        /////////////////////////////////
        //Layout Setup
        /////////////////////////////////

    }, {
        key: 'layout',
        value: function layout() {
            Paint.topbar();
            var div = (0, _lib.newHTML)('div', 'innerpaint', paintFrame);
            Paint.leftPalette(div);
            var workspaceContainer = (0, _lib.newHTML)('div', 'workspacebkg-container', div);
            var workspace = (0, _lib.newHTML)('div', 'workspacebkg', workspaceContainer);
            workspace.setAttribute('id', 'workspacebkg');
            Paint.rightPalette(div);
            Paint.colorPalette(paintFrame);
            Paint.selectButton('path');
            Paint.createSVGeditor(workspace);
        }

        /////////////////////////////////
        //top bar
        /////////////////////////////////

    }, {
        key: 'topbar',
        value: function topbar() {
            var pt = (0, _lib.newHTML)('div', 'paintop', paintFrame);
            Paint.checkMark(pt);
            _PaintUndo2.default.setup(pt); // plug here the undo
            Paint.nameOfcostume(pt);
        }
    }, {
        key: 'checkMark',
        value: function checkMark(pt) {
            var clicky = (0, _lib.newHTML)('div', 'paintdone', pt);
            clicky.id = 'donecheck';
            clicky.ontouchstart = Paint.backToProject;
            clicky.onmousedown = Paint.backToProject;
        }
    }, {
        key: 'nameOfcostume',
        value: function nameOfcostume(p) {
            var sform = (0, _lib.newHTML)('form', 'spriteform', p);
            sform.name = 'spriteform';
            var ti = (0, _lib.newHTML)('input', undefined, sform);
            ti.autocomplete = false;
            ti.autocorrect = false;
            ti.name = 'name';
            ti.maxLength = 25;
            ti.firstTime = true;
            ti.ontouchstart = function () {};
            ti.onmousedown = function () {};
            ti.onfocus = Paint.nameFocus;
            ti.onblur = Paint.nameBlur;
            ti.onkeypress = Paint.handleNamePress;
            ti.onkeyup = Paint.handleKeyRelease;
            sform.onsubmit = Paint.submitNameChange;
        }
    }, {
        key: 'submitNameChange',
        value: function submitNameChange(e) {
            e.preventDefault();
            var input = e.target;
            input.blur();
        }
    }, {
        key: 'nameFocus',
        value: function nameFocus(e) {
            e.preventDefault();
            e.stopPropagation();
            var ti = e.target;
            ti.firstTime = true;
            _ScratchJr2.default.activeFocus = ti;
            if (_lib.isAndroid) {
                AndroidInterface.scratchjr_setsoftkeyboardscrolllocation(ti.getBoundingClientRect().top * window.devicePixelRatio, ti.getBoundingClientRect().bottom * window.devicePixelRatio);
            }
            setTimeout(function () {
                ti.setSelectionRange(ti.value.length, ti.value.length);
            }, 1);
        }
    }, {
        key: 'nameBlur',
        value: function nameBlur(e) {
            _ScratchJr2.default.activeFocus = undefined;
            var spr = _ScratchJr2.default.getSprite();
            var ti = e.target;
            var val = _ScratchJr2.default.validate(ti.value, spr.name);
            ti.value = val.substring(0, ti.maxLength);
            _ScratchJr2.default.storyStart('Paint.nameBlur');
        }
    }, {
        key: 'handleNamePress',
        value: function handleNamePress(e) {
            var key = e.keyCode || e.which;
            if (key == 13) {
                Paint.submitNameChange(e);
            } else {
                var ti = e.target;
                if (ti.firstTime) {
                    ti.firstTime = false;
                    ti.value = '';
                }
                if (ti.value.length == 25) {
                    _ScratchAudio2.default.sndFX('boing.wav');
                }
            }
        }
    }, {
        key: 'handleKeyRelease',
        value: function handleKeyRelease(e) {
            var key = e.keyCode || e.which;
            var ti = e.target;
            if (key != 8) {
                return;
            }
            if (ti.firstTime) {
                ti.firstTime = false;
                ti.value = '';
            }
        }

        /////////////////////////////////
        //Left Palette
        /////////////////////////////////

    }, {
        key: 'leftPalette',
        value: function leftPalette(div) {
            var leftpal = (0, _lib.newHTML)('div', 'side up', div);
            var pal = (0, _lib.newHTML)('div', 'paintpalette', leftpal);
            pal.setAttribute('id', 'paintpalette');
            Paint.setupEditPalette(pal);
            Paint.createSizeSelector(pal);
        }
    }, {
        key: 'setupEditPalette',
        value: function setupEditPalette(pal) {
            var section = (0, _lib.newHTML)('div', 'section', pal);
            section.setAttribute('id', 'painttools');
            var list = ['path', 'ellipse', 'rect', 'tri'];
            var i = 0;
            for (i = 0; i < list.length; i++) {
                var but = (0, _lib.newHTML)('div', 'element off', section);
                var icon = (0, _lib.newHTML)('div', 'tool ' + list[i] + ' off', but);
                icon.setAttribute('key', list[i]);
                icon.ontouchstart = Paint.setMode;
                icon.onmousedown = Paint.setMode;
            }
        }
    }, {
        key: 'createSizeSelector',
        value: function createSizeSelector(pal) {
            var section = (0, _lib.newHTML)('div', 'section space', pal);
            section.setAttribute('id', 'sizeSelector');
            for (var i = 0; i < pensizes.length; i++) {
                var ps = (0, _lib.newHTML)('div', 'pensizeholder', section);
                ps.key = i;
                var setSize = function setSize(e) {
                    e.preventDefault();
                    e.stopPropagation();
                    var n = Number(this.key);
                    strokewidth = pensizes[Number(this.key)];
                    Paint.selectPenSize(n);
                };
                ps.ontouchstart = setSize;
                ps.onmousedown = setSize;
                var c = (0, _lib.newHTML)('div', 'line t' + i, ps);
                Paint.drawPenSizeInColor(c);
            }
            strokewidth = pensizes[1];
            Paint.selectPenSize(1);
        }

        ////////////////////////////////////////
        // Pen sizes
        ////////////////////////////////////////


    }, {
        key: 'drawPenSizeInColor',
        value: function drawPenSizeInColor(c) {
            c.style.background = fillcolor;
        }
    }, {
        key: 'updateStrokes',
        value: function updateStrokes() {
            var div = (0, _lib.gn)('sizeSelector');
            if (!div) {
                return;
            }
            for (var i = 0; i < div.childElementCount; i++) {
                var elem = div.childNodes[i];
                Paint.drawPenSizeInColor(elem.childNodes[0]);
            }
        }
    }, {
        key: 'selectPenSize',
        value: function selectPenSize(str) {
            var p = (0, _lib.gn)('sizeSelector');
            for (var i = 0; i < p.childElementCount; i++) {
                var elem = p.childNodes[i];
                if (elem.key == str) {
                    elem.setAttribute('class', 'pensizeholder on');
                } else {
                    elem.setAttribute('class', 'pensizeholder off');
                }
            }
        }

        /////////////////////////////////
        //Right Palette
        /////////////////////////////////

    }, {
        key: 'rightPalette',
        value: function rightPalette(div) {
            var rightpal = (0, _lib.newHTML)('div', 'side', div);
            Paint.addSidePalette(rightpal, 'selectortools', ['select', 'rotate']);
            Paint.addSidePalette(rightpal, 'edittools', ['stamper', 'scissors']);
            Paint.addSidePalette(rightpal, 'filltools', _OS2.default.camera == '1' && _Camera2.default.available ? ['camera', 'paintbucket'] : ['paintbucket']);
        }
    }, {
        key: 'addSidePalette',
        value: function addSidePalette(p, id, list) {
            var pal = (0, _lib.newHTML)('div', 'paintpalette short', p);
            pal.setAttribute('id', id);
            for (var i = 0; i < list.length; i++) {
                var but = (0, _lib.newHTML)('div', 'element off', pal);
                var icon = (0, _lib.newHTML)('div', 'tool ' + list[i] + ' off', but);
                icon.setAttribute('key', list[i]);
                icon.ontouchstart = Paint.setMode;
                icon.onmousedown = Paint.setMode;
            }
        }
    }, {
        key: 'cameraToolsOn',
        value: function cameraToolsOn() {
            (0, _lib.gn)('backdrop').setAttribute('class', 'modal-backdrop fade dark');
            (0, _lib.setProps)((0, _lib.gn)('backdrop').style, {
                display: 'block'
            });
            var topbar = (0, _lib.newHTML)('div', 'phototopbar', (0, _lib.gn)('backdrop'));
            topbar.setAttribute('id', 'photocontrols');
            //  var actions = newHTML("div",'actions', topbar);
            //  var buttons = newHTML('div', 'photobuttons', actions);
            var fc = (0, _lib.newHTML)('div', 'flipcamera', topbar);
            fc.setAttribute('id', 'cameraflip');
            fc.setAttribute('key', 'cameraflip');
            if (_lib.isAndroid && !AndroidInterface.scratchjr_has_multiple_cameras()) {
                fc.style.display = 'none';
            }

            fc.ontouchstart = Paint.setMode;
            fc.onmousedown = Paint.setMode;
            var captureContainer = (0, _lib.newHTML)('div', 'snapshot-container', (0, _lib.gn)('backdrop'));
            captureContainer.setAttribute('id', 'capture-container');
            var capture = (0, _lib.newHTML)('div', 'snapshot', captureContainer);
            capture.setAttribute('id', 'capture');
            capture.setAttribute('key', 'camerasnap');
            capture.ontouchstart = Paint.setMode;
            capture.onmousedown = Paint.setMode;
            var cc = (0, _lib.newHTML)('div', 'cameraclose', topbar);
            cc.setAttribute('id', 'cameraclose');
            cc.ontouchstart = Paint.closeCameraMode;
            cc.onmousedown = Paint.closeCameraMode;
        }
    }, {
        key: 'closeCameraMode',
        value: function closeCameraMode(evt) {
            evt.preventDefault();
            evt.stopPropagation();
            _ScratchAudio2.default.sndFX('exittap.wav');
            _Camera2.default.close();
            Paint.selectButton('select');
        }
    }, {
        key: 'cameraToolsOff',
        value: function cameraToolsOff() {
            (0, _lib.gn)('backdrop').setAttribute('class', 'modal-backdrop fade');
            (0, _lib.setProps)((0, _lib.gn)('backdrop').style, {
                display: 'none'
            });
            if ((0, _lib.gn)('photocontrols')) {
                (0, _lib.gn)('photocontrols').parentNode.removeChild((0, _lib.gn)('photocontrols'));
            }
            if ((0, _lib.gn)('capture')) {
                var captureContainer = (0, _lib.gn)('capture').parentNode;
                var captureContainerParent = captureContainer.parentNode;
                captureContainer.removeChild((0, _lib.gn)('capture'));
                captureContainerParent.removeChild((0, _lib.gn)('capture-container'));
            }
        }

        //////////////////////////////////
        // canvas Area
        //////////////////////////////////


    }, {
        key: 'setUpCanvasArea',
        value: function setUpCanvasArea() {
            var workspace = (0, _lib.gn)('workspacebkg');
            var dx = Math.floor((workspace.offsetWidth - workspaceWidth) / 2);
            var dy = Math.floor((workspace.offsetHeight - workspaceHeight) / 2);
            var w = workspaceWidth;
            var h = workspaceHeight;

            var div = (0, _lib.gn)('maincanvas');
            div.style.background = '#F5F2F7';
            div.style.top = '0px';
            div.style.left = '0px';

            div.style.width = w + 'px';
            div.style.height = h + 'px';
            div.cx = div.offsetWidth / 2;
            div.cy = div.offsetHeight / 2;
            div.dx = dx;
            div.dy = dy;

            root.setAttributeNS(null, 'width', w);
            root.setAttributeNS(null, 'height', h);
            Paint.drawGrid(w, h);
            _PaintAction2.default.clearEvents();
        }

        /////////////////////////////////
        //Color Palette
        /////////////////////////////////

    }, {
        key: 'colorPalette',
        value: function colorPalette(div) {
            var swatchlist = Paint.initSwatchList();
            var spalContainer = (0, _lib.newHTML)('div', 'swatchpalette-container', div);
            var spal = (0, _lib.newHTML)('div', 'swatchpalette', spalContainer);
            spal.setAttribute('id', 'swatches');
            for (var i = 0; i < swatchlist.length; i++) {
                var colour = (0, _lib.newHTML)('div', 'swatchbucket', spal);
                // bucket
                var sf = (0, _lib.newHTML)('div', 'swatchframe', colour);
                var sc = (0, _lib.newHTML)('div', 'swatchcolor', sf);
                sc.style.background = swatchlist[i];
                //
                sf = (0, _lib.newHTML)('div', 'splasharea off', colour);
                Paint.setSplashColor(sf, splash, swatchlist[i]);
                Paint.addImageUrl(sf, splashshade);
                colour.ontouchstart = Paint.selectSwatch;
                colour.onmousedown = Paint.selectSwatch;
            }
            Paint.setSwatchColor((0, _lib.gn)('swatches').childNodes[swatchlist.indexOf('#1C1C1C')]);
        }
    }, {
        key: 'setSplashColor',
        value: function setSplashColor(p, str, color) {
            var dataurl = 'data:image/svg+xml;base64,' + btoa(str.replace(/#662D91/g, color));
            Paint.addImageUrl(p, dataurl);
        }
    }, {
        key: 'addImageUrl',
        value: function addImageUrl(p, url) {
            var img = document.createElement('img');
            img.src = url;
            img.style.position = 'absolute';
            p.appendChild(img);
        }
    }, {
        key: 'selectSwatch',
        value: function selectSwatch(e) {
            if (e.touches && e.touches.length > 1) {
                return;
            }
            e.preventDefault();
            e.stopPropagation();
            if (_Camera2.default.active) {
                return;
            }
            var t;
            if (window.event) {
                t = window.event.srcElement;
            } else {
                t = e.target;
            }
            var b = 'swatchbucket' != t.className;
            while (b) {
                t = t.parentNode;
                b = t && 'swatchbucket' != t.className;
            }
            if (!t) {
                return;
            }
            _ScratchAudio2.default.sndFX('splash.wav');
            Paint.setSwatchColor(t);
        }
    }, {
        key: 'setSwatchColor',
        value: function setSwatchColor(t) {
            var tools = ['select', 'wand', 'stamper', 'scissors', 'rotate'];
            if (t && tools.indexOf(mode) > -1) {
                Paint.selectButton('paintbucket');
            }
            var c = t.childNodes[0].childNodes[0].style.backgroundColor;
            for (var i = 0; i < (0, _lib.gn)('swatches').childElementCount; i++) {
                var mycolor = (0, _lib.gn)('swatches').childNodes[i].childNodes[0].childNodes[0].style.backgroundColor;
                if (c == mycolor) {
                    (0, _lib.gn)('swatches').childNodes[i].childNodes[1].setAttribute('class', 'splasharea on');
                } else {
                    (0, _lib.gn)('swatches').childNodes[i].childNodes[1].setAttribute('class', 'splasharea off');
                }
            }
            fillcolor = c;
            _Path2.default.quitEditMode();
            Paint.updateStrokes();
        }
    }, {
        key: 'initSwatchList',
        value: function initSwatchList() {
            return [
            //	"#FF5500", // new orange
            '#FFD2F2', '#FF99D6', '#FF4583', // red pinks
            '#C30001', '#FF0023', '#FF8300', '#FFB200', '#FFF42E', '#FFF9C2', // pale yellow
            '#E2FFBD', //  pale green
            '#CFF500', // lime green
            '#50D823', // problematic
            //          "#2BFC49", // less problematic
            '#29C130',
            //          "#56C43B",  // ERROR?
            '#2BBF8A', // new green
            '#027607', '#114D24', //greens
            '#FFFFFF', '#CCDDE7', '#61787C', '#1C1C1C', // grays
            // '#D830A3', // sarah's pink shoes border
            '#FF64E9', // purple pinks
            '#D999FF', ' #A159D3', // vilote
            '#722696', // sarah's violet
            '#141463', '#003399', '#1D40ED', '#0079D3', '#009EFF', '#76C8FF', '#ACE0FD', '#11B7BC', '#21F9F3', '#C3FCFC',
            // '#54311E', '#8E572A', '#E4B69D', '#FFCDA4', '#FFEDD7' // skin colors
            '#FDDBB4', '#E4B681', '#BF8C5C', '#955D31', '#6B3D1F', '#482D18' // new skin colors
            ];
        }

        /////////////////////////////////////////////////
        //  Setup SVG Editor
        ////////////////////////////////////////////////


    }, {
        key: 'createSVGeditor',
        value: function createSVGeditor(container) {
            var div = (0, _lib.newHTML)('div', 'maincanvas', container);
            div.setAttribute('id', 'maincanvas');
            div.style.background = '#F5F2F7';
            div.style.top = '0px';
            div.style.left = '0px';
            window.onmousemove = undefined;
            window.onmouseup = undefined;
            root = _SVGTools2.default.create(div);
            root.setAttribute('class', 'active3d');
            window.xform = _Transform2.default.getTranslateTransform();
            window.selxform = _Transform2.default.getTranslateTransform();
            var layer = _SVGTools2.default.createGroup(root, 'layer1');
            layer.setAttribute('style', 'pointer-events:visiblePainted');
            _SVGTools2.default.createGroup(root, 'draglayer');
            _SVGTools2.default.createGroup(root, 'paintgrid');
            (0, _lib.gn)('paintgrid').setAttribute('opacity', 0.5);
        }
    }, {
        key: 'clearWorkspace',
        value: function clearWorkspace() {
            var fcn = function fcn(div) {
                while (div.childElementCount > 0) {
                    div.removeChild(div.childNodes[0]);
                }
            };
            fcn((0, _lib.gn)('layer1'));
            fcn((0, _lib.gn)('paintgrid'));
            fcn((0, _lib.gn)('draglayer'));
            _Path2.default.quitEditMode();
        }
    }, {
        key: 'drawGrid',
        value: function drawGrid(w, h) {
            var attr, path;
            if (!isBkg) {
                attr = {
                    'd': Paint.getGridPath(w, h, 12),
                    'id': (0, _lib.getIdFor)('gridpath'),
                    'opacity': 1,
                    'stroke': '#dcddde',
                    'fill': 'none',
                    'stroke-width': 0.5
                };
                path = _SVGTools2.default.addChild((0, _lib.gn)('paintgrid'), 'path', attr);
                path.setAttribute('style', 'pointer-events:none;');
            }
            attr = {
                'd': Paint.getGridPath(w, h, isBkg ? 24 : 48),
                'id': (0, _lib.getIdFor)('gridpath'),
                'opacity': 1,
                'stroke': '#c1c2c3',
                'fill': 'none',
                'stroke-width': 0.5
            };
            path = _SVGTools2.default.addChild((0, _lib.gn)('paintgrid'), 'path', attr);
            path.setAttribute('style', 'pointer-events:none;');
        }
    }, {
        key: 'getGridPath',
        value: function getGridPath(w, h, gridsize) {
            var str = '';
            var dx = gridsize;
            // vertical
            var cmd;
            for (var i = 0; i < w / gridsize; i++) {
                cmd = 'M' + dx + ',' + 0 + 'L' + dx + ',' + h;
                str += cmd;
                dx += gridsize;
            }
            var dy = gridsize;
            // horizontal
            for (i = 0; i < h / gridsize; i++) {
                cmd = 'M' + 0 + ',' + dy + 'L' + w + ',' + dy;
                str += cmd;
                dy += gridsize;
            }
            return str;
        }

        // Originally PaintIO.js
        ///////////////////////////
        // Loading and saving
        //////////////////////////

    }, {
        key: 'initBkg',
        value: function initBkg(ow, oh) {
            nativeJr = true;
            workspaceWidth = ow;
            workspaceHeight = oh;
            Paint.setUpCanvasArea();
            var dh = root.parentNode.parentNode.offsetHeight / (workspaceHeight + 10);
            var dw = root.parentNode.parentNode.offsetWidth / (workspaceWidth + 10);
            Paint.setZoomTo(Math.min(dw, dh));
            document.forms.spriteform.style.visibility = 'hidden';
            if (currentMd5) {
                Paint.loadBackground(currentMd5);
            } else {
                var attr = {
                    'id': 'staticbkg',
                    'opacity': 1,
                    'fixed': 'yes',
                    fill: _ScratchJr2.default.stagecolor
                };
                var cmds = [['M', 0, 0], ['L', 480, 0], ['L', 480, 360], ['L', 0, 360], ['L', 0, 0]];
                attr.d = _SVG2Canvas2.default.arrayToString(cmds);
                _SVGTools2.default.addChild((0, _lib.gn)('layer1'), 'path', attr);
                _Ghost2.default.drawOffscreen();
                _PaintUndo2.default.record(true);
            }
        }
    }, {
        key: 'loadBackground',
        value: function loadBackground(md5) {
            if (md5.indexOf('samples/') >= 0) {
                // Load sample asset
                Paint.loadChar(md5);
            } else if (!_MediaLib2.default.keys[md5]) {
                // Load user asset
                _OS2.default.getmedia(md5, nextStep);
            } else {
                // Load library asset
                Paint.getBkg(_MediaLib2.default.path + md5);
            }
            function nextStep(base64) {
                var str = atob(base64);
                _IO2.default.getImagesInSVG(str, function () {
                    Paint.loadBkg(str);
                });
            }
        }
    }, {
        key: 'getBkg',
        value: function getBkg(url) {
            var xmlrequest = new XMLHttpRequest();
            xmlrequest.onreadystatechange = function () {
                if (xmlrequest.readyState == 4) {
                    Paint.createBkgFromXML(xmlrequest.responseText);
                }
            };
            xmlrequest.open('GET', url, true);
            xmlrequest.send(null);
        }
    }, {
        key: 'loadBkg',
        value: function loadBkg(str) {
            Paint.createBkgFromXML(str);
        }
    }, {
        key: 'createBkgFromXML',
        value: function createBkgFromXML(str) {
            nativeJr = str.indexOf('Scratch Jr') > -1;
            str = str.replace(/>\s*</g, '><');
            var xmlDoc = new DOMParser().parseFromString(str, 'text/xml');
            var extxml = document.importNode(xmlDoc.documentElement, true);
            var flat = Paint.skipUnwantedElements(extxml, []);
            for (var i = 0; i < flat.length; i++) {
                (0, _lib.gn)('layer1').appendChild(flat[i]);
                if (flat[i].getAttribute('id') == 'fixed') {
                    flat[i].setAttribute('fixed', 'yes');
                }
                flat[i].setAttribute('file', 'yes');
            }
            Paint.doAbsolute((0, _lib.gn)('layer1'));
            if (!nativeJr) {
                Paint.reassingIds((0, _lib.gn)('layer1'));
            } // make sure there are unique mask names
            //	gn("layer1").childNodes[0].setAttribute('id', "staticbkg");
            var dh = root.parentNode.parentNode.offsetHeight / (workspaceHeight + 10);
            var dw = root.parentNode.parentNode.offsetWidth / (workspaceWidth + 10);
            Paint.setZoomTo(Math.min(dw, dh));
            _PaintUndo2.default.record(true);
            if (!nativeJr) {
                Paint.selectButton('paintbucket');
            }
        }
    }, {
        key: 'initSprite',
        value: function initSprite(ow, oh) {
            nativeJr = true;
            document.forms.spriteform.style.visibility = 'visible';
            document.forms.spriteform.name.value = (0, _lib.gn)(currentName) ? (0, _lib.gn)(currentName).owner.name : currentName;
            if (ow) {
                workspaceWidth = ow;
            }
            if (oh) {
                workspaceHeight = oh;
            }
            if (currentMd5) {
                Paint.loadCharacter(currentMd5);
            } else {
                Paint.setUpCanvasArea();
                (0, _lib.setCanvasSize)(_Ghost2.default.maskCanvas, Math.round(Number(root.getAttribute('width')) * currentZoom), Math.round(Number(root.getAttribute('height')) * currentZoom));
                var dh = root.parentNode.parentNode.offsetHeight / (workspaceHeight + 10);
                var dw = root.parentNode.parentNode.offsetWidth / (workspaceWidth + 10);
                Paint.setZoomTo(Math.min(dw, dh));
                _PaintUndo2.default.record(true);
            }
        }
    }, {
        key: 'loadCharacter',
        value: function loadCharacter(md5) {
            if (md5.indexOf('samples/') >= 0) {
                // Load sample asset
                Paint.loadChar(md5);
            } else if (!_MediaLib2.default.keys[md5]) {
                // Load user asset
                _OS2.default.getmedia(md5, nextStep);
            } else {
                // Load library asset
                Paint.loadChar(_MediaLib2.default.path + md5);
            }
            function nextStep(base64) {
                var str = atob(base64);
                _IO2.default.getImagesInSVG(str, function () {
                    Paint.loadSprite(str);
                });
            }
        }
    }, {
        key: 'loadSprite',
        value: function loadSprite(svg) {
            Paint.createCharFromXML(svg, currentName);
        }
    }, {
        key: 'loadChar',
        value: function loadChar(url) {
            var xmlrequest = new XMLHttpRequest();
            xmlrequest.onreadystatechange = function () {
                if (xmlrequest.readyState == 4) {
                    Paint.createCharFromXML(xmlrequest.responseText, currentName);
                }
            };
            xmlrequest.open('GET', url, true);
            xmlrequest.send(null);
        }
    }, {
        key: 'adjustShapePosition',
        value: function adjustShapePosition(dx, dy) {
            window.xform.setTranslate(dx, dy);
            _Transform2.default.translateTo((0, _lib.gn)('layer1'), window.xform);
        }

        ///////////////////////////////////
        // Saving
        /////////////////////////////////

    }, {
        key: 'savePageImage',
        value: function savePageImage(fcn) {
            var worthsaving = (0, _lib.gn)('layer1').childElementCount > 0;
            if (!worthsaving) {
                Paint.close();
            } else {
                saving = true;
                if (fcn) {
                    _Alert2.default.open(paintFrame, (0, _lib.gn)('donecheck'), _Localization2.default.localize('ALERT_SAVING'), '#28A5DA');
                    _Alert2.default.balloon.style.zIndex = 12000;
                }
                svgdata = _SVGTools2.default.saveBackground((0, _lib.gn)('layer1'), workspaceWidth, workspaceHeight);
                _IO2.default.setMedia(svgdata, 'svg', function (str) {
                    Paint.changeBackground(str, fcn);
                });
            }
        }
    }, {
        key: 'changeBackground',
        value: function changeBackground(md5, fcn) {
            saveMD5 = md5;
            var type = 'userbkgs';
            var mobj = {};
            mobj.cond = 'md5 = ? AND version = ?';
            mobj.items = ['*'];
            mobj.values = [saveMD5, _ScratchJr2.default.version];
            _IO2.default.query(type, mobj, function (str) {
                Paint.checkDuplicateBkg(str, fcn);
            });
        }
    }, {
        key: 'checkDuplicateBkg',
        value: function checkDuplicateBkg(str, fcn) {
            var list = JSON.parse(str);
            if (list.length > 0) {
                if (fcn) {
                    fcn('duplicate');
                }
            } else {
                Paint.addToBkgLib(fcn);
            }
        }

        /////////////////////////////////////
        // userbkgs:  stores backgrounds
        /////////////////////////////////////
        /*
            [version] =>
            [md5] =>
            [altmd5] =>  //for PNG option
            [ext] => png / svg
           	[width] =>
           	[height] =>
        */

    }, {
        key: 'addToBkgLib',
        value: function addToBkgLib(fcn) {
            var dataurl = _IO2.default.getThumbnail(svgdata, 480, 360, 120, 90);
            var pngBase64 = dataurl.split(',')[1];
            _OS2.default.setmedia(pngBase64, 'png', setBkgRecord);
            function setBkgRecord(pngmd5) {
                var json = {};
                var keylist = ['md5', 'altmd5', 'version', 'width', 'height', 'ext'];
                var values = '?,?,?,?,?,?';
                json.values = [saveMD5, pngmd5, _ScratchJr2.default.version, '480', '360', 'svg'];
                json.stmt = 'insert into userbkgs (' + keylist.toString() + ') values (' + values + ')';
                _OS2.default.stmt(json, fcn);
            }
        }
    }, {
        key: 'changePage',
        value: function changePage() {
            _ScratchJr2.default.stage.currentPage.setBackground(saveMD5, _ScratchJr2.default.stage.currentPage.updateBkg);
            Paint.close();
        }
    }, {
        key: 'saveSprite',
        value: function saveSprite(fcn) {
            var cname = document.forms.spriteform.name.value;
            var worthsaving = (0, _lib.gn)('layer1').childElementCount > 0 && _PaintUndo2.default.index > 0;
            if (worthsaving) {
                saving = true;
                if (fcn) {
                    _Alert2.default.open(paintFrame, (0, _lib.gn)('donecheck'), 'Saving...', '#28A5DA');
                    _Alert2.default.balloon.style.zIndex = 12000;
                }
                svgdata = _SVGTools2.default.saveShape((0, _lib.gn)('layer1'), workspaceWidth, workspaceHeight);
                _IO2.default.setMedia(svgdata, 'svg', function (str) {
                    Paint.addOrModifySprite(str, fcn);
                });
            } else {
                var type = Paint.getLoadType(spriteId, cname);
                if (cname != currentName && type == 'modify') {
                    _ScratchJr2.default.stage.currentPage.modifySpriteName(cname, spriteId);
                } else if (currentMd5 && type == 'add') {
                    _ScratchJr2.default.stage.currentPage.addSprite(costumeScale, currentMd5, cname);
                }
                Paint.close();
            }
        }
    }, {
        key: 'addOrModifySprite',
        value: function addOrModifySprite(str, fcn) {
            saveMD5 = str;
            var mobj = {};
            mobj.cond = 'md5 = ? AND version = ?';
            mobj.items = ['*'];
            mobj.values = [saveMD5, _ScratchJr2.default.version];
            _IO2.default.query('usershapes', mobj, function (str) {
                Paint.checkDuplicate(str, fcn);
            });
        }
    }, {
        key: 'checkDuplicate',
        value: function checkDuplicate(str, fcn) {
            var list = JSON.parse(str);
            if (list.length > 0) {
                if (fcn) {
                    fcn('duplicate');
                }
            } else {
                Paint.addToLib(fcn);
            }
        }

        /////////////////////////////////////
        // usershapes:  stores costumes
        /////////////////////////////////////
        /* current data
            [md5] =>
            [altmd5] =>  // for PNG  -- not used
            [version] =>
        		[scale] =>
            [ext] => png / svg
           	[width] =>
           	[height] =>
            [name] =>
         */

    }, {
        key: 'addToLib',
        value: function addToLib(fcn) {
            var scale = '0.5'; // always saves with 1/2 the size
            var cname = document.forms.spriteform.name.value;
            cname = unescape(cname).replace(/[0-9]/g, '').replace(/\s*/g, '');
            var box = _SVGTools2.default.getBox((0, _lib.gn)('layer1')).rounded();
            box = box.expandBy(20);
            var w = box.width.toString();
            var h = box.height.toString();
            var dataurl = _IO2.default.getThumbnail(svgdata, w, h, 120, 90);
            var pngBase64 = dataurl.split(',')[1];
            _OS2.default.setmedia(pngBase64, 'png', setCostumeRecord);
            function setCostumeRecord(pngmd5) {
                var json = {};
                var keylist = ['scale', 'md5', 'altmd5', 'version', 'width', 'height', 'ext', 'name'];
                var values = '?,?,?,?,?,?,?,?';
                json.values = [scale, saveMD5, pngmd5, _ScratchJr2.default.version, w, h, 'svg', cname];
                json.stmt = 'insert into usershapes (' + keylist.toString() + ') values (' + values + ')';
                _OS2.default.stmt(json, fcn);
            }
        }
    }, {
        key: 'changePageSprite',
        value: function changePageSprite() {
            Paint.close();
            var cname = document.forms.spriteform.name.value;
            var type = Paint.getLoadType(spriteId, cname);
            switch (type) {
                case 'modify':
                    _ScratchJr2.default.stage.currentPage.modifySprite(saveMD5, cname, spriteId);
                    break;
                case 'add':
                    _ScratchJr2.default.stage.currentPage.addSprite(costumeScale, saveMD5, cname);
                    break;
                default:
                    _ScratchJr2.default.stage.currentPage.update();
                    break;
            }
        }
    }, {
        key: 'getLoadType',
        value: function getLoadType(sid, cid) {
            if (!cid) {
                return 'none';
            }
            if (sid && cid) {
                return 'modify';
            }
            return 'add';
        }

        ///////////////////////////
        // XML import processs
        ///////////////////////////

    }, {
        key: 'skipUnwantedElements',
        value: function skipUnwantedElements(p, res) {
            for (var i = 0; i < p.childNodes.length; i++) {
                var elem = p.childNodes[i];
                if (elem.nodeName == 'metadata') {
                    continue;
                }
                if (elem.nodeName == 'defs') {
                    continue;
                }
                if (elem.nodeName == 'sodipodi:namedview') {
                    continue;
                }
                if (elem.nodeName == '#comment') {
                    continue;
                }
                if (elem.nodeName == 'g' && elem.id == 'layer1') {
                    Paint.skipUnwantedElements(elem, res);
                    if (elem.removeAttribute('id')) {
                        elem.removeAttribute('id');
                    }
                } else {
                    res.push(elem);
                }
            }
            return res;
        }
    }, {
        key: 'reassingIds',
        value: function reassingIds(p) {
            for (var i = 0; i < p.childNodes.length; i++) {
                var elem = p.childNodes[i];
                if (elem.parentNode.getAttribute('fixed') == 'yes') {
                    elem.setAttribute('fixed', 'yes');
                }
                var id = elem.getAttribute('id');
                if (!id) {
                    elem.setAttribute('id', (0, _lib.getIdFor)(elem.nodeName));
                }
                if (elem.nodeName == 'g') {
                    Paint.reassingIds(elem);
                }
            }
        }
    }, {
        key: 'createCharFromXML',
        value: function createCharFromXML(str) {
            nativeJr = str.indexOf('Scratch Jr') > -1;
            var dx = workspaceWidth < 432 ? Math.floor((432 - workspaceWidth) / 2) : 0;
            var dy = workspaceHeight < 384 ? Math.floor((384 - workspaceHeight) / 2) : 0;
            if (workspaceWidth < 432) {
                workspaceWidth = 432;
            }
            if (workspaceHeight < 384) {
                workspaceHeight = 384;
            }
            Paint.setUpCanvasArea();
            str = str.replace(/>\s*</g, '><');
            var xmlDoc = new DOMParser().parseFromString(str, 'text/xml');
            var extxml = document.importNode(xmlDoc.documentElement, true);
            var flat = Paint.skipUnwantedElements(extxml, []);
            for (var i = 0; i < flat.length; i++) {
                (0, _lib.gn)('layer1').appendChild(flat[i]);
            }
            Paint.doAbsolute((0, _lib.gn)('layer1'));
            Paint.adjustShapePosition(dx, dy);
            if (!nativeJr) {
                Paint.reassingIds((0, _lib.gn)('layer1'));
            } // make sure there are unique mask names
            Paint.scaleToFit();
            minZoom = currentZoom < 1 ? currentZoom / 2 : 1;
            var maxpix = 2290 * 2289; // Magic iOS max canvas size
            var ratio = maxpix / (workspaceWidth * workspaceHeight);
            var zoom = Math.floor(Math.sqrt(ratio));
            if (zoom < maxZoom) {
                maxZoom = zoom;
            }
            _PaintUndo2.default.record(true);
            if (!nativeJr) {
                Paint.selectButton('paintbucket');
            }
        }
    }, {
        key: 'doAbsolute',
        value: function doAbsolute(div) {
            for (var i = 0; i < div.childElementCount; i++) {
                var elem = div.childNodes[i];
                if (elem.tagName == 'path') {
                    _SVG2Canvas2.default.setAbsolutePath(elem);
                }
                if (elem.tagName == 'g') {
                    Paint.doAbsolute(div.childNodes[i]);
                }
            }
        }
    }, {
        key: 'getComponents',
        value: function getComponents(p, res) {
            for (var i = 0; i < p.childNodes.length; i++) {
                var elem = p.childNodes[i];
                if (elem.nodeName == 'metadata') {
                    continue;
                }
                if (elem.nodeName == 'defs') {
                    continue;
                }
                if (elem.nodeName == 'sodipodi:namedview') {
                    continue;
                }
                if (elem.nodeName == '#comment') {
                    continue;
                }
                if (elem.nodeName == 'g') {
                    Paint.getComponents(elem, res);
                    if (elem.getAttribute('id')) {
                        elem.removeAttribute('id');
                    }
                } else {
                    res.push(elem);
                }
            }
            return res;
        }
    }, {
        key: 'xmlns',
        get: function get() {
            return xmlns;
        }
    }, {
        key: 'xmlnslink',
        get: function get() {
            return xmlnslink;
        }
    }, {
        key: 'fillcolor',
        get: function get() {
            return fillcolor;
        }
    }, {
        key: 'workspaceWidth',
        get: function get() {
            return workspaceWidth;
        }
    }, {
        key: 'workspaceHeight',
        get: function get() {
            return workspaceHeight;
        }
    }, {
        key: 'mode',
        get: function get() {
            return mode;
        },
        set: function set(newMode) {
            mode = newMode;
        }
    }, {
        key: 'strokewidth',
        get: function get() {
            return strokewidth;
        }
    }, {
        key: 'currentZoom',
        get: function get() {
            return currentZoom;
        },
        set: function set(newCurrentZoom) {
            currentZoom = newCurrentZoom;
        }
    }, {
        key: 'root',
        get: function get() {
            return root;
        }
    }, {
        key: 'saving',
        get: function get() {
            return saving;
        }
    }, {
        key: 'frame',
        get: function get() {
            return paintFrame;
        }
    }, {
        key: 'splash',
        get: function get() {
            return splash;
        }
    }, {
        key: 'splashshade',
        get: function get() {
            return splashshade;
        }
    }, {
        key: 'initialPoint',
        get: function get() {
            return initialPoint;
        },
        set: function set(newInitialPoint) {
            initialPoint = newInitialPoint;
        }
    }, {
        key: 'deltaPoint',
        get: function get() {
            return deltaPoint;
        },
        set: function set(newDeltaPoint) {
            deltaPoint = newDeltaPoint;
        }
    }]);

    return Paint;
}();

exports.default = Paint;

/***/ }),

/***/ "./src/painteditor/PaintAction.js":
/*!****************************************!*\
  !*** ./src/painteditor/PaintAction.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ScratchJr = __webpack_require__(/*! ../editor/ScratchJr */ "./src/editor/ScratchJr.js");

var _ScratchJr2 = _interopRequireDefault(_ScratchJr);

var _Paint = __webpack_require__(/*! ./Paint */ "./src/painteditor/Paint.js");

var _Paint2 = _interopRequireDefault(_Paint);

var _PaintUndo = __webpack_require__(/*! ./PaintUndo */ "./src/painteditor/PaintUndo.js");

var _PaintUndo2 = _interopRequireDefault(_PaintUndo);

var _ScratchAudio = __webpack_require__(/*! ../utils/ScratchAudio */ "./src/utils/ScratchAudio.js");

var _ScratchAudio2 = _interopRequireDefault(_ScratchAudio);

var _SVGTools = __webpack_require__(/*! ./SVGTools */ "./src/painteditor/SVGTools.js");

var _SVGTools2 = _interopRequireDefault(_SVGTools);

var _Path = __webpack_require__(/*! ./Path */ "./src/painteditor/Path.js");

var _Path2 = _interopRequireDefault(_Path);

var _Transform = __webpack_require__(/*! ./Transform */ "./src/painteditor/Transform.js");

var _Transform2 = _interopRequireDefault(_Transform);

var _Ghost = __webpack_require__(/*! ./Ghost */ "./src/painteditor/Ghost.js");

var _Ghost2 = _interopRequireDefault(_Ghost);

var _Vector = __webpack_require__(/*! ../geom/Vector */ "./src/geom/Vector.js");

var _Vector2 = _interopRequireDefault(_Vector);

var _Layer = __webpack_require__(/*! ./Layer */ "./src/painteditor/Layer.js");

var _Layer2 = _interopRequireDefault(_Layer);

var _SVG2Canvas = __webpack_require__(/*! ../utils/SVG2Canvas */ "./src/utils/SVG2Canvas.js");

var _SVG2Canvas2 = _interopRequireDefault(_SVG2Canvas);

var _SVGImage = __webpack_require__(/*! ./SVGImage */ "./src/painteditor/SVGImage.js");

var _SVGImage2 = _interopRequireDefault(_SVGImage);

var _Camera = __webpack_require__(/*! ./Camera */ "./src/painteditor/Camera.js");

var _Camera2 = _interopRequireDefault(_Camera);

var _Events = __webpack_require__(/*! ../utils/Events */ "./src/utils/Events.js");

var _Events2 = _interopRequireDefault(_Events);

var _Rectangle = __webpack_require__(/*! ../geom/Rectangle */ "./src/geom/Rectangle.js");

var _Rectangle2 = _interopRequireDefault(_Rectangle);

var _lib = __webpack_require__(/*! ../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/*
Type of objects:
- fixed: Only exists on Assets Backgrounds and can it only be fill (color or camera) or removed
- stencil: created on backgrounds when you draw edge to edge
The background back layer is called staticbkg and it is fixed (staticbkg can't be removed.)


Rules:
	Select: Berfore moving selects an SVG object or a SVG group and everything above
					moves that object and the objects above, hold does a bring to front,
					and click shows the dots except on the fixed and groups.
	Rotate: rotates an SVG object or a SVG group and everything above
	clone: 	clones an SVG object or a SVG group and everything above
	scissors: deletes only the target SVG object
	camera: opens the camera on the target SVG object
	paint: fills the area - if an area is inside onother area and both don't have a fill.
				It makes a compound path.
	Path: drag to make it. On start it detects if you click on a path end.
		If so register it will hightlight the path. On mouse up it will join paths if it can.

	ellipse, rect, trianngle: drag to make it, click does a small one.


 */

var currentShape = undefined;
var target = undefined;
var dragGroup = [];
var startAngle = 0;
var dragging = false;
var timeoutEvent = void 0;
var mindist = 10;

//Main Events
/////////////////////////////////

var PaintAction = function () {
    function PaintAction() {
        _classCallCheck(this, PaintAction);
    }

    _createClass(PaintAction, null, [{
        key: 'mouseDown',
        value: function mouseDown(evt) {
            target = undefined;
            if (!(0, _lib.gn)('layer1')) {
                return;
            }
            if (evt.touches && evt.touches.length > 1) {
                return;
            }
            PaintAction.clearDragGroup();
            dragging = false;
            var mt = PaintAction.getMouseTarget(evt);
            if (!mt) {
                return;
            }
            if (mt.tagName.toLowerCase() != 'div' && mt.tagName.toLowerCase() != 'svg') {
                target = mt;
            }
            evt.preventDefault();
            _Paint2.default.initialPoint = PaintAction.getScreenPt(evt);
            _Paint2.default.deltaPoint = PaintAction.getScreenPt(evt);
            if (_Path2.default.hitDot(evt)) {
                _Paint2.default.mode = 'grab';
            }
            currentShape = undefined;
            PaintAction.clearEvents();
            cmdForMouseDown[_Paint2.default.mode](evt);
            PaintAction.setEvents();
        }
    }, {
        key: 'clearDragGroup',
        value: function clearDragGroup() {
            for (var j = 0; j < (0, _lib.gn)('layer1').childElementCount; j++) {
                var kid = (0, _lib.gn)('layer1').childNodes[j];
                var erot = _Transform2.default.getRotation(kid);
                if (erot.angle == 0) {
                    continue;
                }
                var res = [];
                for (var i = 0; i < kid.childElementCount; i++) {
                    var elem = kid.childNodes[i];
                    if (!elem) {
                        continue;
                    }
                    _Transform2.default.rotateFromPoint(erot, elem);
                    res.push(elem);
                }
                for (i = 0; i < kid.childElementCount; i++) {
                    (0, _lib.gn)('layer1').appendChild(res[i]);
                }
                (0, _lib.gn)('layer1').removeChild(kid);
            }
        }
    }, {
        key: 'clearEvents',
        value: function clearEvents() {
            currentShape = undefined;
            window.ontouchmove = undefined;
            window.ontouchend = undefined;
            window.onmousemove = undefined;
            window.onmouseup = undefined;
        }
    }, {
        key: 'stopAction',
        value: function stopAction(e) {
            var list = ['path', 'ellipse', 'rect', 'tri'];
            var isCreator = list.indexOf(_Paint2.default.mode) > -1;
            if (currentShape && currentShape.parentNode && isCreator) {
                PaintAction.removeShape(null);
            } else {
                // olnly select, grab and rotate need special treatment
                var othertools = ['select', 'grab', 'rotate'];
                if (othertools.indexOf(_Paint2.default.mode) < 0) {
                    return;
                }

                if (_Paint2.default.mode == 'select') {
                    if (timeoutEvent) {
                        clearTimeout(timeoutEvent);
                    }
                    if (dragging) {
                        PaintAction.stopDrag();
                    }
                }
                if (_Paint2.default.mode == 'grab' || _Paint2.default.mode == 'rotate') {
                    cmdForMouseUp[_Paint2.default.mode](e);
                }
                _Ghost2.default.clearLayer();
                if (target || currentShape) {
                    _PaintUndo2.default.record();
                }
                _Transform2.default.updateAll(currentShape);
                _Ghost2.default.drawOffscreen();
            }
        }
    }, {
        key: 'setEvents',
        value: function setEvents() {
            window.ontouchmove = function (evt) {
                PaintAction.mouseMove(evt);
            };
            window.ontouchend = function (evt) {
                PaintAction.mouseUp(evt);
            };
            window.onmousemove = function (evt) {
                PaintAction.mouseMove(evt);
            };
            window.onmouseup = function (evt) {
                PaintAction.mouseUp(evt);
            };
            window.ontouchcancel = function (evt) {
                PaintAction.mouseMove(evt);
                PaintAction.mouseUp(evt);
            };
        }
    }, {
        key: 'mouseMove',
        value: function mouseMove(evt) {
            evt.preventDefault();
            cmdForMouseMove[_Paint2.default.mode](evt);
            _Paint2.default.deltaPoint = PaintAction.getScreenPt(evt);
        }
    }, {
        key: 'mouseUp',
        value: function mouseUp(evt) {
            evt.preventDefault();
            cmdForMouseUp[_Paint2.default.mode](evt);
            _Ghost2.default.clearLayer();
            if (!dragging) {
                var mt = PaintAction.getMouseTarget(evt);
                if (mt) {
                    cmdForClick[_Paint2.default.mode](evt);
                }
            } else if (target || currentShape) {
                _PaintUndo2.default.record();
            }
            if (_Paint2.default.mode == 'grab') {
                _Paint2.default.mode = 'select';
            }
            var oldshape = currentShape;
            currentShape = undefined;
            dragGroup = [];
            dragging = false;
            _Transform2.default.updateAll(oldshape);
            PaintAction.clearEvents();
            _Ghost2.default.drawOffscreen();
        }

        //Calls from the Mouse Down


    }, {
        key: 'selectMouseDown',
        value: function selectMouseDown(evt) {
            PaintAction.fingerDown(evt);
            if (currentShape) {
                currentShape = currentShape.getAttribute('stencil') == 'yes' ? null : currentShape;
            }
            var holdit = getValidHold();
            if (holdit) {
                PaintAction.startHold(evt);
            }
            function getValidHold() {
                if (!currentShape) {
                    return false;
                }
                if (currentShape.getAttribute('stencil') == 'yes') {
                    return false;
                }
                return true;
            }
        }
    }, {
        key: 'fingerDown',
        value: function fingerDown(evt) {
            // Paint Target is the one given by the
            currentShape = _Ghost2.default.findTarget(evt);
            target = currentShape ? currentShape : target;
            dragGroup = [];
        }
    }, {
        key: 'fingerUp',
        value: function fingerUp(evt) {
            currentShape = undefined;
            target = undefined;
            PaintAction.fingerDown(evt);
        }
    }, {
        key: 'startHold',
        value: function startHold() {
            //  console.log ("startHold", currentShape);
            if (!currentShape) {
                return;
            }
            var repeat = function repeat() {
                //	console.log ("callback", currentShape);
                _Layer2.default.bringToFront(currentShape);
                timeoutEvent = null;
            };
            timeoutEvent = setTimeout(repeat, 600);
        }
    }, {
        key: 'cloneMouseDown',
        value: function cloneMouseDown(evt) {
            PaintAction.fingerDown(evt);
            PaintAction.selectTarget();
            if (currentShape && currentShape.id == 'staticbkg') {
                currentShape = null;
            }
        }
    }, {
        key: 'pathMouseDown',
        value: function pathMouseDown() {
            currentShape = _SVGTools2.default.addPolyline((0, _lib.gn)('layer1'), _Paint2.default.initialPoint.x, _Paint2.default.initialPoint.y);
            var mt = _Path2.default.getClosestPath(_Paint2.default.initialPoint, currentShape, (0, _lib.gn)('layer1'), _Path2.default.maxDistance());
            if (!mt) {
                return;
            }
            var s = currentShape.getAttribute('stroke');
            var sw = currentShape.getAttribute('stroke-width');
            if (s != mt.getAttribute('stroke') || sw != mt.getAttribute('stroke-width')) {
                return;
            }
            var g = _SVGTools2.default.createGroup((0, _lib.gn)('draglayer'), 'cusorstate');
            _Ghost2.default.getKid(g, mt, 0.7);
            target = mt;
        }
    }, {
        key: 'selectTarget',
        value: function selectTarget() {
            if (!currentShape) {
                return;
            }
            while (currentShape.parentNode.tagName == 'g' && currentShape.parentNode.id != 'layer1') {
                currentShape = currentShape.parentNode;
            }
        }
    }, {
        key: 'makeAgroup',
        value: function makeAgroup(group) {
            var p = (0, _lib.gn)('layer1');
            var g = _SVGTools2.default.createGroup(p, (0, _lib.getIdFor)('group'));
            for (var i = 0; i < group.length; i++) {
                p.removeChild(group[i]);
                g.appendChild(group[i]);
            }
            return g;
        }
    }, {
        key: 'ellipseMouseDown',
        value: function ellipseMouseDown() {
            currentShape = _SVGTools2.default.addEllipse((0, _lib.gn)('layer1'), _Paint2.default.initialPoint.x, _Paint2.default.initialPoint.y);
        }
    }, {
        key: 'rectMouseDown',
        value: function rectMouseDown() {
            currentShape = _SVGTools2.default.addRect((0, _lib.gn)('layer1'), _Paint2.default.initialPoint.x, _Paint2.default.initialPoint.y);
        }
    }, {
        key: 'triMouseDown',
        value: function triMouseDown() {
            currentShape = _SVGTools2.default.addTriangle((0, _lib.gn)('layer1'), _Paint2.default.initialPoint.x, _Paint2.default.initialPoint.y);
        }
    }, {
        key: 'grabMouseDown',
        value: function grabMouseDown() {
            currentShape = target;
            currentShape.setAttributeNS(null, 'fill', _Path2.default.selectedDotColor);
            currentShape.setAttributeNS(null, 'r', currentShape.getAttribute('r') * 1.5);
        }

        //Calls from the Mouse Move


    }, {
        key: 'selectMouseMove',
        value: function selectMouseMove(evt) {
            if (evt.touches && evt.touches.length > 1) {
                return;
            }
            if (PaintAction.onBackground()) {
                PaintAction.clearEvents();
                _Paint2.default.Scroll(evt);
                return;
            } else {
                PaintAction.moveObject(evt);
            }
        }
    }, {
        key: 'moveObject',
        value: function moveObject(evt) {
            if (!target) {
                return;
            }
            var pt = PaintAction.getScreenPt(evt);
            var delta = _Vector2.default.diff(pt, _Paint2.default.initialPoint);
            if (!dragging && _Vector2.default.len(delta) > mindist) {
                PaintAction.startDragShape(evt);
            }
            if (!dragging) {
                return;
            }
            for (var i = 0; i < dragGroup.length; i++) {
                _Transform2.default.extract(dragGroup[i], 2).setTranslate(delta.x, delta.y);
            }
            _Transform2.default.extract((0, _lib.gn)('ghostgroup'), 2).setTranslate(delta.x, delta.y);
        }
    }, {
        key: 'onBackground',
        value: function onBackground() {
            if (!currentShape) {
                return true;
            }
            if (target.id.indexOf('staticbkg') > -1 || currentShape.getAttribute('stencil') == 'yes') {
                return true;
            }
            return false;
        }
    }, {
        key: 'paintBucketMouseMove',
        value: function paintBucketMouseMove(evt) {
            _Ghost2.default.findTarget(evt);
        }
    }, {
        key: 'isMoving',
        value: function isMoving(evt) {
            if (dragging) {
                return true;
            }
            var pt = PaintAction.getScreenPt(evt);
            var delta = _Vector2.default.diff(pt, _Paint2.default.initialPoint);
            return !dragging && _Vector2.default.len(delta) > mindist;
        }
    }, {
        key: 'fingerMove',
        value: function fingerMove(evt) {
            _Ghost2.default.findTarget(evt);
        }
    }, {
        key: 'cloneMouseMove',
        value: function cloneMouseMove(evt) {
            _Ghost2.default.findTarget(evt);
        }
    }, {
        key: 'startDragShape',
        value: function startDragShape() {
            if (timeoutEvent) {
                clearTimeout(timeoutEvent);
            }
            PaintAction.selectTarget();
            timeoutEvent = undefined;
            _Path2.default.quitEditMode();
            dragGroup = _Layer2.default.findGroup(currentShape);
            for (var i = 0; i < dragGroup.length; i++) {
                _Transform2.default.eleminateTranslates(dragGroup[i]);
                (0, _lib.gn)('layer1').appendChild(dragGroup[i]);
            }
            _Ghost2.default.highlight(dragGroup);
            for (var j = 0; j < dragGroup.length; j++) {
                _Transform2.default.appendForMove(dragGroup[j], _Transform2.default.getTranslateTransform());
            }
            _Transform2.default.appendForMove((0, _lib.gn)('ghostgroup'), _Transform2.default.getTranslateTransform());
            dragging = true;
        }
    }, {
        key: 'rotateMouseMove',
        value: function rotateMouseMove(evt) {
            if (!target) {
                return;
            }
            var pt = PaintAction.getScreenPt(evt);
            var delta = _Vector2.default.diff(pt, _Paint2.default.initialPoint);
            if (!dragging && _Vector2.default.len(delta) > mindist) {
                PaintAction.startRotateShape(evt);
            }
            if (!currentShape) {
                return;
            }
            if (!dragging) {
                return;
            }
            PaintAction.rotateFromMouse(evt, currentShape);
            PaintAction.rotateFromMouse(evt, (0, _lib.gn)('ghostgroup'));
        }
    }, {
        key: 'startRotateShape',
        value: function startRotateShape(evt) {
            PaintAction.selectTarget();
            if (!currentShape) {
                return;
            }
            if (currentShape && currentShape.tagName.toLowerCase() == 'svg') {
                currentShape = undefined;
            }
            if (PaintAction.onBackground()) {
                currentShape = undefined;
            }
            if (!currentShape) {
                return;
            }
            dragGroup = _Layer2.default.findGroup(currentShape);
            _Ghost2.default.highlight(dragGroup);
            currentShape = PaintAction.makeAgroup(dragGroup);
            var pt = PaintAction.getScreenPt(evt);
            var mtx = _Transform2.default.getCombinedMatrices(currentShape); // skips rotation matrices
            PaintAction.center = _SVGTools2.default.getBoxCenter(currentShape);
            var center = {
                x: PaintAction.center.x,
                y: PaintAction.center.y
            };
            center = _Transform2.default.point(center.x, center.y, mtx);
            var delta = _Vector2.default.diff(center, pt);
            startAngle = Math.atan2(delta.y, delta.x) * (180 / Math.PI) % 360;
            startAngle -= 90;
            _SVGTools2.default.getBoxCenter(currentShape);
            dragging = true;
        }
    }, {
        key: 'rotateFromMouse',
        value: function rotateFromMouse(evt, elem) {
            var pt = PaintAction.getScreenPt(evt);
            var rot = _Transform2.default.getRotation(elem);
            var mtx = _Transform2.default.getCombinedMatrices(elem); // skips rotation matrices
            //  calculate rotation
            var center = {
                x: PaintAction.center.x,
                y: PaintAction.center.y
            };
            center = _Transform2.default.point(center.x, center.y, mtx);
            var delta = _Vector2.default.diff(center, pt);
            var angle = Math.atan2(delta.y, delta.x) * (180 / Math.PI) % 360;
            angle -= 90;
            angle -= startAngle;
            angle = angle < 0 ? 360 + angle : angle;
            angle = angle % 360;
            rot.setRotate(angle, center.x, center.y);
        }
    }, {
        key: 'rectMouseMove',
        value: function rectMouseMove(evt) {
            var pt = PaintAction.getScreenPt(evt);
            var delta = _Vector2.default.diff(pt, _Paint2.default.initialPoint);
            if (!dragging && _Vector2.default.len(delta) > mindist) {
                dragging = true;
            }
            if (!dragging) {
                return;
            }
            var w = Math.abs(delta.x);
            var h = Math.abs(delta.y);
            var new_x, new_y;
            if (evt.shiftKey) {
                w = h = Math.max(w, h);
                new_x = _Paint2.default.initialPoint.x < pt.x ? _Paint2.default.initialPoint.x : _Paint2.default.initialPoint.x - w;
                new_y = _Paint2.default.initialPoint.y < pt.y ? _Paint2.default.initialPoint.y : _Paint2.default.initialPoint.y - h;
            } else {
                new_x = Math.min(_Paint2.default.initialPoint.x, pt.x);
                new_y = Math.min(_Paint2.default.initialPoint.y, pt.y);
            }
            var attr = {
                'width': w,
                'height': h,
                'x': new_x,
                'y': new_y
            };
            for (var val in attr) {
                currentShape.setAttributeNS(null, val, attr[val]);
            }
        }
    }, {
        key: 'triMouseMove',
        value: function triMouseMove(evt) {
            var pt = PaintAction.getScreenPt(evt);
            var delta = _Vector2.default.diff(pt, _Paint2.default.initialPoint);
            if (!dragging && _Vector2.default.len(delta) > mindist) {
                dragging = true;
            }
            if (!dragging) {
                return;
            }
            var w = delta.x;
            var h = delta.y;
            var x = _Paint2.default.initialPoint.x;
            var y = _Paint2.default.initialPoint.y;
            var cmds = [['M', x, y + h], ['L', x + w * 0.5, y], ['L', x + w, y + h], ['L', x, y + h], ['z']];
            var d = _SVG2Canvas2.default.arrayToString(cmds);
            currentShape.setAttribute('d', d);
        }
    }, {
        key: 'pathMouseMove',
        value: function pathMouseMove(evt) {
            var pt = PaintAction.getScreenPt(evt);
            var delta = _Vector2.default.diff(pt, _Paint2.default.initialPoint);
            if (!dragging && _Vector2.default.len(delta) > mindist) {
                dragging = true;
            }
            if (!dragging) {
                return;
            }
            var place = ' ' + pt.x + ',' + pt.y + ' ';
            var d = currentShape.getAttribute('points');
            d += place;
            currentShape.setAttributeNS(null, 'points', d);
        }
    }, {
        key: 'ellipseMouseMove',
        value: function ellipseMouseMove(evt) {
            var pt = PaintAction.getScreenPt(evt);
            var delta = _Vector2.default.diff(pt, _Paint2.default.initialPoint);
            if (!dragging && _Vector2.default.len(delta) > mindist) {
                dragging = true;
            }
            if (!dragging) {
                return;
            }
            var w = Math.abs(delta.x);
            var h = Math.abs(delta.y);
            var new_x, new_y;
            if (evt.shiftKey) {
                w = h = Math.max(w, h);
                new_x = _Paint2.default.initialPoint.x < pt.x ? _Paint2.default.initialPoint.x : _Paint2.default.initialPoint.x - w;
                new_y = _Paint2.default.initialPoint.y < pt.y ? _Paint2.default.initialPoint.y : _Paint2.default.initialPoint.y - h;
            } else {
                new_x = Math.min(_Paint2.default.initialPoint.x, pt.x);
                new_y = Math.min(_Paint2.default.initialPoint.y, pt.y);
            }
            var rx = w / 2;
            var cx = new_x + rx;
            var ry = h / 2;
            var cy = new_y + ry;

            var attr = {
                'cx': cx,
                'cy': cy,
                'rx': rx,
                'ry': ry
            };
            for (var val in attr) {
                currentShape.setAttributeNS(null, val, attr[val]);
            }
        }
    }, {
        key: 'grabMouseMove',
        value: function grabMouseMove(evt) {
            var pt = PaintAction.getScreenPt(evt);
            var delta = _Vector2.default.diff(pt, _Paint2.default.deltaPoint);
            PaintAction.movePointByDrag(delta.x, delta.y);
            dragging = true;
            var elem = (0, _lib.gn)(currentShape.getAttribute('parentid'));
            var state = _SVG2Canvas2.default.isCloseDPath(elem);
            _Path2.default.reshape(elem);
            var newstate = _SVG2Canvas2.default.isCloseDPath(elem);
            if (state != newstate) {
                PaintAction.playSnapSound(state);
            }
            if (_SVG2Canvas2.default.isCloseDPath(elem)) {
                return;
            }
            if (!_Path2.default.isTip(currentShape)) {
                return;
            }
            _Ghost2.default.clearLayer();
            var mt = _Path2.default.getClosestPath(pt, elem, (0, _lib.gn)('layer1'), _Path2.default.maxDistance());
            if (!mt) {
                return;
            }
            var g = _SVGTools2.default.createGroup((0, _lib.gn)('draglayer'), 'cusorstate');
            _Ghost2.default.getKid(g, mt, 0.7);
            target = mt;
        }
    }, {
        key: 'playSnapSound',
        value: function playSnapSound(state) {
            _ScratchAudio2.default.sndFX(state ? 'cut.wav' : 'snap.wav');
        }
    }, {
        key: 'movePointByDrag',
        value: function movePointByDrag(dx, dy) {
            var cx = currentShape.getAttribute('cx');
            var cy = currentShape.getAttribute('cy');
            var newcx = Number(cx) + dx;
            var newcy = Number(cy) + dy;
            currentShape.setAttributeNS(null, 'cx', newcx);
            currentShape.setAttributeNS(null, 'cy', newcy);
        }

        //Calls from the Mouse Up


    }, {
        key: 'rectMouseUp',
        value: function rectMouseUp(evt) {
            var w = Number(currentShape.getAttribute('width'));
            var h = Number(currentShape.getAttribute('height'));
            var x = Number(currentShape.getAttribute('x'));
            var y = Number(currentShape.getAttribute('y'));
            var pl = [{
                x: x,
                y: y
            }, {
                x: x + w,
                y: y
            }, {
                x: x + w,
                y: y + h
            }, {
                x: x,
                y: y + h
            }];
            var shape = _Path2.default.makeRectangle(currentShape.parentNode, pl);
            currentShape.parentNode.removeChild(currentShape);
            currentShape = shape;
            var box = _SVGTools2.default.getBox(currentShape);
            if (_SVGTools2.default.notValidBox(box) || box.isEmpty()) {
                PaintAction.removeShape(evt);
            }
        }
    }, {
        key: 'triMouseUp',
        value: function triMouseUp(evt) {
            var box = _SVGTools2.default.getBox(currentShape);
            if (_SVGTools2.default.notValidBox(box)) {
                PaintAction.removeShape(evt);
            }
        }
    }, {
        key: 'ellipseMouseUp',
        value: function ellipseMouseUp(evt) {
            var box = _SVGTools2.default.getBox(currentShape);
            if (_SVGTools2.default.notValidBox(box)) {
                PaintAction.removeShape(evt);
            } else {
                var shape = _Path2.default.makeEllipse(currentShape);
                currentShape.parentNode.removeChild(currentShape);
                currentShape = shape;
            }
        }
    }, {
        key: 'rotateMouseUp',
        value: function rotateMouseUp(evt) {
            if (!currentShape) {
                return;
            }
            if (!dragging) {
                return;
            }
            PaintAction.rotateFromMouse(evt, currentShape);
            var erot = _Transform2.default.getRotation(currentShape);
            for (var i = 0; i < dragGroup.length; i++) {
                (0, _lib.gn)('layer1').appendChild(dragGroup[i]);
                if (erot.angle != 0) {
                    _Transform2.default.rotateFromPoint(erot, dragGroup[i]);
                }
            }
            (0, _lib.gn)('layer1').removeChild(currentShape);
            currentShape = target;
        }
    }, {
        key: 'pathMouseUp',
        value: function pathMouseUp(evt) {
            if (dragging) {
                currentShape = _Path2.default.process(currentShape);
                var box1 = _SVGTools2.default.getBox(currentShape);
                var box2 = new _Rectangle2.default(0, 0, _Paint2.default.workspaceWidth, _Paint2.default.workspaceHeight);
                if (!box1.intersects(box2)) {
                    PaintAction.removeShape(evt); // outside the working area
                } else if (!_SVG2Canvas2.default.isCloseDPath(currentShape)) {
                    // check if it is a join issue
                    var pt = PaintAction.getScreenPt(evt);
                    var mt = _Path2.default.getClosestPath(pt, currentShape, (0, _lib.gn)('layer1'), _Path2.default.maxDistance()); // check the end
                    if (!mt) {
                        pt = _Path2.default.getCommands(currentShape.getAttribute('d'))[0].pt;
                        mt = _Path2.default.getClosestPath(pt, currentShape, (0, _lib.gn)('layer1'), _Path2.default.maxDistance()); // check the start
                    }
                    var s = currentShape.getAttribute('stroke');
                    var sw = currentShape.getAttribute('stroke-width');
                    if (mt && s == mt.getAttribute('stroke') && sw == mt.getAttribute('stroke-width')) {
                        currentShape = _Path2.default.join(currentShape, mt, pt);
                    }
                    if ((0, _lib.gn)('staticbkg')) {
                        _Path2.default.checkBackgroundCrop(currentShape);
                    }
                }
            } else {
                PaintAction.removeShape(evt);
            }
        }
    }, {
        key: 'selectMouseUp',
        value: function selectMouseUp(evt) {
            if (timeoutEvent) {
                clearTimeout(timeoutEvent);
            }
            // do not clear the time out -- let click check for it.
            if (dragging) {
                PaintAction.stopDrag();
            } else {
                PaintAction.fingerUp(evt);
                if (_Path2.default.selector && _Path2.default.selector != currentShape) {
                    _Path2.default.quitEditMode();
                }
                if (!currentShape) {
                    return;
                }
                if (dragging && !_Path2.default.selector) {
                    _Path2.default.enterEditMode(currentShape);
                }
            }
        }
    }, {
        key: 'scissorsMouseUp',
        value: function scissorsMouseUp(evt) {
            PaintAction.fingerUp(evt);
            PaintAction.selectTarget();
            if (currentShape && currentShape.id == 'fixed') {
                currentShape = null;
            }
            if (!currentShape) {
                return;
            }
            _ScratchAudio2.default.sndFX('cut.wav');
            var mtimage = _SVGImage2.default.getImage(currentShape);
            var p = currentShape.parentNode;
            var res = [];
            for (var i = 0; i < p.childElementCount; i++) {
                // remove compound paths extras
                var kid = p.childNodes[i];
                if (kid.getAttribute('relatedto') == currentShape.id) {
                    res.push(kid);
                }
            }
            for (var j = 0; j < res.length; j++) {
                p.removeChild(res[j]);
            }
            if (mtimage) {
                _SVGImage2.default.removeClip(mtimage);
            } else if (currentShape.parentNode) {
                currentShape.parentNode.removeChild(currentShape);
            }
            _SVGTools2.default.cleanup((0, _lib.gn)('layer1'));
            _PaintUndo2.default.record();
        }
    }, {
        key: 'cameraMouseUp',
        value: function cameraMouseUp(evt) {
            if (_lib.isTablet) {
                PaintAction.fingerUp(evt);
            }
            if (currentShape == undefined) {
                return;
            }
            _Camera2.default.startFeed(currentShape);
            _ScratchJr2.default.onBackButtonCallback.push(function () {
                _Paint2.default.closeCameraMode();
            });
        }
    }, {
        key: 'cloneMouseUp',
        value: function cloneMouseUp(evt) {
            PaintAction.fingerUp(evt);
            PaintAction.selectTarget();
            if (currentShape && currentShape.id == 'staticbkg') {
                currentShape = null;
            }
            if (!currentShape) {
                return;
            }
            _ScratchAudio2.default.sndFX('copy.wav');
            _SVGTools2.default.cloneSVGelement(currentShape);
            _Ghost2.default.clearLayer();
            _PaintUndo2.default.record();
            PaintAction.backToSelect(evt);
        }
    }, {
        key: 'setStrokeSizeAndColor',
        value: function setStrokeSizeAndColor() {
            if (!currentShape) {
                return;
            }
            if (currentShape.getAttribute('stroke') == _Paint2.default.fillcolor && currentShape.getAttribute('stroke-width') == _Paint2.default.strokewidth) {
                return;
            }
            var stroke = currentShape.getAttribute('stroke');
            if (!stroke) {
                currentShape = (0, _lib.gn)(currentShape.id + 'Border') ? (0, _lib.gn)(currentShape.id + 'Border') : currentShape;
                if (currentShape.id.indexOf('Border') > -1) {
                    currentShape.setAttribute('fill', _Paint2.default.fillcolor);
                }
            } else {
                currentShape.setAttribute('stroke', _Paint2.default.fillcolor);
                currentShape.setAttribute('stroke-width', _Paint2.default.strokewidth);
            }
            _PaintUndo2.default.record();
        }
    }, {
        key: 'paintBucketMouseUp',
        value: function paintBucketMouseUp(evt) {
            PaintAction.fingerUp(evt);
            if (!currentShape) {
                return;
            }
            PaintAction.paintRegion(evt);
        }
    }, {
        key: 'paintRegion',
        value: function paintRegion() {
            _ScratchAudio2.default.sndFX('splash.wav');
            switch (PaintAction.getPaintType()) {
                case 'paths':
                    _Path2.default.setData(currentShape);
                    break;
                case 'image':
                    var mt = _SVGImage2.default.getImage(currentShape);
                    _SVGImage2.default.paint(mt);
                    break;
                // if the stroke and fill are the same and they are "relatedto" paths stokes needs to be changed too.
                case 'check':
                    var group = _Layer2.default.findGroup(currentShape);
                    for (var i = 0; i < group.length; i++) {
                        if (group[i].id == currentShape.id || group[i].getAttribute('relatedto') == currentShape.id) {
                            group[i].setAttribute('stroke', _Paint2.default.fillcolor);
                        }
                    }
                    break;
                default:
                    break;
            }
            currentShape.setAttribute('fill', _Paint2.default.fillcolor);
            _PaintUndo2.default.record();
        }
    }, {
        key: 'getPaintType',
        value: function getPaintType() {
            var mtimage = _SVGImage2.default.getImage(currentShape);
            if (mtimage) {
                return 'image';
            }
            if (!PaintAction.justPaint(currentShape)) {
                return 'paths';
            }
            if (currentShape.getAttribute('fill') == null && currentShape.getAttribute('stroke') == null) {
                return 'paths';
            }
            if (currentShape.getAttribute('fill') == currentShape.getAttribute('stroke')) {
                return 'check';
            }
            return 'none';
        }
    }, {
        key: 'justPaint',
        value: function justPaint(mt) {
            //only compound the ones created with this tool
            if (mt.tagName != 'path') {
                return true;
            }
            if (_SVG2Canvas2.default.isCompoundPath(mt)) {
                return true;
            }
            return mt.getAttribute('fill') != 'none' || mt.getAttribute('fill') != null;
        }
    }, {
        key: 'stopDrag',
        value: function stopDrag() {
            if (!dragging) {
                return;
            }
            if (dragGroup.length == 0) {
                return;
            }
            for (var i = 0; i < dragGroup.length; i++) {
                _Transform2.default.eleminateTranslates(dragGroup[i]);
            }
            var box1 = _SVGTools2.default.getTransformedBox(dragGroup[0]);
            var box2 = {
                x: 0,
                y: 0,
                width: _Paint2.default.workspaceWidth,
                height: _Paint2.default.workspaceHeight
            };
            for (var j = 1; j < dragGroup.length; j++) {
                box1 = box1.union(_SVGTools2.default.getTransformedBox(dragGroup[j]).expandBy(_SVGTools2.default.getPenWidthForm(dragGroup[j])));
            }
            if (!box1.intersects(box2)) {
                _ScratchAudio2.default.sndFX('boing.wav');
                var delta = {
                    x: 0,
                    y: 0
                };
                if (box1.x > _Paint2.default.workspaceWidth) {
                    delta.x = Math.floor(_Paint2.default.workspaceWidth - box1.x - box1.width * 0.25);
                }
                if (box1.y > box2.height) {
                    delta.y = Math.floor(_Paint2.default.workspaceHeight - box1.y - box1.height * 0.25);
                }
                if (box1.x < 0) {
                    delta.x = Math.floor(-box1.x - box1.width * 0.75);
                }
                if (box1.y < 0) {
                    delta.y = Math.floor(-box1.y - box1.height * 0.75);
                }
                window.xform.setTranslate(delta.x, delta.y);
                for (var k = 0; k < dragGroup.length; k++) {
                    _Transform2.default.translateTo(dragGroup[k], window.xform);
                }
            }
            dragGroup = [];
        }
    }, {
        key: 'ignoreEvt',
        value: function ignoreEvt() {}
    }, {
        key: 'backToSelect',
        value: function backToSelect() {
            _Paint2.default.selectButton('select');
        }
    }, {
        key: 'grabMouseUp',
        value: function grabMouseUp(evt) {
            var elem = (0, _lib.gn)(currentShape.getAttribute('parentid'));
            currentShape.setAttributeNS(null, 'fill', _Path2.default.getDotColor(elem, currentShape));
            currentShape.setAttributeNS(null, 'r', currentShape.getAttribute('r') / 1.5);
            var pt = PaintAction.getScreenPt(evt);
            if (!dragging) {
                _Path2.default.deleteDot(currentShape, elem);
            } else {
                var delta = _Vector2.default.diff(pt, _Paint2.default.deltaPoint);
                PaintAction.movePointByDrag(delta.x, delta.y);
                _Path2.default.reshape(elem);
                if (_Path2.default.isTip(currentShape) && !_SVG2Canvas2.default.isCloseDPath(elem)) {
                    var mt = _Path2.default.getClosestPath(pt, elem, (0, _lib.gn)('layer1'), _Path2.default.maxDistance());
                    if (!mt) {
                        return;
                    }
                    if (mt != elem) {
                        elem = _Path2.default.join(elem, mt, pt);
                    }
                }
                _Path2.default.showDots(elem);
            }
        }

        /////////////////////////////////////////////
        //Calls for click


    }, {
        key: 'removeShape',
        value: function removeShape() {
            if (currentShape == undefined) {
                return;
            }
            currentShape.parentNode.removeChild(currentShape);
            currentShape = undefined;
        }
    }, {
        key: 'rectClick',
        value: function rectClick(evt) {
            if (!currentShape) {
                return;
            }
            PaintAction.removeShape(evt);
            currentShape = _SVGTools2.default.addRect((0, _lib.gn)('layer1'), _Paint2.default.initialPoint.x, _Paint2.default.initialPoint.y);
            var c = currentShape.getAttribute('stroke');
            var attr = {
                'width': 16 / _Paint2.default.currentZoom,
                'height': 16 / _Paint2.default.currentZoom
            };
            for (var val in attr) {
                currentShape.setAttribute(val, attr[val]);
            }
            PaintAction.rectMouseUp(evt);
            attr = {
                'fill': c,
                'stroke-width': 4
            };
            for (var vl in attr) {
                currentShape.setAttribute(vl, attr[vl]);
            }
            _PaintUndo2.default.record();
        }
    }, {
        key: 'ellipseClick',
        value: function ellipseClick(evt) {
            if (!currentShape) {
                return;
            }
            PaintAction.removeShape(evt);
            currentShape = _SVGTools2.default.addEllipse((0, _lib.gn)('layer1'), _Paint2.default.initialPoint.x, _Paint2.default.initialPoint.y);
            var c = currentShape.getAttribute('stroke');
            var attr = {
                'rx': 8 / _Paint2.default.currentZoom,
                'ry': 8 / _Paint2.default.currentZoom
            };
            for (var val in attr) {
                currentShape.setAttribute(val, attr[val]);
            }
            PaintAction.ellipseMouseUp(evt);
            attr = {
                'fill': c,
                'stroke-width': 4
            };
            for (var vl in attr) {
                currentShape.setAttribute(vl, attr[vl]);
            }
            _PaintUndo2.default.record();
        }
    }, {
        key: 'pathClick',
        value: function pathClick(evt) {
            currentShape = _Ghost2.default.findWho(evt);
            if (!currentShape) {
                return;
            }
            if (currentShape.getAttribute('fixed') != 'yes') {
                PaintAction.setStrokeSizeAndColor();
            }
        }
    }, {
        key: 'triClick',
        value: function triClick(evt) {
            if (!currentShape) {
                return;
            }
            PaintAction.removeShape(evt);
            currentShape = _SVGTools2.default.addTriangle((0, _lib.gn)('layer1'), _Paint2.default.initialPoint.x, _Paint2.default.initialPoint.y);
            var w = 16 / _Paint2.default.currentZoom;
            var h = 16 / _Paint2.default.currentZoom;
            var x = _Paint2.default.initialPoint.x;
            var y = _Paint2.default.initialPoint.y;
            var cmds = [['M', x, y + h], ['L', x + w * 0.5, y], ['L', x + w, y + h], ['L', x, y + h]];
            var d = _SVG2Canvas2.default.arrayToString(cmds);
            d += 'z';
            var c = currentShape.getAttribute('stroke');
            var attr = {
                'fill': c,
                'stroke-width': 2,
                'd': d
            };
            for (var val in attr) {
                currentShape.setAttribute(val, attr[val]);
            }
            _PaintUndo2.default.record();
        }
    }, {
        key: 'selectClick',
        value: function selectClick(evt) {
            if (!timeoutEvent) {
                return;
            }
            timeoutEvent = undefined;
            if (!currentShape) {
                return;
            }
            if (currentShape && currentShape.parentNode && currentShape.parentNode.tagName == 'g' && currentShape.parentNode.id != 'layer1') {
                return;
            }
            if (currentShape && currentShape.id == 'staticbkg') {
                return;
            }
            if (currentShape && currentShape.tagName == 'g') {
                return;
            }
            var pt = PaintAction.getScreenPt(evt);
            var delta = _Vector2.default.len(_Vector2.default.diff(pt, _Paint2.default.initialPoint));
            if (delta > mindist) {
                return;
            }
            if (_Path2.default.selector && _Path2.default.selector == currentShape) {
                _Path2.default.addDot(_Path2.default.selector);
            }
            if (!_Path2.default.selector) {
                _Path2.default.enterEditMode(currentShape);
            }
        }
    }, {
        key: 'paintBucketClick',
        value: function paintBucketClick() {}

        //Mouse Targets and groups
        ///////////////////////////

    }, {
        key: 'getMouseTarget',
        value: function getMouseTarget(evt) {
            var mt;
            if (evt == null) {
                return null;
            }
            if (window.event) {
                mt = window.event.srcElement;
            } else {
                mt = evt.target;
            }
            if (!mt) {
                return null;
            }
            if (mt.correspondingUseElement) {
                mt = mt.correspondingUseElement;
            }
            if (mt.id == 'maincanvas') {
                return mt.childNodes[0];
            }
            if (mt.id == 'workspacebkg') {
                return mt;
            }
            while (mt && _Paint2.default.xmlns != mt.namespaceURI && mt != _Paint2.default.root && mt != _Paint2.default.frame) {
                mt = mt.parentNode;
            }
            if (!mt) {
                return null;
            }
            if (!mt.parentNode) {
                return null;
            }
            if (mt.parentNode.id.indexOf('group_') > -1) {
                return mt.parentNode;
            }
            return mt;
        }
    }, {
        key: 'getScreenPt',
        value: function getScreenPt(evt) {
            var pt = _Events2.default.getTargetPoint(evt);
            return PaintAction.zoomPt(pt);
        }
    }, {
        key: 'zoomPt',
        value: function zoomPt(pt) {
            var mc = (0, _lib.gn)('maincanvas');
            if (!mc) {
                return pt;
            }
            var pt2 = _Paint2.default.root.createSVGPoint();
            pt2.x = pt.x;
            pt2.y = pt.y;
            var screenMatrix = _Paint2.default.root.getScreenCTM();
            // screenMatrix should include the currentScale, apply scaling
            screenMatrix.a = _Paint2.default.currentZoom;
            screenMatrix.d = _Paint2.default.currentZoom;
            var globalPoint = pt2.matrixTransform(screenMatrix.inverse());
            return globalPoint;
        }
    }, {
        key: 'target',

        // Getters/setters for globally used properties
        set: function set(newTarget) {
            target = newTarget;
        }
    }, {
        key: 'dragGroup',
        get: function get() {
            return dragGroup;
        }
    }]);

    return PaintAction;
}();
/////////////////////////////////////////////////////////
//dispatch tables


exports.default = PaintAction;
var cmdForMouseDown = {
    'select': PaintAction.selectMouseDown,
    'rotate': PaintAction.fingerDown,
    'tri': PaintAction.triMouseDown,
    'rect': PaintAction.rectMouseDown,
    'path': PaintAction.pathMouseDown,
    'ellipse': PaintAction.ellipseMouseDown,
    'grab': PaintAction.grabMouseDown,
    'paintbucket': PaintAction.fingerDown,
    'stamper': PaintAction.cloneMouseDown,
    'scissors': PaintAction.cloneMouseDown,
    'camera': PaintAction.fingerDown
};

var cmdForMouseMove = {
    'select': PaintAction.selectMouseMove,
    'rotate': PaintAction.rotateMouseMove,
    'tri': PaintAction.triMouseMove,
    'rect': PaintAction.rectMouseMove,
    'path': PaintAction.pathMouseMove,
    'ellipse': PaintAction.ellipseMouseMove,
    'grab': PaintAction.grabMouseMove,
    'paintbucket': PaintAction.paintBucketMouseMove,
    'stamper': PaintAction.cloneMouseMove,
    'scissors': PaintAction.cloneMouseMove,
    'camera': PaintAction.fingerMove
};

var cmdForMouseUp = {
    'select': PaintAction.selectMouseUp,
    'rotate': PaintAction.rotateMouseUp,
    'tri': PaintAction.triMouseUp,
    'rect': PaintAction.rectMouseUp,
    'path': PaintAction.pathMouseUp,
    'ellipse': PaintAction.ellipseMouseUp,
    'grab': PaintAction.grabMouseUp,
    'paintbucket': PaintAction.paintBucketMouseUp,
    'stamper': PaintAction.ignoreEvt,
    'scissors': PaintAction.scissorsMouseUp,
    'camera': PaintAction.cameraMouseUp
};

var cmdForClick = {
    'select': PaintAction.selectClick,
    'rotate': PaintAction.ignoreEvt,
    'tri': PaintAction.triClick,
    'rect': PaintAction.rectClick,
    'path': PaintAction.pathClick,
    'ellipse': PaintAction.ellipseClick,
    'grab': PaintAction.ignoreEvt,
    'paintbucket': PaintAction.paintBucketClick,
    'stamper': PaintAction.cloneMouseUp,
    'scissors': PaintAction.ignoreEvt,
    'camera': PaintAction.ignoreEvt
};

/***/ }),

/***/ "./src/painteditor/PaintUndo.js":
/*!**************************************!*\
  !*** ./src/painteditor/PaintUndo.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ScratchJr = __webpack_require__(/*! ../editor/ScratchJr */ "./src/editor/ScratchJr.js");

var _ScratchJr2 = _interopRequireDefault(_ScratchJr);

var _Path = __webpack_require__(/*! ./Path */ "./src/painteditor/Path.js");

var _Path2 = _interopRequireDefault(_Path);

var _Paint = __webpack_require__(/*! ./Paint */ "./src/painteditor/Paint.js");

var _Paint2 = _interopRequireDefault(_Paint);

var _Camera = __webpack_require__(/*! ./Camera */ "./src/painteditor/Camera.js");

var _Camera2 = _interopRequireDefault(_Camera);

var _SVGTools = __webpack_require__(/*! ./SVGTools */ "./src/painteditor/SVGTools.js");

var _SVGTools2 = _interopRequireDefault(_SVGTools);

var _lib = __webpack_require__(/*! ../utils/lib */ "./src/utils/lib.js");

var _ScratchAudio = __webpack_require__(/*! ../utils/ScratchAudio */ "./src/utils/ScratchAudio.js");

var _ScratchAudio2 = _interopRequireDefault(_ScratchAudio);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

//////////////////////////////////
// Undo / Redo Functions
//////////////////////////////////

var buffer = [];
var index = 0;

var PaintUndo = function () {
    function PaintUndo() {
        _classCallCheck(this, PaintUndo);
    }

    _createClass(PaintUndo, null, [{
        key: 'setup',


        ////////////////////////////////////////
        // Undo Controls Setup
        ///////////////////////////////////////
        value: function setup(p) {
            var div = (0, _lib.newHTML)('div', 'paintundo', p);
            div.setAttribute('id', 'paintundocontrols');
            var lib = [['undo', PaintUndo.undo], ['redo', PaintUndo.redo]];
            var dx = 20;
            for (var i = 0; i < lib.length; i++) {
                var bt = PaintUndo.newToggleClicky(div, 'id_p', lib[i][0], lib[i][1]);
                dx += bt.offsetWidth;
                dx += 20;
            }
            PaintUndo.updateActiveUndo();
        }
    }, {
        key: 'newToggleClicky',
        value: function newToggleClicky(p, prefix, key, fcn) {
            var button = (0, _lib.newHTML)('div', 'undocircle', p);
            (0, _lib.newHTML)('div', key + ' off', button);
            button.setAttribute('type', 'toggleclicky');
            button.setAttribute('id', prefix + key);
            if (fcn) {
                button.ontouchstart = function (evt) {
                    fcn(evt);
                };
                button.onmousedown = function (evt) {
                    fcn(evt);
                };
            }
            return button;
        }
    }, {
        key: 'runUndo',
        value: function runUndo() {
            _Path2.default.quitEditMode();
            _Paint2.default.root.removeChild((0, _lib.gn)('layer1'));
            _Paint2.default.root.appendChild(_SVGTools2.default.toObject(buffer[index]));
            _Paint2.default.root.appendChild((0, _lib.gn)('draglayer'));
            _Paint2.default.root.appendChild((0, _lib.gn)('paintgrid'));
            _Paint2.default.setZoomTo(_Paint2.default.currentZoom);
        }

        // you record before introducing a change

    }, {
        key: 'record',
        value: function record(dontStartStories) {
            if (index + 1 <= buffer.length) {
                buffer.splice(index + 1, buffer.length);
            }
            buffer.push(PaintUndo.getCanvas());
            index++;
            if ((0, _lib.gn)('id_pundo')) {
                PaintUndo.updateActiveUndo();
            }
            if (!dontStartStories) {
                _ScratchJr2.default.storyStart('PaintUndo.record'); // Record a change for sample projects in story-starter mode
            }
        }
    }, {
        key: 'getCanvas',
        value: function getCanvas() {
            return _SVGTools2.default.svg2string((0, _lib.gn)('layer1'));
        }

        //////////////////////////////////
        // Control buttons callbacks
        //////////////////////////////////

    }, {
        key: 'undo',
        value: function undo(e) {
            if (e.touches && e.touches.length > 1) {
                return;
            }
            e.preventDefault();
            e.stopPropagation();
            if (_Camera2.default.active) {
                _Camera2.default.doAction('undo');
            }
            while (index >= buffer.length) {
                index--;
            }
            index--;
            var snd = index < 0 ? 'boing.wav' : 'tap.wav';
            _ScratchAudio2.default.sndFX(snd);
            if (index < 0) {
                index = 0;
            } else {
                PaintUndo.runUndo();
            }
            PaintUndo.updateActiveUndo();
        }
    }, {
        key: 'redo',
        value: function redo(e) {
            if (e.touches && e.touches.length > 1) {
                return;
            }
            e.preventDefault();
            e.stopPropagation();
            if (_Camera2.default.active) {
                _Camera2.default.doAction('undo');
            }
            index++;
            var snd = index > buffer.length - 1 ? 'boing.wav' : 'tap.wav';
            _ScratchAudio2.default.sndFX(snd);
            if (index > buffer.length - 1) {
                index = buffer.length - 1;
            } else {
                PaintUndo.runUndo();
            }
            PaintUndo.updateActiveUndo();
        }
    }, {
        key: 'updateActiveUndo',
        value: function updateActiveUndo() {
            if ((0, _lib.gn)('id_pundo')) {
                if (buffer.length == 1) {
                    PaintUndo.tunOffButton((0, _lib.gn)('id_pundo'));
                } else {
                    if (index < 1) {
                        PaintUndo.tunOffButton((0, _lib.gn)('id_pundo'));
                    } else {
                        PaintUndo.tunOnButton((0, _lib.gn)('id_pundo'));
                    }
                }
                if (index >= buffer.length - 1) {
                    PaintUndo.tunOffButton((0, _lib.gn)('id_predo'));
                } else {
                    PaintUndo.tunOnButton((0, _lib.gn)('id_predo'));
                }
            }
        }
    }, {
        key: 'tunOnButton',
        value: function tunOnButton(p) {
            var kid = p.childNodes[0];
            var kclass = kid.getAttribute('class').split(' ')[0];
            kid.setAttribute('class', kclass + ' on');
        }
    }, {
        key: 'tunOffButton',
        value: function tunOffButton(p) {
            var kid = p.childNodes[0];
            var kclass = kid.getAttribute('class').split(' ')[0];
            kid.setAttribute('class', kclass + ' off');
        }
    }, {
        key: 'buffer',

        // Getters/setters for globally used properties
        set: function set(newBuffer) {
            buffer = newBuffer;
        }
    }, {
        key: 'index',
        get: function get() {
            return index;
        },
        set: function set(newIndex) {
            index = newIndex;
        }
    }]);

    return PaintUndo;
}();

exports.default = PaintUndo;

/***/ }),

/***/ "./src/painteditor/Path.js":
/*!*********************************!*\
  !*** ./src/painteditor/Path.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // Originally several files (PathBkg.js, PathBkg.js, PathEdit.js, PathMgmt.js, PathTools.js)
// were all contributing utility functions to the Path object.
// To consolidate it into a single module, I've combined these below.
// A nice refactor would be to split them back into the "modules," but that will likely involve
// some serious code changes - determining where the relevant Path.X are called, if any shared
// data needs to be moved, etc. -TM

var _ScratchJr = __webpack_require__(/*! ../editor/ScratchJr */ "./src/editor/ScratchJr.js");

var _ScratchJr2 = _interopRequireDefault(_ScratchJr);

var _SVG2Canvas = __webpack_require__(/*! ../utils/SVG2Canvas */ "./src/utils/SVG2Canvas.js");

var _SVG2Canvas2 = _interopRequireDefault(_SVG2Canvas);

var _SVGImage = __webpack_require__(/*! ./SVGImage */ "./src/painteditor/SVGImage.js");

var _SVGImage2 = _interopRequireDefault(_SVGImage);

var _SVGTools = __webpack_require__(/*! ./SVGTools */ "./src/painteditor/SVGTools.js");

var _SVGTools2 = _interopRequireDefault(_SVGTools);

var _Layer = __webpack_require__(/*! ./Layer */ "./src/painteditor/Layer.js");

var _Layer2 = _interopRequireDefault(_Layer);

var _Vector = __webpack_require__(/*! ../geom/Vector */ "./src/geom/Vector.js");

var _Vector2 = _interopRequireDefault(_Vector);

var _Transform = __webpack_require__(/*! ./Transform */ "./src/painteditor/Transform.js");

var _Transform2 = _interopRequireDefault(_Transform);

var _Paint = __webpack_require__(/*! ./Paint */ "./src/painteditor/Paint.js");

var _Paint2 = _interopRequireDefault(_Paint);

var _PaintUndo = __webpack_require__(/*! ./PaintUndo */ "./src/painteditor/PaintUndo.js");

var _PaintUndo2 = _interopRequireDefault(_PaintUndo);

var _PaintAction = __webpack_require__(/*! ./PaintAction */ "./src/painteditor/PaintAction.js");

var _PaintAction2 = _interopRequireDefault(_PaintAction);

var _Ghost = __webpack_require__(/*! ./Ghost */ "./src/painteditor/Ghost.js");

var _Ghost2 = _interopRequireDefault(_Ghost);

var _Events = __webpack_require__(/*! ../utils/Events */ "./src/utils/Events.js");

var _Events2 = _interopRequireDefault(_Events);

var _lib = __webpack_require__(/*! ../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// Previous "PathEdit" globals
var lineDotColor = 'white';
var curveDotColor = '#009eff'; // "#0b72b5"
var endDotColor = '#ffaa00';
var selectedDotColor = 'lime';
var selector = undefined;
var dotsize = 6;
var idotsize = 10;

// Originally PathMgmt.js

////////////////////////////////////////////////////
// Path management
////////////////////////////////////////////////////

var Path = function () {
    function Path() {
        _classCallCheck(this, Path);
    }

    _createClass(Path, null, [{
        key: 'process',
        value: function process(shape) {
            var plist = Path.getPolyPoints(shape);
            var firstpoint = plist[0];
            plist = Path.addPoints(plist); // make sure points are evenly spaced
            plist = Path.smoothPoints(plist);
            plist.unshift(firstpoint);
            plist = Path.addPoints(plist); // make sure points are evenly spaced
            plist = Path.deletePoints(plist);
            var bezier = Path.drawBezier(plist);
            shape.parentNode.removeChild(shape);
            return bezier;
        }
    }, {
        key: 'getPolyPoints',
        value: function getPolyPoints(shape) {
            var points = shape.points;
            var pp = [];
            for (var i = 0; i < points.numberOfItems; i++) {
                pp.push(points.getItem(i));
            }
            return pp;
        }
    }, {
        key: 'smoothPoints',
        value: function smoothPoints(points) {
            var n = points.length;
            var plist = [];
            var interval = 3;
            var i;
            for (i = 0; i < n - 1; i++) {
                var ax = 0;
                var ay = 0;
                for (var j = -interval; j <= interval; j++) {
                    var nj = Math.max(0, i + j);
                    nj = Math.min(nj, n - 1);
                    ax += points[nj].x;
                    ay += points[nj].y;
                }
                ax /= interval * 2 + 1;
                ay /= interval * 2 + 1;
                plist.push({
                    x: ax,
                    y: ay
                });
            }
            plist.push(points[n - 1]);
            return plist;
        }
    }, {
        key: 'addPoints',
        value: function addPoints(points) {
            var it = 0;
            var b = true;
            while (b) {
                var result = Path.fillWithPoints(points);
                b = result[0];
                it++;
                if (it > 10) {
                    return result[1];
                }
            }
            return result[1];
        }
    }, {
        key: 'fillWithPoints',
        value: function fillWithPoints(points) {
            var n = points.length;
            var i = 1;
            var res = false;
            var plist = [points[0]];
            while (i < n - 1) {
                var here = points[i];
                var after = points[i + 1];
                var l2 = _Vector2.default.len(_Vector2.default.diff(after, here));
                plist.push(points[i]);
                if (l2 > 5) {
                    var mp = _Vector2.default.mid(here, after);
                    plist.push({
                        x: mp.x,
                        y: mp.y
                    });
                    res = true;
                }
                i++;
            }
            plist.push(points[n - 1]);
            return [res, plist];
        }
    }, {
        key: 'deletePoints',
        value: function deletePoints(points) {
            var n = points.length;
            var i = 1;
            var j = 0;
            var plist = [];
            plist.push(points[0]);
            var dist = _lib.isTablet ? 40 : 30;
            var before, here, after;
            while (i < n - 1) {
                before = points[j];
                here = points[i];
                after = points[i + 1];
                var l1 = _Vector2.default.diff(before, here);
                var l2 = _Vector2.default.diff(after, here);
                var div = _Vector2.default.len(l1) * _Vector2.default.len(l2);
                if (div == 0) {
                    div = 0.01;
                }
                var factor = _Vector2.default.dot(l1, l2) / div;
                if (factor > -0.9 || _Vector2.default.len(l2) > dist || _Vector2.default.len(l1) > dist) {
                    plist.push(points[i]);
                    j = i;
                }
                i++;
            }
            before = points[n - 2];
            here = points[n - 1];
            if (plist.length > 2 && _Vector2.default.len(_Vector2.default.diff(before, here)) < 3) {
                plist.pop();
            }
            plist.push(points[n - 1]);
            return plist;
        }
    }, {
        key: 'drawBezier',
        value: function drawBezier(pointslist) {
            var first = pointslist[0];
            var shape = _SVGTools2.default.addPath((0, _lib.gn)('layer1'), first.x, first.y);
            if (pointslist.length < 2) {
                return shape;
            }
            var d = Path.getBezier(pointslist);
            //	var farilyclose = Vector.len(Vector.diff(lastpoint,first)) < 20;
            //s	if (farilyclose) d+="z";
            shape.setAttributeNS(null, 'd', d);
            return shape;
        }

        /////////////////////////////////////////////
        // Make a Bezier
        ////////////////////////////////////////////

    }, {
        key: 'getBezier',
        value: function getBezier(plist) {
            _SVG2Canvas2.default.lastcxy = plist[0];
            var lastpoint = plist[plist.length - 1];
            var d = 'M' + _SVG2Canvas2.default.lastcxy.x + ',' + _SVG2Canvas2.default.lastcxy.y;
            var str = '';
            if (plist.length < 3) {
                str = Path.lineSeg(plist[1]);
            } else {
                var dist = _Vector2.default.len(_Vector2.default.diff(plist[0], lastpoint));
                // calculate the curves
                var startpt = Path.curveSeg(plist[0], plist[1], plist[2]);
                for (var i = 2; i < plist.length - 1; i++) {
                    str += Path.curveSeg(plist[i - 1], plist[i], plist[i + 1]);
                }
                // calculate the last point whether it closes or not
                if (dist == 0) {
                    str += Path.curveSeg(plist[plist.length - 2], lastpoint, plist[1]);
                    // recalculate first point same command but the SVG2Canvas.lastcxy have changed
                    startpt = Path.curveSeg(plist[0], plist[1], plist[2]);
                } else {
                    str += Path.curveSeg(plist[plist.length - 2], lastpoint, lastpoint);
                }
                // (dist < 10) ? Path.curveSeg(plist[plist.length-2], lastpoint, plist[0]):
                d += startpt;
            }
            d += str;
            return d;
        }
    }, {
        key: 'getControlPoint',
        value: function getControlPoint(before, here, after) {
            // needs more work on the fudge factor
            var l1 = _Vector2.default.len(_Vector2.default.diff(before, here));
            var l2 = _Vector2.default.len(_Vector2.default.diff(here, after));
            var l3 = _Vector2.default.len(_Vector2.default.diff(before, after));
            var l;
            if (l1 + l2 == 0) {
                l = 0;
            } else {
                l = l3 / (l1 + l2);
            }
            var min = Math.min(l1, l2);
            //if ((l1 + l2) >  3 * l3)	l = 0;
            var beforev = _Vector2.default.diff(before, here);
            var afterv = _Vector2.default.diff(after, here);
            var bisect = _Vector2.default.sum(_Vector2.default.norm(beforev), _Vector2.default.norm(afterv));
            var perp = _Vector2.default.perp(bisect);
            if (_Vector2.default.dot(perp, afterv) < 0) {
                perp = _Vector2.default.neg(perp);
            }
            if (bisect.x == 0 || bisect.y == 0) {
                var kappa = (Math.sqrt(2) - 1) / 3 * 4;
                perp = _Vector2.default.norm(perp);
                var lx = _Vector2.default.dot(_Vector2.default.diff(here, before), perp);
                return _Vector2.default.diff(here, _Vector2.default.scale(perp, lx * kappa));
            }
            return _Vector2.default.diff(here, _Vector2.default.scale(perp, l * l * min * 0.666));
        }
    }, {
        key: 'curveSeg',
        value: function curveSeg(before, here, after) {
            //	var endpoint = Vector.diff(here, before);
            var c2 = Path.getControlPoint(before, here, after);
            var c1 = _Vector2.default.sum(before, _Vector2.default.diff(before, _SVG2Canvas2.default.lastcxy));
            _SVG2Canvas2.default.lastcxy = c2;
            var pt = 'C' + c1.x + ',' + c1.y + ',' + c2.x + ',' + c2.y + ',' + here.x + ',' + here.y;
            return pt;
        }

        ////////////////////////////////////////////
        // Making a Rect
        ////////////////////////////////////////////

    }, {
        key: 'makeRectangle',
        value: function makeRectangle(p, pointslist) {
            var first = pointslist[0];
            var shape = _SVGTools2.default.addPath(p, first.x, first.y);
            var d = Path.getRectangularD(pointslist);
            shape.setAttributeNS(null, 'd', d);
            shape.setAttribute('fill', 'none');
            return shape;
        }
    }, {
        key: 'getRectangularD',
        value: function getRectangularD(plist) {
            var first = plist[0];
            var d = 'M' + first.x + ',' + first.y;
            for (var i = 1; i < plist.length; i++) {
                d += Path.lineSeg(plist[i]);
            }
            d += Path.lineSeg(plist[0]);
            d += 'z';
            return d;
        }
    }, {
        key: 'lineSeg',
        value: function lineSeg(pt) {
            _SVG2Canvas2.default.lastcxy = pt;
            return 'L' + pt.x + ',' + pt.y;
        }
    }, {
        key: 'moveToCmd',
        value: function moveToCmd(pt) {
            _SVG2Canvas2.default.lastcxy = pt;
            return 'M' + pt.x + ',' + pt.y;
        }

        /////////////////////////
        // Polygon / Polyline
        /////////////////////////


    }, {
        key: 'convertPoints',
        value: function convertPoints(shape) {
            var plist = Path.getPolyPoints(shape);
            var d = 'M' + plist[0].x + ',' + plist[0].y;
            for (var i = 1; i < plist.length; i++) {
                d += Path.lineSeg(plist[i]);
            }
            d += 'z';
            var attr = Path.getStylingFrom(shape);
            attr.d = d;
            attr.id = (0, _lib.getIdFor)('path');
            attr['stroke-miterlimit'] = shape.getAttribute('stroke-miterlimit');
            var path = _SVGTools2.default.addChild((0, _lib.gn)('layer1'), 'path', attr);
            shape.parentNode.removeChild(shape);
            return path;
        }
    }, {
        key: 'getStylingFrom',
        value: function getStylingFrom(elem) {
            var c = elem.getAttribute('fill');
            var s = elem.getAttribute('stroke');
            var sw = elem.getAttribute('stroke-width');
            var attr = {
                'opacity': 1,
                'fill': c,
                'stroke': s,
                'stroke-width': sw
            };
            return attr;
        }

        ////////////////////////////////////////////
        //  Ellipse convertion to Path
        ////////////////////////////////////////////

    }, {
        key: 'makeEllipse',
        value: function makeEllipse(shape) {
            var rx = Number(shape.getAttribute('rx'));
            var ry = Number(shape.getAttribute('ry'));
            var cx = Number(shape.getAttribute('cx'));
            var cy = Number(shape.getAttribute('cy'));
            var kappa = (Math.sqrt(2) - 1) / 3 * 4;
            var d = [['M', cx - rx, cy], ['C', cx - rx, cy - ry * kappa, cx - rx * kappa, cy - ry, cx, cy - ry], ['C', cx + rx * kappa, cy - ry, cx + rx, cy - ry * kappa, cx + rx, cy], ['C', cx + rx, cy + ry * kappa, cx + rx * kappa, cy + ry, cx, cy + ry], ['C', cx - rx * kappa, cy + ry, cx - rx, cy + ry * kappa, cx - rx, cy]];
            var attr = Path.getStylingFrom(shape);
            attr.d = _SVG2Canvas2.default.arrayToString(d);
            attr.id = (0, _lib.getIdFor)('path');
            attr['stroke-miterlimit'] = shape.getAttribute('stroke-miterlimit');
            var elem = _SVGTools2.default.addChild((0, _lib.gn)('layer1'), 'path', attr);
            return elem;
        }

        //////////////////////////////////////////////////////
        //  From D to point list with CMD type
        /////////////////////////////////////////////////////

    }, {
        key: 'getAnchorpoints',
        value: function getAnchorpoints(d) {
            var list = _SVG2Canvas2.default.getCommandList(d);
            var res = [];
            for (var i = 0; i < list.length; i++) {
                var cmd = _SVG2Canvas2.default.getAbsoluteCommand(list[i]);
                if (cmd[0] != 'z') {
                    res.push(_SVG2Canvas2.default.endp);
                }
            }
            return res;
        }
    }, {
        key: 'getPointsAndCmds',
        value: function getPointsAndCmds(shape) {
            return Path.getCommands(shape.getAttribute('d'));
        }
    }, {
        key: 'getCommands',
        value: function getCommands(path) {
            var list = _SVG2Canvas2.default.getCommandList(path);
            var res = [];
            var first;
            for (var i = 0; i < list.length; i++) {
                var cmd = _SVG2Canvas2.default.getAbsoluteCommand(list[i]);
                if (cmd[0].toLowerCase() == 'm') {
                    first = _SVG2Canvas2.default.endp;
                }
                if (cmd[0].toLowerCase() != 'z') {
                    res.push({
                        cmd: cmd[0],
                        pt: _SVG2Canvas2.default.endp
                    });
                } else {
                    res.push({
                        cmd: cmd[0],
                        pt: first
                    });
                }
            }
            return res;
        }
    }, {
        key: 'getPointsForFirst',
        value: function getPointsForFirst(elem) {
            var paths = elem.getAttribute('d').match(/[M][^M]*/g);
            var d;
            if (!paths) {
                d = elem.getAttribute('d');
            } else {
                d = paths[0];
            }
            return Path.getCommands(d);
        }

        //////////////////////////////////////////////////////
        //  From CMD points to Path D attribute
        /////////////////////////////////////////////////////

    }, {
        key: 'getDattribute',
        value: function getDattribute(ptlist) {
            // plist data structure is
            // CMD - pt;
            _SVG2Canvas2.default.lastcxy = ptlist[0].pt;
            var d = 'M' + _SVG2Canvas2.default.lastcxy.x + ',' + _SVG2Canvas2.default.lastcxy.y;
            //paths always start with "M"
            // first CMD after M and last CMDS are calculated at the end of the loop
            var str = '';
            // two points line;
            if (ptlist.length < 3) {
                return ptlist[1].cmd.toLowerCase() == 'z' ? null : d + Path.lineSeg(ptlist[1].pt);
            }
            _Paint2.default.skipNext = false;
            // any other shape;
            var startpt = Path.thisCommand(ptlist, 1);
            var first = ptlist[1];
            var last = ptlist[ptlist.length - 1];
            var dist = _Vector2.default.len(_Vector2.default.diff(ptlist[0].pt, last.pt));
            var shapetype = first.cmd == 'C' && last.cmd == 'C' && dist == 0 ? 'ellipse' : first.cmd == 'C' && ptlist[ptlist.length - 2].cmd == 'C' && last.cmd.toLowerCase() == 'z' ? 'closecurve' : first.cmd == 'L' && ptlist[ptlist.length - 2].cmd == 'L' && dist == 0 ? 'polygon' : first.cmd == 'C' && last.cmd == 'C' ? 'curve' : 'line';
            for (var i = 2; i < ptlist.length - 1; i++) {
                str += Path.thisCommand(ptlist, i);
            }
            switch (shapetype) {
                case 'ellipse':
                    str += Path.curveSeg(ptlist[ptlist.length - 2].pt, last.pt, first.pt);
                    // recalculate first point same command because the SVG2Canvas.lastcxy have changed
                    startpt = Path.curveSeg(ptlist[0].pt, first.pt, ptlist[2].pt);
                    break;
                case 'closecurve':
                    //	str+= Path.curveSeg(ptlist[ptlist.length-2].pt, last.pt, first.pt);
                    str += 'z';
                    break;
                case 'polygon':
                    str += 'z';
                    break;

                case 'curve':
                    str += Path.curveSeg(ptlist[ptlist.length - 2].pt, last.pt, last.pt);
                    break;
                case 'line':
                    str += last.cmd.toLowerCase() == 'z' ? 'z' : Path.lineSeg(last.pt);
                    break;
                default:
                    str += Path.lineSeg(last.pt);
                    break;
            }
            return d + startpt + str;
        }
    }, {
        key: 'thisCommand',
        value: function thisCommand(ptlist, i) {
            var str;
            var kind = ptlist[i].cmd;
            var pt = ptlist[i].pt;
            if (_Paint2.default.skipNext) {
                _Paint2.default.skipNext = false;
                return '';
            }
            if (Path.skipCmd(ptlist, i)) {
                return '';
            }
            switch (kind.toUpperCase()) {
                case 'C':
                case 'S':
                    var ptbefore = ptlist[i - 1].pt;
                    var ptafter = ptlist[i + 1].pt;
                    str = Path.curveSeg(ptbefore, pt, ptafter);
                    break;
                case 'Z':
                    str = 'Z';
                    break;
                case 'M':
                    str = Path.moveToCmd(pt);
                    break;
                default:
                    str = Path.lineSeg(pt);
                    break;
            }
            return str;
        }
    }, {
        key: 'skipCmd',
        value: function skipCmd(ptlist, i) {
            var cmd1 = ptlist[i].cmd.toLowerCase();
            var cmd2 = ptlist[i + 1].cmd.toLowerCase();
            if (cmd1 == 'm' && cmd2 == 'm') {
                return true;
            }
            if (cmd1 == 'm' && cmd2 == 'z') {
                _Paint2.default.skipNext = true;
                return true;
            }
            return false;
        }

        // Originally PathEdit.js

    }, {
        key: 'maxDistance',
        value: function maxDistance() {
            return 20 / _Paint2.default.currentZoom;
        }
    }, {
        key: 'importPath',
        value: function importPath(elem) {
            var d = elem.getAttribute('d');
            var list = _SVG2Canvas2.default.getCommandList(d);
            var imported = Path.adaptPath(list);
            var path = _SVG2Canvas2.default.arrayToString(imported);
            elem.setAttribute('d', path);
        }
    }, {
        key: 'adaptPath',
        value: function adaptPath(list) {
            var res = [];
            var lastpt = {
                x: list[0][1],
                y: list[0][2]
            };
            var l;
            res.push(list[0]);
            for (var i = 1; i < list.length; i++) {
                var pts = list[i].concat();
                var cmd = pts.shift();
                switch (cmd.toLowerCase()) {
                    case 'h':
                        lastpt = {
                            x: pts[0],
                            y: lastpt.y
                        };
                        res.push(['L', lastpt.x, lastpt.y]);
                        break;
                    case 'v':
                        lastpt = {
                            x: lastpt.x,
                            y: pts[0]
                        };
                        res.push(['L', lastpt.x, lastpt.y]);
                        break;
                    case 'l':
                        lastpt = {
                            x: pts[0],
                            y: pts[1]
                        };
                        res.push(['L', lastpt.x, lastpt.y]);
                        break;
                    case 'c':
                        l = pts.length;
                        var nextpt = {
                            x: pts[l - 2],
                            y: pts[l - 1]
                        };
                        var thisPt = {
                            x: pts[0],
                            y: pts[1]
                        };
                        var diff = Math.floor(_Vector2.default.len(_Vector2.default.diff(lastpt, thisPt)));
                        if (diff == 0) {
                            res.push(['L', lastpt.x, lastpt.y]);
                        }
                        //		if (diff == 0) console.log (i, "added at beginging");
                        res.push(list[i]);
                        var startAt = {
                            x: pts[l - 4],
                            y: pts[l - 3]
                        };
                        var diffend = Math.floor(_Vector2.default.len(_Vector2.default.diff(startAt, nextpt)));
                        if (diffend == 0) {
                            res.push(['L', nextpt.x, nextpt.y]);
                        }
                        //		if (diffend == 0) console.log (i, "added at end");
                        lastpt = nextpt;
                        break;
                    case 'z':
                        res.push(list[i]);
                        break;
                    default:
                        l = pts.length;
                        lastpt = {
                            x: pts[l - 2],
                            y: pts[l - 1]
                        };
                        res.push(list[i]);
                        break;
                }
            }
            return res;
        }

        /////////////////////////////////////////////////////////////
        // UI Management
        ////////////////////////////////////////////////////////////

    }, {
        key: 'showDots',
        value: function showDots(shape) {
            _Transform2.default.applyToCmds(shape, _Transform2.default.combineAll(shape));
            _Transform2.default.eliminateAll(shape);
            var list = Path.getPointsForFirst(shape);
            //	if (Vector.len (Vector.diff (list[0].pt, list[list.length -1].pt)) == 0) list[list.length -1].cmd = "Z";
            var g = (0, _lib.gn)('pathdots');
            if (g != null) {
                g.parentNode.removeChild(g);
            }
            g = document.createElementNS(_Paint2.default.xmlns, 'g');
            g.setAttribute('style', 'pointer-events:none');
            g.setAttribute('id', 'pathdots');
            var p = document.getElementById('layer1').parentNode;
            p.appendChild(g);
            var plist = Path.getPathDotsElem(g, list);
            for (var k = 0; k < plist.length; k++) {
                plist[k].setAttribute('parentid', shape.id);
            }
            shape.setAttribute('style', 'pointer-events:visibleStroke;');
            var lastdot = plist[plist.length - 1];
            var iscurve = _SVG2Canvas2.default.curveoptions.indexOf(lastdot.getAttribute('cmd')) > -1;
            lastdot.setAttribute('fill', iscurve ? curveDotColor : lineDotColor);
            lastdot.setAttribute('opacity', 0.6);
            var first = Path.getDotPoint(plist[0]);
            var lastpoint = Path.getDotPoint(lastdot);
            var farilyclose = _Vector2.default.len(_Vector2.default.diff(lastpoint, first)) < 10 && lastdot.getAttribute('cmd') != 'Z';
            if (farilyclose) {
                lastdot.setAttribute('fill', endDotColor);
            }
        }
    }, {
        key: 'getPathDotsElem',
        value: function getPathDotsElem(g, list) {
            var res = [];
            var first;
            var cp;
            for (var j = 0; j < list.length - 1; j++) {
                var pt = list[j].pt;
                var cmd = list[j].cmd;
                if (cmd == 'M') {
                    first = pt;
                }
                cp = Path.getDot(g, cmd, pt);
                res.push(cp);
                cp.onmouseover = function (evt) {
                    Path.highlightDot(evt);
                };
                cp.onmouseout = function (evt) {
                    Path.unhighlightDot(evt);
                };
            }
            var last = list[list.length - 1];
            pt = last.pt;
            cmd = last.cmd;
            var prev = list[list.length - 2];
            if (cmd.toLowerCase() != 'z' && _Vector2.default.len(_Vector2.default.diff(first, pt)) == 0) {
                cmd = 'x';
                cp = Path.getDot(g, cmd, pt);
                cp.style.visibility = 'hidden';
            } else {
                if (_Vector2.default.len(_Vector2.default.diff(first, pt)) == 0 && cmd.toLowerCase() == 'z' && _Vector2.default.len(_Vector2.default.diff(first, prev.pt)) == 0) {
                    cp.setAttribute('cmd', 'x');
                    cp.style.visibility = 'hidden';
                } else {
                    if (cmd.toLowerCase() == 'z') {
                        cmd = prev.cmd == 'C' ? 'C' : 'L';
                    }
                    cp = Path.getDot(g, cmd, pt);
                }
            }
            res.push(cp);
            cp.onmouseover = function (evt) {
                Path.highlightDot(evt);
            };
            cp.onmouseout = function (evt) {
                Path.unhighlightDot(evt);
            };
            return res;
        }
    }, {
        key: 'reshape',
        value: function reshape(shape) {
            var list = Path.getDotsCoodinates(shape);
            //	console.log (list.length, list[0]);
            var cmds = Path.getPointsForFirst(shape);
            var dist = _Vector2.default.len(_Vector2.default.diff(list[0].pt, list[list.length - 1].pt));
            var valid = list[list.length - 1].cmd.toLowerCase() != 'x';
            var res = [];
            for (var i = 0; i < cmds.length; i++) {
                if (list.length == 0) {
                    res.push(cmds[i]);
                } else {
                    if (list[0].cmd.toLowerCase() == 'x') {
                        // elipse and rect have force close to keep joint
                        list[0].cmd = cmds[i].cmd;
                        list[0].pt = res[0].pt;
                    }
                    res.push(list[0]);
                    list.shift();
                }
            }
            if (valid) {
                if (dist < 10 && res.length > 3) {
                    res[res.length - 1].cmd = 'z';
                    res[0].pt = {
                        x: res[res.length - 1].pt.x,
                        y: res[res.length - 1].pt.y
                    };
                } else {
                    res[res.length - 1].cmd = res[1].cmd == 'L' ? 'L' : 'C';
                }
            }
            var d = Path.getDattribute(res);
            if (_SVG2Canvas2.default.isCompoundPath(shape)) {
                var paths = shape.getAttribute('d').match(/[M][^M]*/g);
                for (var j = 1; j < paths.length; j++) {
                    d += paths[j];
                }
            }
            shape.setAttributeNS(null, 'd', d);
            if (_SVGImage2.default.getImage(shape)) {
                _SVGImage2.default.rotatePointsOf(shape);
            }
        }
    }, {
        key: 'getDotColor',
        value: function getDotColor(shape, dot) {
            var cmds = Path.getPointsForFirst(shape);
            var indx = Path.getDotPos(dot);
            if (indx < 0) {
                return curveDotColor;
            }
            if (indx >= cmds.length - 1) {
                return endDotColor;
            }
            var cmd = cmds[indx].cmd;
            var iscurve = _SVG2Canvas2.default.curveoptions.indexOf(cmd) > -1;
            return iscurve ? curveDotColor : lineDotColor;
        }
    }, {
        key: 'getDotPos',
        value: function getDotPos(dot) {
            var arr = dot.id.split(' ');
            if (arr.length < 2) {
                return -1;
            }
            if (arr[0] != 'grab') {
                return -1;
            }
            return Number(arr[1]) - 1;
        }
    }, {
        key: 'getDotPoint',
        value: function getDotPoint(dot) {
            var rot = _Transform2.default.extract((0, _lib.gn)(dot.getAttribute('parentid')), 4);
            var mtx = _Transform2.default.getCombinedMatrices((0, _lib.gn)(dot.getAttribute('parentid'))); // skips rotation matrices
            var pt = _Transform2.default.point(Number(dot.getAttribute('cx')), Number(dot.getAttribute('cy')), mtx.inverse());
            pt = _Transform2.default.point(pt.x, pt.y, rot.matrix.inverse());
            return pt;
        }
    }, {
        key: 'isTip',
        value: function isTip(grab) {
            var indx = Path.getDotPos(grab);
            if (indx < 0) {
                return false;
            }
            if (indx == 0) {
                return true;
            }
            return indx == (0, _lib.gn)('pathdots').childElementCount - 1;
        }
    }, {
        key: 'getDot',
        value: function getDot(g, cmd, pt) {
            cmd = cmd.toUpperCase();
            var iscurve = _SVG2Canvas2.default.curveoptions.indexOf(cmd) > -1;
            var radius = Math.floor((_lib.isTablet ? idotsize : dotsize) / _Paint2.default.currentZoom) + 1;
            var skip = cmd == 'Z';
            var cp = _SVGTools2.default.addChild(g, 'circle', {
                'id': (0, _lib.getIdFor)('grab'),
                'fill': iscurve ? curveDotColor : lineDotColor,
                'r': radius,
                'stroke': skip ? 'none' : '#064268',
                'stroke-width': 1,
                'pointer-events': skip ? 'none' : 'all',
                opacity: skip ? 0 : 0.8
            });
            cp.setAttributeNS(null, 'cx', pt.x);
            cp.setAttributeNS(null, 'cy', pt.y);
            cp.setAttribute('cmd', cmd);
            return cp;
        }
    }, {
        key: 'highlightDot',
        value: function highlightDot(e) {
            var shape = e.target;
            shape.setAttribute('fill', '#00ffff');
            shape.setAttribute('opacity', 1);
        }
    }, {
        key: 'unhighlightDot',
        value: function unhighlightDot(e) {
            var shape = e.target;
            if (!shape) {
                return;
            }
            var isbez = _SVG2Canvas2.default.curveoptions.indexOf(shape.getAttribute('cmd')) > -1;
            shape.setAttribute('fill', isbez ? curveDotColor : lineDotColor);
            shape.setAttribute('opacity', 0.6);
        }
    }, {
        key: 'hideDots',
        value: function hideDots(shape) {
            if (shape) {
                shape.setAttribute('style', 'pointer-events:visiblePainted;');
            }
            var g = (0, _lib.gn)('pathdots');
            if (!g) {
                return;
            }
            g.parentNode.removeChild(g);
        }
    }, {
        key: 'getDotsCoodinates',
        value: function getDotsCoodinates() {
            var pointslist = [];
            for (var i = 0; i < (0, _lib.gn)('pathdots').childElementCount; i++) {
                var dot = (0, _lib.gn)('pathdots').childNodes[i];
                pointslist.push({
                    cmd: dot.getAttribute('cmd'),
                    pt: Path.getDotPoint(dot)
                });
            }
            return pointslist;
        }
    }, {
        key: 'getDots',
        value: function getDots() {
            var pointslist = [];
            for (var i = 0; i < (0, _lib.gn)('pathdots').childElementCount; i++) {
                pointslist.push((0, _lib.gn)('pathdots').childNodes[i]);
            }
            return pointslist;
        }
    }, {
        key: 'addDot',
        value: function addDot(shape) {
            var g = (0, _lib.gn)('pathdots');
            g.parentNode.removeChild(g);
            var rot = _Transform2.default.extract(shape, 4);
            var newpt = _Transform2.default.point(_Paint2.default.initialPoint.x, _Paint2.default.initialPoint.y, rot.matrix.inverse());
            (0, _lib.setCanvasSize)(_ScratchJr2.default.workingCanvas, _Paint2.default.root.getAttribute('width') * _Paint2.default.currentZoom, _Paint2.default.root.getAttribute('height') * _Paint2.default.currentZoom);
            var ctx = _ScratchJr2.default.workingCanvas.getContext('2d');
            // uncomment for testing offscreen rendering for hit test
            //	Paint.root.parentNode.appendChild(ScratchJr.workingCanvas);
            //	setProps(ScratchJr.workingCanvas.style, {position: "absolute", left: "0px", top: "0px"});
            ctx.clearRect(0, 0, _ScratchJr2.default.workingCanvas.width, _ScratchJr2.default.workingCanvas.height);
            ctx.fillStyle = 'rgba(0,0,0,0)';
            ctx.lineWidth = _Ghost2.default.linemask;
            ctx.strokeStyle = '#ff00FF';
            shape.setAttribute('d', Path.addPoint(shape, ctx, newpt));
            Path.showDots(shape);
            _PaintUndo2.default.record();
        }
    }, {
        key: 'getHitIndex',
        value: function getHitIndex(ctx, commands, pt) {
            var drawWithLineMask = function drawWithLineMask(lineWidth) {
                ctx.save();
                ctx.lineWidth = lineWidth;
                ctx.beginPath();
                for (var i = 0; i < commands.length; i++) {
                    _SVG2Canvas2.default.drawCommand(ctx, commands[i]);
                    ctx.stroke();
                    pt = _Vector2.default.floor(pt);
                    var pixel = ctx.getImageData(pt.x, pt.y, 1, 1).data;
                    if (pixel[3] != 0) {
                        return i;
                    }
                }
                ctx.stroke();
                ctx.restore();
            };
            // When using a mouse to add dragging points to paths,
            // we need to try a precise guess first.
            // For more detail see #504
            var index = drawWithLineMask(2);
            if (index > -1) {
                return index;
            }
            return drawWithLineMask(_Ghost2.default.linemask);
        }
    }, {
        key: 'getHitPointIndex',
        value: function getHitPointIndex(list, pt) {
            for (var i = 0; i < list.length; i++) {
                if (_Vector2.default.len(_Vector2.default.diff(list[i].pt, pt)) == 0) {
                    return i;
                }
            }
            return -1;
        }
    }, {
        key: 'addPoint',
        value: function addPoint(shape, ctx, newpt) {
            var mycmds = _SVG2Canvas2.default.getSVGcommands(shape);
            var list = Path.getPointsAndCmds(shape);
            var newCmd;
            var indx = Path.getHitIndex(ctx, mycmds, _Vector2.default.floor(newpt));
            if (indx > -1) {
                var prevcmd = list[indx].cmd;
                if (_SVG2Canvas2.default.curveoptions.indexOf(prevcmd) > -1 || prevcmd.toLowerCase() == 'z') {
                    newCmd = {
                        cmd: 'C',
                        pt: newpt
                    };
                } else {
                    newCmd = {
                        cmd: 'L',
                        pt: Path.inLine(newpt, indx, list)
                    };
                }
                list.splice(indx, 0, newCmd);
            }
            return Path.getDattribute(list);
        }
    }, {
        key: 'inLine',
        value: function inLine(C, indx, list) {
            var A = list[indx - 1].pt;
            var B = list[indx].pt;
            var norm = _Vector2.default.norm(_Vector2.default.diff(B, A));
            var K = _Vector2.default.dot(norm, _Vector2.default.diff(C, A));
            var pt = _Vector2.default.sum(A, _Vector2.default.scale(norm, K));
            return pt;
        }
    }, {
        key: 'deleteDot',
        value: function deleteDot(dot, shape) {
            var list1 = Path.getPointsForFirst(shape);
            var list = Path.getPointsAndCmds(shape);
            var mustdelteboth = (0, _lib.gn)('pathdots').childNodes[(0, _lib.gn)('pathdots').childElementCount - 1].getAttribute('cmd') == 'x';
            if (list.length != list1.length && list1.length < 5) {
                return;
            } else if (list.length < (mustdelteboth ? 6 : 3)) {
                return;
            } // polygons have M,L,Z to represent first and last point
            var pt = Path.getDotPoint(dot);
            var indx = Path.getHitPointIndex(list, pt);
            if (indx > 0) {
                list.splice(indx, 1);
            }
            if (indx == 0) {
                var pt1 = list[0].pt;
                var pt2 = list[list.length - 1].pt;
                if (_Vector2.default.len(_Vector2.default.diff(pt1, pt2)) == 0) {
                    list.splice(indx, 1);
                    if (mustdelteboth) {
                        list.splice(list.length - 1, 1);
                        list[0].cmd = 'M';
                        var lastpt = {
                            x: list[0].pt.x,
                            y: list[0].pt.y
                        };
                        list[list.length - 1].pt = lastpt;
                        var np = {
                            cmd: 'z',
                            pt: lastpt
                        };
                        list.push(np);
                    }
                    list[list.length - 1].pt = list[0].pt;
                } else {
                    list.splice(indx, 1);
                    if (list.length == 2) {
                        list[0].cmd = 'M';
                        list[list.length - 1].cmd = 'L';
                    }
                }
            }
            var d = Path.getDattribute(list);
            var img = _SVGImage2.default.getImage(shape);
            if (d == null) {
                Path.hideDots(shape);
                shape.parentNode.removeChild(shape);
                if (img) {
                    _SVGImage2.default.removeClip(img);
                }
            } else {
                shape.setAttribute('d', d);
                Path.showDots(shape);
                if (img) {
                    _SVGImage2.default.rotatePointsOf(shape);
                }
            }
            _PaintUndo2.default.record();
        }

        ////////////////////////////////////////
        // Enter modes
        ///////////////////////////////////////

    }, {
        key: 'enterEditMode',
        value: function enterEditMode(mt) {
            selector = _SVGImage2.default.getPathBorder(mt);
            Path.showDots(selector);
        }
    }, {
        key: 'quitEditMode',
        value: function quitEditMode() {
            Path.hideDots(selector);
            selector = undefined;
        }
    }, {
        key: 'hitDot',
        value: function hitDot(evt) {
            if (!selector) {
                return false;
            }
            var pt = _PaintAction2.default.getScreenPt(evt);
            var closestdot = Path.getClosestDotTo(pt, Math.floor((_lib.isTablet ? idotsize + 4 : dotsize) / _Paint2.default.currentZoom) * 2);
            if (closestdot) {
                _PaintAction2.default.target = closestdot;
            }
            return closestdot != null;
        }
    }, {
        key: 'getClosestDotTo',
        value: function getClosestDotTo(pt, range) {
            var list = Path.getDotsCoodinates(selector);
            var min = 99999;
            var dot = null;
            for (var i = 0; i < list.length; i++) {
                var pt2 = list[i].pt;
                var dist = _Vector2.default.len(_Vector2.default.diff(pt2, pt));
                if (dist < min) {
                    min = dist;
                    dot = i + 1;
                }
            }
            if (min <= range) {
                return (0, _lib.gn)('grab ' + dot);
            }
            return null;
        }
    }, {
        key: 'hitLine',
        value: function hitLine(shape, pt) {
            return Path.getPointIndex(shape, pt) > -1;
        }
    }, {
        key: 'getPointIndex',
        value: function getPointIndex(shape, pt) {
            var rot = _Transform2.default.extract(shape, 4);
            var newpt = _Transform2.default.point(pt.x, pt.y, rot.matrix.inverse());
            (0, _lib.setCanvasSize)(_ScratchJr2.default.workingCanvas, _Paint2.default.root.getAttribute('width'), _Paint2.default.root.getAttribute('height'));
            var ctx = _ScratchJr2.default.workingCanvas.getContext('2d');
            ctx.clearRect(0, 0, _ScratchJr2.default.workingCanvas.width, _ScratchJr2.default.workingCanvas.height);
            ctx.fillStyle = 'rgba(0,0,0,0)';
            ctx.lineWidth = _Ghost2.default.linemask;
            ctx.strokeStyle = '#ff00FF';
            return Path.getHitIndex(ctx, _SVG2Canvas2.default.getSVGcommands(shape), _Vector2.default.floor(newpt));
        }
    }, {
        key: 'getClosestPath',
        value: function getClosestPath(pt, current, layer, mindist) {
            var min = 999999;
            var kid;
            for (var i = 0; i < layer.childElementCount; i++) {
                var elem = layer.childNodes[i];
                if (elem.id == current.id) {
                    continue;
                }
                if (_SVG2Canvas2.default.isCloseDPath(elem)) {
                    continue;
                }
                var pt2 = Path.getStartPoint(elem);
                var dist = _Events2.default.distance(pt2.x - pt.x, pt2.y - pt.y);
                if (dist < min) {
                    min = dist;
                    kid = elem;
                }
            }
            return min <= mindist ? kid : null;
        }

        ///////////////////////////////
        // Join Path algorithm
        ///////////////////////////////

    }, {
        key: 'getStartPoint',
        value: function getStartPoint(elem) {
            var d = elem.getAttribute('d');
            var list = Path.getAnchorpoints(d);
            return list[0];
        }
    }, {
        key: 'getLastPoint',
        value: function getLastPoint(elem) {
            var d = elem.getAttribute('d');
            var list = Path.getAnchorpoints(d);
            return list[list.length - 1];
        }
    }, {
        key: 'join',
        value: function join(cs, mt, pt) {
            _Transform2.default.applyToCmds(mt, _Transform2.default.combineAll(mt));
            _Transform2.default.applyToCmds(cs, _Transform2.default.combineAll(cs));
            var cslist = Path.getCommands(cs.getAttribute('d'));
            var diffstart = _Vector2.default.len(_Vector2.default.diff(pt, cslist[0].pt));
            var diffend = _Vector2.default.len(_Vector2.default.diff(pt, cslist[cslist.length - 1].pt));
            var isEnd = diffstart > diffend;
            var mtlist = Path.getCommands(mt.getAttribute('d'));
            var res;
            if (isEnd) {
                if (diffend < diffstart) {
                    cslist[0].cmd = 'C';
                    res = mtlist.concat(cslist.reverse());
                } else {
                    mtlist.shift();
                    res = cslist.concat(mtlist);
                }
            } else {
                if (diffstart < diffend) {
                    mtlist[0].cmd = 'L';
                    cslist[0].cmd = 'C';
                    res = cslist.reverse().concat(mtlist);
                } else {
                    cslist[0].cmd = 'L';
                    res = mtlist.concat(cslist);
                }
            }
            var d = Path.getDattribute(res);
            if (_Vector2.default.len(_Vector2.default.diff(res[0].pt, res[res.length - 1].pt)) < 10) {
                var char = d.charAt(d.length - 1);
                if (char != 'z') {
                    d += 'z';
                }
            }
            cs.setAttributeNS(null, 'd', d);
            var attr = Path.getStylingFrom(mt);
            for (var val in attr) {
                cs.setAttribute(val, attr[val]);
            }
            if (mt.parentNode) {
                mt.parentNode.removeChild(mt);
            }
            return cs;
        }

        // Originally PathBkg.js
        ///////////////////////////////////////////////////
        // Background Cropping with Path
        ///////////////////////////////////////////////////

    }, {
        key: 'checkBackgroundCrop',
        value: function checkBackgroundCrop(shape) {
            var ocmds = Path.getPointsAndCmds(shape);
            var list = _Layer2.default.findUnderMe(shape);
            var iscropped = list.length == 0 ? Path.createFromBkg(shape) : Path.someOverlaps(shape, list);
            if (iscropped) {
                shape.parentNode.removeChild(shape, list);
                _Layer2.default.bringElementsToFront();
            } else {
                var d = Path.getDattribute(ocmds);
                shape.setAttribute('d', d);
            }
        }
    }, {
        key: 'someOverlaps',
        value: function someOverlaps(shape, list) {
            var cropped = false;
            Path.strechEdges(shape);
            var box = _SVGTools2.default.getBox(shape);
            var box2 = {
                x: 0,
                y: 0,
                width: 480,
                height: 360
            };
            if (Path.withinBounds(box, box2)) {
                return cropped;
            }
            if (!Path.isClockWise(shape.getAttribute('d'))) {
                shape.setAttribute('d', Path.flip(shape));
            }
            for (var i = 0; i < list.length; i++) {
                var node = list[i];
                if (node.tagName.toLowerCase() == 'image') {
                    continue;
                }
                if (node.tagName == 'clipPath') {
                    continue;
                }
                var contatctPoints = Path.getContactPoints(shape, node);
                if (contatctPoints.length < 2) {
                    continue;
                }
                var cantcrop = node.id.indexOf('staticbkg') < 0 && node.getAttribute('stencil') != 'yes';
                if (cantcrop) {
                    continue;
                }
                if (!Path.withinBounds(box, box2)) {
                    continue;
                }
                if (Path.endsSameSide(shape)) {
                    continue;
                }
                if (Path.isClockWise(node.getAttribute('d'))) {
                    node.setAttribute('d', Path.flip(node));
                }
                if (Path.createStencil(shape, node)) {
                    cropped = true;
                }
            }
            return cropped;
        }
    }, {
        key: 'createStencil',
        value: function createStencil(shape, mt) {
            var isimage = _SVGImage2.default.getImage(mt) != null;
            var list = Path.getPointsAndCmds(shape);
            var other = Path.getPointsAndCmds(mt);
            var index = _Layer2.default.groupStartsAt((0, _lib.gn)('layer1'), mt);
            var group = _Layer2.default.onTopOf((0, _lib.gn)('layer1'), index);
            //Layer.onTopOfBy(gn("layer1"), mt, 0.1, index, [mt]);
            var p = mt.parentNode;
            for (var i = 0; i < group.length; i++) {
                p.appendChild(group[i]);
            }
            var contatctPoints = Path.getContactPoints(shape, mt);
            //	console.log ("createStencil", contatctPoints, "shape", shape.id, "mt", mt.id);
            if (contatctPoints.length < 2) {
                return false;
            }
            var attr = Path.getStylingFrom(mt);
            if (isimage) {
                attr.fill = 'none';
            }
            var path = Path.makeAcut(shape, list, other, contatctPoints[0], contatctPoints[1], attr);
            path.setAttribute('stencil', 'yes');
            (0, _lib.gn)('layer1').appendChild(path);
            var attr2 = Path.getStylingFrom(shape);
            attr2.fill = isimage ? 'none' : mt.getAttribute('fill');
            attr2['stroke-width'] = isimage ? 0 : _Paint2.default.strokewidth;
            for (var val in attr2) {
                mt.setAttribute(val, attr2[val]);
            }
            attr2.id = (0, _lib.getIdFor)('path');
            attr2.d = mt.getAttribute('d');
            if (isimage) {
                mt = _SVGTools2.default.addChild((0, _lib.gn)('layer1'), 'path', attr2);
            }
            mt.setAttribute('d', Path.getComplement(shape, mt, contatctPoints[0], contatctPoints[1]));
            mt.setAttribute('d', Path.flip(mt));
            mt.setAttribute('stencil', 'yes');
            for (var j = 0; j < group.length; j++) {
                p.appendChild(group[j]);
            } // make sure to bring to front the old stuff
            if (contatctPoints.length > 2) {
                Path.cutBoard((0, _lib.gn)('layer1'), contatctPoints, shape, path, 2);
            }
            return !isimage;
        }
    }, {
        key: 'cutBoard',
        value: function cutBoard(p, ptsincontact, shape, mt, n) {
            if (n > ptsincontact.length - 2) {
                return;
            }
            if (Path.isClockWise(mt.getAttribute('d'))) {
                mt.setAttribute('d', Path.flip(mt));
            }
            var list = Path.getPointsAndCmds(shape);
            var other = Path.getPointsAndCmds(mt);
            var seam1 = ptsincontact[n];
            var seam2 = ptsincontact[n + 1];
            var attr = Path.getStylingFrom(mt);
            var hitpoints = Path.updateContactPoints(seam1, seam2, list, other);
            if (Path.isValidSegment(hitpoints)) {
                var path = Path.makeAcut(shape, list, other, hitpoints[0], hitpoints[1], attr);
                p.appendChild(path);
                path.setAttribute('stencil', 'yes');
                (0, _lib.gn)('layer1').appendChild(path);
                var attr2 = Path.getStylingFrom(shape);
                attr2.fill = mt.getAttribute('fill');
                attr2['stroke-width'] = _Paint2.default.strokewidth;
                for (var val in attr2) {
                    mt.setAttribute(val, attr2[val]);
                }
                mt.setAttribute('d', Path.getComplement(shape, mt, hitpoints[0], hitpoints[1]));
                mt.setAttribute('d', Path.flip(mt));
                mt.setAttribute('stencil', 'yes');
                Path.cutBoard(p, ptsincontact, shape, path, n + 2);
            }
        }
    }, {
        key: 'moveToEdge',
        value: function moveToEdge(last) {
            if (last.x <= -10) {
                return null;
            }
            if (last.x >= 490) {
                return null;
            }
            if (last.y >= 370) {
                return null;
            }
            if (last.y <= -10) {
                return null;
            }
            if (last.x <= 0) {
                return {
                    x: -10,
                    y: last.y
                };
            }
            if (last.y <= 0) {
                return {
                    x: last.x,
                    y: -10
                };
            }
            if (last.x >= 480) {
                return {
                    x: 490,
                    y: last.y
                };
            }
            if (last.y >= 360) {
                return {
                    x: last.x,
                    y: 370
                };
            }
            return null;
        }
    }, {
        key: 'atEdge',
        value: function atEdge(pt) {
            if (pt.x <= -10) {
                return true;
            }
            if (pt.x >= 490) {
                return true;
            }
            if (pt.y >= 370) {
                return true;
            }
            if (pt.y <= -10) {
                return true;
            }
            return false;
        }
    }, {
        key: 'endsSameSide',
        value: function endsSameSide(shape) {
            var cmds = Path.getPointsAndCmds(shape);
            var last = cmds[cmds.length - 1].pt;
            var first = cmds[0].pt;
            return Path.findEdge(first) == Path.findEdge(last);
        }
    }, {
        key: 'findEdge',
        value: function findEdge(pt) {
            if (pt.x <= 0) {
                return 'W';
            }
            if (pt.x >= 480) {
                return 'E';
            }
            if (pt.y >= 360) {
                return 'S';
            }
            return 'N';
        }
    }, {
        key: 'createFromBkg',
        value: function createFromBkg(shape) {
            //console.log ("createFromBkg");
            Path.strechEdges(shape);
            var box = _SVGTools2.default.getBox(shape);
            var box2 = {
                x: 0,
                y: 0,
                width: 480,
                height: 360
            };
            if (Path.withinBounds(box, box2)) {
                return false;
            }
            if (Path.endsSameSide(shape)) {
                return false;
            }
            // get a duplicate of the background
            var attr2 = {
                'id': (0, _lib.getIdFor)('path'),
                'opacity': 1,
                fill: 'white'
            };
            var cmds = [['M', -10, -10], ['L', 490, -10], ['L', 490, 370], ['L', -10, 370], ['L', -10, -10]];
            attr2.d = _SVG2Canvas2.default.arrayToString(cmds);
            var mt = _SVGTools2.default.addChild((0, _lib.gn)('layer1'), 'path', attr2);
            mt.setAttribute('stencil', 'yes');
            if (!Path.isClockWise(shape.getAttribute('d'))) {
                shape.setAttribute('d', Path.flip(shape));
            }
            if (Path.isClockWise(mt.getAttribute('d'))) {
                mt.setAttribute('d', Path.flip(mt));
            }
            var attr = Path.getStylingFrom((0, _lib.gn)('staticbkg'));
            for (var val in attr) {
                mt.setAttribute(val, attr[val]);
            }
            return Path.createStencil(shape, mt);
        }
    }, {
        key: 'withinBounds',
        value: function withinBounds(box, box2) {
            if (box.x <= box2.x && box.width + box.x >= box2.width) {
                return false;
            }
            if (box.y > box2.y) {
                return true;
            }
            if (box.height + box.y < box2.height) {
                return true;
            }
            return false;
        }
    }, {
        key: 'strechEdges',
        value: function strechEdges(shape) {
            var cmds = Path.getPointsAndCmds(shape);
            var last = cmds[cmds.length - 1].pt;
            var newpt;
            if (!Path.atEdge(last)) {
                var addtoend = Path.moveToEdge(last);
                if (addtoend) {
                    cmds.push({
                        cmd: 'C',
                        pt: addtoend
                    });
                } else {
                    newpt = _Vector2.default.sum(last, _Vector2.default.diff(last, cmds[cmds.length - 2].pt));
                    cmds.push({
                        cmd: 'C',
                        pt: newpt
                    });
                }
            }
            var first = cmds[0].pt;
            if (!Path.atEdge(first)) {
                cmds[0].cmd = 'L';
                var addtostart = Path.moveToEdge(first);
                if (addtostart) {
                    cmds.unshift({
                        cmd: 'M',
                        pt: addtostart
                    });
                } else {
                    // add fudge factor
                    newpt = _Vector2.default.sum(first, _Vector2.default.diff(first, cmds[1].pt));
                    cmds.unshift({
                        cmd: 'M',
                        pt: newpt
                    });
                }
            }
            var d = Path.getDattribute(cmds);
            shape.setAttribute('d', d);
        }

        ///////////////////////
        // path management
        ///////////////////////

    }, {
        key: 'getContactPoints',
        value: function getContactPoints(eraser, hitobj) {
            //	console.log ("getContactPoints", eraser.id, hitobj.id);
            var list = Path.getPointsAndCmds(eraser);
            var other = Path.getPointsAndCmds(hitobj);
            var res = [];
            for (var i = 1; i < list.length; i++) {
                var v1 = list[i - 1].pt;
                var v2 = list[i].pt;
                for (var j = 1; j < other.length; j++) {
                    var v3 = other[j - 1].pt;
                    var v4 = other[j].pt;
                    var pt = _Vector2.default.lineIntersect(v1, v2, v3, v4);
                    if (pt) {
                        res.push([i, j, pt]);
                    }
                }
            }
            return res;
        }
    }, {
        key: 'makeAcut',
        value: function makeAcut(eraser, list, other, goin, goout, attr) {
            var epathdata = _SVG2Canvas2.default.getSVGcommands(eraser);
            attr.d = Path.chopSection(list, epathdata, other, goin, goout);
            attr.id = (0, _lib.getIdFor)('path');
            var newpath = _SVGTools2.default.addChild((0, _lib.gn)('layer1'), 'path', attr);
            newpath.setAttribute('d', Path.flip(newpath));
            return newpath;
        }
    }, {
        key: 'chopSection',
        value: function chopSection(list, edata, other, goin, goout) {
            var d = 'M' + goin[2].x + ',' + goin[2].y;
            d += _SVG2Canvas2.default.arrayToString(edata.slice(goin[0], goout[0]));
            d += Path.lineSeg(goout[2]);
            var joinIn = goin[1];
            var joinOut = goout[1];
            var plist = Path.getShapeFromPoints(joinIn, joinOut, goin[2], other);
            return Path.fromPointsToPath(d, plist);
        }
    }, {
        key: 'getShapeFromPoints',
        value: function getShapeFromPoints(joinIn, joinOut, pt, other) {
            var plist = [];
            if (joinOut > joinIn) {
                var indx = other.length;
                //Vector.len (Vector.diff(other[0].pt, other[other.length - 1].pt)) == 0 ? other.length - 1 : other.length;
                plist = other.slice(joinOut, indx);
                plist = plist.concat(other.slice(0, joinIn));
            } else if (joinOut != joinIn) {
                plist = other.slice(joinOut, joinIn);
            }
            plist.push({
                cmd: 'L',
                pt: pt
            });
            return plist;
        }
    }, {
        key: 'fromPointsToPath',
        value: function fromPointsToPath(d, plist) {
            var prev = plist[0];
            d += Path.lineSeg(prev.pt);
            for (var i = 1; i < plist.length - 1; i++) {
                d += Path.getNextCmd(i, prev, plist);
                prev = plist[i];
            }
            d += Path.lineSeg(plist[plist.length - 1].pt);
            return d;
        }
    }, {
        key: 'getNextCmd',
        value: function getNextCmd(i, prev, plist, endpt) {
            var next = '';
            switch (plist[i].cmd.toUpperCase()) {
                case 'M':
                    if (prev.cmd == 'C') {
                        var ptafter = endpt ? endpt : plist[i + 1].pt;
                        next = Path.curveSeg(prev.pt, plist[i].pt, ptafter);
                    } else {
                        next = Path.lineSeg(plist[i].pt);
                    }
                    break;
                case 'C':
                case 'S':
                    next = Path.curveSeg(prev.pt, plist[i].pt, endpt ? endpt : plist[i + 1].pt);
                    break;
                default:
                    next = Path.lineSeg(plist[i].pt);
                    break;
            }
            return next;
        }
    }, {
        key: 'getComplement',
        value: function getComplement(eraser, hitobj, goin, goout) {
            var edata = _SVG2Canvas2.default.getSVGcommands(eraser);
            var other = Path.getPointsAndCmds(hitobj);
            var d = 'M' + goin[2].x + ',' + goin[2].y;
            d += _SVG2Canvas2.default.arrayToString(edata.slice(goin[0], goout[0]));
            d += Path.lineSeg(goout[2]);
            var joinIn = goin[1];
            var joinOut = goout[1];
            var plist = Path.getFromPoints(joinIn, joinOut, goin[2], other);
            return Path.fromPointsToPath(d, plist);
        }
    }, {
        key: 'getFromPoints',
        value: function getFromPoints(joinIn, joinOut, pt, other) {
            var plist = [];
            if (joinIn >= joinOut) {
                var indx = other.length;
                plist = other.slice(joinIn, indx);
                plist = plist.concat(other.slice(0, joinOut));
            } else {
                plist = other.slice(joinIn, joinOut);
            }
            if (plist.length > 0) {
                plist.reverse();
            }
            plist.push({
                cmd: 'L',
                pt: pt
            });
            return plist;
        }
    }, {
        key: 'updateContactPoints',
        value: function updateContactPoints(myseamin, myseamout, elist, newlist) {
            // in logic
            var hitout, hitin;
            var seamin1 = Path.updateContact(myseamin[0], elist, newlist);
            if (seamin1 == null) {
                var res1 = Path.extendSearch(myseamin[0], myseamout[0] - 1, elist, newlist);
                if (res1 != null) {
                    hitin = [res1[0], res1[1], res1[2]];
                } else {
                    return null;
                }
            } else {
                hitin = [myseamin[0], seamin1, myseamin[2]];
            }

            // out logic
            var seamout1 = Path.updateContact(myseamout[0], elist, newlist);
            if (seamout1 == null) {
                var res2 = Path.extendSearch(myseamin[0] + 1, myseamout[0] + 1, elist, newlist);
                if (res2 != null) {
                    hitout = [res2[0], res2[1], res2[2]];
                } else {
                    return null;
                }
            } else {
                hitout = [myseamout[0], seamout1, myseamout[2]];
            }
            return [hitin, hitout];
        }
    }, {
        key: 'extendSearch',
        value: function extendSearch(start, end, list, other) {
            for (var i = start; i < list.length; i++) {
                var v1 = list[i - 1].pt;
                var v2 = list[i].pt;
                for (var j = 1; j < other.length; j++) {
                    var v3 = other[j - 1].pt;
                    var v4 = other[j].pt;
                    var pt = _Vector2.default.lineIntersect(v1, v2, v3, v4);
                    if (pt) {
                        return [i, j, pt];
                    }
                }
            }
            return null;
        }
    }, {
        key: 'updateContact',
        value: function updateContact(n, elist, newlist) {
            var v1 = elist[n - 1].pt;
            var v2 = elist[n].pt;
            for (var j = 1; j < newlist.length; j++) {
                var v3 = newlist[j - 1].pt;
                var v4 = newlist[j].pt;
                var pt = _Vector2.default.lineIntersect(v1, v2, v3, v4);
                if (pt) {
                    return j;
                }
            }
            return null;
        }
    }, {
        key: 'isValidSegment',
        value: function isValidSegment(hp) {
            if (hp == null) {
                return false;
            }
            if (hp[0][1] == hp[1][1] || hp[0][2] == hp[1][1]) {
                return false;
            }
            return true;
        }

        // Originally PathTools.js
        /////////////////////////////////////////////
        // Path direction
        ////////////////////////////////////////////

    }, {
        key: 'isClockWise',
        value: function isClockWise(d) {
            return Path.getTurnType(Path.getAnchorpoints(d)) == 'clockwise';
        }
    }, {
        key: 'getTurnType',
        value: function getTurnType(list) {
            if (list.length < 3) {
                return 'colinear';
            }
            var limitpoints = Path.getMinMaxPoints(list);
            var a = Path.findGreaterThanIndex(limitpoints, -1);
            if (!a) {
                return 'colinear';
            }
            var b = Path.findGreaterThanIndex(limitpoints, a.index);
            if (!b) {
                return 'colinear';
            }
            var c = Path.findGreaterThanIndex(limitpoints, b.index);
            if (!c) {
                return 'colinear';
            }
            return Path.triangleAreaDir(a, b, c);
        }
    }, {
        key: 'findGreaterThanIndex',
        value: function findGreaterThanIndex(list, min) {
            var lastmin = 99999999;
            var pos;
            for (var i = 0; i < list.length; i++) {
                if (list[i].index > min && list[i].index < lastmin) {
                    lastmin = list[i].index;
                    pos = list[i];
                }
            }
            return pos;
        }
    }, {
        key: 'triangleAreaDir',
        value: function triangleAreaDir(a, b, c) {
            var area = (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x);
            if (area > 0) {
                return 'clockwise';
            }
            if (area < 0) {
                return 'counterclockwise';
            }
            return 'colinear';
        }
    }, {
        key: 'getMinMaxPoints',
        value: function getMinMaxPoints(list) {
            var res = [0, 0, 0, 0];
            if (list.length < 1) {
                return res;
            }
            var minx = 9999999;
            var miny = 9999999;
            var maxx = -9999999;
            var maxy = -9999999;
            for (var i = 0; i < list.length; i++) {
                if (list[i].x < minx) {
                    minx = list[i].x;
                    res[0] = {
                        type: 'minx',
                        x: list[i].x,
                        y: list[i].y,
                        index: i
                    };
                }
                if (list[i].x > maxx) {
                    maxx = list[i].x;
                    res[2] = {
                        type: 'maxx',
                        x: list[i].x,
                        y: list[i].y,
                        index: i
                    };
                }

                if (list[i].y < miny) {
                    miny = list[i].y;
                    res[1] = {
                        type: 'miny',
                        x: list[i].x,
                        y: list[i].y,
                        index: i
                    };
                }
                if (list[i].y > maxy) {
                    maxy = list[i].y;
                    res[3] = {
                        type: 'maxy',
                        x: list[i].x,
                        y: list[i].y,
                        index: i
                    };
                }
            }
            return res;
        }

        ////////////////////////////////////////////
        //  Flip Element
        ////////////////////////////////////////////

    }, {
        key: 'flip',
        value: function flip(elem) {
            var paths = elem.getAttribute('d').match(/[M][^M]*/g);
            var d = '';
            for (var i = 0; i < paths.length; i++) {
                d += Path.reverse(paths[i]);
            }
            return d;
        }
    }, {
        key: 'reverse',
        value: function reverse(d) {
            var list = Path.getCommands(d);
            if (list.length < 2) {
                return '';
            }
            var lastcmd = list[list.length - 1].cmd.toLowerCase();
            if (lastcmd == 'z') {
                list[0].cmd = 'z';
            } else {
                list[0].cmd = lastcmd.toUpperCase();
            }
            list[list.length - 1].cmd = 'M';
            list = list.reverse();
            return Path.getDattribute(list);
        }
    }, {
        key: 'setData',
        value: function setData(mt) {
            if (mt.getAttribute('relatedto')) {
                Path.breakRelationship(mt, mt.getAttribute('relatedto'));
            } else {
                Path.makeCompoundPath(mt);
            }
        }
    }, {
        key: 'breakRelationship',
        value: function breakRelationship(mt, family) {
            var elem = (0, _lib.gn)(family);
            if (!elem) {
                return;
            }
            var paths = elem.getAttribute('d').match(/[M][^M]*/g);
            var findPlace = Path.getMatchPathIndex(mt, paths);
            if (findPlace < 0) {
                return;
            }
            paths.splice(findPlace, 1);
            var d = '';
            for (var i = 0; i < paths.length; i++) {
                d += paths[i];
            }
            elem.setAttribute('d', d);
            mt.setAttribute('d', Path.flip(mt));
            mt.removeAttribute('relatedto');
        }
    }, {
        key: 'getMatchPathIndex',
        value: function getMatchPathIndex(mt, paths) {
            var mypoints = Path.getPointsAndCmds(mt);
            for (var i = 0; i < paths.length; i++) {
                var path = paths[i];
                var yourpoints = Path.getCommands(path);
                var count = Path.countMatchingPoints(mypoints, yourpoints);
                if (count >= mypoints.length) {
                    return i;
                }
            }
            return -1;
        }
    }, {
        key: 'countMatchingPoints',
        value: function countMatchingPoints(list, other) {
            var count = 0;
            for (var i = 0; i < list.length; i++) {
                var v1 = list[i].pt;
                for (var j = 0; j < other.length; j++) {
                    var v2 = other[j].pt;
                    if (_Vector2.default.len(_Vector2.default.diff(v1, v2)) == 0) {
                        count++;
                    }
                }
            }
            return count;
        }
    }, {
        key: 'makeCompoundPath',
        value: function makeCompoundPath(mt) {
            var list = Path.findIntersecting(mt);
            if (list.length == 0 || Path.containsImage(list) || Path.anyCrossing(list, mt)) {
                mt.setAttribute('fill', _Paint2.default.fillcolor);
            } else {
                var filled = false;
                list.sort(function (l1, l2) {
                    var a = _SVGTools2.default.getArea(l1);
                    var b = _SVGTools2.default.getArea(l2);
                    return a > b ? -1 : a < b ? 1 : 0;
                });
                var res = [];

                for (var i = 0; i < list.length; i++) {
                    if (list[i].getAttribute('fill') != 'none') {
                        filled = true;
                    }
                    if (list[i].nodeName == 'image') {
                        filled = true;
                    }
                    if (list[i].tagName == 'path' && !_SVG2Canvas2.default.isCloseDPath(list[i])) {
                        filled = true;
                    }
                    if (i == 0) {
                        res.push(list[i]);
                    }
                    if (i > 0) {
                        if (!_Layer2.default.insideMe(list[i], list[i - 1])) {
                            res.push(list[i]);
                        }
                    }
                }
                if (filled) {
                    mt.setAttribute('fill', _Paint2.default.fillcolor);
                } else {
                    Path.processCompoundPath(mt, res);
                }
            }
        }
    }, {
        key: 'findIntersecting',
        value: function findIntersecting(mt) {
            var rpos = _Paint2.default.root.createSVGRect();
            var box = _SVGTools2.default.getBox(mt);
            rpos.x = box.x;
            rpos.y = box.y;
            rpos.width = box.width;
            rpos.height = box.height;
            var list = _Paint2.default.root.getIntersectionList(rpos, null);
            var res = [];
            if (list != null) {
                for (var i = 0; i < list.length; i++) {
                    if (list[i].parentNode.id == 'ghostlayer') {
                        continue;
                    }
                    if (list[i].id == mt.id) {
                        continue;
                    }
                    if (_Layer2.default.includesBox(mt, list[i])) {
                        res.push(list[i]);
                    }
                }
            }
            return res;
        }
    }, {
        key: 'containsImage',
        value: function containsImage(objlist) {
            for (var i = 0; i < objlist.length; i++) {
                if (objlist[i].nodeName == 'image') {
                    return true;
                }
            }
            return false;
        }
    }, {
        key: 'anyCrossing',
        value: function anyCrossing(objlist, mt) {
            for (var i = 0; i < objlist.length; i++) {
                if (mt == objlist[i]) {
                    continue;
                }
                if (objlist[i].nodeName == 'g') {
                    continue;
                }
                var contatctPoints = Path.getPathCrossing(objlist[i], mt);
                if (contatctPoints.length > 0) {
                    return true;
                }
            }
            return false;
        }
    }, {
        key: 'getPathCrossing',
        value: function getPathCrossing(obj, mt) {
            var list = Path.getAllPoints(obj.getAttribute('d'));
            var other = Path.getAllPoints(mt.getAttribute('d'));
            var res = [];
            for (var i = 1; i < list.length; i++) {
                var v1 = list[i - 1];
                var v2 = list[i];
                for (var j = 1; j < other.length; j++) {
                    var v3 = other[j - 1];
                    var v4 = other[j];
                    var pt = _Vector2.default.lineIntersect(v1, v2, v3, v4);
                    if (pt) {
                        res.push([i, j, pt]);
                    }
                }
            }
            return res;
        }
    }, {
        key: 'getAllPoints',
        value: function getAllPoints(d) {
            var list = _SVG2Canvas2.default.getCommandList(d);
            if (list.length == 0) {
                return [];
            }
            var res = [];
            var lastpt = {
                x: list[0][1],
                y: list[0][2]
            };
            res.push(lastpt);
            for (var i = 1; i < list.length; i++) {
                var pts = list[i];
                var cmd = pts.shift();
                switch (cmd.toLowerCase()) {
                    case 'l':
                        lastpt = {
                            x: pts[0],
                            y: pts[1]
                        };
                        res.push(lastpt);
                        break;
                    case 'c':
                        pts.unshift(lastpt.y); // add last point y;
                        pts.unshift(lastpt.x); // add last point y;
                        var l = pts.length;
                        lastpt = {
                            x: pts[l - 2],
                            y: pts[l - 1]
                        };
                        var seg = Path.getBezierPoints(pts);
                        res = res.concat(seg);
                        break;
                    case 'z':
                        lastpt = {
                            x: res[0].x,
                            y: res[0].y
                        };
                        res.push(lastpt);
                        break;
                }
            }
            l = Path.cleanBezier(res, 5);
            return l.length < 5 ? res : l;
        }

        ////////////////////////////////////////////////////////////
        // from C to bezier points
        ////////////////////////////////////////////////////////////

    }, {
        key: 'getBezierPoints',
        value: function getBezierPoints(points) {
            if (points.length < 8) {
                return [];
            }
            var p1x, p2x, p3x, p4x, p1y, p2y, p3y, p4y;
            p1x = points[0];
            p1y = points[1];
            p2x = points[2];
            p2y = points[3];
            p3x = points[4];
            p3y = points[5];
            p4x = points[6];
            p4y = points[7];

            var x, y, t;

            var xl = p1x - 1;
            var yl = p1y - 1;
            t = 0;
            var f = 1;

            var k = 1.1;
            //Array to hold all points on the bezier curve
            var curvePoints = new Array();

            var n = 0;
            while (t <= 1 && t >= 0) {
                // t goes from 0 to 1
                n++;
                x = 0;
                y = 0;
                x = (1 - t) * (1 - t) * (1 - t) * p1x + 3 * (1 - t) * (1 - t) * t * p2x + 3 * (1 - t) * t * t * p3x + t * t * t * p4x;
                y = (1 - t) * (1 - t) * (1 - t) * p1y + 3 * (1 - t) * (1 - t) * t * p2y + 3 * (1 - t) * t * t * p3y + t * t * t * p4y;
                x = Math.round(x);
                y = Math.round(y);
                if (x != xl || y != yl) {
                    if (t == 0) {
                        xl = x;
                        yl = y;
                    }
                    if (x - xl > 1 || y - yl > 1 || xl - x > 1 || yl - y > 1) {
                        t -= f;
                        f = f / k;
                    } else {
                        curvePoints[curvePoints.length] = {
                            x: x,
                            y: y
                        };
                        xl = x;
                        yl = y;
                    }
                } else {
                    t -= f;
                    f = f * k;
                }
                t += f;
            }
            return curvePoints;
        }

        // for debugging

    }, {
        key: 'placePoint',
        value: function placePoint(p, pt, c) {
            var el = _SVGTools2.default.addEllipse(p, pt.x, pt.y);
            el.setAttributeNS(null, 'stroke-width', 0.5);

            el.setAttributeNS(null, 'rx', 4);
            el.setAttributeNS(null, 'ry', 4);
            el.setAttributeNS(null, 'fill', c);
        }
        // Path.placePoint(gn("testlayer"), pt, c ? c : "#0093ff");


    }, {
        key: 'cleanBezier',
        value: function cleanBezier(points, dist) {
            var n = points.length;
            var i = 1;
            var j = 0;
            var plist = [];
            plist.push(points[0]);
            while (i < n - 1) {
                var before = points[j];
                var here = points[i];
                var after = points[i + 1];
                var l1 = _Vector2.default.diff(before, here);
                var l2 = _Vector2.default.diff(after, here);
                if (_Vector2.default.len(l2) > dist || _Vector2.default.len(l1) > dist) {
                    plist.push(points[i]);
                    j = i;
                }
                i++;
            }
            return plist;
        }
    }, {
        key: 'processCompoundPath',
        value: function processCompoundPath(mt, list) {
            var dir = Path.isClockWise(mt.getAttribute('d'));
            // take out all matrices out of original shape
            _Transform2.default.applyToCmds(mt, _Transform2.default.combineAll(mt));
            _Transform2.default.eliminateAll(mt);
            var d = mt.getAttribute('d');
            var yourdir;
            for (var i = 0; i < list.length; i++) {
                if (list[i] == mt) {
                    continue;
                }
                if (list[i].getAttribute('fill') != 'none') {
                    list[i].parentNode.appendChild(list[i]);
                    continue;
                }
                list[i].setAttribute('relatedto', mt.id);
                if (_SVG2Canvas2.default.isCompoundPath(list[i])) {
                    _Transform2.default.applyToCmds(list[i], _Transform2.default.combineAll(list[i]));
                    _Transform2.default.eliminateAll(list[i]);
                    var paths = list[i].getAttribute('d').match(/[M][^M]*/g);
                    yourdir = Path.isClockWise(paths[0]);
                    if (dir == yourdir) {
                        d += Path.reverse(paths[0]);
                    } else {
                        d += paths[0];
                    }
                } else {
                    yourdir = Path.isClockWise(list[i].getAttribute('d'));
                    if (dir == yourdir) {
                        list[i].setAttribute('d', Path.flip(list[i]));
                        // take out matrices
                    }
                    _Transform2.default.applyToCmds(list[i], _Transform2.default.combineAll(list[i]));
                    _Transform2.default.eliminateAll(list[i]);
                    d += list[i].getAttribute('d');
                }
            }
            mt.setAttribute('d', d);
        }
    }, {
        key: 'endDotColor',

        // Getters/setters for globally used properties
        get: function get() {
            return endDotColor;
        }
    }, {
        key: 'selectedDotColor',
        get: function get() {
            return selectedDotColor;
        }
    }, {
        key: 'selector',
        get: function get() {
            return selector;
        }
    }]);

    return Path;
}();

exports.default = Path;

/***/ }),

/***/ "./src/painteditor/SVGImage.js":
/*!*************************************!*\
  !*** ./src/painteditor/SVGImage.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); ////////////////////////////////////////////////////////////////////////////
// An image created with the camrea has the following associated elements
// image --> ID  = imge n
// clipPath -- > ID = clip_ +imageid
// path for clip -- > ID = pathmask_ + imageid
// visible path border  --> ID = pathborder_ + imageid
///////////////////////////////////////////////////////////////////


var _Path = __webpack_require__(/*! ./Path */ "./src/painteditor/Path.js");

var _Path2 = _interopRequireDefault(_Path);

var _Paint = __webpack_require__(/*! ./Paint */ "./src/painteditor/Paint.js");

var _Paint2 = _interopRequireDefault(_Paint);

var _Layer = __webpack_require__(/*! ./Layer */ "./src/painteditor/Layer.js");

var _Layer2 = _interopRequireDefault(_Layer);

var _Transform = __webpack_require__(/*! ./Transform */ "./src/painteditor/Transform.js");

var _Transform2 = _interopRequireDefault(_Transform);

var _Rectangle = __webpack_require__(/*! ../geom/Rectangle */ "./src/geom/Rectangle.js");

var _Rectangle2 = _interopRequireDefault(_Rectangle);

var _SVGTools = __webpack_require__(/*! ./SVGTools */ "./src/painteditor/SVGTools.js");

var _SVGTools2 = _interopRequireDefault(_SVGTools);

var _SVG2Canvas = __webpack_require__(/*! ../utils/SVG2Canvas */ "./src/utils/SVG2Canvas.js");

var _SVG2Canvas2 = _interopRequireDefault(_SVG2Canvas);

var _PaintAction = __webpack_require__(/*! ./PaintAction */ "./src/painteditor/PaintAction.js");

var _PaintAction2 = _interopRequireDefault(_PaintAction);

var _lib = __webpack_require__(/*! ../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var SVGImage = function () {
    function SVGImage() {
        _classCallCheck(this, SVGImage);
    }

    _createClass(SVGImage, null, [{
        key: 'addCameraFill',
        value: function addCameraFill(mt, str) {
            //  prepare to insert image by getting the objects above
            if (mt.getAttribute('relatedto')) {
                _Path2.default.breakRelationship(mt, mt.getAttribute('relatedto'));
            }
            var mtimage = SVGImage.getImage(mt);
            if (mtimage) {
                SVGImage.removeClip(mtimage, true);
                mt.setAttribute('id', (0, _lib.getIdFor)(mt.nodeName));
            }
            SVGImage.createImageFromFeed(mt, str);
        }
    }, {
        key: 'replaceImage',
        value: function replaceImage(img, str) {
            img.setAttributeNS(_Paint2.default.xmlnslink, 'xlink:href', 'data:image/png;base64,' + str);
        }
    }, {
        key: 'createImageFromFeed',
        value: function createImageFromFeed(mt, str) {
            var p = mt.parentNode;
            var isbkg = mt.id == 'staticbkg';
            var index = _Layer2.default.groupStartsAt(p, mt);
            var group = _Layer2.default.onTopOf(p, index);
            var viewbox = _SVGTools2.default.getBox(mt).rounded();
            var box = new _Rectangle2.default(0, 0, _Paint2.default.workspaceWidth, _Paint2.default.workspaceHeight);
            viewbox = viewbox.expandBy(20);
            viewbox.crop(box);
            var imageid = (0, _lib.getIdForCamera)('image');
            if (isbkg) {
                imageid += 'staticbkg';
            }
            var g = _SVGTools2.default.createGroup(p, 'group_' + imageid);
            // Make the clip Path
            var pathmask = _SVGTools2.default.getCopy(mt);
            var maskattr = {
                'id': 'pathmask_' + imageid
            };
            for (var val in maskattr) {
                pathmask.setAttribute(val, maskattr[val]);
            }
            var clippath = _SVGTools2.default.addChild(g, 'clipPath', {
                id: 'clip_' + imageid,
                clipPathUnits: 'userSpaceOnUse'
            });
            clippath.appendChild(pathmask);

            // Make the image
            var img = document.createElementNS(_Paint2.default.xmlns, 'image');
            var attr = {
                'x': viewbox.x,
                'y': viewbox.y,
                'width': viewbox.width,
                'height': viewbox.height,
                'id': imageid
            };
            for (var vl1 in attr) {
                img.setAttribute(vl1, attr[vl1]);
            }
            img.setAttributeNS(_Paint2.default.xmlnslink, 'xlink:href', 'data:image/png;base64,' + str);
            img.setAttribute('clip-path', 'url(#clip_' + imageid + ')');
            g.appendChild(img);
            // redefine the orginal shape
            var borderattr = {
                'id': 'pathborder_' + imageid,
                fill: 'none'
            };
            for (var vl2 in borderattr) {
                mt.setAttribute(vl2, borderattr[vl2]);
            }

            // re-org of the SVG objects
            for (var i = 0; i < group.length; i++) {
                p.appendChild(group[i]);
            }
        }

        //////////////////////
        // Actions on Images
        ///////////////////////

    }, {
        key: 'removeClip',
        value: function removeClip(img, keepmt) {
            var imageid = img.getAttribute('id');
            var isbkg = imageid.indexOf('staticbkg') > -1;
            var clip = (0, _lib.gn)('clip_' + imageid);
            var group = (0, _lib.gn)('group_' + imageid);
            var pathborder = (0, _lib.gn)('pathborder_' + imageid);
            if (isbkg && !keepmt) {
                var path = clip.childNodes[0];
                path.id = 'staticbkg', (0, _lib.gn)('layer1').appendChild(path);
            } else {
                if (group) {
                    group.parentNode.removeChild(group);
                } else {
                    if (clip) {
                        clip.parentNode.removeChild(clip);
                    }
                    img.parentNode.removeChild(img);
                }
            }
            if (pathborder && !keepmt) {
                pathborder.parentNode.removeChild(pathborder);
            }
        }
    }, {
        key: 'paint',
        value: function paint(img) {
            var imageid = img.getAttribute('id');
            var isbkg = img.id.indexOf('staticbkg') > -1;
            var pathborder = (0, _lib.gn)('pathborder_' + imageid);
            pathborder.setAttribute('id', isbkg ? 'staticbkg' : (0, _lib.getIdFor)('path'));
            var clip = (0, _lib.gn)('clip_' + imageid);
            var group = (0, _lib.gn)('group_' + imageid);
            if (group) {
                group.parentNode.removeChild(group);
            } else {
                if (clip) {
                    clip.parentNode.removeChild(clip);
                }
                img.parentNode.removeChild(img);
            }
            _PaintAction2.default.currentshape = pathborder;
        }

        ///////////////////////
        //	Mask for camera
        ///////////////////////

    }, {
        key: 'draw',
        value: function draw(image, clip, ctx, fcn) {
            var angle = _Transform2.default.getRotationAngle(image);
            var center = _SVGTools2.default.getBoxCenter(image);
            var newcnv = document.createElement('canvas');
            (0, _lib.setCanvasSize)(newcnv, ctx.canvas.width, ctx.canvas.height);
            var newctx = newcnv.getContext('2d');
            var dataurl = image.getAttribute('xlink:href');
            var img = document.createElement('img');
            img.src = dataurl;
            if (!img.complete) {
                img.onload = function () {
                    drame(img, newctx, angle, center);
                };
            } else {
                drame(img, newctx, angle, center);
            }

            function drame(img, c, angle, center) {
                var x = Number(image.getAttribute('x'));
                var y = Number(image.getAttribute('y'));
                var width = Number(image.getAttribute('width'));
                var height = Number(image.getAttribute('height'));
                c.fillStyle = 'red';
                c.fillRect(x, y, width, height);
                c.save();
                c.translate(center.x, center.y);
                c.rotate(angle * _lib.DEGTOR);
                c.translate(-center.x, -center.y);
                c.drawImage(img, x, y, width, height);
                c.restore();
                c.save();
                c.globalCompositeOperation = 'destination-in';
                c.fillStyle = '#f30';
                c.strokeStyle = 'rgba(0,0,0,0)';
                _SVG2Canvas2.default.processXMLnode(clip, c);
                c.restore();
                ctx.drawImage(newcnv, 0, 0);
                if (fcn) {
                    fcn();
                }
            }
        }
    }, {
        key: 'getImage',
        value: function getImage(mt) {
            if (!mt) {
                return null;
            }
            if (mt.nodeName == 'image') {
                return mt;
            }
            if (mt.nodeName == 'g') {
                var str = mt.id;
                var elem = str.indexOf('group_image_') > -1 ? (0, _lib.gn)(str.substr(6, str.length)) : null;
                return !elem ? null : elem.tagName == 'image' ? elem : null;
            }
            if (mt.id.indexOf('pathborder_image') < 0 && mt.id.indexOf('pathmask_image') < 0) {
                return null;
            }
            var imageid = mt.id.indexOf('pathborder_image') < 0 ? mt.id.substring(String('pathmask_').length, mt.id.length) : mt.id.substring(String('pathborder_').length, mt.id.length);
            return (0, _lib.gn)(imageid);
        }
    }, {
        key: 'getPathMask',
        value: function getPathMask(mt) {
            if (mt.id.indexOf('pathborder_image') < 0) {
                return null;
            }
            var imageid = mt.id.substring(String('pathborder_').length, mt.id.length);
            return (0, _lib.gn)('pathmask_' + imageid);
        }
    }, {
        key: 'getPathBorder',
        value: function getPathBorder(mt) {
            if (mt.id.indexOf('image_') == 0) {
                return (0, _lib.gn)('pathborder_' + mt.id);
            }
            if (mt.id.indexOf('pathmask_') > -1) {
                var imageid = mt.id.substring(String('pathmask_').length, mt.id.length);
                return (0, _lib.gn)('pathborder_' + imageid);
            }
            return mt;
        }

        ///////////////////////
        // Cloning
        ///////////////////////

    }, {
        key: 'cloneImage',
        value: function cloneImage(p, elem) {
            var img = SVGImage.getClonedImage(elem);
            var imageid = img.id;
            var dataurl = elem.getAttribute('xlink:href');
            var html5img = document.createElement('img');
            html5img.src = dataurl;
            if (!html5img.complete) {
                html5img.onload = function () {
                    renderImage(img);
                };
            } else {
                renderImage(img);
            }
            function renderImage(img) {
                var cnv = document.createElement('canvas');
                (0, _lib.setCanvasSize)(cnv, Number(img.getAttribute('width')), Number(img.getAttribute('height')));
                var ctx = cnv.getContext('2d');
                ctx.drawImage(html5img, 0, 0);
                var imgdata = cnv.toDataURL('image/png');
                img.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imgdata);
            }

            // Make the clip Path
            var pathmask = _SVGTools2.default.getCopy((0, _lib.gn)('pathmask_' + elem.id));
            var maskattr = {
                'id': 'pathmask_' + imageid
            };
            for (var val in maskattr) {
                pathmask.setAttribute(val, maskattr[val]);
            }
            var g = _SVGTools2.default.createGroup(p, 'group_' + imageid);
            var clippath = _SVGTools2.default.addChild(g, 'clipPath', {
                id: 'clip_' + imageid,
                clipPathUnits: 'userSpaceOnUse'
            });
            clippath.appendChild(pathmask);
            img.setAttribute('clip-path', 'url(#clip_' + imageid + ')');
            g.appendChild(img);
            var pathborder = _SVGTools2.default.getCopy((0, _lib.gn)('pathborder_' + elem.id));
            var borderattr = {
                'id': 'pathborder_' + imageid
            };
            for (var vl in borderattr) {
                pathborder.setAttribute(vl, borderattr[vl]);
            }
            p.appendChild(pathborder);
            _Transform2.default.translateTo(img, window.xform);
            _Transform2.default.translateTo(pathmask, window.xform);
            _Transform2.default.translateTo(pathborder, window.xform);
            return img;
        }
    }, {
        key: 'getClonedImage',
        value: function getClonedImage(elem) {
            var attr = _SVGTools2.default.attributeTable[elem.tagName];
            var shape = document.createElementNS(_Paint2.default.xmlns, elem.tagName);

            for (var i = 0; i < attr.length; i++) {
                shape.setAttribute(attr[i], elem.getAttribute(attr[i]));
            }

            var imageid = (0, _lib.getIdForCamera)('image');
            shape.setAttribute('id', imageid);
            var ang = _Transform2.default.getRotationAngle(elem);
            if (ang != 0) {
                _Transform2.default.applyRotation(shape, ang);
            }
            return shape;
        }

        //////////////////////////////
        // Path edditing
        /////////////////////////////

    }, {
        key: 'rotatePointsOf',
        value: function rotatePointsOf(shape) {
            var elem = SVGImage.getImage(shape);
            var mask = SVGImage.getPathMask(shape);
            if (!mask) {
                return;
            }
            var angle = _Transform2.default.getRotationAngle(elem);
            mask.setAttributeNS(null, 'd', shape.getAttribute('d'));
            if (angle == 0) {
                return;
            }
            var center = _SVGTools2.default.getBoxCenter(elem);
            var rot = _Paint2.default.root.createSVGTransform();
            rot.setRotate(-angle, center.x, center.y);
            _Transform2.default.rotateFromPoint(rot, mask);
        }
    }]);

    return SVGImage;
}();

exports.default = SVGImage;

/***/ }),

/***/ "./src/painteditor/SVGTools.js":
/*!*************************************!*\
  !*** ./src/painteditor/SVGTools.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Paint = __webpack_require__(/*! ./Paint */ "./src/painteditor/Paint.js");

var _Paint2 = _interopRequireDefault(_Paint);

var _Vector = __webpack_require__(/*! ../geom/Vector */ "./src/geom/Vector.js");

var _Vector2 = _interopRequireDefault(_Vector);

var _lib = __webpack_require__(/*! ../utils/lib */ "./src/utils/lib.js");

var _Transform = __webpack_require__(/*! ./Transform */ "./src/painteditor/Transform.js");

var _Transform2 = _interopRequireDefault(_Transform);

var _SVG2Canvas = __webpack_require__(/*! ../utils/SVG2Canvas */ "./src/utils/SVG2Canvas.js");

var _SVG2Canvas2 = _interopRequireDefault(_SVG2Canvas);

var _SVGImage = __webpack_require__(/*! ./SVGImage */ "./src/painteditor/SVGImage.js");

var _SVGImage2 = _interopRequireDefault(_SVGImage);

var _Rectangle = __webpack_require__(/*! ../geom/Rectangle */ "./src/geom/Rectangle.js");

var _Rectangle2 = _interopRequireDefault(_Rectangle);

var _Layer = __webpack_require__(/*! ./Layer */ "./src/painteditor/Layer.js");

var _Layer2 = _interopRequireDefault(_Layer);

var _Path = __webpack_require__(/*! ./Path */ "./src/painteditor/Path.js");

var _Path2 = _interopRequireDefault(_Path);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var attributeTable = {
    'path': ['d'],
    'image': ['x', 'y', 'width', 'height'],
    'ellipse': ['cx', 'cy', 'rx', 'ry'],
    'rect': ['x', 'y', 'width', 'height'],
    'circle': ['cx', 'cy', 'r'],
    'line': ['x1', 'y1', 'x2', 'y2'],
    'text': ['x', 'y', 'font-size', 'font-family', 'font-style', 'font-weight', 'text-anchor', 'xml:space'],
    'polyline': ['points'],
    'polygon': ['points']
};

var attributePenTable = void 0;

var SVGTools = function () {
    function SVGTools() {
        _classCallCheck(this, SVGTools);
    }

    _createClass(SVGTools, null, [{
        key: 'init',
        value: function init() {
            attributePenTable = SVGTools.getPenAttributes();
        }
    }, {
        key: 'getPenAttributes',
        value: function getPenAttributes() {
            return {
                'path': SVGTools.onlyKeys(SVGTools.getPenAttr()),
                'ellipse': SVGTools.onlyKeys(SVGTools.getPenAttr()),
                'rect': SVGTools.onlyKeys(SVGTools.getPenAttr()),
                'line': SVGTools.onlyKeys(SVGTools.getPenAttr()),
                'image': [],
                'polyline': SVGTools.onlyKeys(SVGTools.getPenAttr()),
                'polygon': SVGTools.onlyKeys(SVGTools.getPenAttr())
            };
        }
    }, {
        key: 'create',
        value: function create(parent, w, h) {
            var el = document.createElementNS(_Paint2.default.xmlns, 'svg');
            el.setAttributeNS(null, 'version', 1.1);
            if (w) {
                el.setAttributeNS(null, 'width', w);
            }
            if (h) {
                el.setAttributeNS(null, 'height', h);
            }
            parent.appendChild(el);
            return el;
        }
    }, {
        key: 'createGroup',
        value: function createGroup(parent, id) {
            var el = document.createElementNS(_Paint2.default.xmlns, 'g');
            if (id) {
                el.setAttribute('id', id);
            }
            if (parent) {
                parent.appendChild(el);
            }
            return el;
        }

        //////////////////////////////////////////
        // Element creation
        /////////////////////////////////////////

    }, {
        key: 'addChild',
        value: function addChild(div, type, attr) {
            var shape = document.createElementNS(_Paint2.default.xmlns, type);
            for (var val in attr) {
                shape.setAttribute(val, attr[val]);
            }
            if (div) {
                div.appendChild(shape);
            }
            return shape;
        }
    }, {
        key: 'addPath',
        value: function addPath(div, x, y) {
            var shape = document.createElementNS(_Paint2.default.xmlns, 'path');
            var str = 'M' + x + ',' + y;
            var attr = {
                'd': str,
                'id': (0, _lib.getIdFor)('path'),
                'opacity': 1
            };
            var drawattr = SVGTools.getPolyAttr();
            for (var val in attr) {
                shape.setAttribute(val, attr[val]);
            }
            for (var ps in drawattr) {
                shape.setAttribute(ps, drawattr[ps]);
            }
            div.appendChild(shape);
            return shape;
        }
    }, {
        key: 'addPolyline',
        value: function addPolyline(div, x, y) {
            var shape = document.createElementNS(_Paint2.default.xmlns, 'polyline');
            var str = ' ' + x + ',' + y + ' ';
            var attr = {
                'points': str,
                'id': (0, _lib.getIdFor)('polyline'),
                'opacity': 1
            };
            var drawattr = SVGTools.getPolyAttr();
            for (var val in attr) {
                shape.setAttribute(val, attr[val]);
            }
            for (var ps in drawattr) {
                shape.setAttribute(ps, drawattr[ps]);
            }
            div.appendChild(shape);
            return shape;
        }
    }, {
        key: 'addEllipse',
        value: function addEllipse(div, x, y) {
            var shape = document.createElementNS(_Paint2.default.xmlns, 'ellipse');
            var attr = {
                'cx': x,
                'cy': y,
                'rx': 0,
                'ry': 0,
                'id': (0, _lib.getIdFor)('ellipse'),
                'opacity': 1
            };
            for (var val in attr) {
                shape.setAttribute(val, attr[val]);
            }
            var drawattr = SVGTools.getPenAttr(shape);
            for (var ps in drawattr) {
                shape.setAttribute(ps, drawattr[ps]);
            }
            div.appendChild(shape);
            return shape;
        }
    }, {
        key: 'addTriangle',
        value: function addTriangle(div, x, y) {
            var shape = document.createElementNS(_Paint2.default.xmlns, 'path');
            var attr = {
                'id': (0, _lib.getIdFor)('path'),
                'opacity': 1
            };
            var cmds = [['M', x, y + 1], ['L', x + 0.5, y], ['L', x + 1, y + 1], ['L', x, y + 1]];
            attr.d = _SVG2Canvas2.default.arrayToString(cmds);
            var drawattr = SVGTools.getPenAttr();
            for (var val in attr) {
                shape.setAttribute(val, attr[val]);
            }
            for (var ps in drawattr) {
                shape.setAttribute(ps, drawattr[ps]);
            }
            div.appendChild(shape);
            return shape;
        }
    }, {
        key: 'addRect',
        value: function addRect(div, x, y) {
            var shape = document.createElementNS(_Paint2.default.xmlns, 'rect');
            var attr = {
                'x': x,
                'y': y,
                'width': 0,
                'height': 0,
                'id': (0, _lib.getIdFor)('rect'),
                'opacity': 1
            };
            for (var val in attr) {
                shape.setAttribute(val, attr[val]);
            }
            var drawattr = SVGTools.getPenAttr(shape);
            for (var ps in drawattr) {
                shape.setAttribute(ps, drawattr[ps]);
            }
            div.appendChild(shape);
            return shape;
        }
    }, {
        key: 'getPolyAttr',
        value: function getPolyAttr() {
            return {
                'fill': 'none',
                'stroke': _Paint2.default.fillcolor,
                'stroke-width': _Paint2.default.strokewidth,
                'stroke-linecap': 'round',
                'opacity': 1,
                'style': 'pointer-events:visiblePainted;'
            };
        }
    }, {
        key: 'getPenAttr',
        value: function getPenAttr() {
            return {
                'fill': 'none',
                'stroke': _Paint2.default.fillcolor,
                'stroke-width': _Paint2.default.strokewidth,
                'opacity': 1,
                'style': 'pointer-events:visiblePainted;'

            };
        }

        ///////////////////////////////////////
        // SVG clones
        ///////////////////////////////////////

    }, {
        key: 'getCopy',
        value: function getCopy(spr) {
            return SVGTools.toObject(SVGTools.svg2string(spr));
        }
    }, {
        key: 'svg2string',
        value: function svg2string(elem) {
            var str = new XMLSerializer().serializeToString(elem);
            var header = '<svg xmlns="' + _Paint2.default.xmlns + '" xmlns:xlink="' + _Paint2.default.xmlnslink + '">';
            str = str.replace(/ href="data:image/g, ' xlink:href="data:image');
            return header + str + '</svg>';
        }
    }, {
        key: 'toObject',
        value: function toObject(str) {
            str.replace(/>\s*</g, '><');
            var xmlDoc = new DOMParser().parseFromString(str, 'text/xml');
            var node = document.importNode(xmlDoc.documentElement.firstChild, true);
            return node;
        }
    }, {
        key: 'rename',
        value: function rename(elem) {
            if (elem == undefined) {
                return;
            }
            var pname = elem.tagName;
            switch (pname) {
                case 'g':
                    if (elem.id) {
                        var name = unescape(elem.id).replace(/[0-9]/g, '').replace(/\s*/g, '');
                        elem.id = (0, _lib.getIdFor)(name);
                    }
                    for (var i = 0; i < elem.childElementCount; i++) {
                        SVGTools.rename(elem.childNodes[i]);
                    }
                    break;
                case 'image':
                    var corner = _Transform2.default.point(elem.getAttribute('x'), elem.getAttribute('y'), window.xform.matrix);
                    elem.setAttributeNS(null, 'x', corner.x);
                    elem.setAttributeNS(null, 'y', corner.y);
                    elem.id = (0, _lib.getIdFor)('image');
                    if (elem.getAttribute('pathUrl')) {
                        var cp = (0, _lib.getIdFor)('clippath');
                        (0, _lib.gn)(elem.getAttribute('pathUrl')).id = cp;
                        elem.setAttribute('pathUrl', cp);
                    }
                    break;
                default:
                    if (elem.id) {
                        name = unescape(elem.id).replace(/[0-9]/g, '').replace(/\s*/g, '');
                        elem.id = (0, _lib.getIdFor)(name);
                    }
                    break;
            }
        }
    }, {
        key: 'saveBackground',
        value: function saveBackground(elem, w, h) {
            var serializer = new XMLSerializer();
            var str = serializer.serializeToString(elem);
            str = str.replace(/ href/g, ' xlink:href');
            var svgdata = '<svg xmlns="' + _Paint2.default.xmlns + '" xmlns:xlink="' + _Paint2.default.xmlnslink + '" viewBox= "0 0 ' + w + ' ' + h + '" width="' + w + 'px" height="' + h + 'px">';
            var comment = document.createComment('Created with Scratch Jr');
            svgdata += serializer.serializeToString(comment);
            svgdata += str;
            svgdata += '</svg>';
            return svgdata.replace(/></g, '>\n<');
        }
    }, {
        key: 'cleanup',
        value: function cleanup(elem) {
            if (elem.childElementCount == 0) {
                if (elem.id != 'layer1') {
                    elem.parentNode.removeChild(elem);
                }
                return;
            }
            for (var i = 0; i < elem.childElementCount; i++) {
                var kid = elem.childNodes[i];
                if (kid.tagName == 'g') {
                    SVGTools.cleanup(kid);
                }
            }
        }
    }, {
        key: 'saveShape',
        value: function saveShape(shape, w, h) {
            SVGTools.cleanup(shape);
            var elem = SVGTools.getCopy(shape);
            var serializer = new XMLSerializer();
            var box = SVGTools.calculateViewBox(elem);
            w = box.width;
            h = box.height;
            var str = serializer.serializeToString(elem);
            str = str.replace(/ href/g, ' xlink:href');
            var svgdata = '<svg xmlns="' + _Paint2.default.xmlns + '" xmlns:xlink="' + _Paint2.default.xmlnslink + '" viewBox= "0 0 ' + w + ' ' + h + '" width="' + w + 'px" height="' + h + 'px">';
            var comment = document.createComment('Created with Scratch Jr');
            svgdata += serializer.serializeToString(comment);
            svgdata += str;
            svgdata += '</svg>';
            return svgdata.replace(/></g, '>\n<');
        }
    }, {
        key: 'calculateViewBox',
        value: function calculateViewBox(elem) {
            var box = SVGTools.getBox(elem, true).rounded();
            if (SVGTools.outsideBounds(box)) {
                return {
                    width: _Paint2.default.workspaceWidth,
                    height: _Paint2.default.workspaceHeight
                };
            }
            box = box.expandBy(20);
            window.xform.setTranslate(-box.x, -box.y);
            _Transform2.default.translateTo(elem, window.xform);
            return box;
        }
    }, {
        key: 'outsideBounds',
        value: function outsideBounds(box) {
            if (box.x < 0) {
                return true;
            }
            if (box.y < 0) {
                return true;
            }
            if (box.width > _Paint2.default.workspaceWidth) {
                return true;
            }
            if (box.height > _Paint2.default.workspaceHeight) {
                return true;
            }
            return false;
        }
    }, {
        key: 'notValidBox',
        value: function notValidBox(box) {
            if (box.x + box.width < 0) {
                return true;
            }
            if (box.y + box.height < 0) {
                return true;
            }
            if (box.x > _Paint2.default.workspaceWidth) {
                return true;
            }
            if (box.y > _Paint2.default.workspaceHeight) {
                return true;
            }
            return false;
        }
    }, {
        key: 'getBoxCenter',
        value: function getBoxCenter(elem) {
            var box = SVGTools.getBox(elem);
            var cx = box.x + box.width / 2;
            var cy = box.y + box.height / 2;
            return {
                x: cx,
                y: cy
            };
        }

        ///////////////////////////////////////
        // Boxes
        //////////////////////////////////////

    }, {
        key: 'getTransformedBox',
        value: function getTransformedBox(elem) {
            var m = _Transform2.default.getCombinedMatrices(elem); // skip rotation matrix
            var box = SVGTools.getBox(elem);
            var p = _Transform2.default.point(box.x, box.y, m);
            box.width = Math.abs(box.width * m.a);
            box.height = Math.abs(box.height * m.d);
            box.x = p.x;
            box.y = p.y;
            if (m.a < 0) {
                box.x -= box.width;
            }
            if (m.d < 0) {
                box.y -= box.height;
            }
            var angle = _Transform2.default.getRotationAngle(elem);
            if (angle != 0) {
                var rot = _Transform2.default.getRotation(elem);
                var list = [];
                list.push(_Transform2.default.point(box.x, box.y, rot.matrix));
                list.push(_Transform2.default.point(box.x + box.width, box.y, rot.matrix));
                list.push(_Transform2.default.point(box.x + box.width, box.y + box.height, rot.matrix));
                list.push(_Transform2.default.point(box.x, box.y + box.height, rot.matrix));
                box = SVGTools.getMinMax(list);
            }
            return box;
        }
    }, {
        key: 'getBox',
        value: function getBox(elem, isSaving) {
            var box = new _Rectangle2.default(0, 0, 0, 0);
            if (elem == undefined) {
                return box;
            }
            switch (elem.tagName) {
                case 'circle':
                    box.x = elem.getAttribute('cx') - elem.getAttribute('r');
                    box.y = elem.getAttribute('cy') - elem.getAttribute('r');
                    box.width = Number(elem.getAttribute('r')) * 2;
                    box.height = Number(elem.getAttribute('r')) * 2;
                    box = box.expandBy(SVGTools.getPenWidthForm(elem));
                    break;
                case 'g':
                case 'svg':
                    if (elem.childElementCount == 0) {
                        return box;
                    }
                    box = SVGTools.getTransformedBox(elem.childNodes[0]);
                    for (var i = 0; i < elem.childElementCount; i++) {
                        if (isSaving && elem.childNodes[i].tagName == 'image') {
                            continue;
                        }
                        var rect = SVGTools.getTransformedBox(elem.childNodes[i]);
                        if (rect.isEmpty()) {
                            continue;
                        }
                        box = box.union(rect);
                    }
                    break;
                case 'ellipse':
                    box.x = elem.getAttribute('cx') - elem.getAttribute('rx');
                    box.y = elem.getAttribute('cy') - elem.getAttribute('ry');
                    box.width = Number(elem.getAttribute('rx')) * 2;
                    box.height = Number(elem.getAttribute('ry')) * 2;
                    box = box.expandBy(SVGTools.getPenWidthForm(elem));
                    break;
                case 'clipPath':
                    box = SVGTools.getTransformedBox(elem.childNodes[0]);
                    break;
                case 'image':
                    box.x = Number(elem.getAttribute('x'));
                    box.y = Number(elem.getAttribute('y'));
                    box.width = Number(elem.getAttribute('width'));
                    box.height = Number(elem.getAttribute('height'));
                    break;
                case 'path':
                    box = SVGTools.getPathBox(elem).expandBy(SVGTools.getPenWidthForm(elem));
                    break;
                case 'line':
                    var x1 = Number(elem.getAttribute('x1'));
                    var x2 = Number(elem.getAttribute('x2'));
                    var y1 = Number(elem.getAttribute('y1'));
                    var y2 = Number(elem.getAttribute('y2'));
                    var minx = Math.min(x1, x2);
                    var maxx = Math.max(x1, x2);
                    var miny = Math.min(y1, y2);
                    var maxy = Math.max(y1, y2);
                    box = new _Rectangle2.default(minx, miny, maxx - minx, maxy - miny).expandBy(SVGTools.getPenWidthForm(elem));
                    break;
                case 'polygon':
                    var points = elem.points;
                    var list = [];
                    for (var j = 0; j < points.numberOfItems; j++) {
                        list.push(points.getItem(j));
                    }
                    box = SVGTools.getMinMax(list).expandBy(SVGTools.getPenWidthForm(elem));
                    break;
            }
            return box;
        }
    }, {
        key: 'getArea',
        value: function getArea(elem) {
            var area = 0;
            var list;
            var sw = Number(elem.getAttribute('stroke-width')) / 2;
            switch (elem.tagName) {
                case 'g':
                    // give an approximantion
                    var box = SVGTools.getBox(elem);
                    area = box.width * box.height;
                    break;
                case 'circle':
                    area = Math.PI * Number(elem.getAttribute('r')) * Number(elem.getAttribute('r'));
                    break;
                case 'ellipse':
                    area = Math.PI * Number(elem.getAttribute('rx')) * Number(elem.getAttribute('ry'));
                    break;
                case 'path':
                    var d;
                    if (_SVG2Canvas2.default.isCompoundPath(elem)) {
                        var paths = elem.getAttribute('d').match(/[M][^M]*/g);
                        d = paths[0];
                    } else {
                        d = elem.getAttribute('d');
                    }
                    d = _Path2.default.isClockWise(d) ? _Path2.default.reverse(d) : d;
                    list = _Path2.default.getAllPoints(d);
                    if (list.length == 2) {
                        list = SVGTools.getPolygon(list[0], list[1], sw);
                    }
                    area = SVGTools.polygonArea(list);
                    break;
                case 'line':
                    var x1 = Number(elem.getAttribute('x1'));
                    var x2 = Number(elem.getAttribute('x2'));
                    var y1 = Number(elem.getAttribute('y1'));
                    var y2 = Number(elem.getAttribute('y2'));
                    var poly = SVGTools.getPolygon({
                        x: x1,
                        y: y1
                    }, {
                        x: x2,
                        y: y2
                    }, sw);
                    area = SVGTools.polygonArea(poly);
                    break;
                case 'polygon':
                    var points = elem.points;
                    list = [];
                    for (var i = 0; i < points.numberOfItems; i++) {
                        list.push(points.getItem(i));
                    }
                    area = SVGTools.polygonArea(list);
                    break;
            }
            return area;
        }
    }, {
        key: 'getPolygon',
        value: function getPolygon(before, here, size) {
            var v1 = _Vector2.default.diff(here, before);
            var pt = _Vector2.default.scale(v1, 0.5);
            var perp = _Vector2.default.perp(pt);
            var unitvector = _Vector2.default.norm(perp);
            var pt1 = _Vector2.default.sum(before, _Vector2.default.scale(unitvector, size));
            var pt4 = _Vector2.default.sum(before, _Vector2.default.scale(unitvector, -size));
            var pt2 = _Vector2.default.sum(here, _Vector2.default.scale(unitvector, size));
            var pt3 = _Vector2.default.sum(here, _Vector2.default.scale(unitvector, -size));
            return [pt1, pt2, pt3, pt4];
        }
    }, {
        key: 'polygonArea',
        value: function polygonArea(list) {
            var xlist = [];
            var ylist = [];
            for (var n = 0; n < list.length; n++) {
                xlist.push(list[n].x);ylist.push(list[n].y);
            }
            var len = list.length;
            var area = 0; // Accumulates area in the loop
            var j = len - 1; // The last vertex is the 'previous' one to the first
            for (var i = 0; i < len; i++) {
                area += (xlist[j] + xlist[i]) * (ylist[j] - ylist[i]);
                j = i; //j is previous vertex to i
            }
            return area / 2;
        }
    }, {
        key: 'getPenWidthForm',
        value: function getPenWidthForm(elem) {
            var res = elem.getAttribute('stroke-width');
            return Number(res).toString() == 'NaN' ? 0 : Number(res);
        }
    }, {
        key: 'getMinMax',
        value: function getMinMax(list) {
            var box = new _Rectangle2.default(0, 0, 0, 0);
            if (list.length < 1) {
                return box;
            }
            var minx = 9999999;
            var miny = 9999999;
            var maxx = -9999999;
            var maxy = -9999999;
            for (var i = 0; i < list.length; i++) {
                if (list[i].x < minx) {
                    minx = list[i].x;
                }
                if (list[i].x > maxx) {
                    maxx = list[i].x;
                }
                if (list[i].y < miny) {
                    miny = list[i].y;
                }
                if (list[i].y > maxy) {
                    maxy = list[i].y;
                }
            }
            box.x = minx;
            box.y = miny;
            box.width = maxx - minx;
            box.height = maxy - miny;
            return box;
        }
    }, {
        key: 'getPathBox',
        value: function getPathBox(elem) {
            var box;
            var data = elem.getAttribute('d');
            var paths = data.match(/[M][^M]*/g);
            if (!paths) {
                paths = [elem.getAttribute('d')];
            }
            for (var j = 0; j < paths.length; j++) {
                var pbox = SVGTools.getOnePathBox(paths[j]);
                if (pbox.isEmpty()) {
                    continue;
                }
                if (!box) {
                    box = pbox;
                } else {
                    box = pbox.union(box);
                }
            }
            return box;
        }
    }, {
        key: 'getOnePathBox',
        value: function getOnePathBox(d) {
            var path = _SVG2Canvas2.default.getCommandList(d);
            var allpoints = [];
            for (var i = 0; i < path.length; i++) {
                var cmd = _SVG2Canvas2.default.getAbsoluteCommand(path[i]);
                if (_SVG2Canvas2.default.acurve) {
                    allpoints.push({
                        x: cmd[1],
                        y: cmd[2]
                    });
                    if (cmd.length > 4) {
                        allpoints.push({
                            x: cmd[3],
                            y: cmd[4]
                        });
                    }
                }
                allpoints.push(_SVG2Canvas2.default.endp);
            }
            var box = SVGTools.getMinMax(allpoints);
            return box;
        }
    }, {
        key: 'onlyKeys',
        value: function onlyKeys(obj) {
            var res = [];
            for (var key in obj) {
                res.push(key);
            }
            return res;
        }

        ///////////////////////////////////
        // image mask
        //////////////////////////////////


    }, {
        key: 'getDataurl',
        value: function getDataurl(copy, w, h) {
            var serializer = new XMLSerializer();
            var header = '<svg  xmlns="' + _Paint2.default.xmlns + '"' + ' viewBox= "0 0 ' + w + ' ' + h + '"' + ' width=' + '"' + w + 'px' + '"' + ' height=' + '"' + h + 'px' + '">';
            var svgdata = header + '\n' + serializer.serializeToString(copy) + '</svg>';
            return 'data:image/svg+xml;base64,' + btoa(svgdata);
        }
    }, {
        key: 'getLayersAbove',
        value: function getLayersAbove(p, index, w, h) {
            var serializer = new XMLSerializer();
            var svgdata = '<svg  xmlns="' + _Paint2.default.xmlns + '"' + ' viewBox= "0 0 ' + w + ' ' + h + '"' + ' width=' + '"' + w + 'px' + '"' + ' height=' + '"' + h + 'px' + '">';
            svgdata += '\n';
            var startat = Math.min(index + 1, p.childElementCount);
            for (var i = startat; i < p.childElementCount; i++) {
                svgdata += serializer.serializeToString(p.childNodes[i]) + '\n';
            }
            svgdata += '</svg>';
            return 'data:image/svg+xml;base64,' + btoa(svgdata);
        }

        /////////////////////////////
        // Cloning
        /////////////////////////////

    }, {
        key: 'getCount',
        value: function getCount(p) {
            var n = 0;
            if (p.tagName == 'g') {
                n += p.childElementCount;
                for (var i = 0; i < p.childElementCount; i++) {
                    var elem = p.childNodes[i];
                    if (elem.tagName == 'g') {
                        n += SVGTools.getCount(elem);
                    }
                }
            }
            return n;
        }
    }, {
        key: 'cloneSVGelement',
        value: function cloneSVGelement(elem) {
            var group = _Layer2.default.findGroup(elem);
            var p = (0, _lib.gn)('layer1');
            if (!p) {
                return;
            }
            window.xform.setTranslate(5, 5);
            var old = [];
            var newlist = [];
            if (SVGTools.getCount(p) > 175) {
                return;
            }
            for (var i = 0; i < group.length; i++) {
                if (SVGTools.getCount(p) > 175) {
                    return;
                }
                var shape = SVGTools.getClonedElement((0, _lib.gn)('layer1'), group[i]);
                if (!shape) {
                    continue;
                }
                if (shape.tagName == 'g') {
                    continue;
                }
                old.push(group[i].id);
                newlist.push(shape.id);
                if (group[i].getAttribute('id').indexOf('Boder') > -1) {
                    var name = group[i].getAttribute('id').split('Border')[0];
                    var k = old.indexOf(name);
                    if (k > -1) {
                        shape.setAttribute('id', newlist[k] + 'Border');
                    }
                }
                if (group[i].getAttribute('relatedto')) {
                    var n = old.indexOf(group[i].getAttribute('relatedto'));
                    if (n > -1) {
                        shape.setAttribute('relatedto', newlist[n]);
                    }
                }
            }
            var elems = SVGTools.getFlatten((0, _lib.gn)('layer1'));
            SVGTools.removeDuplicates(elems);
        }
    }, {
        key: 'removeDuplicates',
        value: function removeDuplicates(list) {
            for (var i = 0; i < list.length; i++) {
                var mt = (0, _lib.gn)(list[i]);
                if (!mt) {
                    continue;
                }
                if (!mt.parentNode) {
                    continue;
                }
                if (mt.tagName != 'path') {
                    continue;
                }
                for (var j = i + 1; j < list.length; j++) {
                    var elem = (0, _lib.gn)(list[j]);
                    if (!elem) {
                        continue;
                    }
                    if (!elem.parentNode) {
                        continue;
                    }
                    if (elem.tagName != 'path') {
                        continue;
                    }
                    if (elem.getAttribute('d') == mt.getAttribute('d')) {
                        if (mt.id.indexOf('pathborder_image') > -1 && elem.id.indexOf('pathborder_image') > -1) {
                            var imageid = elem.id.substring(String('pathborder_').length, elem.id.length);
                            var group = (0, _lib.gn)('group_' + imageid);
                            if (group) {
                                group.parentNode.removeChild(group);
                            }
                        }
                        elem.parentNode.removeChild(elem);
                    }
                }
            }
        }
    }, {
        key: 'getFlatten',
        value: function getFlatten(p) {
            var res = [];
            for (var i = 0; i < p.childElementCount; i++) {
                var elem = p.childNodes[i];

                if (elem.id.indexOf('group_image_') > -1) {
                    continue;
                }
                if (elem.tagName == 'g') {
                    res = res.concat(SVGTools.getFlatten(elem));
                } else {
                    res.push(elem.id);
                }
            }
            return res;
        }
    }, {
        key: 'getClonedElement',
        value: function getClonedElement(p, elem) {
            if (elem.id.indexOf('pathborder_image_') > -1) {
                return null;
            }
            if (elem.tagName == 'image') {
                return null;
            }
            if (elem.tagName == 'clipPath') {
                return null;
            }
            if (elem.tagName == 'g') {
                var mt = _SVGImage2.default.getImage(elem);
                if (mt) {
                    return _SVGImage2.default.cloneImage(p, mt);
                }
                var old = [];
                var newlist = [];
                var g = SVGTools.createGroup(p, (0, _lib.getIdFor)('group'));
                for (var i = 0; i < elem.childElementCount; i++) {
                    var shape = SVGTools.getClonedElement(g, elem.childNodes[i]);
                    if (!shape) {
                        continue;
                    }
                    old.push(elem.childNodes[i].id);
                    newlist.push(shape.id);
                    if (elem.childNodes[i].getAttribute('id').indexOf('Border') > -1) {
                        var name = elem.childNodes[i].getAttribute('id').split('Border')[0];
                        var k = old.indexOf(name);
                        if (k > -1) {
                            shape.setAttribute('id', newlist[k] + 'Border');
                        }
                    }
                }
                return g;
            } else {
                return SVGTools.getClone(p, elem);
            }
        }
    }, {
        key: 'getClone',
        value: function getClone(p, elem) {
            var attr = attributeTable[elem.tagName];
            var drawattr = attributePenTable[elem.tagName];
            var shape = document.createElementNS(_Paint2.default.xmlns, elem.tagName);
            p.appendChild(shape);
            attr = attr.concat(drawattr);
            for (var i = 0; i < attr.length; i++) {
                if (elem.getAttribute(attr[i]) == null) {
                    continue;
                }
                shape.setAttribute(attr[i], elem.getAttribute(attr[i]));
            }
            if (elem.getAttribute('stroke-linecap')) {
                shape.setAttribute('stroke-linecap', elem.getAttribute('stroke-linecap'));
            }
            shape.setAttribute('id', (0, _lib.getIdFor)(elem.tagName));
            var ang = _Transform2.default.getRotationAngle(elem);
            var mtx = undefined;
            if (_Transform2.default.hasScaleMatrix(elem)) {
                mtx = _Transform2.default.getScaleMatrix(elem);
            }
            if (ang != 0) {
                _Transform2.default.applyRotation(shape, ang);
            }
            if (mtx) {
                _Transform2.default.applyMatrix(shape, mtx);
            }
            _Transform2.default.translateTo(shape, window.xform);
            return shape;
        }

        ///////////////////////////////
        // Water Mark
        ///////////////////////////////

    }, {
        key: 'getWatermark',
        value: function getWatermark(shape, color) {
            var svg = SVGTools.getCopy(shape);
            SVGTools.removeExtras(svg);
            SVGTools.changeShape(svg, color);
            return svg;
        }
    }, {
        key: 'changeShape',
        value: function changeShape(svg, color) {
            for (var i = 0; i < svg.childElementCount; i++) {
                var elem = svg.childNodes[i];
                if (elem.tagName == 'g') {
                    SVGTools.changeShape(elem, color);
                } else {
                    SVGTools.setObjectWaterMark(elem, color);
                }
            }
        }
    }, {
        key: 'removeExtras',
        value: function removeExtras(svg) {
            var n = 0;
            var valid = n < svg.childElementCount;
            while (valid) {
                var elem = svg.childNodes[n];
                if (elem.nodeName == 'image' || elem.nodeName == 'clipPath') {
                    svg.removeChild(elem);
                } else {
                    if (elem.tagName == 'g') {
                        SVGTools.removeExtras(elem);
                    }
                    n++;
                }
                valid = n < svg.childElementCount;
            }
        }
    }, {
        key: 'setObjectWaterMark',
        value: function setObjectWaterMark(elem, color) {
            var fill = elem.getAttribute('fill');
            var stroke = elem.getAttribute('stroke') ? color : elem.id.indexOf('Draw') > -1 ? color : 'none';
            var lw = elem.getAttribute('stroke-width') ? Number(elem.getAttribute('stroke-width')) : Number(_SVG2Canvas2.default.strokevalues['stroke-width']);
            var attr = {
                'fill': 'white',
                'stroke': stroke,
                'stroke-width': lw,
                'stroke-miterlimit': elem.getAttribute('stroke-miterlimit') ? elem.getAttribute('stroke-miterlimit') : 4,
                'stroke-linecap': 'round',
                'stroke-linejoin': 'round'
            };
            attr.fill = fill == 'none' ? 'none' : 'white';
            if (fillWithColor()) {
                attr.fill = color;
            }

            function fillWithColor() {
                if (!fill) {
                    return true;
                }
                if (fill == 'none') {
                    return false;
                }
                if (elem.id.indexOf('Border') > -1) {
                    return true;
                }
                if (elem.id.indexOf('Body') > -1) {
                    return false;
                }
                if (elem.id.indexOf('Skip') > -1) {
                    return false;
                }
                if (elem.id.indexOf('Draw') > -1) {
                    return false;
                }
                if (fill == '#080808' || fill == '#000000' || fill == 'rgba(0, 0, 0, 0)') {
                    return true;
                } //  shades of black
                // you can take this out if you rename dark layers xyzBorder
                var hsb = (0, _lib.rgb2hsb)(fill);
                var brightness = hsb[2];
                if (brightness < 0.25) {
                    return true;
                }
                var dist = _Vector2.default.len(_Vector2.default.diff({
                    x: 0.5,
                    y: 0.5
                }, {
                    x: hsb[1],
                    y: hsb[2]
                }));
                return dist < 0.25;
            }
            for (var val in attr) {
                elem.setAttribute(val, attr[val]);
            }
        }
    }, {
        key: 'isCompoundPath',
        value: function isCompoundPath(elem) {
            if (elem.tagName != 'path') {
                return false;
            }
            return _SVG2Canvas2.default.isCompoundPath(elem);
        }
    }, {
        key: 'attributeTable',

        // Getters/setters for globally used properties
        get: function get() {
            return attributeTable;
        }
    }, {
        key: 'attributePenTable',
        get: function get() {
            return attributePenTable;
        }
    }]);

    return SVGTools;
}();

exports.default = SVGTools;

/***/ }),

/***/ "./src/painteditor/Transform.js":
/*!**************************************!*\
  !*** ./src/painteditor/Transform.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); //////////////////////////////////
// SVG Transforms
//////////////////////////////////

var _SVGTools = __webpack_require__(/*! ./SVGTools */ "./src/painteditor/SVGTools.js");

var _SVGTools2 = _interopRequireDefault(_SVGTools);

var _SVG2Canvas = __webpack_require__(/*! ../utils/SVG2Canvas */ "./src/utils/SVG2Canvas.js");

var _SVG2Canvas2 = _interopRequireDefault(_SVG2Canvas);

var _Paint = __webpack_require__(/*! ./Paint */ "./src/painteditor/Paint.js");

var _Paint2 = _interopRequireDefault(_Paint);

var _Vector = __webpack_require__(/*! ../geom/Vector */ "./src/geom/Vector.js");

var _Vector2 = _interopRequireDefault(_Vector);

var _lib = __webpack_require__(/*! ../utils/lib */ "./src/utils/lib.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Transform = function () {
    function Transform() {
        _classCallCheck(this, Transform);
    }

    _createClass(Transform, null, [{
        key: 'getList',
        value: function getList(elem) {
            if (elem == undefined) {
                return null;
            }
            if (elem.transform) {
                return elem.transform.baseVal;
            } else if (elem.gradientTransform) {
                return elem.gradientTransform.baseVal;
            }
            return null;
        }
    }, {
        key: 'extract',
        value: function extract(elem, n) {
            var tl = Transform.getList(elem);
            for (var i = 0; i < tl.numberOfItems; ++i) {
                if (tl.getItem(i).type == n) {
                    return tl.getItem(i);
                }
            }
            return _Paint2.default.root.createSVGTransform();
        }
    }, {
        key: 'getIndex',
        value: function getIndex(elem, n) {
            var tl = Transform.getList(elem);
            for (var i = 0; i < tl.numberOfItems; ++i) {
                if (tl.getItem(i).type == n) {
                    return i;
                }
            }
            return null;
        }
    }, {
        key: 'point',
        value: function point(x, y, m) {
            return Transform.newPoint(x, y).matrixTransform(m);
        }
    }, {
        key: 'newPoint',
        value: function newPoint(x, y) {
            var pt = _Paint2.default.root.createSVGPoint();
            pt.x = x;
            pt.y = y;
            return pt;
        }

        ////////////////////////////
        // Element translation
        ////////////////////////////

    }, {
        key: 'translateTo',
        value: function translateTo(elem, xform) {
            if (elem == undefined) {
                return;
            }
            var pname = elem.tagName;
            //	console.log ("translateTo", elem.id, elem.tagName, xform.matrix);
            switch (pname) {
                case 'g':
                    for (var i = 0; i < elem.childElementCount; i++) {
                        if (Transform.getList(elem.childNodes[i]) != null) {
                            Transform.translateTo(elem.childNodes[i], xform, Transform.getScaleMatrix(elem.childNodes[i]));
                        }
                    }
                    break;
                case 'ellipse':
                case 'circle':
                    var center = Transform.point(elem.getAttribute('cx'), elem.getAttribute('cy'), xform.matrix);
                    elem.setAttributeNS(null, 'cx', center.x);
                    elem.setAttributeNS(null, 'cy', center.y);
                    break;
                case 'line':
                    Transform.line(elem, xform.matrix);
                    break;
                case 'path':
                    Transform.applyToCmds(elem, xform.matrix);
                    break;
                case 'clipPath':
                    Transform.translateTo(elem.childNodes[0], xform);
                    break;
                case 'image':
                case 'rect':
                    var corner = Transform.point(Number(elem.getAttribute('x')), Number(elem.getAttribute('y')), xform.matrix);
                    elem.setAttributeNS(null, 'x', corner.x);
                    elem.setAttributeNS(null, 'y', corner.y);
                    break;
                case 'polygon':
                case 'polyline':
                    var points = elem.points;
                    var delta = {
                        x: xform.matrix.e,
                        y: xform.matrix.f
                    };
                    for (var j = 0; j < points.numberOfItems; j++) {
                        var p = _Vector2.default.sum(points.getItem(j), delta);
                        points.getItem(j).x = p.x;
                        points.getItem(j).y = p.y;
                    }
                    break;
            }
            Transform.updateAll(elem);
            Transform.updateRotationCenter(elem);
        }
    }, {
        key: 'updateRotationCenter',
        value: function updateRotationCenter(elem) {
            if (Transform.getRotationAngle(elem) == 0) {
                return;
            }
            var angle = Transform.getRotationAngle(elem);
            var rot = Transform.extract(elem, 4);
            var mtx = Transform.getCombinedMatrices(elem); // skips rotation matrices
            var center = _SVGTools2.default.getBoxCenter(elem);
            center = Transform.point(center.x, center.y, mtx);
            rot.setRotate(angle, center.x, center.y);
        }
    }, {
        key: 'line',
        value: function line(elem, mtx) {
            var pt = _Paint2.default.root.createSVGPoint();
            pt.x = Number(elem.getAttribute('x1'));
            pt.y = Number(elem.getAttribute('y1'));
            pt = pt.matrixTransform(mtx);
            elem.setAttribute('x1', pt.x);
            elem.setAttribute('y1', pt.y);
            pt.x = Number(elem.getAttribute('x2'));
            pt.y = Number(elem.getAttribute('y2'));
            pt = pt.matrixTransform(mtx);
            elem.setAttribute('x2', pt.x);
            elem.setAttribute('y2', pt.y);
        }
    }, {
        key: 'eleminateTranslates',
        value: function eleminateTranslates(elem) {
            var tl = Transform.getList(elem);
            for (var i = 0; i < tl.numberOfItems; ++i) {
                if (tl.getItem(i).type == 2) {
                    var trnsf = tl.getItem(i);
                    tl.removeItem(i);
                    if (elem.nodeName == 'image') {
                        var clip = (0, _lib.gn)('clip_' + elem.id);
                        if (clip) {
                            Transform.translateTo(clip.childNodes[0], trnsf);
                        }
                    }
                    Transform.translateTo(elem, trnsf);
                }
            }
        }
    }, {
        key: 'eliminateAll',
        value: function eliminateAll(spr) {
            var tl = Transform.getList(spr);
            if (tl && tl.numberOfItems > 0) {
                var k = tl.numberOfItems;
                while (k--) {
                    tl.removeItem(k);
                }
            }
            return tl;
        }
    }, {
        key: 'combineAll',
        value: function combineAll(elem) {
            var tl = Transform.getList(elem);
            if (tl == null) {
                return _Paint2.default.root.createSVGMatrix();
            }
            var n = tl.numberOfItems;
            var m = _Paint2.default.root.createSVGMatrix();
            for (var i = 0; i < n; i++) {
                var mtom = tl.getItem(i);
                m = m.multiply(mtom.matrix);
            }
            return m;
        }
    }, {
        key: 'appendForMove',
        value: function appendForMove(elem, t) {
            var tl = Transform.getList(elem);
            if (tl == null) {
                return;
            }
            if (tl.numberOfItems == 0) {
                tl.appendItem(t);
            } else {
                tl.insertItemBefore(t, 0);
            }
        }
    }, {
        key: 'getTranslateTransform',
        value: function getTranslateTransform() {
            var res = _Paint2.default.root.createSVGTransform();
            res.setTranslate(0, 0);
            return res;
        }
    }, {
        key: 'applyRotation',
        value: function applyRotation(elem, angle) {
            var rot = _Paint2.default.root.createSVGTransform();
            var box = _SVGTools2.default.getBox(elem);
            var cx = box.x + box.width / 2;
            var cy = box.y + box.height / 2;
            rot.setRotate(angle, cx, cy);
            Transform.getList(elem).appendItem(rot);
        }

        //////////////////////////////////
        // SVG Transforms
        //////////////////////////////////

    }, {
        key: 'getRotationAngle',
        value: function getRotationAngle(elem, to_rad) {
            var tl = Transform.getList(elem);
            if (!tl) {
                return 0;
            }
            var num = tl.numberOfItems;
            for (var i = 0; i < num; ++i) {
                var xform = tl.getItem(i);
                if (xform.type == 4) {
                    return to_rad ? xform.angle * _lib.DEGTOR : xform.angle;
                }
            }
            return 0.0;
        }
    }, {
        key: 'getRotation',
        value: function getRotation(elem) {
            //console.log ("Transform.getRotation", elem);
            var tl = Transform.getList(elem);
            var num = tl.numberOfItems;
            for (var i = 0; i < num; ++i) {
                var xform = tl.getItem(i);
                if (xform.type == 4) {
                    return xform;
                }
            }
            var rot = _Paint2.default.root.createSVGTransform();
            var center = _SVGTools2.default.getBoxCenter(elem);
            rot.setRotate(0, center.x, center.y);

            if (tl.numberOfItems == 0) {
                Transform.getList(elem).appendItem(rot);
            } else {
                Transform.getList(elem).insertItemBefore(rot, 0);
            }
            return rot;
        }
    }, {
        key: 'getValid',
        value: function getValid(elem) {
            if (!elem) {
                return;
            }
            var tl = Transform.getList(elem);
            if (!tl) {
                return null;
            }
            if (tl && tl.numberOfItems > 0) {
                var k = tl.numberOfItems;
                while (k--) {
                    var xform = tl.getItem(k);
                    if (xform.type == 0) {
                        tl.removeItem(k);
                    }
                    if (xform.matrix.isIdentity()) {
                        tl.removeItem(k);
                    } else if (xform.type == 4) {
                        // remove zero-degree rotations
                        if (xform.angle == 0) {
                            tl.removeItem(k);
                        }
                        if (xform.angle == 360) {
                            tl.removeItem(k);
                        }
                    }
                }
                if (tl.numberOfItems == 1 && Transform.getRotationAngle(elem)) {
                    return null;
                }
            }
            // if this element had no transforms, we are done
            if (tl.numberOfItems == 0) {
                if (elem.getAttribute('transform')) {
                    elem.removeAttribute('transform');
                }
                return null;
            }
            return tl;
        }
    }, {
        key: 'getCombinedMatrices',
        value: function getCombinedMatrices(elem) {
            var tl = Transform.getList(elem);
            if (tl == null) {
                return _Paint2.default.root.createSVGMatrix();
            }
            var n = tl.numberOfItems;
            var m = _Paint2.default.root.createSVGMatrix();
            for (var i = 0; i < n; i++) {
                var mtom = tl.getItem(i);
                if (mtom.type == 4) {
                    continue; // skip rotation transform
                } else {
                    m = m.multiply(mtom.matrix);
                }
            }
            return m;
        }
    }, {
        key: 'hasScaleMatrix',
        value: function hasScaleMatrix(elem) {
            var tl = Transform.getList(elem);
            if (tl == null) {
                return false;
            }
            for (var i = 0; i < tl.numberOfItems; ++i) {
                if (tl.getItem(i).type == 3) {
                    return true;
                }
            }
            return false;
        }
    }, {
        key: 'getScaleMatrix',
        value: function getScaleMatrix(e) {
            var tl = Transform.getList(e);
            var scaleIndex = Transform.getIndex(e, 3);
            if (scaleIndex != null) {
                return tl.getItem(scaleIndex).matrix;
            }
            return _Paint2.default.root.createSVGMatrix();
        }
    }, {
        key: 'updateAll',
        value: function updateAll(elem) {
            var newtl = Transform.getList(elem);
            if (newtl && newtl.numberOfItems == 0) {
                elem.removeAttribute('transform');
            }
        }
    }, {
        key: 'applyMatrix',
        value: function applyMatrix(elem, matrix) {
            var m = _Paint2.default.root.createSVGTransform();
            m.setMatrix(matrix);
            Transform.getList(elem).appendItem(m);
        }

        ////////////////////////////////////////////////////////////
        // Paths data structure
        ////////////////////////////////////////////////////////////

    }, {
        key: 'applyToCmds',
        value: function applyToCmds(shape, mtx) {
            var d = shape.getAttribute('d');
            var list = _SVG2Canvas2.default.getCommandList(d);
            var plist = [];
            if (!list) {
                return;
            }
            for (var j = 0; j < list.length; j++) {
                var cmd = list[j];
                cmd = Transform.getModifiedCmd(cmd, mtx);
                plist.push(cmd);
            }
            var path = _SVG2Canvas2.default.arrayToString(plist);
            shape.setAttribute('d', path);
        }
    }, {
        key: 'getModifiedCmd',
        value: function getModifiedCmd(cmd, mtx) {
            var pt = Transform.newPoint(0, 0);
            if (cmd.length < 2) {
                return cmd;
            }
            if (cmd.length < 3) {
                if (cmd[0].toLowerCase() == 'h') {
                    pt.x = cmd[1];
                    cmd[1] = pt.matrixTransform(mtx).x;
                } else {
                    pt.y = cmd[1];
                    cmd[1] = pt.matrixTransform(mtx).y;
                }
                return cmd;
            }
            for (var i = 1; i < cmd.length; i += 2) {
                pt.x = cmd[i];
                pt.y = cmd[i + 1];
                pt = pt.matrixTransform(mtx);
                cmd[i] = pt.x;
                cmd[i + 1] = pt.y;
            }
            return cmd;
        }

        ////////////////////////////////////////////////
        // Element Rotation
        ///////////////////////////////////////////////

    }, {
        key: 'rotateFromPoint',
        value: function rotateFromPoint(erot, node) {
            var pname = node.tagName;
            var rot = Transform.getRotation(node);
            var c, p, delta, mtx, cx, cy;
            switch (pname) {
                case 'g':
                    for (var i = 0; i < node.childElementCount; i++) {
                        Transform.rotateFromPoint(erot, node.childNodes[i]);
                    }
                    if (node.getAttribute('transform')) {
                        node.removeAttribute('transform');
                    }
                    break;
                case 'clipPath':
                    // it is done in the image processing
                    break;
                case 'image':
                case 'rect':
                    c = _SVGTools2.default.getBoxCenter(node);
                    p = Transform.point(c.x, c.y, erot.matrix);
                    delta = _Vector2.default.diff(p, c);
                    mtx = _Paint2.default.root.createSVGMatrix();
                    mtx.e = delta.x;
                    mtx.f = delta.y;
                    var pt = _Paint2.default.root.createSVGPoint();
                    pt.x = Number(node.getAttribute('x'));
                    pt.y = Number(node.getAttribute('y'));
                    pt = pt.matrixTransform(mtx);
                    var imgdelta = _Vector2.default.diff({
                        x: pt.x,
                        y: pt.y
                    }, {
                        x: node.getAttribute('x'),
                        y: node.getAttribute('y')
                    });
                    node.setAttribute('x', pt.x);
                    node.setAttribute('y', pt.y);
                    if (pname == 'image' && _Vector2.default.len(imgdelta) > 0) {
                        var clip = (0, _lib.gn)('pathmask_' + node.id);
                        if (clip) {
                            if (clip.getAttribute('transform')) {
                                clip.removeAttribute('transform');
                            }
                            var cmtx = _Paint2.default.root.createSVGMatrix();
                            cmtx.e = imgdelta.x;
                            cmtx.f = imgdelta.y;
                            Transform.applyToCmds(clip, cmtx);
                        }
                    }
                    break;
                case 'circle':
                case 'ellipse':
                    cx = Number(node.getAttribute('cx'));
                    cy = Number(node.getAttribute('cy'));
                    p = Transform.point(cx, cy, erot.matrix);
                    var attr = {
                        'cx': p.x,
                        'cy': p.y
                    };
                    for (var val in attr) {
                        node.setAttributeNS(null, val, Math.round(attr[val] * 100) / 100);
                    }
                    break;
                case 'line':
                    c = _SVGTools2.default.getBoxCenter(node);
                    p = Transform.point(c.x, c.y, erot.matrix);
                    delta = _Vector2.default.diff(p, c);
                    mtx = _Paint2.default.root.createSVGMatrix();
                    mtx.e = delta.x;
                    mtx.f = delta.y;
                    Transform.line(node, mtx);
                    break;
                case 'path':
                    c = _SVGTools2.default.getBoxCenter(node);
                    p = Transform.point(c.x, c.y, erot.matrix);
                    delta = _Vector2.default.diff(p, c);
                    mtx = _Paint2.default.root.createSVGMatrix();
                    mtx.e = delta.x;
                    mtx.f = delta.y;
                    Transform.applyToCmds(node, mtx);
                    break;
                case 'polygon':
                case 'polyline':
                    c = _SVGTools2.default.getBoxCenter(node);
                    p = Transform.point(c.x, c.y, erot.matrix);
                    delta = _Vector2.default.diff(p, c);
                    mtx = _Paint2.default.root.createSVGMatrix();
                    mtx.e = delta.x;
                    mtx.f = delta.y;
                    var points = node.points;
                    for (var j = 0; j < points.numberOfItems; j++) {
                        p = Transform.point(points.getItem(j).x, points.getItem(j).y, mtx);
                        points.getItem(j).x = p.x;
                        points.getItem(j).y = p.y;
                    }
                    break;
            }
            if (pname == 'g') {
                return;
            }
            if (pname == 'clipPath') {
                return;
            }
            rot = Transform.getRotation(node);
            var box = _SVGTools2.default.getBox(node);
            cx = box.x + box.width / 2;
            cy = box.y + box.height / 2;
            rot.setRotate(erot.angle + rot.angle, cx, cy);
            Transform.updateRotationCenter(node);
            if (pname == 'path') {
                Transform.applyToCmds(node, Transform.combineAll(node));
                Transform.eliminateAll(node);
            }
        }
    }]);

    return Transform;
}();

exports.default = Transform;


SVGMatrix.prototype.isIdentity = function () {
    return this.a == 1 && this.b == 0 && this.c == 0 && this.d == 1 && this.e == 0 && this.f == 0;
};

/***/ }),

/***/ "./src/tablet/Android.js":
/*!*******************************!*\
  !*** ./src/tablet/Android.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

//////////////////////////////////////////////////
//  Android interface functions
//  AndroidInterface will be the class defined for all the native function calls
//////////////////////////////////////////////////

var mediacounter = 0;

var Android = function () {
    function Android() {
        _classCallCheck(this, Android);
    }

    _createClass(Android, null, [{
        key: 'stmt',

        // Database functions
        value: function stmt(json, fcn) {
            var result = AndroidInterface.database_stmt(JSON.stringify(json));
            if (typeof fcn !== 'undefined') {
                fcn(result);
            }
        }
    }, {
        key: 'query',
        value: function query(json, fcn) {
            var result = AndroidInterface.database_query(JSON.stringify(json));
            if (typeof fcn !== 'undefined') {
                fcn(result);
            }
        }

        // IO functions

    }, {
        key: 'cleanassets',
        value: function cleanassets(ft, fcn) {
            AndroidInterface.io_cleanassets(ft);fcn();
        }
    }, {
        key: 'getmedia',
        value: function getmedia(file, fcn) {
            mediacounter++;
            var nextStep = function nextStep(file, key, whenDone) {
                var result = AndroidInterface.io_getmedialen(file, key);
                Android.processdata(key, 0, result, '', whenDone);
            };
            nextStep(file, mediacounter, fcn);
        }
    }, {
        key: 'getmediadata',
        value: function getmediadata(key, offset, len, fcn) {
            var result = AndroidInterface.io_getmediadata(key, offset, len);
            if (fcn) {
                fcn(result);
            }
        }
    }, {
        key: 'processdata',
        value: function processdata(key, off, len, oldstr, fcn) {
            if (len == 0) {
                Android.getmediadone(key);
                fcn(oldstr);
                return;
            }
            var newlen = len < 100000 ? len : 100000;
            Android.getmediadata(key, off, newlen, function (str) {
                Android.processdata(key, off + newlen, len - newlen, oldstr + str, fcn);
            });
        }
    }, {
        key: 'getsettings',
        value: function getsettings(fcn) {
            var result = AndroidInterface.io_getsettings();
            if (fcn) {
                fcn(result);
            }
        }
    }, {
        key: 'getmediadone',
        value: function getmediadone(file, fcn) {
            var result = AndroidInterface.io_getmediadone(file);
            if (fcn) {
                fcn(result);
            }
        }
    }, {
        key: 'setmedia',
        value: function setmedia(str, ext, fcn) {
            var result = AndroidInterface.io_setmedia(str, ext);
            if (fcn) {
                fcn(result);
            }
        }
    }, {
        key: 'setmedianame',
        value: function setmedianame(str, name, ext, fcn) {
            var result = AndroidInterface.io_setmedianame(str, name, ext);
            if (fcn) {
                fcn(result);
            }
        }
    }, {
        key: 'getmd5',
        value: function getmd5(str, fcn) {
            var result = AndroidInterface.io_getmd5(str);
            if (fcn) {
                fcn(result);
            }
        }
    }, {
        key: 'remove',
        value: function remove(str, fcn) {
            var result = AndroidInterface.io_remove(str);
            if (fcn) {
                fcn(result);
            }
        }
    }, {
        key: 'getfile',
        value: function getfile(str, fcn) {
            var result = AndroidInterface.io_getfile(str);
            if (fcn) {
                fcn(result);
            }
        }
    }, {
        key: 'setfile',
        value: function setfile(name, str, fcn) {
            var result = AndroidInterface.io_setfile(name, btoa(str));
            if (fcn) {
                fcn(result);
            }
        }

        // Sound functions

    }, {
        key: 'registerSound',
        value: function registerSound(dir, name, fcn) {
            var result = AndroidInterface.io_registersound(dir, name);
            if (fcn) {
                fcn(result);
            }
        }
    }, {
        key: 'playSound',
        value: function playSound(name, fcn) {
            var result = AndroidInterface.io_playsound(name);
            if (fcn) {
                fcn(result);
            }
        }
    }, {
        key: 'stopSound',
        value: function stopSound(name, fcn) {
            var result = AndroidInterface.io_stopsound(name);
            if (fcn) {
                fcn(result);
            }
        }

        // Web Wiew delegate call backs

    }, {
        key: 'sndrecord',
        value: function sndrecord(fcn) {
            var result = AndroidInterface.recordsound_recordstart();
            if (fcn) {
                fcn(result);
            }
        }
    }, {
        key: 'recordstop',
        value: function recordstop(fcn) {
            var result = AndroidInterface.recordsound_recordstop();
            if (fcn) {
                fcn(result);
            }
        }
    }, {
        key: 'volume',
        value: function volume(fcn) {
            var result = AndroidInterface.recordsound_volume();
            if (fcn) {
                fcn(result);
            }
        }
    }, {
        key: 'startplay',
        value: function startplay(fcn) {
            var result = AndroidInterface.recordsound_startplay();
            if (fcn) {
                fcn(result);
            }
        }
    }, {
        key: 'stopplay',
        value: function stopplay(fcn) {
            var result = AndroidInterface.recordsound_stopplay();
            if (fcn) {
                fcn(result);
            }
        }
    }, {
        key: 'recorddisappear',
        value: function recorddisappear(b, fcn) {
            var result = AndroidInterface.recordsound_recordclose(b);
            if (fcn) {
                fcn(result);
            }
        }

        // camera functions

    }, {
        key: 'hascamera',
        value: function hascamera() {
            return AndroidInterface.scratchjr_cameracheck();
        }
    }, {
        key: 'startfeed',
        value: function startfeed(data, fcn) {
            var str = JSON.stringify(data);
            var result = AndroidInterface.scratchjr_startfeed(str);
            if (fcn) {
                fcn(result);
            }
        }
    }, {
        key: 'stopfeed',
        value: function stopfeed(fcn) {
            var result = AndroidInterface.scratchjr_stopfeed();
            if (fcn) {
                fcn(result);
            }
        }
    }, {
        key: 'choosecamera',
        value: function choosecamera(mode, fcn) {
            var result = AndroidInterface.scratchjr_choosecamera(mode);
            if (fcn) {
                fcn(result);
            }
        }
    }, {
        key: 'captureimage',
        value: function captureimage(fcn) {
            AndroidInterface.scratchjr_captureimage(fcn);
        }
    }, {
        key: 'hidesplash',
        value: function hidesplash(fcn) {
            // just call funct, splash is hidden in native code
            if (fcn) {
                fcn();
            }
        }

        ///////////////
        // Sharing
        ///////////////

    }, {
        key: 'createZipForProject',
        value: function createZipForProject(projectData, metadata, name, fcn) {
            var fullName = AndroidInterface.createZipForProject(projectData, JSON.stringify(metadata), name);
            // console.log(fullName);
            if (fcn) {
                fcn(fullName);
            }
        }

        // Called on the JS side to trigger native UI for project sharing.
        // fileName: name for the file to share
        // emailSubject: subject text to use for an email
        // emailBody: body HTML to use for an email
        // shareType: 0 for Email; 1 for Airdrop
        // b64data: base-64 encoded .SJR file to share

    }, {
        key: 'sendSjrToShareDialog',
        value: function sendSjrToShareDialog(fileName, emailSubject, emailBody, shareType) {
            AndroidInterface.sendSjrUsingShareDialog(fileName, emailSubject, emailBody, shareType);
        }

        // // Called on the Objective-C side.  The argument is a base64-encoded .SJR file,
        // // to be unzipped, processed, and stored.
        // static loadProjectFromSjr (b64data) {
        //     try {
        //         IO.loadProjectFromSjr(b64data);
        //     } catch (err) {
        //         var errorMessage = 'Couldn\'t load share -- project data corrupted. ' + err.message;
        //         Alert.open(gn('frame'), gn('frame'), errorMessage, '#ff0000');
        //         console.log(err); // eslint-disable-line no-console
        //         return 0;
        //     }
        //     return 1;
        // }

    }, {
        key: 'registerLibraryAssets',
        value: function registerLibraryAssets(version, assets, fcn) {
            AndroidInterface.registerLibraryAssets(version, assets);
            fcn && fcn();
        }
    }, {
        key: 'duplicateAsset',
        value: function duplicateAsset(folder, name, fcn) {
            AndroidInterface.duplicateAsset(folder, name);
            fcn && fcn();
        }

        // Name of the device/iPad to display on the sharing dialog page
        // fcn is called with the device name as an arg

    }, {
        key: 'deviceName',
        value: function deviceName(fcn) {
            fcn(AndroidInterface.deviceName());
        }
    }, {
        key: 'analyticsEvent',
        value: function analyticsEvent(category, action, label) {
            AndroidInterface.analyticsEvent(category, action, label);
        }
    }, {
        key: 'setAnalyticsPlacePref',
        value: function setAnalyticsPlacePref(preferredPlace) {
            AndroidInterface.setAnalyticsPlacePref(preferredPlace);
        }
    }, {
        key: 'setAnalyticsPref',
        value: function setAnalyticsPref(key, value) {
            AndroidInterface.setAnalyticsPref(key, value);
        }

        // // Web Wiew delegate call backs
        //
        // static pageError (desc) {
        //     console.log('XCODE ERROR:', desc); // eslint-disable-line no-console
        //     if (window.location.href.indexOf('home.html') > -1) {
        //         if (Lobby.errorTimer) {
        //             Lobby.errorLoading(desc);
        //         }
        //     }
        // }

    }]);

    return Android;
}();

// // Expose Android methods for ScratchJr tablet sharing callbacks
// window.Android = Android;


exports.default = Android;

/***/ }),

/***/ "./src/tablet/IO.js":
/*!**************************!*\
  !*** ./src/tablet/IO.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _OS = __webpack_require__(/*! ./OS */ "./src/tablet/OS.js");

var _OS2 = _interopRequireDefault(_OS);

var _MediaLib = __webpack_require__(/*! ./MediaLib */ "./src/tablet/MediaLib.js");

var _MediaLib2 = _interopRequireDefault(_MediaLib);

var _lib = __webpack_require__(/*! ../utils/lib */ "./src/utils/lib.js");

var _SVG2Canvas = __webpack_require__(/*! ../utils/SVG2Canvas */ "./src/utils/SVG2Canvas.js");

var _SVG2Canvas2 = _interopRequireDefault(_SVG2Canvas);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var database = 'projects';
var collectLibraryAssets = true;

// Sharing state
var zipFileName = '';
var shareName = '';

var IO = function () {
    function IO() {
        _classCallCheck(this, IO);
    }

    _createClass(IO, null, [{
        key: 'requestSynchronous',


        /**
         * Synchronous requests are normally not recommended, but in this case we're
         * going to file URLs so this should be okay.
         */
        value: function requestSynchronous(url) {
            var request = new XMLHttpRequest();
            request.open('GET', url, false);
            request.send(null);
            if (request.status === 0 || request.status === 200) {
                return request.responseText;
            } else {
                // Failed synchronous loading
                return '';
            }
        }
    }, {
        key: 'requestFromServer',
        value: function requestFromServer(url, whenDone) {
            var xmlrequest = new XMLHttpRequest();
            xmlrequest.addEventListener('error', transferFailed, false);
            xmlrequest.onreadystatechange = function () {
                if (xmlrequest.readyState == 4) {
                    whenDone(xmlrequest.responseText);
                }
            };
            xmlrequest.open('GET', url, true);
            xmlrequest.send(null);
            function transferFailed(e) {
                e.preventDefault();
                e.stopPropagation();
                // Failed loading
            }
        }
    }, {
        key: 'getThumbnail',
        value: function getThumbnail(str, w, h, destw, desth) {
            str = str.replace(/>\s*</g, '><');
            var xmlDoc = new DOMParser().parseFromString(str, 'text/xml');
            var extxml = document.importNode(xmlDoc.documentElement, true);
            if (extxml.childNodes[0].nodeName == '#comment') {
                extxml.removeChild(extxml.childNodes[0]);
            }
            var srccnv = document.createElement('canvas');
            (0, _lib.setCanvasSize)(srccnv, w, h);
            var ctx = srccnv.getContext('2d');
            for (var i = 0; i < extxml.childElementCount; i++) {
                _SVG2Canvas2.default.drawLayer(extxml.childNodes[i], ctx);
            }
            if (!destw || !desth) {
                return srccnv.toDataURL('image/png');
            }
            var cnv = document.createElement('canvas');
            (0, _lib.setCanvasSize)(cnv, destw, desth);
            (0, _lib.drawThumbnail)(srccnv, cnv);
            return cnv.toDataURL('image/png');
        }

        // in iOS casting an svg url in a img.src works except when the SVG has images.
        // This code avoids that bug
        // also when in debug mode you need to get the base64 to avoid sandboxing issues

    }, {
        key: 'getAsset',
        value: function getAsset(md5, fcn) {
            // returns either a link or a base64 dataurl
            if (_MediaLib2.default.keys[md5]) {
                fcn(_MediaLib2.default.path + md5);return;
            } // just url link assets do not have photos
            if (md5.indexOf('/') > -1) {
                IO.requestFromServer(md5, gotit); // get url contents
                return;
            }

            _OS2.default.getmedia(md5, nextStep);

            function gotit(str) {
                var base64 = IO.getImageDataURL(md5, btoa(str));
                if (str.indexOf('xlink:href') < 0) {
                    fcn(md5); // does not have embedded images
                } else {
                    IO.getImagesInSVG(str, function () {
                        fcn(base64);
                    });
                } // base64 dataurl
            }

            function nextStep(dataurl) {
                var str = atob(dataurl);
                var base64 = IO.getImageDataURL(md5, dataurl);
                IO.getImagesInSVG(str, function () {
                    fcn(base64);
                });
            }
        }
    }, {
        key: 'getImagesInSVG',
        value: function getImagesInSVG(str, whenDone) {
            str = str.replace(/>\s*</g, '><');
            if (str.indexOf('xlink:href') < 0) {
                whenDone(); // needs this in case of reading a PNG in debug mode
            } else {
                loadInnerImages(str, whenDone);
            }

            function loadInnerImages(str, whenDone) {
                var xmlDoc = new DOMParser().parseFromString(str, 'text/xml');
                var extxml = document.importNode(xmlDoc.documentElement, true);
                if (extxml.childNodes[0].nodeName == '#comment') {
                    extxml.removeChild(extxml.childNodes[0]);
                }
                var images = IO.getImages(extxml, []);
                var imageCount = images.length;
                for (var i = 0; i < images.length; i++) {
                    var dataurl = images[i].getAttribute('xlink:href');
                    var svgimg = document.createElement('img');
                    svgimg.src = dataurl;
                    if (!svgimg.complete) {
                        svgimg.onload = function () {
                            readToLad();
                        };
                    } else {
                        readToLad();
                    }
                }

                function readToLad() {
                    imageCount--;
                    if (imageCount < 1) {
                        extxml = null;
                        xmlDoc = null;
                        whenDone();
                    }
                }
            }
        }
    }, {
        key: 'getImages',
        value: function getImages(p, res) {
            for (var i = 0; i < p.childNodes.length; i++) {
                var elem = p.childNodes[i];
                if (elem.nodeName == 'metadata') {
                    continue;
                }
                if (elem.nodeName == 'defs') {
                    continue;
                }
                if (elem.nodeName == 'sodipodi:namedview') {
                    continue;
                }
                if (elem.nodeName == '#comment') {
                    continue;
                }
                if (elem.nodeName == 'image') {
                    res.push(elem);
                }
                if (elem.nodeName == 'g') {
                    IO.getImages(elem, res);
                }
            }
            return res;
        }
    }, {
        key: 'getImageDataURL',
        value: function getImageDataURL(md5, data) {
            var header = '';
            switch (IO.getExtension(md5)) {
                case 'svg':
                    header = 'data:image/svg+xml;base64,';
                    break;
                case 'png':
                    header = 'data:image/png;base64,';
                    break;
            }
            return header + data;
        }
    }, {
        key: 'getObject',
        value: function getObject(md5, fcn) {
            if (md5.indexOf('/') > -1) {
                var gotit = function gotit(str) {
                    fcn(str);
                };
                IO.requestFromServer(md5, gotit);
            } else {
                IO.getObjectinDB(database, md5, fcn);
            }
        }
    }, {
        key: 'getObjectinDB',
        value: function getObjectinDB(db, md5, fcn) {
            var json = {};
            json.stmt = 'select * from ' + db + ' where id = ?';
            json.values = [md5];
            _OS2.default.query(json, fcn);
        }
    }, {
        key: 'setMedia',
        value: function setMedia(data, type, fcn) {
            _OS2.default.setmedia(btoa(data), type, fcn);
        }
    }, {
        key: 'query',
        value: function query(type, obj, fcn) {
            var json = {};
            json.stmt = 'select ' + obj.items + ' from ' + type + ' where ' + obj.cond + (obj.order ? ' order by ' + obj.order : '');
            json.values = obj.values;
            _OS2.default.query(json, fcn);
        }
    }, {
        key: 'deleteobject',
        value: function deleteobject(type, id, fcn) {
            var json = {};
            json.stmt = 'delete from ' + type + ' where id = ?';
            json.values = [id];
            _OS2.default.stmt(json, fcn);
        }

        ////////////////////////
        // projects
        ///////////////////////
        /*
            +[id] =>  // SQL ID creates this
            [deleted] =>
            [name] =>
            [json] => project data
            [thumb] =>
            [mtime] => modification time
        */

    }, {
        key: 'createProject',
        value: function createProject(obj, fcn) {
            var json = {};
            var keylist = ['name', 'version', 'deleted', 'mtime', 'isgift'];
            var values = '?,?,?,?,?';
            var mtime = new Date().getTime().toString();
            var isGift = obj.isgift ? obj.isgift : '0';
            json.values = [obj.name, obj.version, 'NO', mtime, isGift];
            if (obj.json) {
                addValue('json', JSON.stringify(obj.json));
            }
            if (obj.thumbnail) {
                addValue('thumbnail', JSON.stringify(obj.thumbnail));
            }
            json.stmt = 'insert into ' + database + ' (' + keylist.toString() + ') values (' + values + ')';
            _OS2.default.stmt(json, fcn);
            function addValue(key, str) {
                keylist.push(key);
                values += ',?';
                json.values.push(str);
            }
        }
    }, {
        key: 'saveProject',
        value: function saveProject(obj, fcn) {
            var json = {};
            var keylist = ['version = ?', 'deleted = ?', 'name = ?', 'json = ?', 'thumbnail = ?', 'mtime = ?'];
            json.values = [obj.version, obj.deleted, obj.name, JSON.stringify(obj.json), JSON.stringify(obj.thumbnail), new Date().getTime().toString()];
            json.stmt = 'update ' + database + ' set ' + keylist.toString() + ' where id = ' + obj.id;
            _OS2.default.stmt(json, fcn);
        }

        // Since saveProject is changing the modified time of the project,
        // let's just simply update the isgift flag in a separate function...

    }, {
        key: 'setProjectIsGift',
        value: function setProjectIsGift(obj, fcn) {
            var json = {};
            var keylist = ['isgift = ?'];
            json.values = [obj.isgift];
            json.stmt = 'update ' + database + ' set ' + keylist.toString() + ' where id = ' + obj.id;
            _OS2.default.stmt(json, fcn);
        }
    }, {
        key: 'getExtension',
        value: function getExtension(str) {
            return str.substring(str.indexOf('.') + 1, str.length);
        }
    }, {
        key: 'getFilename',
        value: function getFilename(str) {
            return str.substring(0, str.indexOf('.'));
        }
    }, {
        key: 'getFilenameWithExt',
        value: function getFilenameWithExt(str) {
            return str.substring(str.lastIndexOf('/') + 1, str.length);
        }
    }, {
        key: 'parseProjectData',
        value: function parseProjectData(data) {
            var res = new Object();
            for (var key in data) {
                res[key.toLowerCase()] = data[key];
            }
            return res;
        }

        //////////////////
        // Sharing
        ////////////////////

    }, {
        key: 'compressProject',
        value: function compressProject(projectReference, finished) {
            IO.getObject(projectReference, function (projectFromDB) {
                var projectMetadata = {
                    'thumbnails': [],
                    'characters': [],
                    'backgrounds': [],
                    'sounds': []
                };
                var jsonData = IO.parseProjectData(JSON.parse(projectFromDB)[0]);
                jsonData.assetLibraryVersion = _MediaLib2.default.version;

                // Collect project assets for inclusion in zip file
                // Parse JSON representations of project data / thumbnail into usable types
                if (typeof jsonData.json == 'string') {
                    jsonData.json = JSON.parse(jsonData.json);
                }
                if (typeof jsonData.thumbnail == 'string') {
                    jsonData.thumbnail = JSON.parse(jsonData.thumbnail);
                }

                // Method to determine if a particular asset needs to be collected
                // If it does, save the reference in projectMetadata for collection
                var collectAsset = function collectAsset(assetType, md5) {
                    if (md5 && typeof md5 !== 'undefined') {
                        if (md5.indexOf('samples/') < 0) {
                            // Exclude sample assets
                            if (collectLibraryAssets) {
                                // Behavior if we want to collect and package library assets
                                if (projectMetadata[assetType].indexOf(md5) < 0 && _MediaLib2.default.sounds.indexOf(md5) < 0) {
                                    projectMetadata[assetType].push(md5);
                                }
                            } else {
                                // Otherwise, first check if it's in the library
                                if (md5 && typeof md5 !== 'undefined' && !_MediaLib2.default.keys[md5] && _MediaLib2.default.sounds.indexOf(md5) < 0) {
                                    if (projectMetadata[assetType].indexOf(md5) < 0) {
                                        projectMetadata[assetType].push(md5);
                                    }
                                }
                            }
                        }
                    }
                };

                // Project thumbnail
                collectAsset('thumbnails', jsonData.thumbnail.md5);

                var projectData = jsonData.json;

                // Data for each page
                for (var p = 0; p < projectData.pages.length; p++) {
                    var pageReference = projectData.pages[p];
                    var page = projectData[pageReference];

                    // Page background
                    collectAsset('backgrounds', page.md5);

                    // Sprites
                    for (var s = 0; s < page.sprites.length; s++) {
                        var spriteReference = page.sprites[s];
                        var sprite = page[spriteReference];

                        if (sprite.type != 'sprite') {
                            continue;
                        }

                        // Sprite image
                        collectAsset('characters', sprite.md5);

                        // Sprite's recorded sounds
                        for (var snd = 0; snd < sprite.sounds.length; snd++) {
                            collectAsset('sounds', sprite.sounds[snd]);
                        }
                    }
                }

                // Now the UI should wait for actual media count to equal expected media count
                // This could pause if getmedia takes a long time, for example,
                // if we have many large sprites or large sounds

                // strip spaces and sanitize filename, including windows reserved names even though
                // kids are unlikely to name their project lpt1 etc.
                var illegalRe = /[\/\?<>\\:\*\|":]/g;
                var controlRe = /[\x00-\x1f\x80-\x9f]/g;
                var reservedRe = /^\.+$/;
                var windowsReservedRe = /^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\..*)?$/i;
                var windowsTrailingRe = /[\. ]+$/;

                zipFileName = jsonData.name.replace(/\s*/g, '');
                zipFileName = zipFileName.replace(illegalRe, '_').replace(controlRe, '_').replace(reservedRe, '_').replace(windowsReservedRe, '_').replace(windowsTrailingRe, '_');
                shareName = jsonData.name;

                // create zip natively
                _OS2.default.createZipForProject(JSON.stringify(jsonData), projectMetadata, zipFileName, function (name) {
                    finished(name);
                });
            });
        }
    }, {
        key: 'uniqueProjectName',
        value: function uniqueProjectName(jsonData, callback, useOne) {
            // Ensure the project name is not a duplicate

            // Split project name from trailing number
            // Returns [project name, number]
            // E.g., "Project 2" -> ["Project", 2]
            // "My project" -> ["My project", null];
            var nameAndNumber = function nameAndNumber(name) {
                var splitName = name.split(' ');
                var lastPart = splitName.pop();
                if (!isNaN(lastPart)) {
                    return {
                        'name': splitName.join(' '),
                        'number': parseInt(lastPart)
                    };
                } else {
                    return {
                        'name': name,
                        'number': null
                    };
                }
            };

            var giftProjectNameParts = nameAndNumber(jsonData.name);

            // Get project names already existing in the DB
            var json = {};
            json.cond = 'deleted = ? AND gallery IS NULL';
            json.items = ['name'];
            json.values = ['NO'];
            IO.query(_OS2.default.database, json, function (existingProjects) {
                var newNumber = null;

                existingProjects = JSON.parse(existingProjects);
                for (var i = 0; i < existingProjects.length; i++) {
                    var existingProjectName = IO.parseProjectData(existingProjects[i]).name;
                    var existingProjectNameParts = nameAndNumber(existingProjectName);
                    if (giftProjectNameParts.name == existingProjectNameParts.name) {
                        if (existingProjectNameParts.number != null) {
                            // "My project 2" -> "My project 3"
                            newNumber = existingProjectNameParts.number + 1;
                        } else {
                            // "My project" -> "My project 2"
                            newNumber = 2;
                        }
                    }
                }

                if (newNumber != null && (!giftProjectNameParts.number || newNumber > giftProjectNameParts.number)) {
                    // A duplicate project name exists - update it
                    jsonData.name = giftProjectNameParts.name + ' ' + newNumber;
                } else if (useOne) {
                    jsonData.name = giftProjectNameParts.name + ' 1';
                }
                callback(jsonData);
            });
        }
    }, {
        key: 'zipFileName',
        get: function get() {
            return zipFileName;
        }
    }, {
        key: 'shareName',
        get: function get() {
            return shareName;
        }
    }]);

    return IO;
}();

exports.default = IO;

/***/ }),

/***/ "./src/tablet/MediaLib.js":
/*!********************************!*\
  !*** ./src/tablet/MediaLib.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _IO = __webpack_require__(/*! ./IO */ "./src/tablet/IO.js");

var _IO2 = _interopRequireDefault(_IO);

var _Localization = __webpack_require__(/*! ../utils/Localization */ "./src/utils/Localization.js");

var _Localization2 = _interopRequireDefault(_Localization);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var path = void 0;
var samples = void 0;
var backgrounds = void 0;
var sprites = void 0;
var legacySprites = void 0;
var sounds = void 0;
var keys = {};
var version = 0;

var MediaLib = function () {
    function MediaLib() {
        _classCallCheck(this, MediaLib);
    }

    _createClass(MediaLib, null, [{
        key: 'loadMediaLib',
        value: function loadMediaLib(root, whenDone) {
            _IO2.default.requestFromServer(root + 'media.json', function (result) {
                var parsedResult = JSON.parse(result);
                path = parsedResult.path;
                samples = parsedResult.samples;
                sprites = parsedResult.sprites;
                legacySprites = parsedResult.legacySprites || [];
                backgrounds = parsedResult.backgrounds;
                sounds = parsedResult.sounds;

                if (parsedResult.assetLibraryVersion) {
                    version = parsedResult.assetLibraryVersion;
                }

                MediaLib.localizeMediaNames();
                MediaLib.generateKeys();

                whenDone();
            });
        }
    }, {
        key: 'localizeMediaNames',
        value: function localizeMediaNames() {
            // Localize names of sprites
            for (var i = 0; i < sprites.length; i++) {
                sprites[i].name = _Localization2.default.localize('CHARACTER_' + sprites[i].md5);
            }

            // Localize names of backgrounds
            for (var _i = 0; _i < backgrounds.length; _i++) {
                backgrounds[_i].name = _Localization2.default.localize('BACKGROUND_' + backgrounds[_i].md5);
            }

            // Localize names of legacy sprites
            for (var _i2 = 0; _i2 < legacySprites.length; _i2++) {
                legacySprites[_i2].name = _Localization2.default.localize('CHARACTER_' + legacySprites[_i2].md5);
            }
        }
    }, {
        key: 'generateKeys',
        value: function generateKeys() {
            for (var i = 0; i < backgrounds.length; i++) {
                var bg = backgrounds[i];
                keys[bg.md5] = { width: bg.width, height: bg.height, name: bg.name };
            }

            for (var _i3 = 0; _i3 < sprites.length; _i3++) {
                var spr = sprites[_i3];
                keys[spr.md5] = { width: spr.width, height: spr.height, name: spr.name };
            }

            // when we change sprites (or remove them) the old ones still need to be in keys
            // for projects that were created before the change
            for (var _i4 = 0; _i4 < legacySprites.length; _i4++) {
                var legacySpr = legacySprites[_i4];
                keys[legacySpr.md5] = { width: legacySpr.width, height: legacySpr.height, name: legacySpr.name };
            }
        }
    }, {
        key: 'path',
        get: function get() {
            return path;
        }
    }, {
        key: 'samples',
        get: function get() {
            return samples;
        }
    }, {
        key: 'sprites',
        get: function get() {
            return sprites;
        }
    }, {
        key: 'backgrounds',
        get: function get() {
            return backgrounds;
        }
    }, {
        key: 'sounds',
        get: function get() {
            return sounds;
        }
    }, {
        key: 'keys',
        get: function get() {
            return keys;
        }
    }, {
        key: 'version',
        get: function get() {
            return version;
        }
    }]);

    return MediaLib;
}();

exports.default = MediaLib;

/***/ }),

/***/ "./src/tablet/OS.js":
/*!**************************!*\
  !*** ./src/tablet/OS.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _lib = __webpack_require__(/*! ../utils/lib */ "./src/utils/lib.js");

var _IO = __webpack_require__(/*! ./IO */ "./src/tablet/IO.js");

var _IO2 = _interopRequireDefault(_IO);

var _iOS = __webpack_require__(/*! ./iOS */ "./src/tablet/iOS.js");

var _iOS2 = _interopRequireDefault(_iOS);

var _Android = __webpack_require__(/*! ./Android */ "./src/tablet/Android.js");

var _Android2 = _interopRequireDefault(_Android);

var _Lobby = __webpack_require__(/*! ../lobby/Lobby */ "./src/lobby/Lobby.js");

var _Lobby2 = _interopRequireDefault(_Lobby);

var _Alert = __webpack_require__(/*! ../editor/ui/Alert */ "./src/editor/ui/Alert.js");

var _Alert2 = _interopRequireDefault(_Alert);

var _ScratchAudio = __webpack_require__(/*! ../utils/ScratchAudio */ "./src/utils/ScratchAudio.js");

var _ScratchAudio2 = _interopRequireDefault(_ScratchAudio);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

//////////////////////////////////////////////////
//  Tablet interface functions
//////////////////////////////////////////////////

var path = void 0;
var camera = void 0;
var database = 'projects';
var tabletInterface = null;

var OS = function () {
    function OS() {
        _classCallCheck(this, OS);
    }

    _createClass(OS, [{
        key: 'ignore',
        value: function ignore() {}

        ///////////////
        // Sharing
        ///////////////

    }], [{
        key: 'waitForInterface',


        // Wait for the tablet interface to be injected into the webview
        value: function waitForInterface(fcn) {
            // Already loaded the interface
            if (tabletInterface != null) {
                fcn();
                return;
            }
            if (_lib.isAndroid && typeof AndroidInterface === 'undefined' || _lib.isiOS && _typeof(window.tablet) !== 'object') {
                // interface not loaded - come back in 100ms
                setTimeout(function () {
                    OS.waitForInterface(fcn);
                }, 100);
            }

            tabletInterface = _lib.isiOS ? _iOS2.default : _Android2.default;
            if (fcn) {
                fcn();
            }
            return;
        }

        // Database functions

    }, {
        key: 'stmt',
        value: function stmt(json, fcn) {
            // tabletInterface.stmt(json, fcn);
        }
    }, {
        key: 'query',
        value: function query(json, fcn) {}
        // tabletInterface.query(json, fcn);


        // DB helper - shared by both

    }, {
        key: 'setfield',
        value: function setfield(db, id, fieldname, val, fcn) {
            var json = {};
            var keylist = [fieldname + ' = ?', 'mtime = ?'];
            json.values = [val, new Date().getTime().toString()];
            json.stmt = 'update ' + db + ' set ' + keylist.toString() + ' where id = ' + id;
            OS.stmt(json, fcn);
        }

        // IO functions

    }, {
        key: 'cleanassets',
        value: function cleanassets(ft, fcn) {
            // tabletInterface.cleanassets(ft, fcn);
        }
    }, {
        key: 'getsettings',
        value: function getsettings(fcn) {
            fcn(',');
            // tabletInterface.getsettings(fcn);
        }

        // note the interfaces (iOS and Android) are responsible for deciding how
        // to manage getting media (e.g. whether it needs to be done in chunks etc)

    }, {
        key: 'getmedia',
        value: function getmedia(file, fcn) {
            // tabletInterface.getmedia(file, fcn);
        }
    }, {
        key: 'setmedia',
        value: function setmedia(str, ext, fcn) {
            // tabletInterface.setmedia(str, ext, fcn);
        }
    }, {
        key: 'setmedianame',
        value: function setmedianame(str, name, ext, fcn) {
            // tabletInterface.setmedianame(str, name, ext, fcn);
        }
    }, {
        key: 'getmd5',
        value: function getmd5(str, fcn) {
            // tabletInterface.getmd5(str, fcn);
        }
    }, {
        key: 'remove',
        value: function remove(str, fcn) {
            // tabletInterface.remove(str, fcn);
        }
    }, {
        key: 'getfile',
        value: function getfile(str, fcn) {
            // tabletInterface.getfile(str, fcn);
        }
    }, {
        key: 'setfile',
        value: function setfile(name, str, fcn) {}
        // tabletInterface.setfile(name, str, fcn);


        // Sound functions

    }, {
        key: 'registerSound',
        value: function registerSound(dir, name, fcn) {
            // tabletInterface.registerSound(dir, name, fcn);
        }
    }, {
        key: 'playSound',
        value: function playSound(name, fcn) {
            // tabletInterface.playSound(name, fcn);
        }
    }, {
        key: 'stopSound',
        value: function stopSound(name, fcn) {}
        // tabletInterface.stopSound(name, fcn);


        // Web Wiew delegate call backs

    }, {
        key: 'soundDone',
        value: function soundDone(name) {
            _ScratchAudio2.default.soundDone(name);
        }
    }, {
        key: 'sndrecord',
        value: function sndrecord(fcn) {
            // tabletInterface.sndrecord(fcn);
        }
    }, {
        key: 'recordstop',
        value: function recordstop(fcn) {
            // tabletInterface.recordstop(fcn);
        }
    }, {
        key: 'volume',
        value: function volume(fcn) {
            // tabletInterface.volume(fcn);
        }
    }, {
        key: 'startplay',
        value: function startplay(fcn) {
            // tabletInterface.startplay(fcn);
        }
    }, {
        key: 'stopplay',
        value: function stopplay(fcn) {
            // tabletInterface.stopplay(fcn);
        }
    }, {
        key: 'recorddisappear',
        value: function recorddisappear(b, fcn) {}
        // tabletInterface.recorddisappear(b, fcn);


        // Record state

    }, {
        key: 'askpermission',
        value: function askpermission() {
            if (_lib.isiOS) {
                _iOS2.default.askpermission();
            }
        }

        // camera functions

    }, {
        key: 'hascamera',
        value: function hascamera() {
            // camera = tabletInterface.hascamera();
            camera = false;
        }
    }, {
        key: 'startfeed',
        value: function startfeed(data, fcn) {
            // tabletInterface.startfeed(data, fcn);
        }
    }, {
        key: 'stopfeed',
        value: function stopfeed(fcn) {
            // tabletInterface.stopfeed(fcn);
        }
    }, {
        key: 'choosecamera',
        value: function choosecamera(mode, fcn) {
            // tabletInterface.choosecamera(mode, fcn);
        }
    }, {
        key: 'captureimage',
        value: function captureimage(fcn) {
            // tabletInterface.captureimage(fcn);
        }
    }, {
        key: 'hidesplash',
        value: function hidesplash(fcn) {
            if (_lib.isiOS) {
                _iOS2.default.hidesplash();
            }
            if (fcn) {
                fcn();
            }
        }
    }, {
        key: 'trace',
        value: function trace(str) {
            console.log(str); // eslint-disable-line no-console
        }
    }, {
        key: 'parse',
        value: function parse(str) {
            console.log(JSON.parse(str)); // eslint-disable-line no-console
        }
    }, {
        key: 'tracemedia',
        value: function tracemedia(str) {
            console.log(atob(str)); // eslint-disable-line no-console
        }
    }, {
        key: 'createZipForProject',
        value: function createZipForProject(projectData, metadata, name, fcn) {}
        // tabletInterface.createZipForProject(projectData, metadata, name, fcn);


        // Called on the JS side to trigger native UI for project sharing.
        // fileName: name for the file to share
        // emailSubject: subject text to use for an email
        // emailBody: body HTML to use for an email
        // shareType: 0 for Email; 1 for Airdrop
        // b64data: base-64 encoded .SJR file to share

    }, {
        key: 'sendSjrToShareDialog',
        value: function sendSjrToShareDialog(fileName, emailSubject, emailBody, shareType, b64data) {
            tabletInterface.sendSjrToShareDialog(fileName, emailSubject, emailBody, shareType, b64data);
        }

        // Called on the Objective-C side.  The argument is a base64-encoded .SJR file,
        // to be unzipped, processed, and stored.

    }, {
        key: 'loadProjectFromSjr',
        value: function loadProjectFromSjr(b64data) {
            try {
                _IO2.default.loadProjectFromSjr(b64data);
            } catch (err) {
                var errorMessage = 'Couldn\'t load share -- project data corrupted. ' + err.message;
                _Alert2.default.open((0, _lib.gn)('frame'), (0, _lib.gn)('frame'), errorMessage, '#ff0000');
                console.log(err); // eslint-disable-line no-console
                return 0;
            }
            return 1;
        }
    }, {
        key: 'registerLibraryAssets',
        value: function registerLibraryAssets(version, assets, fcn) {
            // tabletInterface.registerLibraryAssets(version, assets, fcn);
        }
    }, {
        key: 'duplicateAsset',
        value: function duplicateAsset(path, name, fcn) {}
        // tabletInterface.duplicateAsset(path, name, fcn);


        // Name of the device/iPad to display on the sharing dialog page
        // fcn is called with the device name as an arg

    }, {
        key: 'deviceName',
        value: function deviceName(fcn) {
            // tabletInterface.deviceName(fcn);
        }
    }, {
        key: 'analyticsEvent',
        value: function analyticsEvent(category, action, label) {
            // tabletInterface.analyticsEvent(category, action, label);
        }
    }, {
        key: 'setAnalyticsPlacePref',
        value: function setAnalyticsPlacePref(preferredPlace) {
            // tabletInterface.setAnalyticsPlacePref(preferredPlace);
        }
    }, {
        key: 'setAnalyticsPref',
        value: function setAnalyticsPref(key, value) {}
        // tabletInterface.setAnalyticsPref(key, value);


        // Web Wiew delegate call backs

    }, {
        key: 'pageError',
        value: function pageError(desc) {
            console.log('XCODE ERROR:', desc); // eslint-disable-line no-console
            if (window.location.href.indexOf('home.html') > -1) {
                if (_Lobby2.default.errorTimer) {
                    _Lobby2.default.errorLoading(desc);
                }
            }
        }
    }, {
        key: 'path',

        // Getters/setters for properties used in other classes
        get: function get() {
            return path;
        },
        set: function set(newPath) {
            path = newPath;
        }
    }, {
        key: 'camera',
        get: function get() {
            return camera;
        },
        set: function set(newCamera) {
            camera = newCamera;
        }
    }, {
        key: 'database',
        get: function get() {
            return database;
        }
    }]);

    return OS;
}();

// Expose OS methods for ScratchJr tablet sharing callbacks


exports.default = OS;
window.OS = OS;

/***/ }),

/***/ "./src/tablet/iOS.js":
/*!***************************!*\
  !*** ./src/tablet/iOS.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); //////////////////////////////////////////////////
//  iOS interface functions
// window.tablet is the class where native functions are injected for calling in
// javascript. It will be initialized prior to calling any functions in this class
//////////////////////////////////////////////////

var _OS = __webpack_require__(/*! ./OS */ "./src/tablet/OS.js");

var _OS2 = _interopRequireDefault(_OS);

__webpack_require__(/*! @babel/polyfill */ "./node_modules/@babel/polyfill/lib/index.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var mediacounter = 0;
var callbacks = {};

var iOS = function () {
    function iOS() {
        _classCallCheck(this, iOS);
    }

    _createClass(iOS, [{
        key: 'ignore',
        value: function ignore() {}

        ///////////////
        // Sharing
        ///////////////

    }], [{
        key: 'getId',
        value: function getId() {
            do {
                //eslint-disable-line no-constant-condition
                var id = 'jr' + new Date().getTime() + Math.floor(Math.random() * 10000);
                if (!callbacks[id]) {
                    return id;
                }
            } while (true);
        }
    }, {
        key: 'call',
        value: function call(method) {
            var _arguments = arguments;

            return new Promise(function (resolve) {
                var id = iOS.getId();
                callbacks[id] = resolve;
                var args = [].slice.call(_arguments);
                args.shift();
                window.tablet.postMessage({
                    id: id,
                    method: method,
                    params: args
                });
            });
        }
    }, {
        key: 'resolve',
        value: function resolve(id, res) {
            if (!id) {
                return;
            }
            var callbackFn = callbacks[id];
            if (!callbackFn) {
                return;
            }
            if (typeof callbackFn === 'function') {
                callbackFn(res);
            }
            delete callbacks[id];
        }

        // Database functions

    }, {
        key: 'stmt',
        value: function stmt(json, fcn) {
            var _this = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
                var result;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return iOS.call('database_stmt', JSON.stringify(json));

                            case 2:
                                result = _context.sent;

                                if (typeof fcn !== 'undefined') {
                                    fcn(result);
                                }

                            case 4:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, _this);
            }))();
        }
    }, {
        key: 'query',
        value: function query(json, fcn) {
            var _this2 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
                var result;
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                _context2.next = 2;
                                return iOS.call('database_query', JSON.stringify(json));

                            case 2:
                                result = _context2.sent;

                                if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) == 'object') {
                                    result = JSON.stringify(result);
                                }
                                if (typeof fcn !== 'undefined') {
                                    fcn(result);
                                }

                            case 5:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, _this2);
            }))();
        }
    }, {
        key: 'setfield',
        value: function setfield(db, id, fieldname, val, fcn) {
            var json = {};
            var keylist = [fieldname + ' = ?', 'mtime = ?'];
            json.values = [val, new Date().getTime().toString()];
            json.stmt = 'update ' + db + ' set ' + keylist.toString() + ' where id = ' + id;
            iOS.stmt(json, fcn);
        }

        // IO functions

    }, {
        key: 'cleanassets',
        value: function cleanassets(ft, fcn) {
            iOS.call('io_cleanassets', ft);
            fcn();
        }
    }, {
        key: 'getmedia',
        value: function getmedia(file, fcn) {
            mediacounter++;
            var nextStep = function nextStep(file, key, whenDone) {
                var _this3 = this;

                _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
                    var result;
                    return regeneratorRuntime.wrap(function _callee3$(_context3) {
                        while (1) {
                            switch (_context3.prev = _context3.next) {
                                case 0:
                                    _context3.next = 2;
                                    return iOS.call('io_getmedialen', file, key);

                                case 2:
                                    result = _context3.sent;

                                    iOS.processdata(key, 0, result * 1, '', whenDone);

                                case 4:
                                case 'end':
                                    return _context3.stop();
                            }
                        }
                    }, _callee3, _this3);
                }))();
            };
            nextStep(file, mediacounter, fcn);
        }
    }, {
        key: 'getmediadata',
        value: function getmediadata(key, offset, len, fcn) {
            var _this4 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
                var result;
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                _context4.next = 2;
                                return iOS.call('io_getmediadata', key, offset, len);

                            case 2:
                                result = _context4.sent;

                                if (fcn) {
                                    fcn(result);
                                }

                            case 4:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, _this4);
            }))();
        }
    }, {
        key: 'processdata',
        value: function processdata(key, off, len, oldstr, fcn) {
            if (len == 0) {
                iOS.getmediadone(key);
                fcn(oldstr);
                return;
            }
            var newlen = len < 100000 ? len : 100000;
            iOS.getmediadata(key, off, newlen, function (str) {
                iOS.processdata(key, off + newlen, len - newlen, oldstr + str, fcn);
            });
        }
    }, {
        key: 'getsettings',
        value: function getsettings(fcn) {
            var _this5 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {
                var result;
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                _context5.next = 2;
                                return iOS.call('io_getsettings');

                            case 2:
                                result = _context5.sent;

                                if (fcn) {
                                    fcn(result);
                                }

                            case 4:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, _this5);
            }))();
        }
    }, {
        key: 'getmediadone',
        value: function getmediadone(file, fcn) {
            var _this6 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {
                var result;
                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                        switch (_context6.prev = _context6.next) {
                            case 0:
                                _context6.next = 2;
                                return iOS.call('io_getmediadone', file);

                            case 2:
                                result = _context6.sent;

                                if (fcn) {
                                    fcn(result);
                                }

                            case 4:
                            case 'end':
                                return _context6.stop();
                        }
                    }
                }, _callee6, _this6);
            }))();
        }
    }, {
        key: 'setmedia',
        value: function setmedia(str, ext, fcn) {
            var _this7 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {
                var result;
                return regeneratorRuntime.wrap(function _callee7$(_context7) {
                    while (1) {
                        switch (_context7.prev = _context7.next) {
                            case 0:
                                _context7.next = 2;
                                return iOS.call('io_setmedia', str, ext);

                            case 2:
                                result = _context7.sent;

                                if (fcn) {
                                    fcn(result);
                                }

                            case 4:
                            case 'end':
                                return _context7.stop();
                        }
                    }
                }, _callee7, _this7);
            }))();
        }
    }, {
        key: 'setmedianame',
        value: function setmedianame(str, name, ext, fcn) {
            var _this8 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {
                var result;
                return regeneratorRuntime.wrap(function _callee8$(_context8) {
                    while (1) {
                        switch (_context8.prev = _context8.next) {
                            case 0:
                                _context8.next = 2;
                                return iOS.call('io_setmedianame', str, name, ext);

                            case 2:
                                result = _context8.sent;

                                if (fcn) {
                                    fcn(result);
                                }

                            case 4:
                            case 'end':
                                return _context8.stop();
                        }
                    }
                }, _callee8, _this8);
            }))();
        }
    }, {
        key: 'getmd5',
        value: function getmd5(str, fcn) {
            var _this9 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {
                var result;
                return regeneratorRuntime.wrap(function _callee9$(_context9) {
                    while (1) {
                        switch (_context9.prev = _context9.next) {
                            case 0:
                                _context9.next = 2;
                                return iOS.call('io_getmd5', str);

                            case 2:
                                result = _context9.sent;

                                if (fcn) {
                                    fcn(result);
                                }

                            case 4:
                            case 'end':
                                return _context9.stop();
                        }
                    }
                }, _callee9, _this9);
            }))();
        }
    }, {
        key: 'remove',
        value: function remove(str, fcn) {
            var _this10 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {
                var result;
                return regeneratorRuntime.wrap(function _callee10$(_context10) {
                    while (1) {
                        switch (_context10.prev = _context10.next) {
                            case 0:
                                _context10.next = 2;
                                return iOS.call('io_remove', str);

                            case 2:
                                result = _context10.sent;

                                if (fcn) {
                                    fcn(result);
                                }

                            case 4:
                            case 'end':
                                return _context10.stop();
                        }
                    }
                }, _callee10, _this10);
            }))();
        }
    }, {
        key: 'getfile',
        value: function getfile(str, fcn) {
            var _this11 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {
                var result;
                return regeneratorRuntime.wrap(function _callee11$(_context11) {
                    while (1) {
                        switch (_context11.prev = _context11.next) {
                            case 0:
                                _context11.next = 2;
                                return iOS.call('io_getfile', str);

                            case 2:
                                result = _context11.sent;

                                if (fcn) {
                                    fcn(result);
                                }

                            case 4:
                            case 'end':
                                return _context11.stop();
                        }
                    }
                }, _callee11, _this11);
            }))();
        }
    }, {
        key: 'setfile',
        value: function setfile(name, str, fcn) {
            var _this12 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {
                var result;
                return regeneratorRuntime.wrap(function _callee12$(_context12) {
                    while (1) {
                        switch (_context12.prev = _context12.next) {
                            case 0:
                                _context12.next = 2;
                                return iOS.call('io_setfile', name, btoa(str));

                            case 2:
                                result = _context12.sent;

                                if (fcn) {
                                    fcn(result);
                                }

                            case 4:
                            case 'end':
                                return _context12.stop();
                        }
                    }
                }, _callee12, _this12);
            }))();
        }

        // Sound functions

    }, {
        key: 'registerSound',
        value: function registerSound(dir, name, fcn) {
            var _this13 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {
                var result;
                return regeneratorRuntime.wrap(function _callee13$(_context13) {
                    while (1) {
                        switch (_context13.prev = _context13.next) {
                            case 0:
                                _context13.next = 2;
                                return iOS.call('io_registersound', dir, name);

                            case 2:
                                result = _context13.sent;

                                if (fcn) {
                                    fcn(result);
                                }

                            case 4:
                            case 'end':
                                return _context13.stop();
                        }
                    }
                }, _callee13, _this13);
            }))();
        }
    }, {
        key: 'playSound',
        value: function playSound(name, fcn) {
            var _this14 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {
                var result;
                return regeneratorRuntime.wrap(function _callee14$(_context14) {
                    while (1) {
                        switch (_context14.prev = _context14.next) {
                            case 0:
                                _context14.next = 2;
                                return iOS.call('io_playsound', name);

                            case 2:
                                result = _context14.sent;

                                if (fcn) {
                                    fcn(result);
                                }

                            case 4:
                            case 'end':
                                return _context14.stop();
                        }
                    }
                }, _callee14, _this14);
            }))();
        }
    }, {
        key: 'stopSound',
        value: function stopSound(name, fcn) {
            var _this15 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {
                var result;
                return regeneratorRuntime.wrap(function _callee15$(_context15) {
                    while (1) {
                        switch (_context15.prev = _context15.next) {
                            case 0:
                                _context15.next = 2;
                                return iOS.call('io_stopsound', name);

                            case 2:
                                result = _context15.sent;

                                if (fcn) {
                                    fcn(result);
                                }

                            case 4:
                            case 'end':
                                return _context15.stop();
                        }
                    }
                }, _callee15, _this15);
            }))();
        }

        // Web Wiew delegate call backs

    }, {
        key: 'sndrecord',
        value: function sndrecord(fcn) {
            var _this16 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {
                var result;
                return regeneratorRuntime.wrap(function _callee16$(_context16) {
                    while (1) {
                        switch (_context16.prev = _context16.next) {
                            case 0:
                                _context16.next = 2;
                                return iOS.call('recordsound_recordstart');

                            case 2:
                                result = _context16.sent;

                                if (fcn) {
                                    fcn(result);
                                }

                            case 4:
                            case 'end':
                                return _context16.stop();
                        }
                    }
                }, _callee16, _this16);
            }))();
        }
    }, {
        key: 'recordstop',
        value: function recordstop(fcn) {
            var _this17 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17() {
                var result;
                return regeneratorRuntime.wrap(function _callee17$(_context17) {
                    while (1) {
                        switch (_context17.prev = _context17.next) {
                            case 0:
                                _context17.next = 2;
                                return iOS.call('recordsound_recordstop');

                            case 2:
                                result = _context17.sent;

                                if (fcn) {
                                    fcn(result);
                                }

                            case 4:
                            case 'end':
                                return _context17.stop();
                        }
                    }
                }, _callee17, _this17);
            }))();
        }
    }, {
        key: 'volume',
        value: function volume(fcn) {
            var _this18 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {
                var result;
                return regeneratorRuntime.wrap(function _callee18$(_context18) {
                    while (1) {
                        switch (_context18.prev = _context18.next) {
                            case 0:
                                _context18.next = 2;
                                return iOS.call('recordsound_volume');

                            case 2:
                                result = _context18.sent;

                                if (fcn) {
                                    fcn(result);
                                }

                            case 4:
                            case 'end':
                                return _context18.stop();
                        }
                    }
                }, _callee18, _this18);
            }))();
        }
    }, {
        key: 'startplay',
        value: function startplay(fcn) {
            var _this19 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {
                var result;
                return regeneratorRuntime.wrap(function _callee19$(_context19) {
                    while (1) {
                        switch (_context19.prev = _context19.next) {
                            case 0:
                                _context19.next = 2;
                                return iOS.call('recordsound_startplay');

                            case 2:
                                result = _context19.sent;

                                if (fcn) {
                                    fcn(result);
                                }

                            case 4:
                            case 'end':
                                return _context19.stop();
                        }
                    }
                }, _callee19, _this19);
            }))();
        }
    }, {
        key: 'stopplay',
        value: function stopplay(fcn) {
            var _this20 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20() {
                var result;
                return regeneratorRuntime.wrap(function _callee20$(_context20) {
                    while (1) {
                        switch (_context20.prev = _context20.next) {
                            case 0:
                                _context20.next = 2;
                                return iOS.call('recordsound_stopplay');

                            case 2:
                                result = _context20.sent;

                                if (fcn) {
                                    fcn(result);
                                }

                            case 4:
                            case 'end':
                                return _context20.stop();
                        }
                    }
                }, _callee20, _this20);
            }))();
        }
    }, {
        key: 'recorddisappear',
        value: function recorddisappear(b, fcn) {
            var _this21 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21() {
                var result;
                return regeneratorRuntime.wrap(function _callee21$(_context21) {
                    while (1) {
                        switch (_context21.prev = _context21.next) {
                            case 0:
                                result = iOS.call('recordsound_recordclose', b);

                                if (fcn) {
                                    fcn(result);
                                }

                            case 2:
                            case 'end':
                                return _context21.stop();
                        }
                    }
                }, _callee21, _this21);
            }))();
        }

        // Record state

    }, {
        key: 'askpermission',
        value: function askpermission() {
            iOS.call('askForPermission');
        }

        // camera functions

    }, {
        key: 'hascamera',
        value: function hascamera() {
            var _this22 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22() {
                return regeneratorRuntime.wrap(function _callee22$(_context22) {
                    while (1) {
                        switch (_context22.prev = _context22.next) {
                            case 0:
                                _context22.next = 2;
                                return iOS.call('scratchjr_cameracheck');

                            case 2:
                                _OS2.default.camera = _context22.sent;

                            case 3:
                            case 'end':
                                return _context22.stop();
                        }
                    }
                }, _callee22, _this22);
            }))();
        }
    }, {
        key: 'startfeed',
        value: function startfeed(data, fcn) {
            var _this23 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23() {
                var str, result;
                return regeneratorRuntime.wrap(function _callee23$(_context23) {
                    while (1) {
                        switch (_context23.prev = _context23.next) {
                            case 0:
                                str = JSON.stringify(data);
                                _context23.next = 3;
                                return iOS.call('scratchjr_startfeed', str);

                            case 3:
                                result = _context23.sent;

                                if (fcn) {
                                    fcn(result);
                                }

                            case 5:
                            case 'end':
                                return _context23.stop();
                        }
                    }
                }, _callee23, _this23);
            }))();
        }
    }, {
        key: 'stopfeed',
        value: function stopfeed(fcn) {
            var _this24 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24() {
                var result;
                return regeneratorRuntime.wrap(function _callee24$(_context24) {
                    while (1) {
                        switch (_context24.prev = _context24.next) {
                            case 0:
                                _context24.next = 2;
                                return iOS.call('scratchjr_stopfeed');

                            case 2:
                                result = _context24.sent;

                                if (fcn) {
                                    fcn(result);
                                }

                            case 4:
                            case 'end':
                                return _context24.stop();
                        }
                    }
                }, _callee24, _this24);
            }))();
        }
    }, {
        key: 'choosecamera',
        value: function choosecamera(mode, fcn) {
            var _this25 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25() {
                var result;
                return regeneratorRuntime.wrap(function _callee25$(_context25) {
                    while (1) {
                        switch (_context25.prev = _context25.next) {
                            case 0:
                                _context25.next = 2;
                                return iOS.call('scratchjr_choosecamera', mode);

                            case 2:
                                result = _context25.sent;

                                if (fcn) {
                                    fcn(result);
                                }

                            case 4:
                            case 'end':
                                return _context25.stop();
                        }
                    }
                }, _callee25, _this25);
            }))();
        }
    }, {
        key: 'captureimage',
        value: function captureimage(fcn) {
            iOS.call('scratchjr_captureimage', fcn);
        }
    }, {
        key: 'hidesplash',
        value: function hidesplash(fcn) {
            var _this26 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee26() {
                return regeneratorRuntime.wrap(function _callee26$(_context26) {
                    while (1) {
                        switch (_context26.prev = _context26.next) {
                            case 0:
                                iOS.call('hideSplash');
                                if (fcn) {
                                    fcn();
                                }

                            case 2:
                            case 'end':
                                return _context26.stop();
                        }
                    }
                }, _callee26, _this26);
            }))();
        }
    }, {
        key: 'trace',
        value: function trace(str) {
            console.log(str); // eslint-disable-line no-console
        }
    }, {
        key: 'parse',
        value: function parse(str) {
            console.log(JSON.parse(str)); // eslint-disable-line no-console
        }
    }, {
        key: 'tracemedia',
        value: function tracemedia(str) {
            console.log(atob(str)); // eslint-disable-line no-console
        }
    }, {
        key: 'createZipForProject',
        value: function createZipForProject(projectData, metadata, name, fcn) {
            var _this27 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee27() {
                var fullName;
                return regeneratorRuntime.wrap(function _callee27$(_context27) {
                    while (1) {
                        switch (_context27.prev = _context27.next) {
                            case 0:
                                _context27.next = 2;
                                return iOS.call('createZipForProject', projectData, metadata, name);

                            case 2:
                                fullName = _context27.sent;

                                if (fcn) {
                                    fcn(fullName);
                                }

                            case 4:
                            case 'end':
                                return _context27.stop();
                        }
                    }
                }, _callee27, _this27);
            }))();
        }

        // Called on the JS side to trigger native UI for project sharing.
        // fileName: name for the file to share
        // emailSubject: subject text to use for an email
        // emailBody: body HTML to use for an email
        // shareType: 0 for Email; 1 for Airdrop
        // b64data: base-64 encoded .SJR file to share

    }, {
        key: 'sendSjrToShareDialog',
        value: function sendSjrToShareDialog(fileName, emailSubject, emailBody, shareType) {
            iOS.call('sendSjrUsingShareDialog', fileName, emailSubject, emailBody, shareType);
        }
    }, {
        key: 'registerLibraryAssets',
        value: function registerLibraryAssets(version, assets, fcn) {
            var _this28 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee28() {
                return regeneratorRuntime.wrap(function _callee28$(_context28) {
                    while (1) {
                        switch (_context28.prev = _context28.next) {
                            case 0:
                                _context28.next = 2;
                                return iOS.call('registerLibraryAssets', version, assets);

                            case 2:
                                fcn && fcn();

                            case 3:
                            case 'end':
                                return _context28.stop();
                        }
                    }
                }, _callee28, _this28);
            }))();
        }
    }, {
        key: 'duplicateAsset',
        value: function duplicateAsset(path, name, fcn) {
            var _this29 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee29() {
                return regeneratorRuntime.wrap(function _callee29$(_context29) {
                    while (1) {
                        switch (_context29.prev = _context29.next) {
                            case 0:
                                _context29.next = 2;
                                return iOS.call('duplicateAsset', path, name);

                            case 2:
                                fcn && fcn();

                            case 3:
                            case 'end':
                                return _context29.stop();
                        }
                    }
                }, _callee29, _this29);
            }))();
        }

        // Name of the device/iPad to display on the sharing dialog page
        // fcn is called with the device name as an arg

    }, {
        key: 'deviceName',
        value: function deviceName(fcn) {
            var _this30 = this;

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee30() {
                return regeneratorRuntime.wrap(function _callee30$(_context30) {
                    while (1) {
                        switch (_context30.prev = _context30.next) {
                            case 0:
                                _context30.t0 = fcn;
                                _context30.next = 3;
                                return iOS.call('deviceName');

                            case 3:
                                _context30.t1 = _context30.sent;
                                (0, _context30.t0)(_context30.t1);

                            case 5:
                            case 'end':
                                return _context30.stop();
                        }
                    }
                }, _callee30, _this30);
            }))();
        }
    }, {
        key: 'analyticsEvent',
        value: function analyticsEvent(category, action, label) {
            iOS.call('analyticsEvent', category, action, label);
        }
    }, {
        key: 'setAnalyticsPlacePref',
        value: function setAnalyticsPlacePref(preferredPlace) {
            iOS.call('setAnalyticsPlacePref', preferredPlace);
        }
    }, {
        key: 'setAnalyticsPref',
        value: function setAnalyticsPref(key, value) {
            iOS.call('setAnalyticsPref', key, value);
        }
    }]);

    return iOS;
}();

// Expose iOS methods for ScratchJr tablet sharing callbacks


exports.default = iOS;
window.iOS = iOS;

/***/ }),

/***/ "./src/utils/Cookie.js":
/*!*****************************!*\
  !*** ./src/utils/Cookie.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Cookie = function () {
    function Cookie() {
        _classCallCheck(this, Cookie);
    }

    _createClass(Cookie, null, [{
        key: 'set',

        // Thanks to http://www.quirksmode.org/js/cookies.html
        value: function set(key, value) {
            var year = new Date();
            year.setTime(year.getTime() + 365 * 24 * 60 * 60 * 1000);
            var expires = '; expires=' + year.toGMTString();
            document.cookie = key + '=' + value + expires + '; path=/';
        }
    }, {
        key: 'get',
        value: function get(key) {
            key += '=';
            var cookies = document.cookie.split(';');
            for (var i = 0; i < cookies.length; i++) {
                var c = cookies[i];
                while (c.charAt(0) == ' ') {
                    c = c.substring(1, c.length);
                }
                if (c.indexOf(key) == 0) {
                    return c.substring(key.length, c.length);
                }
            }
            return null;
        }
    }]);

    return Cookie;
}();

exports.default = Cookie;

/***/ }),

/***/ "./src/utils/DrawPath.js":
/*!*******************************!*\
  !*** ./src/utils/DrawPath.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var startx = 0;
var starty = 0;
var pathx = 0;
var pathy = 0;

var DrawPath = function () {
    function DrawPath() {
        _classCallCheck(this, DrawPath);
    }

    _createClass(DrawPath, null, [{
        key: 'render',
        value: function render(ctx, path) {
            pathx = 0;
            pathy = 0; // start top left
            for (var i in path) {
                DrawPath.drawSection(path[i], ctx);
            }
        }
    }, {
        key: 'drawSection',
        value: function drawSection(item, ctx) {
            var cx, cy, px, py;
            switch (String(item[0]).toLowerCase()) {
                case 'm':
                    DrawPath.absoluteMove(item[1], item[2]);
                    ctx.moveTo(pathx, pathy);
                    startx = item[1];starty = item[2];
                    break;
                case 'l':
                    DrawPath.relativeMove(item[1], item[2]);ctx.lineTo(pathx, pathy);
                    break;
                case 'h':
                    pathx += item[1];ctx.lineTo(pathx, pathy);
                    break;
                case 'v':
                    pathy += item[1];ctx.lineTo(pathx, pathy);
                    break;
                case 'q':
                    cx = pathx + item[1];
                    cy = pathy + item[2];
                    px = pathx + item[3];
                    py = pathy + item[4];
                    ctx.quadraticCurveTo(cx, cy, px, py);
                    DrawPath.relativeMove(item[3], item[4]);
                    break;
                case 'c':
                    // beziers
                    cx = pathx + item[1];
                    cy = pathy + item[2];
                    var c2x = pathx + item[3];
                    var c2y = pathy + item[4];
                    px = pathx + item[5];
                    py = pathy + item[6];
                    ctx.bezierCurveTo(cx, cy, c2x, c2y, px, py);
                    DrawPath.relativeMove(item[5], item[6]);
                    break;
                case 'z':
                    DrawPath.absoluteMove(startx, starty);
                    ctx.lineTo(pathx, pathy);
                    break;
                default:
                    // Command not implemented
                    break;
            }
        }
    }, {
        key: 'absoluteMove',
        value: function absoluteMove(dx, dy) {
            pathx = dx;
            pathy = dy;
        }
    }, {
        key: 'relativeMove',
        value: function relativeMove(dx, dy) {
            pathx += dx;
            pathy += dy;
        }
    }]);

    return DrawPath;
}();

exports.default = DrawPath;

/***/ }),

/***/ "./src/utils/Events.js":
/*!*****************************!*\
  !*** ./src/utils/Events.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*
the caller should define the window event and call startDrag with the appropiate values


var _lib = __webpack_require__(/*! ./lib */ "./src/utils/lib.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var dragged = false;
var dragthumbnail = undefined;
var dragmousex = 0;
var dragmousey = 0;
var timeoutEvent = undefined;
var dragcanvas = undefined;
var dragDiv = undefined;
var fcnstart = undefined;
var fcnend = undefined;
var updatefcn = undefined;
var fcnclick = undefined;
var scaleStartsAt = 1;
var delta = 10;
var pinchcenter = {
    x: 0,
    y: 0,
    distance: 0
};
var lastZoomScale = 1;

var Events = function () {
    function Events() {
        _classCallCheck(this, Events);
    }

    _createClass(Events, null, [{
        key: 'init',


        // Instead of popping the dragging block, etc to the outer-most frame,
        // which causes delays while the content is reflowed, we create a
        // small drag div that is a parent of frame that the dragging block
        // can be a child of. This improves dragging performance.
        value: function init() {
            dragDiv = document.createElement('div');
            dragDiv.id = 'dragDiv';
            dragDiv.style.position = 'absolute';
            dragDiv.style.width = '0px'; // size doesn't matter since children float
            dragDiv.style.height = '0px';
            dragDiv.style.zIndex = 7001; // slightly higher than ScratchJr.dragginLayer
            var frameDiv = (0, _lib.gn)('frame');
            frameDiv.appendChild(dragDiv);
        }
    }, {
        key: 'startDrag',
        value: function startDrag(e, c, atstart, atend, atdrag, atclick, athold) {
            dragged = false;
            var pt = Events.getTargetPoint(e);
            dragmousex = pt.x;
            dragmousey = pt.y;
            dragthumbnail = c;
            fcnstart = atstart;
            fcnend = atend;
            fcnclick = atclick;

            if (athold) {
                Events.holdit(c, athold);
            }
            updatefcn = atdrag;
            if (_lib.isTablet) {
                // startDrag event setting
                delta = 10 * _lib.scaleMultiplier;
                window.ontouchleave = function (evt) {
                    Events.mouseUp(evt);
                };
                window.ontouchcancel = function (evt) {
                    Events.mouseUp(evt);
                };
            } else {
                delta = 7;
            }
            window.ontouchmove = function (evt) {
                Events.mouseMove(evt);
            };
            window.ontouchend = function (evt) {
                Events.mouseUp(evt);
            };
            window.onmousemove = function (evt) {
                Events.mouseMove(evt);
            };
            window.onmouseup = function (evt) {
                Events.mouseUp(evt);
            };
        }
    }, {
        key: 'holdit',
        value: function holdit(c, fcn) {
            if (timeoutEvent) {
                return;
            }
            var repeat = function repeat() {
                Events.clearEvents();
                fcn(dragthumbnail);
                Events.clearDragAndDrop();
            };
            timeoutEvent = setTimeout(repeat, 500);
        }
    }, {
        key: 'clearDragAndDrop',
        value: function clearDragAndDrop() {
            timeoutEvent = undefined;
            dragcanvas = undefined;
            dragged = false;
            dragthumbnail = undefined;
            fcnstart = undefined;
            fcnend = undefined;
            updatefcn = undefined;
            fcnclick = undefined;
        }
    }, {
        key: 'mouseMove',
        value: function mouseMove(e) {
            // be forgiving about the click
            var pt = Events.getTargetPoint(e);
            if (!dragged && Events.distance(dragmousex - pt.x, dragmousey - pt.y) < delta) {
                return;
            }
            if (timeoutEvent) {
                clearTimeout(timeoutEvent);
            }
            timeoutEvent = undefined;
            if (!dragged) {
                fcnstart(e);
            }
            dragged = true;
            if (updatefcn) {
                updatefcn(e, dragcanvas);
            }
            dragmousex = pt.x;
            dragmousey = pt.y;
        }
    }, {
        key: 'distance',
        value: function distance(dx, dy) {
            return Math.round(Math.sqrt(dx * dx + dy * dy));
        }
    }, {
        key: 'mouseUp',
        value: function mouseUp(e) {
            if (timeoutEvent) {
                clearTimeout(timeoutEvent);
            }
            timeoutEvent = undefined;
            Events.clearEvents();
            if (!dragged) {
                Events.itIsAClick(e);
            } else {
                Events.performMouseUpAction(e);
            }
            Events.clearDragAndDrop();
        }
    }, {
        key: 'cancelAll',
        value: function cancelAll() {
            if (timeoutEvent) {
                clearTimeout(timeoutEvent);
            }
            timeoutEvent = undefined;
            Events.clearEvents();
        }
    }, {
        key: 'clearEvents',
        value: function clearEvents() {
            window.ontouchmove = undefined;
            window.ontouchend = undefined;
            window.onmousemove = function (e) {
                e.preventDefault();
            };
            window.onmouseup = undefined;
        }
    }, {
        key: 'performMouseUpAction',
        value: function performMouseUpAction(e) {
            if (fcnend) {
                fcnend(e, dragcanvas);
            }
        }
    }, {
        key: 'itIsAClick',
        value: function itIsAClick(e) {
            if (fcnclick) {
                fcnclick(e, dragthumbnail);
            }
        }
    }, {
        key: 'moveThumbnail',
        value: function moveThumbnail(el, dx, dy) {
            if (!el) {
                return;
            }
            el.top += dy;
            el.left += dx;
            el.style.top = el.top + 'px';
            el.style.left = el.left + 'px';
        }
    }, {
        key: 'move3D',
        value: function move3D(el, dx, dy) {
            if (!el) {
                return;
            }
            var mtx = new WebKitCSSMatrix(window.getComputedStyle(el).webkitTransform);
            el.top = dy + mtx.m42;
            el.left = dx + mtx.m41;
            el.style.webkitTransform = 'translate3d(' + el.left + 'px,' + el.top + 'px, 0)';
        }

        /*
        .m41 – corresponds to the ‘x’ value of a WebKitCSSMatrix
        .m42 – corresponds to the ‘y’ value of a WebKitCSSMatrix
        */

    }, {
        key: 'getTargetPoint',
        value: function getTargetPoint(e) {
            if (_lib.isTablet) {
                if (e.touches && e.touches.length > 0) {
                    return {
                        x: e.touches[0].pageX,
                        y: e.touches[0].pageY
                    };
                } else if (e.changedTouches) {
                    return {
                        x: e.changedTouches[0].pageX,
                        y: e.changedTouches[0].pageY
                    };
                }
            }
            return {
                x: e.clientX,
                y: e.clientY
            };
        }
    }, {
        key: 'updatePinchCenter',
        value: function updatePinchCenter(e) {
            if (e.touches.length != 2) {
                return;
            }
            var x1 = e.touches[0].clientX,
                y1 = e.touches[0].clientY;
            var x2 = e.touches[1].clientX,
                y2 = e.touches[1].clientY;
            var cx = x1 + (x2 - x1) / 2,
                cy = y1 + (y2 - y1) / 2;
            var d = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
            pinchcenter = {
                x: cx,
                y: cy,
                distance: d
            };
        }
    }, {
        key: 'zoomScale',
        value: function zoomScale(e) {
            if (e.touches.length !== 2) {
                return lastZoomScale;
            }
            var x1 = e.touches[0].clientX,
                y1 = e.touches[0].clientY;
            var x2 = e.touches[1].clientX,
                y2 = e.touches[1].clientY;
            var d = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
            lastZoomScale = d / pinchcenter.distance;
            return lastZoomScale;
        }
    }, {
        key: 'dragged',

        // Getters/setters for globally used properties
        get: function get() {
            return dragged;
        },
        set: function set(newDragged) {
            dragged = newDragged;
        }
    }, {
        key: 'dragthumbnail',
        get: function get() {
            return dragthumbnail;
        },
        set: function set(newDragthumbnail) {
            dragthumbnail = newDragthumbnail;
        }
    }, {
        key: 'dragmousex',
        get: function get() {
            return dragmousex;
        },
        set: function set(newDragmousex) {
            dragmousex = newDragmousex;
        }
    }, {
        key: 'dragmousey',
        get: function get() {
            return dragmousey;
        },
        set: function set(newDragmousey) {
            dragmousey = newDragmousey;
        }
    }, {
        key: 'timeoutEvent',
        get: function get() {
            return timeoutEvent;
        },
        set: function set(newTimeoutEvent) {
            timeoutEvent = newTimeoutEvent;
        }
    }, {
        key: 'dragcanvas',
        get: function get() {
            return dragcanvas;
        },
        set: function set(newDragcanvas) {
            dragcanvas = newDragcanvas;
        }
    }, {
        key: 'dragDiv',
        get: function get() {
            return dragDiv;
        }
    }, {
        key: 'scaleStartsAt',
        get: function get() {
            return scaleStartsAt;
        },
        set: function set(newScaleStartsAt) {
            scaleStartsAt = newScaleStartsAt;
        }
    }, {
        key: 'pinchcenter',
        get: function get() {
            return pinchcenter;
        }
    }]);

    return Events;
}();

exports.default = Events;

/***/ }),

/***/ "./src/utils/InitialOptions.js":
/*!*************************************!*\
  !*** ./src/utils/InitialOptions.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Cookie = __webpack_require__(/*! ./Cookie */ "./src/utils/Cookie.js");

var _Cookie2 = _interopRequireDefault(_Cookie);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var settingsSection = null; // reference to settings.json's "initialOptions" section
var currentVals = {}; // locally cached copy of the same key-value settings in cookie
// tracks keys for options that have been set during the current session
// (useful for questions we want to ask every time the app starts up)
var answeredThisSession = {};

var InitialOptions = function () {
    function InitialOptions() {
        _classCallCheck(this, InitialOptions);
    }

    _createClass(InitialOptions, null, [{
        key: 'hasCookieSet',


        // ****************************************
        // functions only used from within InitialOptions
        // ****************************************

        /**
         * Checks if a cookie is set for a given question
         * @param {string} key indicates which options question to use
         */
        value: function hasCookieSet(key) {
            var usageCookie = _Cookie2.default.get(key);
            return usageCookie !== null;
        }

        /**
         * Checks if a given question has been answered. If the question needs to be
         * asked every time the app starts, check that it has been asked this session.
         * @param {object} question options question object from settings
         */

    }, {
        key: 'isAnswered',
        value: function isAnswered(question) {
            if (!question) return false;
            if (InitialOptions.hasCookieSet(question.key)) {
                // if the cookie is set, check if the question needs to be asked
                // every time (and hasn't been asked yet)
                if (question.everyTime && !answeredThisSession[question.key]) {
                    return false;
                }
                return true;
            }
            return false;
        }

        /**
         * Initialize currentVals for attaching to Analytics events from
         * the usage cookie if it is set. currentVals is blank if the cookie is
         * not set.
         * @param {string} key indicates which options question to use
         */

    }, {
        key: 'initKeyFromCookie',
        value: function initKeyFromCookie(key) {
            var usageCookie = _Cookie2.default.get(key);
            currentVals[key] = usageCookie ? usageCookie : '';
        }

        /**
         * Get value for a given question and a given field for that question
         * @param {string} questionKey indicates which options question to use
         * @param {string} fieldKey indicates which field of that question to use
         */

    }, {
        key: 'valForKeyAndField',
        value: function valForKeyAndField(questionKey, fieldKey) {
            if (!settingsSection || !settingsSection.length) return null;
            var question = settingsSection.find(function (question) {
                return question.key === questionKey;
            });
            if (!question || !question[fieldKey]) return null;
            return question[fieldKey];
        }

        // ****************************************
        // functions called from outside InitialOptions
        // ****************************************

        /**
         * Process settings object from settings.json, and initialize values
         * using cookie values
         * @param {object} settingsSectionParam JSON-derived object with entire
         * initialOptions section from settings
         */

    }, {
        key: 'initWithSettings',
        value: function initWithSettings(settingsSectionParam) {
            settingsSection = settingsSectionParam;
            if (!settingsSection) return;
            settingsSection.forEach(function (question) {
                // question is like {key: OPTION_NAME, options: [...]}
                InitialOptions.initKeyFromCookie(question.key);
            });
        }

        /**
         * Get instruction for given question
         * @param {string} key indicates which options question to use
         */

    }, {
        key: 'instructionForKey',
        value: function instructionForKey(key) {
            return InitialOptions.valForKeyAndField(key, 'instruction');
        }

        /**
         * Get question type for given question
         * @param {string} key indicates which options question to use
         */

    }, {
        key: 'optionTypeForKey',
        value: function optionTypeForKey(key) {
            var type = InitialOptions.valForKeyAndField(key, 'type');
            if (!type) {
                type = 'text'; // default
            }
            return type;
        }

        /**
         * Get array of posible value choices for given question.
         * If question depends on a previous response, use that response to
         * determine which value choices to show.
         * @param {string} key indicates which options question to use
         */

    }, {
        key: 'optionsForKey',
        value: function optionsForKey(key) {
            if (!settingsSection || !settingsSection.length) return null;
            var question = settingsSection.find(function (question) {
                return question.key === key;
            });
            if (!question || !question.values) return null;
            var valuesKey = 'default';
            if (question.dependsOn) {
                var prevSelection = currentVals[question.dependsOn];
                if (question.values[prevSelection]) valuesKey = prevSelection;
            }
            if (!question.values[valuesKey] || !question.values[valuesKey].length) return null;
            return question.values[valuesKey];
        }

        /**
         * Checks if all of the questions have options set. If any question doesn't
         * have a cookie value set, or if it needs to be asked every time the app
         * starts and hasn't yet, return false.
         */

    }, {
        key: 'allQuestionsAnswered',
        value: function allQuestionsAnswered() {
            if (!settingsSection || !settingsSection.length) return true;
            settingsSection.forEach(function (question) {
                if (!InitialOptions.isAnswered(question)) {
                    return false;
                }
            });
            return true;
        }

        /**
         * Gets next question that needs to be asked
         */

    }, {
        key: 'nextUnansweredQuestion',
        value: function nextUnansweredQuestion() {
            if (!settingsSection || !settingsSection.length) return null;
            var nextUnansweredQuestion = settingsSection.find(function (question) {
                return !InitialOptions.isAnswered(question);
            });
            if (nextUnansweredQuestion) return nextUnansweredQuestion.key;
            return null;
        }

        /**
         * Returns the object of current values
         */

    }, {
        key: 'getCurrentVals',
        value: function getCurrentVals() {
            return currentVals;
        }

        /**
         * Set an options value in both cookie, and local object.
         * @param {string} key indicates which options question this value is for
         * @param {string} value option chosen by user
         */

    }, {
        key: 'setValue',
        value: function setValue(key, value) {
            currentVals[key] = value;
            _Cookie2.default.set(key, currentVals[key]);
            answeredThisSession[key] = true;
        }
    }]);

    return InitialOptions;
}();

exports.default = InitialOptions;

/***/ }),

/***/ "./src/utils/Localization.js":
/*!***********************************!*\
  !*** ./src/utils/Localization.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Cookie = __webpack_require__(/*! ./Cookie */ "./src/utils/Cookie.js");

var _Cookie2 = _interopRequireDefault(_Cookie);

var _intl = __webpack_require__(/*! intl */ "./node_modules/intl/index.js");

var _intl2 = _interopRequireDefault(_intl);

var _IO = __webpack_require__(/*! ../tablet/IO */ "./src/tablet/IO.js");

var _IO2 = _interopRequireDefault(_IO);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

if (!window.Intl) {
    window.Intl = _intl2.default;
}

__webpack_require__(/*! intl/locale-data/jsonp/ca.js */ "./node_modules/intl/locale-data/jsonp/ca.js");
__webpack_require__(/*! intl/locale-data/jsonp/de.js */ "./node_modules/intl/locale-data/jsonp/de.js");
__webpack_require__(/*! intl/locale-data/jsonp/en.js */ "./node_modules/intl/locale-data/jsonp/en.js");
__webpack_require__(/*! intl/locale-data/jsonp/es.js */ "./node_modules/intl/locale-data/jsonp/es.js");
__webpack_require__(/*! intl/locale-data/jsonp/fr.js */ "./node_modules/intl/locale-data/jsonp/fr.js");
__webpack_require__(/*! intl/locale-data/jsonp/it.js */ "./node_modules/intl/locale-data/jsonp/it.js");
__webpack_require__(/*! intl/locale-data/jsonp/nl.js */ "./node_modules/intl/locale-data/jsonp/nl.js");
__webpack_require__(/*! intl/locale-data/jsonp/ja.js */ "./node_modules/intl/locale-data/jsonp/ja.js");
__webpack_require__(/*! intl/locale-data/jsonp/pt.js */ "./node_modules/intl/locale-data/jsonp/pt.js");
__webpack_require__(/*! intl/locale-data/jsonp/sv.js */ "./node_modules/intl/locale-data/jsonp/sv.js");
__webpack_require__(/*! intl/locale-data/jsonp/th.js */ "./node_modules/intl/locale-data/jsonp/th.js");
__webpack_require__(/*! intl/locale-data/jsonp/zh.js */ "./node_modules/intl/locale-data/jsonp/zh.js");

__webpack_require__(/*! expose-loader?IntlMessageFormat!intl-messageformat */ "./node_modules/expose-loader/index.js?IntlMessageFormat!./node_modules/intl-messageformat/index.js-exposed");
__webpack_require__(/*! intl-messageformat/dist/locale-data/ca */ "./node_modules/intl-messageformat/dist/locale-data/ca.js");
__webpack_require__(/*! intl-messageformat/dist/locale-data/de */ "./node_modules/intl-messageformat/dist/locale-data/de.js");
__webpack_require__(/*! intl-messageformat/dist/locale-data/en */ "./node_modules/intl-messageformat/dist/locale-data/en.js");
__webpack_require__(/*! intl-messageformat/dist/locale-data/es */ "./node_modules/intl-messageformat/dist/locale-data/es.js");
__webpack_require__(/*! intl-messageformat/dist/locale-data/fr */ "./node_modules/intl-messageformat/dist/locale-data/fr.js");
__webpack_require__(/*! intl-messageformat/dist/locale-data/it */ "./node_modules/intl-messageformat/dist/locale-data/it.js");
__webpack_require__(/*! intl-messageformat/dist/locale-data/nl */ "./node_modules/intl-messageformat/dist/locale-data/nl.js");
__webpack_require__(/*! intl-messageformat/dist/locale-data/ja */ "./node_modules/intl-messageformat/dist/locale-data/ja.js");
__webpack_require__(/*! intl-messageformat/dist/locale-data/pt */ "./node_modules/intl-messageformat/dist/locale-data/pt.js");
__webpack_require__(/*! intl-messageformat/dist/locale-data/sv */ "./node_modules/intl-messageformat/dist/locale-data/sv.js");
__webpack_require__(/*! intl-messageformat/dist/locale-data/th */ "./node_modules/intl-messageformat/dist/locale-data/th.js");
__webpack_require__(/*! intl-messageformat/dist/locale-data/zh */ "./node_modules/intl-messageformat/dist/locale-data/zh.js");

var currentLocale = void 0;
var localizationMessages = {};

// Configuration
var sampleKeyPrefix = 'key_';

var Localization = function () {
    function Localization() {
        _classCallCheck(this, Localization);
    }

    _createClass(Localization, null, [{
        key: 'determineLocaleFromBrowser',


        // Take the browser's reported locale from navigator.language
        // Normalize this value and find a match in supportedLocales
        // If we support a similar language but not the specific one, it's returned.
        // E.g., if we support 'en-US' but not 'en-GB', the user gets 'en-US'
        // The match in supported locales (or the default locale) is returned.
        value: function determineLocaleFromBrowser() {
            var defaultLocale = window.Settings.defaultLocale;
            var supportedLocales = window.Settings.supportedLocales;

            var localizationLanguage = window.navigator.userLanguage || window.navigator.language || 'en-us';

            var localizationLanguageParts = localizationLanguage.split('-');
            // Capitalize last part of localization for includes
            localizationLanguageParts[localizationLanguageParts.length - 1] = localizationLanguageParts[localizationLanguageParts.length - 1].toUpperCase();

            var desiredLocale = localizationLanguageParts.join('-');
            if (desiredLocale in Object.keys(supportedLocales)) {
                return desiredLocale;
            }

            // We're not supporting this locale yet - do we support an ancestor?
            for (var localeKey in supportedLocales) {
                var supportedLocale = supportedLocales[localeKey];
                var parts = supportedLocale.split('-');
                if (parts[0] == localizationLanguageParts[0]) {
                    return supportedLocale; // Top-level is the same
                }
            }

            return defaultLocale;
        }

        // Include locale support files and load the messages
        // Call this when the app is initialized

    }, {
        key: 'includeLocales',
        value: function includeLocales(localizationRoot, whenDone) {
            var localizationCookie = _Cookie2.default.get('localization');

            if (localizationCookie === null) {
                currentLocale = this.determineLocaleFromBrowser();
            } else {
                currentLocale = localizationCookie;
            }
            var topLevel = currentLocale.split('-')[0];
            if (topLevel === 'zh' || topLevel === 'pt') {
                // need to handle locale in addition to language code for Chinese,
                // and Portuguese, ensure it's lower case to match filename
                topLevel = currentLocale.toLowerCase();
            }

            // Get messages
            _IO2.default.requestFromServer(localizationRoot + 'localizations/' + topLevel + '.json', function (result) {
                localizationMessages = JSON.parse(result);
                whenDone();
            });
        }

        // Translate a particular message given the message key and info

    }, {
        key: 'localize',
        value: function localize(key, formatting) {
            var message;
            if (key in localizationMessages) {
                message = new window.IntlMessageFormat(localizationMessages[key], currentLocale);
                return message.format(formatting);
            }
            return 'String missing: ' + key;
        }
    }, {
        key: 'localizeSampleName',
        value: function localizeSampleName(key) {
            var name = Localization.localizeOptional('SAMPLE_' + key);
            // If the localized name is still started with 'SAMPLE_',
            // it is not a preset name.
            if (name.startsWith('SAMPLE_')) {
                return key;
            }
            return name;
        }

        // Translate a particular message given the message key and info;
        // if key not found, assume it's just a raw text string without a translation,
        // and return that

    }, {
        key: 'localizeOptional',
        value: function localizeOptional(keyOrRawText, formatting) {
            var message;
            if (keyOrRawText in localizationMessages) {
                message = new window.IntlMessageFormat(localizationMessages[keyOrRawText], currentLocale);
                return message.format(formatting);
            }
            return keyOrRawText;
        }

        // For sample projects, some fields (sprite names, text on stage, and text in say blocks)
        // may have a special prefix to indicate that it should be replaced with a localized value.
        // E.g., we might have some text on the stage that says "Touch me" in English. This gets translated.

    }, {
        key: 'isSampleLocalizedKey',
        value: function isSampleLocalizedKey(str) {
            return str.slice(0, sampleKeyPrefix.length) == sampleKeyPrefix;
        }
    }, {
        key: 'currentLocale',
        get: function get() {
            return currentLocale;
        }
    }]);

    return Localization;
}();

exports.default = Localization;

/***/ }),

/***/ "./src/utils/SVG2Canvas.js":
/*!*********************************!*\
  !*** ./src/utils/SVG2Canvas.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Vector = __webpack_require__(/*! ../geom/Vector */ "./src/geom/Vector.js");

var _Vector2 = _interopRequireDefault(_Vector);

var _lib = __webpack_require__(/*! ./lib */ "./src/utils/lib.js");

var _SVGImage = __webpack_require__(/*! ../painteditor/SVGImage */ "./src/painteditor/SVGImage.js");

var _SVGImage2 = _interopRequireDefault(_SVGImage);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var endp = void 0;
var startp = void 0;
var curveoptions = ['C', 'c', 's', 'S'];
var qcurveoptions = ['Q', 'q', 'T', 't'];
var acurve = false;
var aqcurve = false;
var lastcxy = void 0;
var svgerror = void 0;

var strokevalues = {
    'stroke-width': 1,
    'stroke-linecap': 'butt',
    'stroke': 'rgba(0, 0, 0,0)',
    'stroke-linejoin': 'miter',
    'stroke-miterlimit': 4,
    'stroke-dasharray': 'none',
    'stroke-dashoffset': 0,
    'stroke-opacity': 1
};

////////////////////////////////////////////////////////
//  Drawing  Mask and Objects
////////////////////////////////////////////////////////

var SVG2Canvas = function () {
    function SVG2Canvas() {
        _classCallCheck(this, SVG2Canvas);
    }

    _createClass(SVG2Canvas, null, [{
        key: 'drawInCanvas',
        value: function drawInCanvas(spr) {
            svgerror = false;
            (0, _lib.setCanvasSize)(spr.outline, spr.originalImg.width, spr.originalImg.height);
            var ctx = spr.outline.getContext('2d');
            SVG2Canvas.drawImage(spr.svg, ctx);
        }
    }, {
        key: 'drawLayers',
        value: function drawLayers(svg, ctx, fcn) {
            for (var i = 0; i < svg.childElementCount; i++) {
                var elem = svg.childNodes[i];
                fcn(elem, ctx);
            }
        }
    }, {
        key: 'drawImage',
        value: function drawImage(svg, ctx) {
            for (var i = 0; i < svg.childElementCount; i++) {
                SVG2Canvas.drawLayer(svg.childNodes[i], ctx);
            }
        }
    }, {
        key: 'drawLayer',
        value: function drawLayer(elem, ctx) {
            // svg no fill means black
            ctx.fillStyle = !elem.getAttribute('fill') ? 'black' : elem.getAttribute('fill') == 'none' ? 'rgba(0, 0, 0,0)' : elem.getAttribute('fill');
            if (elem.getAttribute('opacity')) {
                ctx.fillStyle = (0, _lib.colorToRGBA)(ctx.fillStyle, elem.getAttribute('opacity'));
            }
            ctx.strokeStyle = !elem.getAttribute('stroke') ? 'rgba(0, 0, 0,0)' : elem.getAttribute('stroke');
            ctx.lineCap = elem.getAttribute('stroke-linecap') ? elem.getAttribute('stroke-linecap') : SVG2Canvas.strokevalues['stroke-linecap'];
            ctx.lineWidth = elem.getAttribute('stroke-width') ? Number(elem.getAttribute('stroke-width')) : Number(SVG2Canvas.strokevalues['stroke-width']);
            ctx.miterLimit = elem.getAttribute('stroke-miterlimit') ? elem.getAttribute('stroke-miterlimit') : SVG2Canvas.strokevalues['stroke-miterlimit'];
            ctx.linejoin = elem.getAttribute('stroke-linejoin') ? elem.getAttribute('stroke-linejoin') : SVG2Canvas.strokevalues['stroke-linejoin'];
            SVG2Canvas.processXMLnode(elem, ctx, SVG2Canvas.drawLayer);
        }
    }, {
        key: 'drawElementHole',
        value: function drawElementHole(elem, ctx) {
            ctx.fillStyle = !elem.getAttribute('fill') || elem.getAttribute('fill') == 'none' ? 'black' : elem.getAttribute('fill');
            ctx.strokeStyle = !elem.getAttribute('stroke') ? 'rgba(0, 0, 0,0)' : elem.getAttribute('stroke');
            ctx.lineCap = elem.getAttribute('stroke-linecap') ? elem.getAttribute('stroke-linecap') : SVG2Canvas.strokevalues['stroke-linecap'];
            ctx.lineWidth = elem.getAttribute('stroke-width') ? Number(elem.getAttribute('stroke-width')) : Number(SVG2Canvas.strokevalues['stroke-width']);
            ctx.miterLimit = elem.getAttribute('stroke-miterlimit') ? elem.getAttribute('stroke-miterlimit') : SVG2Canvas.strokevalues['stroke-miterlimit'];
            ctx.linejoin = elem.getAttribute('stroke-linejoin') ? elem.getAttribute('stroke-linejoin') : SVG2Canvas.strokevalues['stroke-linejoin'];
            if (elem.tagName) {
                SVG2Canvas.processXMLnode(elem, ctx, SVG2Canvas.drawElementHole);
            } else {
                // drawElementMask no tag name
            }
        }
    }, {
        key: 'drawElementMask',
        value: function drawElementMask(elem, ctx) {
            if (elem.nodeName == 'image') {
                return;
            }
            if (elem.nodeName == 'clipPath') {
                return;
            }
            if (elem.id.indexOf('pathborder_image') > -1) {
                ctx.fillStyle = 'white';
            } else {
                ctx.fillStyle = elem.getAttribute('fill') == 'none' ? 'rgba(0, 0, 0,0)' : 'white';
            }
            ctx.strokeStyle = elem.getAttribute('stroke') ? 'white' : 'rgba(0, 0, 0,0)';
            ctx.lineCap = elem.getAttribute('stroke-linecap') ? elem.getAttribute('stroke-linecap') : SVG2Canvas.strokevalues['stroke-linecap'];
            ctx.lineWidth = elem.getAttribute('stroke-width') ? Number(elem.getAttribute('stroke-width')) : Number(SVG2Canvas.strokevalues['stroke-width']);
            ctx.miterLimit = elem.getAttribute('stroke-miterlimit') ? elem.getAttribute('stroke-miterlimit') : SVG2Canvas.strokevalues['stroke-miterlimit'];
            ctx.linejoin = elem.getAttribute('stroke-linejoin') ? elem.getAttribute('stroke-linejoin') : SVG2Canvas.strokevalues['stroke-linejoin'];
            SVG2Canvas.processXMLnode(elem, ctx, SVG2Canvas.drawElementMask);
        }
    }, {
        key: 'drawElementOutline',
        value: function drawElementOutline(elem, ctx) {
            if (elem.nodeName == 'image') {
                return;
            }
            if (elem.nodeName == 'clipPath') {
                return;
            }
            if (elem.id.indexOf('pathborder_image') > -1) {
                ctx.fillStyle = window.Settings.spriteOutlineColor;
            } else {
                ctx.fillStyle = elem.getAttribute('fill') == 'none' ? 'rgba(0, 0, 0,0)' : window.Settings.spriteOutlineColor;
            }
            ctx.strokeStyle = window.Settings.spriteOutlineColor;
            ctx.lineCap = 'round';
            ctx.lineWidth = elem.getAttribute('stroke-width') ? Number(elem.getAttribute('stroke-width')) + 12 : 12;
            ctx.miterLimit = 2;
            ctx.linejoin = 'round';
            SVG2Canvas.processXMLnode(elem, ctx, SVG2Canvas.drawElementOutline);
        }
    }, {
        key: 'drawBorder',
        value: function drawBorder(svg, ctx) {
            for (var i = 0; i < svg.childElementCount; i++) {
                SVG2Canvas.drawElementOutline(svg.childNodes[i], ctx);
            }
        }
    }, {
        key: 'drawWaterMark',
        value: function drawWaterMark(svg, ctx) {
            for (var i = 0; i < svg.childElementCount; i++) {
                var elem = svg.childNodes[i];
                if (elem.tagName == 'g') {
                    SVG2Canvas.drawWaterMark(elem, ctx);
                } else {
                    SVG2Canvas.drawObjectWaterMark(elem, ctx);
                }
            }
        }
    }, {
        key: 'drawObjectWaterMark',
        value: function drawObjectWaterMark(elem, ctx) {
            if (elem.nodeName == 'image') {
                return;
            }
            if (elem.nodeName == 'clipPath') {
                return;
            }
            if (elem.id.indexOf('pathborder_image') > -1) {
                ctx.fillStyle = 'black';
            }
            var fill = elem.getAttribute('fill');
            ctx.fillStyle = fill == 'none' ? 'rgba(0, 0, 0,0)' : 'black';
            ctx.strokeStyle = elem.getAttribute('stroke') ? 'black' : 'rgba(0, 0, 0,0)';
            ctx.lineCap = 'round';
            ctx.lineWidth = elem.getAttribute('stroke-width') ? Number(elem.getAttribute('stroke-width')) : Number(SVG2Canvas.strokevalues['stroke-width']);
            ctx.miterLimit = elem.getAttribute('stroke-miterlimit') ? elem.getAttribute('stroke-miterlimit') : SVG2Canvas.strokevalues['stroke-miterlimit'];
            ctx.linejoin = 'round';
            if (ctx.lineWidth < 2) {
                ctx.lineWidth = 2;
            }
            ctx.save();
            SVG2Canvas.processXMLnode(elem, ctx);
            ctx.restore();
            if (skipFill()) {
                return;
            }
            ctx.save();
            ctx.fillStyle = 'white';
            ctx.strokeStyle = 'rgba(0, 0, 0,0)';
            ctx.globalCompositeOperation = 'destination-out';
            SVG2Canvas.processXMLnode(elem, ctx);
            ctx.restore();
            function skipFill() {
                if (elem.id.indexOf('pathborder_image') > -1) {
                    return false;
                }
                if (fill == 'none') {
                    return true;
                }
                if (!fill) {
                    return true;
                }
                if (fill == '#080808' || fill == '#000000') {
                    return true;
                }
                if (fill == 'rgba(0, 0, 0, 0)') {
                    return true;
                }
                var brightness = (0, _lib.rgb2hsb)(fill)[2];
                return brightness < 0.25;
            }
        }

        ////////////////////////////////////////////////////////
        //  Drawing SVG path commands
        ////////////////////////////////////////////////////////


    }, {
        key: 'processXMLnode',
        value: function processXMLnode(elem, ctx, fcn) {
            if (!elem) {
                return;
            }
            switch (elem.tagName) {
                case 'g':
                    SVG2Canvas.drawLayers(elem, ctx, fcn);
                    break;
                case 'text':
                    SVG2Canvas.drawText(elem, ctx);
                    break;
                case 'image':
                    var p = elem.parentNode;
                    while (p.tagName != 'svg') {
                        p = p.parentNode;
                    }
                    // Note: previously, we used only p.getElementById(targetPath)
                    // In iOS 9, this broke and started returning null.
                    // getElementsByTagName('path') includes the right element, so we
                    // iterate through those and find the one with the matching ID.
                    var targetPathId = 'pathborder_' + elem.id;
                    var targetPathElement = p.getElementById(targetPathId);
                    if (!targetPathElement) {
                        var paths = p.getElementsByTagName('path');
                        for (var i = 0; i < paths.length; i++) {
                            if (paths[i].id == targetPathId) {
                                targetPathElement = paths[i];
                            }
                        }
                    }
                    _SVGImage2.default.draw(elem, targetPathElement, ctx);
                    break;
                case 'clipPath':
                    break;
                case 'line':
                    SVG2Canvas.drawLine(elem, ctx);
                    break;
                case 'rect':
                    SVG2Canvas.drawRect(elem, ctx);
                    break;
                case 'ellipse':
                    SVG2Canvas.drawEllipse(elem, ctx);
                    break;
                case 'circle':
                    SVG2Canvas.drawCircle(elem, ctx);
                    break;
                case 'polygon':
                    SVG2Canvas.drawStraightLines(elem, ctx);
                    break;
                case 'path':
                    SVG2Canvas.renderPath(elem, ctx);
                    break;
                case 'polyline':
                    SVG2Canvas.drawPolyline(elem, ctx);
                    break;
                default:
                    svgerror = true;
                    break;
            }
        }
    }, {
        key: 'drawRect',
        value: function drawRect(shape, ctx) {
            ctx.save();
            var x = Number(shape.getAttribute('x'));
            var y = Number(shape.getAttribute('y'));
            var w = Number(shape.getAttribute('width'));
            var h = Number(shape.getAttribute('height'));
            if (ctx.strokeStyle && ctx.strokeStyle != 'rgba(0, 0, 0,0)') {
                ctx.strokeRect(x, y, w, h);
            }
            if (ctx.fillStyle && ctx.fillStyle != 'rgba(0, 0, 0,0)') {
                ctx.fillRect(x, y, w, h);
            }
            ctx.restore();
        }
    }, {
        key: 'drawLine',
        value: function drawLine(shape, ctx) {
            var x1 = Number(shape.getAttribute('x1'));
            var y1 = Number(shape.getAttribute('y1'));
            var x2 = Number(shape.getAttribute('x2'));
            var y2 = Number(shape.getAttribute('y2'));
            ctx.beginPath();
            ctx.moveTo(x1, y1);
            ctx.lineTo(x2, y2);
            ctx.stroke();
            ctx.closePath();
        }
    }, {
        key: 'drawEllipse',
        value: function drawEllipse(shape, ctx) {
            var rx = Number(shape.getAttribute('rx'));
            var ry = Number(shape.getAttribute('ry'));
            var cx = Number(shape.getAttribute('cx'));
            var cy = Number(shape.getAttribute('cy'));
            var kappa = (Math.sqrt(2) - 1) / 3 * 4;
            var d = [['M', cx - rx, cy], ['C', cx - rx, cy - ry * kappa, cx - rx * kappa, cy - ry, cx, cy - ry], ['C', cx + rx * kappa, cy - ry, cx + rx, cy - ry * kappa, cx + rx, cy], ['C', cx + rx, cy + ry * kappa, cx + rx * kappa, cy + ry, cx, cy + ry], ['C', cx - rx * kappa, cy + ry, cx - rx, cy + ry * kappa, cx - rx, cy]];
            d = SVG2Canvas.arrayToString(d);
            var commands = SVG2Canvas.getCommandList(d);
            if (!commands) {
                return;
            }
            acurve = false;
            aqcurve = false;
            ctx.save();
            ctx.beginPath();
            for (var i = 0; i < commands.length; i++) {
                SVG2Canvas.drawCommand(ctx, commands[i]);
            }
            if (commands[commands.length - 1].indexOf('z') > -1) {
                ctx.closePath();
            }
            ctx.fill();
            ctx.stroke();
            ctx.restore();
        }
    }, {
        key: 'drawCircle',
        value: function drawCircle(shape, ctx) {
            var r = Number(shape.getAttribute('r'));
            var cx = Number(shape.getAttribute('cx'));
            var cy = Number(shape.getAttribute('cy'));
            ctx.save();
            ctx.beginPath();
            ctx.arc(cx, cy, r, 0, Math.PI * 2, false);
            ctx.closePath();
            ctx.fill();
            ctx.stroke();
            ctx.restore();
        }
    }, {
        key: 'drawText',
        value: function drawText(kid, ctx) {
            ctx.font = kid.getAttribute('font-weight') + ' ' + kid.getAttribute('font-size') + 'px ' + kid.getAttribute('font-family');
            ctx.textAlign = 'left';
            ctx.textBaseline = 'top';
            ctx.fillText(kid.textContent, 0, 0);
        }
    }, {
        key: 'renderPath',
        value: function renderPath(spr, ctx) {
            var d = spr.getAttribute('d');
            var commands = SVG2Canvas.getCommandList(d);
            if (!commands) {
                return;
            }
            acurve = false;
            aqcurve = false;
            ctx.save();
            ctx.beginPath();
            for (var i = 0; i < commands.length; i++) {
                SVG2Canvas.drawCommand(ctx, commands[i]);
            }
            if (commands[commands.length - 1].indexOf('z') > -1) {
                ctx.closePath();
            }
            ctx.fill();
            // fixing ios8 bug
            if (ctx.globalCompositeOperation != 'destination-in') {
                ctx.stroke();
            }
            // end of fix
            ctx.restore();
        }
    }, {
        key: 'renderPathTips',
        value: function renderPathTips(spr, ctx) {
            var d = spr.getAttribute('d');
            var commands = SVG2Canvas.getCommandList(d);
            if (!commands) {
                return;
            }
            acurve = false;
            aqcurve = false;
            SVG2Canvas.getAbsoluteCommand(commands[0]);
            SVG2Canvas.drawTip(ctx, endp.x, endp.y, 4);
            for (var i = 1; i < commands.length; i++) {
                SVG2Canvas.getAbsoluteCommand(commands[i]);
            }
            SVG2Canvas.drawTip(ctx, endp.x, endp.y, 4);
            ctx.restore();
        }
    }, {
        key: 'drawTip',
        value: function drawTip(ctx, cx, cy, r) {
            ctx.save();
            ctx.beginPath();
            ctx.arc(cx, cy, r, 0, Math.PI * 2, false);
            ctx.closePath();
            ctx.fill();
            ctx.stroke();
            ctx.restore();
        }
    }, {
        key: 'getLastPathCommand',
        value: function getLastPathCommand(spr) {
            var d = spr.getAttribute('d');
            var commands = d.match(/[A-DF-Za-df-z][^A-Za-df-z]*/g);
            return commands.length > 0 ? commands[commands.length - 1].charAt(0) : null;
        }
    }, {
        key: 'isCloseDPath',
        value: function isCloseDPath(elem) {
            if (elem.tagName != 'path') {
                return true;
            }
            if (SVG2Canvas.isCompoundPath(elem)) {
                return true;
            }
            var d = elem.getAttribute('d');
            var commands = d.match(/[A-DF-Za-df-z][^A-Za-df-z]*/g);
            if (commands.length < 2) {
                return false;
            }
            var lastCmd = commands[commands.length - 1];
            if (lastCmd.charAt(0) == 'z') {
                return true;
            }
            if (commands.length < 4) {
                return false;
            }
            var firstCmd = commands[0];

            if (lastCmd.charAt(0).toLocaleUpperCase() != lastCmd.charAt(0)) {
                return false;
            }
            var firstdata = SVG2Canvas.splitNumericArgs(firstCmd.substr(1, firstCmd.length));
            var lastdata = SVG2Canvas.splitNumericArgs(lastCmd.substr(1, lastCmd.length));

            if (firstdata.length < 2) {
                return false;
            }
            if (lastdata.length < 2) {
                return false;
            }

            var pt1 = {
                x: firstdata[firstdata.length - 2],
                y: firstdata[firstdata.length - 1]
            };
            var pt2 = {
                x: lastdata[lastdata.length - 2],
                y: lastdata[lastdata.length - 1]
            };
            return _Vector2.default.len(_Vector2.default.diff(pt1, pt2)) < 10;
        }
    }, {
        key: 'isCompoundPath',
        value: function isCompoundPath(shape) {
            var paths = shape.getAttribute('d').match(/[M][^M]*/g);
            if (!paths) {
                return false;
            }
            return paths.length > 1;
        }
    }, {
        key: 'drawCommand',
        value: function drawCommand(ctx, cmd) {
            var key = cmd[0];
            dispatchDrawCmd[key](ctx, cmd);
            acurve = curveoptions.indexOf(cmd[0]) > -1;
            aqcurve = qcurveoptions.indexOf(cmd[0]) > -1;
        }
    }, {
        key: 'splitNumericArgs',
        value: function splitNumericArgs(str) {
            var res = [];
            if (!str) {
                return res;
            }
            var list = str.match(/(?:\+|-)?\d+(?:\.\d+)?(?:e(?:\+|-)?\d+)?/g);
            for (var i = 0; i < list.length; i++) {
                res.push(Number(list[i]));
            }
            return res;
        }

        // moves

    }, {
        key: 'absoulteMove',
        value: function absoulteMove(ctx, cmd) {
            endp = {
                x: cmd[1],
                y: cmd[2]
            };
            ctx.moveTo(endp.x, endp.y);
            startp = endp;
        }
    }, {
        key: 'relativeMove',
        value: function relativeMove(ctx, cmd) {
            endp = _Vector2.default.sum(endp, {
                x: cmd[1],
                y: cmd[2]
            });
            ctx.moveTo(endp.x, endp.y);
            startp = endp;
        }

        // lines

    }, {
        key: 'closePath',
        value: function closePath(ctx) {
            endp = startp;
            ctx.lineTo(endp.x, endp.y);
        }
    }, {
        key: 'absoluteLine',
        value: function absoluteLine(ctx, cmd) {
            endp = {
                x: cmd[1],
                y: cmd[2]
            };
            ctx.lineTo(endp.x, endp.y);
        }
    }, {
        key: 'relativeLine',
        value: function relativeLine(ctx, cmd) {
            endp = _Vector2.default.sum(endp, {
                x: cmd[1],
                y: cmd[2]
            });
            ctx.lineTo(endp.x, endp.y);
        }
    }, {
        key: 'absoluteHLine',
        value: function absoluteHLine(ctx, cmd) {
            var dx = cmd[1];
            endp = {
                x: dx,
                y: endp.y
            };
            ctx.lineTo(endp.x, endp.y);
        }
    }, {
        key: 'relativeHLine',
        value: function relativeHLine(ctx, cmd) {
            var dx = endp.x + cmd[1];
            endp = {
                x: dx,
                y: endp.y
            };
            ctx.lineTo(endp.x, endp.y);
        }
    }, {
        key: 'absoluteVLine',
        value: function absoluteVLine(ctx, cmd) {
            var dy = cmd[1];
            endp = {
                x: endp.x,
                y: dy
            };
            ctx.lineTo(endp.x, endp.y);
        }
    }, {
        key: 'relativeVLine',
        value: function relativeVLine(ctx, cmd) {
            var dy = endp.y + cmd[1];
            endp = {
                x: endp.x,
                y: dy
            };
            ctx.lineTo(endp.x, endp.y);
        }

        // curves

    }, {
        key: 'absoluteCurve',
        value: function absoluteCurve(ctx, cmd) {
            ctx.bezierCurveTo(cmd[1], cmd[2], cmd[3], cmd[4], cmd[5], cmd[6]);
            lastcxy = {
                x: cmd[3],
                y: cmd[4]
            };
            endp = {
                x: cmd[5],
                y: cmd[6]
            };
        }
    }, {
        key: 'relativeCurve',
        value: function relativeCurve(ctx, cmd) {
            var pt1 = {
                x: cmd[1],
                y: cmd[2]
            };
            var pt2 = {
                x: cmd[3],
                y: cmd[4]
            };
            var pt3 = {
                x: cmd[5],
                y: cmd[6]
            };
            var c1 = _Vector2.default.sum(endp, pt1);
            var c2 = _Vector2.default.sum(endp, pt2);
            lastcxy = c2;
            var endat = _Vector2.default.sum(endp, pt3);
            ctx.bezierCurveTo(c1.x, c1.y, c2.x, c2.y, endat.x, endat.y);
            endp = endat;
        }
    }, {
        key: 'absoluteSmooth',
        value: function absoluteSmooth(ctx, cmd) {
            var c1 = acurve ? _Vector2.default.sum(endp, _Vector2.default.diff(endp, lastcxy)) : endp;
            var c2 = {
                x: cmd[1],
                y: cmd[2]
            };
            var endat = {
                x: cmd[3],
                y: cmd[4]
            };
            ctx.bezierCurveTo(c1.x, c1.y, c2.x, c2.y, endat.x, endat.y);
            endp = endat;
            lastcxy = c2;
        }
    }, {
        key: 'relativeSmooth',
        value: function relativeSmooth(ctx, cmd) {
            var c1 = acurve ? _Vector2.default.sum(endp, _Vector2.default.diff(endp, lastcxy)) : endp;
            var c2 = _Vector2.default.sum(endp, {
                x: cmd[1],
                y: cmd[2]
            });
            var endat = _Vector2.default.sum(endp, {
                x: cmd[3],
                y: cmd[4]
            });
            ctx.bezierCurveTo(c1.x, c1.y, c2.x, c2.y, endat.x, endat.y);
            endp = endat;
            lastcxy = c2;
        }

        // 	Quadratic

    }, {
        key: 'absoluteQCurve',
        value: function absoluteQCurve(ctx, cmd) {
            var c1 = {
                x: cmd[1],
                y: cmd[2]
            };
            endp = {
                x: cmd[3],
                y: cmd[4]
            };
            ctx.quadraticCurveTo(c1.x, c1.y, endp.x, endp.y);
            lastcxy = c1;
        }
    }, {
        key: 'relativeQCurve',
        value: function relativeQCurve(ctx, cmd) {
            var c1 = _Vector2.default.sum(endp, {
                x: cmd[1],
                y: cmd[2]
            });
            endp = _Vector2.default.sum(endp, {
                x: cmd[3],
                y: cmd[4]
            });
            lastcxy = c1;
            ctx.quadraticCurveTo(c1.x, c1.y, endp.x, endp.y);
        }
    }, {
        key: 'absoluteQSmooth',
        value: function absoluteQSmooth(ctx, cmd) {
            var c1 = aqcurve ? _Vector2.default.sum(endp, _Vector2.default.diff(endp, lastcxy)) : endp;
            endp = {
                x: cmd[1],
                y: cmd[2]
            };
            lastcxy = c1;
            ctx.quadraticCurveTo(c1.x, c1.y, endp.x, endp.y);
        }
    }, {
        key: 'relativeQSmooth',
        value: function relativeQSmooth(ctx, cmd) {
            var c1 = aqcurve ? _Vector2.default.sum(endp, _Vector2.default.diff(endp, lastcxy)) : endp;
            endp = _Vector2.default.sum(endp, {
                x: cmd[1],
                y: cmd[2]
            });
            lastcxy = c1;
            ctx.quadraticCurveTo(c1.x, c1.y, endp.x, endp.y);
        }

        ////////////////////////////////////////
        // Drawing Polygon
        ////////////////////////////////////////

    }, {
        key: 'drawStraightLines',
        value: function drawStraightLines(elem, ctx) {
            var points = elem.points;
            ctx.save();
            ctx.beginPath();
            ctx.moveTo(points.getItem(0).x, points.getItem(0).y);
            for (var i = 1; i < points.numberOfItems; i++) {
                ctx.lineTo(points.getItem(i).x, points.getItem(i).y);
            }
            ctx.lineTo(points.getItem(0).x, points.getItem(0).y);
            ctx.closePath();
            ctx.fill();
            ctx.stroke();
            ctx.restore();
        }
    }, {
        key: 'drawPolyline',
        value: function drawPolyline(elem, ctx) {
            var points = elem.points;
            ctx.save();
            ctx.beginPath();
            ctx.moveTo(points.getItem(0).x, points.getItem(0).y);
            for (var i = 1; i < points.numberOfItems; i++) {
                ctx.lineTo(points.getItem(i).x, points.getItem(i).y);
            }
            ctx.closePath();
            ctx.fill();
            ctx.stroke();
            ctx.restore();
        }

        ////////////////////////////////////////////////////
        // Relative to Absolute Path conversion
        ///////////////////////////////////////////////////

    }, {
        key: 'setAbsolutePath',
        value: function setAbsolutePath(spr) {
            var d = spr.getAttribute('d');
            var commands = SVG2Canvas.getCommandList(d);
            if (!commands) {
                return;
            }
            var absolute = SVG2Canvas.getAbsoluteCommands(commands);
            var path = SVG2Canvas.arrayToString(absolute);
            spr.setAttribute('d', path);
        }
    }, {
        key: 'getSVGcommands',
        value: function getSVGcommands(shape) {
            return SVG2Canvas.getCommandList(shape.getAttribute('d'));
        }
    }, {
        key: 'getCommandList',
        value: function getCommandList(d) {
            if (!d) {
                return null;
            }
            var commands = d.match(/[A-DF-Za-df-z][^A-Za-df-z]*/g);
            if (!commands) {
                return null;
            }
            var res = [];
            for (var i = 0; i < commands.length; i++) {
                var cmd = commands[i];
                var ct = cmd.charAt(0);
                var cmddata = ct.toLowerCase() == 'z' ? [] : SVG2Canvas.splitNumericArgs(cmd.substr(1, cmd.length));
                cmddata.unshift(ct);
                res.push(cmddata);
            }
            return res;
        }
    }, {
        key: 'arrayToString',
        value: function arrayToString(res) {
            var str = '';
            for (var i = 0; i < res.length; i++) {
                var cmd = res[i];
                str += cmd[0];
                if (cmd.length > 1) {
                    cmd.shift();
                    str += cmd.toString();
                }
            }
            return str;
        }
    }, {
        key: 'getAbsoluteCommands',
        value: function getAbsoluteCommands(list) {
            var res = [];
            for (var i = 0; i < list.length; i++) {
                res.push(SVG2Canvas.getAbsoluteCommand(list[i]));
            }
            return res;
        }
    }, {
        key: 'getAbsoluteCommand',
        value: function getAbsoluteCommand(cmd) {
            var key = cmd[0];
            acurve = curveoptions.indexOf(key) > -1;
            aqcurve = qcurveoptions.indexOf(key) > -1;
            return dispatchAbsouluteCmd[key](cmd);
        }

        // moves

    }, {
        key: 'setAbsoluteMove',
        value: function setAbsoluteMove(cmd) {
            acurve = false;
            aqcurve = false;
            endp = {
                x: cmd[1],
                y: cmd[2]
            };
            startp = endp;
            lastcxy = endp;
            return cmd;
        }
    }, {
        key: 'setRelativeMove',
        value: function setRelativeMove(cmd) {
            endp = {
                x: cmd[1],
                y: cmd[2]
            };
            startp = endp;
            return ['M', endp.x, endp.y];
        }

        // lines

    }, {
        key: 'setClosePath',
        value: function setClosePath(cmd) {
            endp = startp;
            return cmd;
        }
    }, {
        key: 'setAbsoluteLine',
        value: function setAbsoluteLine(cmd) {
            endp = {
                x: cmd[1],
                y: cmd[2]
            };
            return cmd;
        }
    }, {
        key: 'setRelativeLine',
        value: function setRelativeLine(cmd) {
            endp = _Vector2.default.sum(endp, {
                x: cmd[1],
                y: cmd[2]
            });
            return ['L', endp.x, endp.y];
        }
    }, {
        key: 'setAbsoluteHLine',
        value: function setAbsoluteHLine(cmd) {

            endp = {
                x: cmd[1],
                y: endp.y
            };
            return ['L', endp.x, endp.y];
        }
    }, {
        key: 'setRelativeHLine',
        value: function setRelativeHLine(cmd) {
            endp = {
                x: endp.x + cmd[1],
                y: endp.y
            };
            return ['L', endp.x, endp.y];
        }
    }, {
        key: 'setAbsoluteVLine',
        value: function setAbsoluteVLine(cmd) {
            endp = {
                x: endp.x,
                y: cmd[1]
            };
            return ['L', endp.x, endp.y];
        }
    }, {
        key: 'setRelativeVLine',
        value: function setRelativeVLine(cmd) {
            endp = {
                x: endp.x,
                y: endp.y + cmd[1]
            };
            return ['L', endp.x, endp.y];
        }

        // curves
        // Cubic

    }, {
        key: 'setAbsoluteCurve',
        value: function setAbsoluteCurve(cmd) {
            lastcxy = {
                x: cmd[3],
                y: cmd[4]
            };
            endp = {
                x: cmd[5],
                y: cmd[6]
            };
            return cmd;
        }
    }, {
        key: 'setRelativeCurve',
        value: function setRelativeCurve(cmd) {
            var pt1 = {
                x: cmd[1],
                y: cmd[2]
            };
            var pt2 = {
                x: cmd[3],
                y: cmd[4]
            };
            var pt3 = {
                x: cmd[5],
                y: cmd[6]
            };
            var c1 = _Vector2.default.sum(endp, pt1);
            var c2 = _Vector2.default.sum(endp, pt2);
            lastcxy = c2;
            endp = _Vector2.default.sum(endp, pt3);
            return ['C', c1.x, c1.y, c2.x, c2.y, endp.x, endp.y];
        }
    }, {
        key: 'setAbsoluteSmooth',
        value: function setAbsoluteSmooth(cmd) {
            lastcxy = {
                x: cmd[1],
                y: cmd[2]
            };
            endp = {
                x: cmd[3],
                y: cmd[4]
            };
            return cmd;
        }
    }, {
        key: 'setRelativeSmooth',
        value: function setRelativeSmooth(cmd) {
            var c1 = acurve ? _Vector2.default.sum(endp, _Vector2.default.diff(endp, lastcxy)) : endp;
            var c2 = _Vector2.default.sum(endp, {
                x: cmd[1],
                y: cmd[2]
            });
            var endat = _Vector2.default.sum(endp, {
                x: cmd[3],
                y: cmd[4]
            });
            endp = endat;
            lastcxy = c2;
            // change it to absolute "C"
            return ['C', c1.x, c1.y, c2.x, c2.y, endat.x, endat.y];
        }

        // 	Quadratic

    }, {
        key: 'setAbsoluteQCurve',
        value: function setAbsoluteQCurve(cmd) {
            lastcxy = {
                x: cmd[1],
                y: cmd[2]
            };
            endp = {
                x: cmd[3],
                y: cmd[4]
            };
            return cmd;
        }
    }, {
        key: 'setRelativeQCurve',
        value: function setRelativeQCurve(cmd) {
            lastcxy = _Vector2.default.sum(endp, {
                x: cmd[1],
                y: cmd[2]
            });
            endp = _Vector2.default.sum(endp, {
                x: cmd[3],
                y: cmd[4]
            });
            return ['Q', lastcxy.x, lastcxy.y, null, null];
        }
    }, {
        key: 'setAbsoluteQSmooth',
        value: function setAbsoluteQSmooth(cmd) {
            var c1 = aqcurve ? _Vector2.default.sum(endp, _Vector2.default.diff(endp, lastcxy)) : endp;
            endp = {
                x: cmd[1],
                y: cmd[2]
            };
            lastcxy = c1;
            return cmd;
        }
    }, {
        key: 'setRelativeQSmooth',
        value: function setRelativeQSmooth(cmd) {
            lastcxy = aqcurve ? _Vector2.default.sum(endp, _Vector2.default.diff(endp, lastcxy)) : endp;
            endp = _Vector2.default.sum(endp, {
                x: cmd[1],
                y: cmd[2]
            });
            return ['T', endp.x, endp.y];
        }
    }, {
        key: 'endp',

        // Getters/setters for globally used properties
        get: function get() {
            return endp;
        }
    }, {
        key: 'curveoptions',
        get: function get() {
            return curveoptions;
        }
    }, {
        key: 'lastcxy',
        get: function get() {
            return lastcxy;
        },
        set: function set(newlastcxy) {
            lastcxy = newlastcxy;
        }
    }, {
        key: 'svgerror',
        get: function get() {
            return svgerror;
        }
    }, {
        key: 'strokevalues',
        get: function get() {
            return strokevalues;
        }
    }]);

    return SVG2Canvas;
}();

//////////////////////////////////////
// Dispatch tables
//////////////////////////////////////

exports.default = SVG2Canvas;
var dispatchDrawCmd = {
    'M': SVG2Canvas.absoulteMove,
    'm': SVG2Canvas.relativeMove,
    'L': SVG2Canvas.absoluteLine,
    'l': SVG2Canvas.relativeLine,
    'H': SVG2Canvas.absoluteHLine,
    'h': SVG2Canvas.relativeHLine,
    'V': SVG2Canvas.absoluteVLine,
    'v': SVG2Canvas.relativeVLine,
    'C': SVG2Canvas.absoluteCurve,
    'c': SVG2Canvas.relativeCurve,
    'S': SVG2Canvas.absoluteSmooth,
    's': SVG2Canvas.relativeSmooth,
    'Q': SVG2Canvas.absoluteQCurve,
    'q': SVG2Canvas.relativeQCurve,
    'T': SVG2Canvas.absoluteQSmooth,
    't': SVG2Canvas.relativeQSmooth,
    'Z': SVG2Canvas.closePath,
    'z': SVG2Canvas.closePath
};

var dispatchAbsouluteCmd = {
    'M': SVG2Canvas.setAbsoluteMove,
    'm': SVG2Canvas.setRelativeMove,
    'L': SVG2Canvas.setAbsoluteLine,
    'l': SVG2Canvas.setRelativeLine,
    'H': SVG2Canvas.setAbsoluteHLine,
    'h': SVG2Canvas.setRelativeHLine,
    'V': SVG2Canvas.setAbsoluteVLine,
    'v': SVG2Canvas.setRelativeVLine,
    'C': SVG2Canvas.setAbsoluteCurve,
    'c': SVG2Canvas.setRelativeCurve,
    'S': SVG2Canvas.setAbsoluteSmooth,
    's': SVG2Canvas.setRelativeSmooth,
    'Q': SVG2Canvas.setAbsoluteQCurve,
    'q': SVG2Canvas.setRelativeQCurve,
    'T': SVG2Canvas.setAbsoluteQSmooth,
    't': SVG2Canvas.setRelativeQSmooth,
    'Z': SVG2Canvas.setClosePath,
    'z': SVG2Canvas.setClosePath
};

/***/ }),

/***/ "./src/utils/ScratchAudio.js":
/*!***********************************!*\
  !*** ./src/utils/ScratchAudio.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _lib = __webpack_require__(/*! ./lib */ "./src/utils/lib.js");

var _Sound = __webpack_require__(/*! ./Sound */ "./src/utils/Sound.js");

var _Sound2 = _interopRequireDefault(_Sound);

var _OS = __webpack_require__(/*! ../tablet/OS */ "./src/tablet/OS.js");

var _OS2 = _interopRequireDefault(_OS);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

////////////////////////////////////////////////////
/// Sound Playing
////////////////////////////////////////////////////

var uiSounds = {};
var defaultSounds = ['cut.wav', 'snap.wav', 'copy.wav', 'grab.wav', 'boing.wav', 'tap.wav', 'keydown.wav', 'entertap.wav', 'exittap.wav', 'splash.wav'];
var projectSounds = {};

var ScratchAudio = function () {
    function ScratchAudio() {
        _classCallCheck(this, ScratchAudio);
    }

    _createClass(ScratchAudio, null, [{
        key: 'sndFX',
        value: function sndFX(name) {
            ScratchAudio.sndFXWithVolume(name, 1.0);
        }
    }, {
        key: 'sndFXWithVolume',
        value: function sndFXWithVolume(name, volume) {
            if (!_lib.isAndroid) {
                if (!uiSounds[name]) {
                    return;
                }
                uiSounds[name].play();
            } else {
                AndroidInterface.audio_sndfxwithvolume(name, volume);
            }
        }
    }, {
        key: 'init',
        value: function init(prefix) {
            if (!prefix) {
                prefix = '';
            }
            if (!_lib.isAndroid) {
                prefix = 'HTML5/';
            }
            uiSounds = {};

            for (var i = 0; i < defaultSounds.length; i++) {
                ScratchAudio.addSound(prefix + 'sounds/', defaultSounds[i], uiSounds);
            }
            ScratchAudio.addSound(prefix, 'pop.mp3', projectSounds);
        }
    }, {
        key: 'addSound',
        value: function addSound(url, snd, dict, fcn) {
            var name = snd;
            if (!_lib.isAndroid) {
                var whenDone = function whenDone(str) {
                    if (str != 'error') {
                        var result = snd.split(',');
                        dict[snd] = new _Sound2.default(result[0], result[1]);
                    } else {
                        name = 'error';
                    }
                    if (fcn) {
                        fcn(name);
                    }
                };
                _OS2.default.registerSound(url, snd, whenDone);
            } else {
                // In Android, this is handled outside of JavaScript, so just place a stub here.
                dict[snd] = new _Sound2.default(url + snd);
                if (fcn) {
                    fcn(snd);
                }
            }
        }
    }, {
        key: 'soundDone',
        value: function soundDone(name) {
            if (!projectSounds[name]) return;
            projectSounds[name].playing = false;
        }
    }, {
        key: 'loadProjectSound',
        value: function loadProjectSound(md5, fcn) {
            if (!md5) {
                return;
            }
            var dir = '';
            if (!_lib.isAndroid) {
                if (md5.indexOf('/') > -1) dir = 'HTML5/';else if (md5.indexOf('wav') > -1 || md5.indexOf('mp3') > -1) dir = 'Documents';
            }
            ScratchAudio.loadFromLocal(dir, md5, fcn);
        }
    }, {
        key: 'loadFromLocal',
        value: function loadFromLocal(dir, md5, fcn) {
            if (projectSounds[md5] != undefined) {
                return;
            }
            ScratchAudio.addSound(dir, md5, projectSounds, fcn);
        }
    }, {
        key: 'uiSounds',
        get: function get() {
            return uiSounds;
        }
    }, {
        key: 'projectSounds',
        get: function get() {
            return projectSounds;
        }
    }]);

    return ScratchAudio;
}();

exports.default = ScratchAudio;


window.ScratchAudio = ScratchAudio;

/***/ }),

/***/ "./src/utils/Sound.js":
/*!****************************!*\
  !*** ./src/utils/Sound.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _lib = __webpack_require__(/*! ./lib */ "./src/utils/lib.js");

var _OS = __webpack_require__(/*! ../tablet/OS */ "./src/tablet/OS.js");

var _OS2 = _interopRequireDefault(_OS);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Sound = function () {
    function Sound(name, time) {
        _classCallCheck(this, Sound);

        if (_lib.isAndroid) {
            this.url = name;
            this.soundPlayId = null;
        } else {
            this.name = name;
            this.time = time;
            this.playing = false;
        }
    }

    _createClass(Sound, [{
        key: 'play',
        value: function play() {
            if (_lib.isAndroid) {
                if (this.soundPlayId) {
                    this.stop();
                }
                this.soundPlayId = AndroidInterface.audio_play(this.url, 1.0);
            } else {
                if (this.playing) {
                    this.stop();
                }
                _OS2.default.playSound(this.name);
                this.playing = true;
            }
        }
    }, {
        key: 'done',
        value: function done() {
            if (_lib.isAndroid) {
                return this.soundPlayId == null || !AndroidInterface.audio_isplaying(this.soundPlayId);
            } else {
                return !this.playing;
            }
        }
    }, {
        key: 'clear',
        value: function clear() {
            if (_lib.isAndroid) {
                this.soundPlayId = null;
            } else {
                this.playing = false;
            }
        }
    }, {
        key: 'stop',
        value: function stop() {
            if (_lib.isAndroid) {
                if (this.soundPlayId) {
                    AndroidInterface.audio_stop(this.soundPlayId);
                }
                this.soundPlayId = null;
            } else {
                _OS2.default.stopSound(this.name);
                this.playing = false;
            }
        }
    }]);

    return Sound;
}();

exports.default = Sound;

/***/ }),

/***/ "./src/utils/lib.js":
/*!**************************!*\
  !*** ./src/utils/lib.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.libInit = libInit;
exports.preprocess = preprocess;
exports.preprocessAndLoad = preprocessAndLoad;
exports.preprocessAndLoadCss = preprocessAndLoadCss;
exports.rl = rl;
exports.newDiv = newDiv;
exports.newImage = newImage;
exports.newCanvas = newCanvas;
exports.newHTML = newHTML;
exports.newP = newP;
exports.hitRect = hitRect;
exports.hit3DRect = hit3DRect;
exports.hitTest = hitTest;
exports.setCanvasSize = setCanvasSize;
exports.setCanvasSizeScaledToWindowDocumentHeight = setCanvasSizeScaledToWindowDocumentHeight;
exports.localx = localx;
exports.globalx = globalx;
exports.localy = localy;
exports.globaly = globaly;
exports.setProps = setProps;
exports.CSSTransition = CSSTransition;
exports.CSSTransition3D = CSSTransition3D;
exports.drawThumbnail = drawThumbnail;
exports.drawScaled = drawScaled;
exports.fitInRect = fitInRect;
exports.getFit = getFit;
exports.getDocumentHeight = getDocumentHeight;
exports.getDocumentWidth = getDocumentWidth;
exports.getStringSize = getStringSize;
exports.writeText = writeText;
exports.gn = gn;
exports.newForm = newForm;
exports.newTextInput = newTextInput;
exports.getUrlVars = getUrlVars;
exports.getIdFor = getIdFor;
exports.getIdForCamera = getIdForCamera;
exports.rgb2hsb = rgb2hsb;
exports.rgbToHex = rgbToHex;
exports.rgbaToHex = rgbaToHex;
exports.rgbToString = rgbToString;
exports.getRGB = getRGB;
exports.getHex = getHex;
exports.findKeyframesRule = findKeyframesRule;
exports.colorToRGBA = colorToRGBA;
exports.css_vh = css_vh;
exports.css_vw = css_vw;
var frame = exports.frame = undefined;
// XXX: isTablet is legacy code that can be used to detect if we're running on a desktop browser
// There are references to it throughout the codebase, should possibly be removed at some point
var isTablet = exports.isTablet = 'ontouchstart' in document.documentElement;
var DEGTOR = exports.DEGTOR = Math.PI / 180;
var WINDOW_INNER_HEIGHT = exports.WINDOW_INNER_HEIGHT = window.innerHeight;
var WINDOW_INNER_WIDTH = exports.WINDOW_INNER_WIDTH = window.innerWidth;
var scaleMultiplier = exports.scaleMultiplier = WINDOW_INNER_HEIGHT / 768.0;
var fullscreenScaleMultiplier = exports.fullscreenScaleMultiplier = 136;

/* eslint-disable no-console */
console.log('setting OS flags');
/* eslint-enable no-console */
// export const isiOS = (typeof AndroidInterface == 'undefined');
var isiOS = exports.isiOS = false;
var isAndroid = exports.isAndroid = typeof AndroidInterface != 'undefined';

function libInit() {
    exports.frame = frame = document.getElementById('frame');
}
/**
 * Takes a string and evaluates all ${} as JavaScript and returns the resulting string.
 */
function preprocess(s) {
    var result = '';
    var len = s.length;
    var i = 0;
    var j;
    while (i < len && (j = s.indexOf('$', i)) != -1) {
        result += s.substring(i, j);
        i = j + 1;
        if (i < len - 1 && s[i] === '{') {
            var start = i + 1;
            var end = s.indexOf('}', start);
            if (end != -1) {
                var expression = s.substring(start, end);
                result += eval(expression);
                i = end + 1;
            } else {
                result += '$';
            }
        } else {
            result += '$';
        }
    }
    if (i < len) {
        result += s.substring(i);
    }
    return result;
}

/**
 * Load the URL synchronously (fine because it's file://), preprocess the result and return the string.
 */
function preprocessAndLoad(url) {
    var xmlhttp = new XMLHttpRequest();
    xmlhttp.open('GET', url, false);
    xmlhttp.send();
    return preprocess(xmlhttp.responseText);
}

/**
 * Load a CSS file, preprocess it using preprocessAndLoad() and then returns it as a style tag.
 * Also rewrites all instances of url() with a different base
 */
function preprocessAndLoadCss(baseUrl, url) {
    var cssData = preprocessAndLoad(url);
    // search for url("../images") pattern
    cssData = cssData.replace(/url\("/g, 'url(\"' + baseUrl + '/');
    // search for url('../images') pattern
    cssData = cssData.replace(/url\('/g, 'url(\'' + baseUrl + '/');
    // search for url(../images) pattern
    cssData = cssData.replace(/url\(([^'"])/g, 'url(' + baseUrl + '/$1');

    var head = document.head;
    var style = document.createElement('style');
    style.type = 'text/css';
    if (style.styleSheet) {
        style.styleSheet.cssText = cssData;
    } else {
        style.appendChild(document.createTextNode(cssData));
    }
    head.appendChild(style);
}

function rl() {
    window.location.reload();
}

function newDiv(parent, x, y, w, h, styles) {
    var el = document.createElement('div');
    el.style.position = 'absolute';
    el.style.top = y + 'px';
    el.style.left = x + 'px';
    if (w) {
        el.style.width = w + 'px';
    }
    if (h) {
        el.style.height = h + 'px';
    }
    setProps(el.style, styles);
    parent.appendChild(el);
    return el;
}

function newImage(parent, src, styles) {
    var img = document.createElement('img');
    img.src = src;
    setProps(img.style, styles);
    if (parent) {
        parent.appendChild(img);
    }
    return img;
}

function newCanvas(parent, x, y, w, h, styles) {
    var canvas = document.createElement('canvas');
    canvas.style.position = 'absolute';
    canvas.style.top = y + 'px';
    canvas.style.left = x + 'px';
    setCanvasSize(canvas, w, h);
    setProps(canvas.style, styles);
    parent.appendChild(canvas);
    return canvas;
}

function newHTML(type, c, p) {
    var e = document.createElement(type);
    if (c) {
        e.setAttribute('class', c);
    }
    if (p) {
        p.appendChild(e);
    }
    return e;
}

function newP(parent, text, styles) {
    var p = document.createElement('p');
    p.appendChild(document.createTextNode(text));
    setProps(p.style, styles);
    parent.appendChild(p);
    return p;
}

function hitRect(c, pt) {
    if (!pt) {
        return false;
    }
    if (!c) {
        return false;
    }
    var x = pt.x;
    var y = pt.y;
    if (c.offsetLeft == undefined) {
        return false;
    }
    if (c.offsetTop == undefined) {
        return false;
    }
    if (x < c.offsetLeft) {
        return false;
    }
    if (x > c.offsetLeft + c.offsetWidth) {
        return false;
    }
    if (y < c.offsetTop) {
        return false;
    }
    if (y > c.offsetTop + c.offsetHeight) {
        return false;
    }
    return true;
}

function hit3DRect(c, pt) {
    if (!pt) {
        return;
    }
    var x = pt.x;
    var y = pt.y;
    var mtx = new WebKitCSSMatrix(window.getComputedStyle(c).webkitTransform);
    if (mtx.m41 == undefined) {
        return false;
    }
    if (mtx.m42 == undefined) {
        return false;
    }
    if (x < mtx.m41) {
        return false;
    }
    if (x > mtx.m41 + c.offsetWidth) {
        return false;
    }
    if (y < mtx.m42) {
        return false;
    }
    if (y > mtx.m42 + c.offsetHeight) {
        return false;
    }
    return true;
}

function hitTest(c, pt) {
    if (!pt) {
        return;
    }
    var x = pt.x;
    var y = pt.y;
    if (x < c.offsetLeft) {
        return false;
    }
    if (x > c.offsetLeft + c.offsetWidth) {
        return false;
    }
    if (y < c.offsetTop) {
        return false;
    }
    if (y > c.offsetTop + c.offsetHeight) {
        return false;
    }
    var dx = pt.x - c.offsetLeft,
        dy = pt.y - c.offsetTop;
    var ctx = c.getContext('2d');
    var pixel = ctx.getImageData(dx, dy, 1, 1).data;
    if (pixel[3] == 0) {
        return false;
    }
    return true;
}

function setCanvasSize(c, w, h) {
    c.width = w;
    c.height = h;
    c.style.width = w + 'px';
    c.style.height = h + 'px';
}

function setCanvasSizeScaledToWindowDocumentHeight(c, w, h) {
    var multiplier = window.devicePixelRatio * scaleMultiplier;
    var scaledWidth = Math.floor(w * multiplier);
    var scaledHeight = Math.floor(h * multiplier);
    c.width = scaledWidth;
    c.height = scaledHeight;
    c.style.width = scaledWidth + 'px';
    c.style.height = scaledHeight + 'px';
    c.style.zoom = scaleMultiplier / multiplier;
}

function localx(el, gx) {
    var lx = gx;
    while (el && el.offsetTop != undefined) {
        lx -= el.offsetLeft + el.clientLeft + new WebKitCSSMatrix(window.getComputedStyle(el).webkitTransform).m41;
        el = el.parentNode;
    }
    return lx;
}

function globalx(el) {
    var lx = 0;
    while (el && el.offsetLeft != undefined) {
        var webkitTransform = new WebKitCSSMatrix(window.getComputedStyle(el).webkitTransform);
        var transformScale = webkitTransform.m11;
        lx += (el.clientWidth - transformScale * el.clientWidth) / 2;
        var transformX = webkitTransform.m41;
        lx += transformX;
        lx += el.offsetLeft + el.clientLeft;
        el = el.parentNode;
    }
    return lx;
}

function localy(el, gy) {
    var ly = gy;
    while (el && el.offsetTop != undefined) {
        ly -= el.offsetTop + el.clientTop + new WebKitCSSMatrix(window.getComputedStyle(el).webkitTransform).m42;
        el = el.parentNode;
    }
    return ly;
}

function globaly(el) {
    var ly = 0;
    while (el && el.offsetTop != undefined) {
        var webkitTransform = new WebKitCSSMatrix(window.getComputedStyle(el).webkitTransform);
        var transformScale = webkitTransform.m22;
        ly += (el.clientHeight - transformScale * el.clientHeight) / 2;
        var transformY = webkitTransform.m42;
        ly += transformY;
        ly += el.offsetTop + el.clientTop;
        el = el.parentNode;
    }
    return ly;
}

function setProps(object, props) {
    for (var i in props) {
        object[i] = props[i];
    }
}

// ["ease", "linear", "ease-in", "ease-out", "ease-in-out", "step-start", "step-end"];
function CSSTransition(el, obj) {
    // default
    var duration = 1;
    var transition = 'ease';
    var style = {
        left: el.offsetLeft + 'px',
        top: el.offsetTop + 'px'
    };
    if (obj.duration) {
        duration = obj.duration;
    }
    if (obj.transition) {
        transition = obj.transition;
    }
    if (obj.style) {
        style = obj.style;
    }
    var items = '';
    for (var key in style) {
        items += key + ' ' + duration + 's ' + transition + ', ';
    }
    items = items.substring(0, items.length - 2);
    el.style.webkitTransition = items;
    el.addEventListener('webkitTransitionEnd', transitionDene, true);
    setProps(el.style, style);
    function transitionDene() {
        el.style.webkitTransition = '';
        if (obj.onComplete) {
            obj.onComplete();
        }
    }
}

function CSSTransition3D(el, obj) {
    // default
    var duration = 1;
    var transition = 'ease';
    var style = {
        left: el.left + 'px',
        top: el.top + 'px'
    }; // keepit where it is
    if (obj.duration) {
        duration = obj.duration;
    }
    if (obj.transition) {
        transition = obj.transition;
    }
    if (obj.style) {
        for (var key in obj.style) {
            style[key] = obj.style[key];
        }
    }
    var items = '-webkit-transform ' + duration + 's ' + transition;
    var translate = 'translate3d(' + style.left + ',' + style.top + ',0px)';
    el.addEventListener('webkitTransitionEnd', transitionDone, true);
    el.style.webkitTransition = items;
    el.style.webkitTransform = translate;
    function transitionDone() {
        el.style.webkitTransition = '';
        var mtx = new WebKitCSSMatrix(window.getComputedStyle(el).webkitTransform);
        el.left = mtx.m41;
        el.top = mtx.m42;
        if (obj.onComplete) {
            obj.onComplete();
        }
    }
}

function drawThumbnail(img, c) {
    // naturalWidth Height it gets the zoom scaling properly
    var w = img.naturalWidth ? img.naturalWidth : img.width;
    var h = img.naturalHeight ? img.naturalHeight : img.height;
    var dx = (c.width - w) / 2;
    var dy = (c.height - h) / 2;
    var dw = c.width / w;
    var dh = c.height / h;
    var wi = w;
    var he = h;
    switch (getFit(dw, dh)) {
        case 'noscale':
            break;
        case 'scaleh':
            wi = w * dh;
            he = h * dh;
            dx = (c.width - wi) / 2;
            dy = (c.height - he) / 2;
            break;
        case 'scalew':
            wi = w * dw;
            he = h * dw;
            dx = (c.width - wi) / 2;
            dy = (c.height - he) / 2;
            break;
    }
    var ctx = c.getContext('2d');
    ctx.drawImage(img, dx, dy, wi, he);
}

// Like drawThumbnail, but scales up if needed
function drawScaled(img, c) {
    var imgWidth = img.naturalWidth ? img.naturalWidth : img.width;
    var imgHeight = img.naturalHeight ? img.naturalHeight : img.height;
    var boxWidth = c.width;
    var boxHeight = c.height;
    var scale = boxWidth / imgWidth;
    var w = imgWidth * scale;
    var h = imgHeight * scale;
    if (h > boxHeight) {
        scale = boxHeight / imgHeight;
        w = imgWidth * scale;
        h = imgHeight * scale;
    }
    var x0 = (boxWidth - w) / 2;
    var y0 = (boxHeight - h) / 2;
    var ctx = c.getContext('2d');
    ctx.drawImage(img, x0, y0, w, h);
}

function fitInRect(srcw, srch, destw, desth) {
    var dx = (destw - srcw) / 2;
    var dy = (desth - srch) / 2;
    var dw = destw / srcw;
    var dh = desth / srch;
    var wi = srcw;
    var he = srch;
    switch (getFit(dw, dh)) {
        case 'noscale':
            break;
        case 'scaleh':
            wi = srcw * dh;
            he = srch * dh;
            dx = (destw - wi) / 2;
            dy = (desth - he) / 2;
            break;
        case 'scalew':
            wi = srcw * dw;
            he = srch * dw;
            dx = (destw - wi) / 2;
            dy = (desth - he) / 2;
            break;
    }
    return [dx, dy, wi, he];
}

function getFit(dw, dh) {
    if (dw >= 1 && dh >= 1) {
        return 'noscale';
    }
    if (dw >= 1 && dh < 1) {
        return 'scaleh';
    }
    if (dw < 1 && dh >= 1) {
        return 'scalew';
    }
    if (dw < dh) {
        return 'scalew';
    }
    return 'scaleh';
}

function getDocumentHeight() {
    return Math.max(document.body.clientHeight, document.documentElement.clientHeight);
}

function getDocumentWidth() {
    return Math.max(document.body.clientWidth, document.documentElement.clientWidth);
}

function getStringSize(ctx, f, label) {
    ctx.font = f;
    return ctx.measureText(label);
}

function writeText(ctx, f, c, label, dy, dx) {
    dx = dx == undefined ? 0 : dx;
    ctx.font = f;
    ctx.fillStyle = c;
    ctx.textAlign = 'left';
    ctx.textBaseline = 'bottom';
    ctx.fillText(label, dx, dy);
}

function gn(str) {
    return document.getElementById(str);
}

function newForm(parent, str, x, y, w, h, styles) {
    var el = document.createElement('form');
    el.style.position = 'absolute';
    el.style.top = y + 'px';
    el.style.left = x + 'px';
    if (w) {
        el.style.width = w + 'px';
    }
    if (h) {
        el.style.height = h + 'px';
    }
    setProps(el.style, styles);
    parent.appendChild(el);
    el.name = str;
    return el;
}

function newTextInput(p, type, str, mstyle) {
    var input = document.createElement('input');
    input.value = str;
    setProps(input.style, mstyle);
    input.type = type;
    p.appendChild(input);
    return input;
}

function getUrlVars() {
    if (window.location.href.indexOf('?') < 0) {
        return [];
    }
    var args = window.location.href.slice(window.location.href.indexOf('?') + 1);
    var vars = [],
        hash;
    var hashes = args.split('&');
    for (var i = 0; i < hashes.length; i++) {
        hash = hashes[i].split('=');
        vars.push(hash[0]);
        vars[hash[0]] = hash[1];
    }
    return vars;
}

function getIdFor(name) {
    var n = 1;
    while (gn(name + ' ' + n) != undefined) {
        n++;
    }
    return name + ' ' + n;
}

function getIdForCamera(name) {
    var n = 1;
    while (gn(name + '_' + n) != undefined) {
        n++;
    }
    return name + '_' + n;
}

////////////////////
// Color
/////////////////////

function rgb2hsb(str) {
    if (str == null) {
        return [24, 1, 1];
    }
    var min, val, f, i, hue, sat;
    str = str.indexOf('rgb') > -1 ? rgbToHex(str) : rgbaToHex(str);
    var num = parseInt(str.substring(1, str.length), 16);
    var rgb = getRGB(num);
    var red = rgb[0];
    red /= 255;
    var grn = rgb[1];
    grn /= 255;
    var blu = rgb[2];
    blu /= 255;
    min = Math.min(Math.min(red, grn), blu);
    val = Math.max(Math.max(red, grn), blu);
    if (min == val) {
        return new Array(0, 0, val);
    }
    f = red == min ? grn - blu : grn == min ? blu - red : red - grn;
    i = red == min ? 3 : grn == min ? 5 : 1;
    hue = Math.round((i - f / (val - min)) * 60) % 360;
    sat = Math.round((val - min) / val * 100);
    val = Math.round(val * 100);
    return new Array(hue, sat / 100, val / 100);
}

function rgbToHex(str) {
    if (str.indexOf('rgb') < 0) {
        return str;
    }
    var res = str.substring(4, str.length - 1);
    var a = res.split(',');
    var red = Number(a[0]);
    var grn = Number(a[1]);
    var blu = Number(a[2]);
    return rgbToString({
        r: red,
        g: grn,
        b: blu
    });
}

function rgbaToHex(str) {
    if (str.indexOf('rgba') < 0) {
        return str;
    }
    var res = str.substring(5, str.length - 1);
    var a = res.split(',');
    var red = Number(a[0]);
    var grn = Number(a[1]);
    var blu = Number(a[2]);
    return rgbToString({
        r: red,
        g: grn,
        b: blu
    });
}

function rgbToString(obj) {
    return '#' + getHex(obj.r) + getHex(obj.g) + getHex(obj.b);
}

function getRGB(color) {
    return [Number(color >> 16 & 255), Number(color >> 8 & 255), Number(color & 255)];
}

function getHex(num) {
    var hex = num.toString(16);
    if (hex.length == 1) {
        return '0' + hex;
    }
    return hex;
}

// findKeyframesRule ("swing");

function findKeyframesRule(rule) {
    var ss = document.styleSheets;
    for (var i = 0; i < ss.length; ++i) {
        for (var j = 0; j < ss[i].cssRules.length; ++j) {
            var styles = ss[i].cssRules[j].styleSheet.rules;
            for (var k = 0; k < styles.length; ++k) {
                if (styles[k].type == window.CSSRule.WEBKIT_KEYFRAMES_RULE && styles[k].name == rule) {
                    return styles[k];
                }
            }
        }
    } // rule not found
    return null;
}

function colorToRGBA(color, opacity) {
    var val = parseInt('0x' + color.substr(1, color.length));
    return 'rgba(' + (val >> 16) % 256 + ',' + (val >> 8) % 256 + ',' + val % 256 + ',' + opacity + ')';
}

/**
 * css units vh and vw (for % of height and width) are not supported in Android 4.3 and earlier, so
 * here we introduce functioncs (called from the preprocessed css) that emulate their behavior by
 * turning them into pixel values.
 */
function css_vh(y) {
    return y * WINDOW_INNER_HEIGHT / 100.0 + 'px';
}

function css_vw(x) {
    return x * WINDOW_INNER_WIDTH / 100.0 + 'px';
}

Number.prototype.mod = function (n) {
    return (this % n + n) % n;
};

/***/ }),

/***/ 0:
/*!*******************************************!*\
  !*** ./locale-data/complete.js (ignored) ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 1:
/*!*******************************!*\
  !*** ./lib/locales (ignored) ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ })

/******/ });
//# sourceMappingURL=app.bundle.js.map